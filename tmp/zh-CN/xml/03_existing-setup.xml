<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="existing-setup" lang="zh-CN">
	<chapterinfo>
		 <keywordset>
			<keyword>当前设置</keyword>
			 <keyword>重用</keyword>
			 <keyword>迁移</keyword>

		</keywordset>

	</chapterinfo>
	 <title>分析当前设置与迁移</title>
	 <highlights> <para>
		任何系统的彻底修检都应考虑到已有的系统。其中包括让尽可能多的资源复用，和保证组成系统的各个部分协调无碍。以下的学习案列会介绍一个将设备向 Linux 迁移的通用技术框架。
	</para>
	 </highlights> <section id="sect.heterogeneous-environments">
		<title>在异构环境中共存</title>
		 <indexterm>
			<primary>环境</primary>
			<secondary>异构环境</secondary>
		</indexterm>
		 <para>
			Debian能和已存的环境整合无碍，并和其他操作系统共存。这近乎完美的和谐来自市场的压力：市场要求软件发布者需要遵从一定的标准。接受这些标准让管理员能灵活替换各种程序，客户端或服务端，免费与否，都不是问题。
		</para>
		 <section>
			<title>和Windows机器整合</title>
			 <para>
				Samba提供的SMB/CIFS支持确保了在Windows占多数的场景下也能无缝通信。它可以将文件和打印队列分享给Windows客户端，并包含了一些软件，使得Linux机器也能使用Windows服务器所提供的服务。
			</para>
			 <sidebar> <title><emphasis>工具</emphasis> Samba</title>
			 <indexterm>
				<primary>Samba</primary>
			</indexterm>
			 <para>
				最新版本的Samba可以替换Windows的大多数功能：它可以模拟成一个简单的Windows NT服务器开展工作（包括验证、文件分享、打印队列、下载打印机启动、分布式文件系统（DFS），等等），也可以支持一些最高级的服务功能（例如，作为与Active Directory兼容的域控制器工作）。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>和OS X机器整合</title>
			 <indexterm>
				<primary>Zeroconf</primary>
			</indexterm>
			 <indexterm>
				<primary>Bonjour</primary>
			</indexterm>
			 <indexterm>
				<primary>Avahi</primary>
			</indexterm>
			 <para>
				OS X 机器提供且能够使用网络服务，诸如：文件服务器与共享列表机。使用 Zeroconf 协定的 Bonjour 应用。Debian includes another implementation, called Avahi, which provides the same functionality.
			</para>
			 <indexterm>
				<primary>AFP</primary>
			</indexterm>
			 <indexterm>
				<primary>AppleShare</primary>
			</indexterm>
			 <para>
				从另外方向看， Netatalk 服务可用于在 OS X 机器上提供文件共享服务。它使用 AFP（AppleShare） 协议作为依赖素以该服务能被客户端自动发现。
			</para>
			 <indexterm>
				<primary>AppleTalk</primary>
			</indexterm>
			 <para>
				更旧的 Mac OS 网络 (OS X 之前) 使用称为 AppleTalk 的协定。采用此等协定的环境，Netatalk 也能提供 AppleTalk 协定 (实际上，是再应用该协定)。确保文件服务器与打印队列以及时间服务器 (时钟同步)的运作。它的路由器功能允许与 AppleTalk 网络沟通。
			</para>

		</section>
		 <section>
			<title>与其他 Linux/Unix 设备集成</title>
			 <para>
				最后，NFS 与 NIS 两者保证与 Unix 系统交互。NFS 确保文件服务器的运作，NIS 添加用户的文件夹。大部份 Unix 系统用到的 BSD 打印层，允许共享打印队列。
			</para>
			 <figure>
				<title>Debian 与 OS X，Windows，Unix 系统的共存</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-1.png" format="PNG" width="25%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.how-to-migrate">
		<title>如何迁移</title>
		 <indexterm>
			<primary>迁移</primary>
		</indexterm>
		 <para>
			为了确保后续的服务，必须依照计划运行移殖的作业。每种操作系统都需遵守这个原则。
		</para>
		 <section>
			<title>流行度调查和身份识别服务</title>
			 <para>
				如你看到的，该步骤是必要的。一个严谨的管理员应当确切的知道每部服务器的确切角色，但是角色可以被改变，有时候有经验的用户会安装一些服务。了解这些服务的功能让你知道如何处理它，而不是粗暴的删除它们。
			</para>
			 <para>
				基于这个目的，移殖服务器前先告知用户是明智之举。把用户拉入计划里，于移殖之前先安装常用的自由软件于其桌面电脑中，移殖之后自然碰到 Debian、Libre Office 与 Mozilla 等软件。
			</para>
			 <section>
				<title>网络与程序</title>
				 <indexterm>
					<primary><command>nmap</command></primary>
				</indexterm>
				 <para>
					<command>nmap</command> 工具 (在同名套件中) 可以在未登录的前提下，快速地经由网络链接机器辨识互联网服务。在另部机器键入命令链接至同个网络：
				</para>
				 
<screen>
<computeroutput>$ </computeroutput><userinput>nmap mirwiz</userinput>
<computeroutput> 启动 Nmap 6.47 ( http://nmap.org ) at 2015-03-24 11:34 CET
Nmap 针对 mirwiz  的扫描报告 (192.168.1.104)
主机处于活动 状态(0.0037s 延迟).
未显示： 999 个关闭端口
PORT   STATE SERVICE
22/tcp open  ssh

Nmap 完成： 1 个 IP 地址 (1 host up) 已扫描，用时 0.13 秒</computeroutput></screen>
				 <sidebar> <title><emphasis>替代</emphasis> 使用 <command>netstat</command> 以查找可用服务列表</title>
				 <para>
					在 Linux 机器里，<command>netstat -tupan</command> 指令可显示使用中或待决的 TCP 数，以及运行程序的 UDP 端口。辨识网络提供的服务量。
				</para>
				 </sidebar> <sidebar> <title><emphasis>更进一步</emphasis> IPv6</title>
				 <para>
					有些网络指令可在 IPv4 (通常是缺省的) 或 IPv6 运行。包括 <command>nmap</command> 与 <command>netstat</command> 指令，以及其他，如 <command>route</command> 或 <command>ip</command>。可用 <parameter>-6</parameter> 命令行选项启动它们。
				</para>
				 </sidebar> <para>
					Unix 机器的服务器提供 shell 帐号给用户，在拥有者缺席的情况下可以决定该进程是否在背景运行。指令 <command>ps auxw</command> 显示所有进程的用户辨识码。将此等信息与 <command>who</command> 指令的输出互相比较，就能辨识出在背景运行的暧昧或不明服务与程序。以 <filename>crontabs</filename> (依用户自动排串行出所有的作业) 可查看服务器提供的服务信息 (<command>cron</command> 的完整说明在 <xref linkend="sect.task-scheduling-cron-atd" />)。
				</para>
				 <para>
					任何状况下，都该先备份您的服务器：用户报告问题时，就能复原它。
				</para>

			</section>

		</section>
		 <section>
			<title>备份配置</title>
			 <para>
				保留所有设备的备份供升级后服务器的参考。至少应备份配置档。
			</para>
			 <para>
				Unix 机器的配置档，通常在 <filename>/etc/</filename> 文件夹内，有时放在 <filename>/usr/local/</filename> 的次文件夹里。若从原代码开始安装程序而不是由套件安装，配置档就会放在前述的次文件夹内。偶而，还可在 <filename>/opt/</filename> 找到配置档。
			</para>
			 <para>
				在数据管理服务 (如数据库) 时，强烈建议以标准格式导出的数据容易被新软件接受。通常是文本格式，也可能是从数据库以 SQL 下载，或从 LDAP 服务器下载 LDIF 文件。
			</para>
			 <figure>
				<title>备份数据库</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-2.png" format="PNG" width="50%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				每个服务器都不一样，不能详述所有个案。比较各软件的文档辨认导出 (即，再导入) 的方式以及需要人工处理的部份。此书处理 Linux 服务器程序的主要配置。
			</para>

		</section>
		 <section>
			<title>接手现有的 Debian 服务器</title>
			 <indexterm>
				<primary>恢复 Debian 机器</primary>
			</indexterm>
			 <indexterm>
				<primary>探查 Debian 机器</primary>
			</indexterm>
			 <indexterm>
				<primary>接手 Debian 服务器</primary>
			</indexterm>
			 <para>
				先分析正在运行 Debian 的机器，才能有效地接管维护工作。
			</para>
			 <para>
				第一个查看的文件是 <filename>/etc/debian_version</filename>，通常包括 Debian 系统的版本编号 (它是 <emphasis>base-files</emphasis> 套件的一部份)。若以 <literal><replaceable>代码</replaceable>/sid</literal> 方式呈现，表示此系统从该代码版本取得的最新版套件 (测试版或不稳定版)。
			</para>
			 <para>
				<command>apt-show-versions</command> 程序 (from the Debian package of the same name) 检查安装的套件并辨识可用的版本。<command>aptitude</command> 以表单的方式，做同样的工作。
			</para>
			 <para>
				查看 <filename>/etc/apt/sources.list</filename> 文件 (以及 <filename>/etc/apt/sources.list.d/</filename> 文件夹) 可看到已安装 Debian 套件的来源。若出现不明来源，管理员可能选择重新安装电脑系统确保其软件与 Debian 兼容。
			</para>
			 <para>
				<filename>sources.list</filename> 文件是个重要的指针：大部份的管理者保留一份使用中的 APT 来源清单。但不能忘记曾使用的来源可能被删除，有可能以人工方式安装 (以 <command>dpkg</command> 指令) 从互联网随机抓来的套件。在此情况下，可能表面上是 “标准” Debian。碰到这种情况应放弃外来的套件 (在不寻常的文件夹出现 <filename>deb</filename> 文件、套件版本编号出现 Debian 未使用的特殊前置字符，诸 <literal>ubuntu</literal> 或 <literal>lmde</literal>，等字样。)
			</para>
			 <para>
				同样的，分析 <filename>/usr/local/</filename> 文件夹的内容，其目的是收录编译后与手动安装后的程序。列出以此方式安装的软件清单，指出一个问题，为什么不使用 Debian 对应的套件。
			</para>
			 <sidebar> <title><emphasis>速看</emphasis> <emphasis role="pkg">cruft</emphasis></title>
			 <para>
				<emphasis role="pkg">cruft</emphasis> 套件列出未被其他套件拥有的文件。就是筛选器 (有效，但过时的) 以避免报告合法的文件 (Debian 套件产生的文件，或未被<command>dpkg</command> 管理的配置文件等)。
			</para>
			 <para>
				小心不要盲目地删除可能被 <command>cruft</command> 列出的文件！
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>安装 Debian</title>
			 <para>
				知道当前服务器的必要信息后，就可以关闭它并开始安装 Debian。
			</para>
			 <indexterm>
				<primary>架构</primary>
			</indexterm>
			 <para>
				依照电脑的架构，选择适当的版本。近几年的 PC，很可能是 amd64 (稍旧的是 i386)。其他的情况，则依照安装的旧系统来判断。
			</para>
			 <para>
				<xref linkend="tab-corresp" xrefstyle="select: label nopage" /> 不是完整的，但相当有用。任何情况下，电脑的原始文档是最有用的数据源。
			</para>
			 <table colsep="1" id="tab-corresp">
				<title>操作系统与架构对照表</title>
				 <tgroup cols="2">
					<thead>
						<row>
							<entry>操作系统</entry>
							 <entry>架构</entry>

						</row>

					</thead>
					 <tbody>
						<row>
							<entry>DEC Unix (OSF/1)</entry>
							 <entry>alpha, mipsel</entry>

						</row>
						 <row>
							<entry>HP Unix</entry>
							 <entry>ia64、hppa</entry>

						</row>
						 <row>
							<entry>IBM AIX</entry>
							 <entry>powerpc</entry>

						</row>
						 <row>
							<entry>Irix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>OS X</entry>
							 <entry>amd64、powerpc、 i386</entry>

						</row>
						 <row>
							<entry>z/OS、MVS</entry>
							 <entry>s390x、s390</entry>

						</row>
						 <row>
							<entry>Solaris, SunOS</entry>
							 <entry>sparc, i386, m68k</entry>

						</row>
						 <row>
							<entry>Ultrix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>VMS</entry>
							 <entry>alpha</entry>

						</row>
						 <row>
							<entry>Windows 95/98/ME</entry>
							 <entry>i386</entry>

						</row>
						 <row>
							<entry>Windows NT/2000</entry>
							 <entry>i386, alpha, ia64, mipsel</entry>

						</row>
						 <row>
							<entry>Windows XP / Windows Server 2008</entry>
							 <entry>i386, amd64, ia64</entry>

						</row>
						 <row>
							<entry>Windows Vista / Windows 7 / Windows 8</entry>
							 <entry>i386, amd64</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <sidebar> <title><emphasis>硬件</emphasis> 64 位电脑 vs 32 位电脑</title>
			 <indexterm>
				<primary>amd64</primary>
			</indexterm>
			 <indexterm>
				<primary>i386</primary>
			</indexterm>
			 <para>
				近年的电脑使用 64 比特 Intel 或 AMD 处理器，兼容于稍旧的 32 比特处理器；为 “i386” 架构编绎的软件也适用。从另个角度来看，此兼容的软件无法充份发挥新处理器的性能。所以 Debian 提供 “amd64” 架构的版本，针对最新的 AMD 芯片以及 Intel “em64t” 处理器 (包括大多数的 Core 系列)，它们极度类似 AMD64。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>安装与配置选定的服务</title>
			 <para>
				Debian 安装之后，必须逐一安装与设置该电脑的所有服务。新的配置必须考量过去的配置才能确保转换的顺利。前述两个步骤的信息对于完成此部份极为重要。
			</para>
			 <figure>
				<title>安装指定的服务</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-4.png" format="PNG" width="66%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				全面进入此练习前，强烈建议您阅读本书其他部份。才能够较精细地了解对预期服务的配置方式。
			</para>
			 <para>
			</para>

		</section>

	</section>
</chapter>

