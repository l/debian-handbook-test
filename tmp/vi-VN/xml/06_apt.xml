<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="vi-VN">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Bảo trì và Cập nhật: Công cụ APT</title>
	 <highlights> <para>
		Điều làm cho Debian trở nên phổ biến với các quản trị viên bởi vì nó dễ dàng cài đặt phần mềm và dễ dàng cập nhật toàn bộ hệ thống. Lợi thế duy nhất này chủ yếu là nhờ vào chương trình <emphasis>APT</emphasis> mà các nhà quản lý của Falcot Corp đã nhiệt tình nghiên cứu.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Công cụ quản lý gói nâng cao </primary></indexterm> APT là viết tắt của Công cụ quản lý Gói Nâng cao - Advanced Package Tool. Điều làm cho chương trình này tiên tiến là cách tiếp cận của nó đối với các gói. Nó không đơn giản đánh giá chúng một cách riêng lẻ, nhưng nó xem xét chúng như là một tổng thể và tạo ra sự kết hợp tốt nhất của các gói phụ thuộc vào những gì có sẵn và tương thích (dựa trên thông tin về các gói phụ thuộc).
	</para>
	 <sidebar> <title><emphasis>THUẬT NGỮ</emphasis> Gói chứa mã nguồn và Nguồn chứa các gói</title>
	 <para>
		Từ <emphasis>source</emphasis> dễ gây ra hiểu nhầm. Gói mã nguồn (source package) — gói chứa mã nguồn của chương trình — không nên bị nhầm lẫn với Nguồn chứa các gói (package source) — là kho lưu trữ các gói phần mềm (website, máy chủ FTP, CD-ROM, thư mục cục bộ trên máy tính, etc.)
	</para>
	 </sidebar> <para>
		APT cần biết “danh sách các kho chứa gói phần mềm”: tệp tin <filename>/etc/apt/sources.list</filename> sẽ chứa danh sách các kho chứa khác nhau (gọi là “sources”) nơi cung cấp các các gói phần mềm chạy trên Debian. APT sẽ đọc và nhập danh sách các gói sẵn có (đã được xuất bản) trong mỗi một kho chứa (source) đó. Việc này được thực hiện bằng việc tải xuống tệp tin <filename>Packages.xz</filename> hoặc tệp tin tương tự nén bởi các phương pháp khác nhau ( ví dụ các tệp tin <filename>Packages.gz</filename> hoặc <filename>.bz2</filename>) ( trong trường hợp mã nguồn của gói nhị phân) và các tệp tin <filename>Sources.xz</filename> hoặc các tệp tương tự (trong trường hợp mã nguồn của các gói mã nguồn ) rồi sau đó phân tích nội dung các tệp tin đó. Khi phiên bản cũ của các files đó đã có, APT có thể cập nhật nó bằng cách chỉ tải xuống các file cập nhật khác (xem thêm sidebar <xref linkend="sidebar.apt-pdiff" />).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>KIẾN THỨC CƠ BẢN</emphasis> <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> and <command>XZ</command> Compression</title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		Đuôi mở rộng của tệp tin <filename>.gz</filename> chỉ ra nó được nén bằng tiện ích nén <command>gzip</command>. <command>gzip</command> là tiện ích nén truyền thống nhanh và hiệu quả của Unix. Các công cụ mới hơn có tỉ suất nén tốt hơn nhưng sẽ yêu cầu nhiều tài nguyên hơn (thời gian tính toán và bộ nhớ) để nén và giải nén tệp tin. Có thể kể ra đây, và xếp theo sự ra đời, gồm có <command>bzip2</command> (sinh ra tệp tin với phần mở rộng <filename>.bz2</filename>), <command>lzma</command> (sinh ra tệp <filename>.lzma</filename>) và <command>xz</command> (sinh ra tệp <filename>.xz</filename> ).
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>Thêm nội dung vào tệp <filename>sources.list</filename></title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>kho chứa</primary>
			<secondary>các gói</secondary>
		</indexterm>
		 <indexterm>
			<primary>gói</primary>
			<secondary>kho chứa</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>Cú pháp</title>
			 <para>
				Mỗi dòng (mà không bị chú thích) của tệp tin <filename>/etc/apt/sources.list</filename> chứa mô tả của kho chứa, tạo bởi 3 phần tách biệt bởi các khoảng trắng.
			</para>
			 <para>
				Trường đầu tiên cho biết loại nguồn:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						“<literal>deb</literal>” chỉ ra đây là các gói nhị phân,
					</para>

				</listitem>
				 <listitem>
					<para>
						“<literal>deb-src</literal>” chỉ ra đây là các gói mã nguồn.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Trường thứ hai đưa ra URL cơ sở của nguồn (kết hợp với các tên tệp có trong các tệp <filename>Packages.gz</filename>, nó phải cung cấp URL đầy đủ và hợp lệ): có thể bao gồm trong một máy nhân bản Debian hoặc trong bất kỳ gói lưu trữ gói nào khác được tạo bởi một bên thứ ba. URL có thể bắt đầu bằng <literal>file://</literal> để chỉ ra một nguồn địa phương được cài đặt trong hệ thống phân cấp tập tin hệ thống, với <literal>http://</literal> để cho biết một nguồn có thể truy cập từ một máy chủ web, hoặc với <literal>ftp://</literal> cho một nguồn có sẵn trên máy chủ FTP. URL cũng có thể bắt đầu bằng <literal>cdrom:</literal> để cài đặt dựa trên đĩa CD-ROM/DVD-ROM/Blu-ray, mặc dù kiểu này ít thường xuyên hơn, vì các phương pháp cài đặt trên mạng ngày càng phổ biến.
			</para>
			 <para>
				Cú pháp của trường cuối cùng phụ thuộc vào cấu trúc của kho lưu trữ. Trong các trường hợp đơn giản nhất, bạn chỉ cần chỉ ra một thư mục con (cần có dấu gạch chéo phía trước ./) của nguồn mong muốn (thường đơn giản là “<filename>./</filename>” mà đề cập đến sự vắng mặt của một thư mục con - các gói này sau đó được lấy trực tiếp tại URL được chỉ định). Nhưng trong trường hợp phổ biến nhất, các kho sẽ được cấu trúc giống như một máy nhân bản Debian, với các phân phối mà mỗi bản có nhiều thành phần. Trong các trường hợp này, tên của bản phân phối đã chọn ( dựa trên “codename” - tên mã của nó có thể xem tại phần tham chiếu <xref linkend="sidebar.bruce-perens" /> — hoặc bằng các bộ hoàn chỉnh tương ứng (“suites”) — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), và rổi cả các thành phần (hoặc các phần) để kích hoạt (được chọn giữa <literal>main</literal>, <literal>contrib</literal>, v <literal>non-free</literal> trong các máy nhân bản Debian).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>TỪ KHÓA</emphasis> Các nơi lưu trữ <literal>main</literal>, <literal>contrib</literal> and <literal>non-free</literal></title>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>main</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>contrib</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>non-free</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>thành phần (của kho lưu trữ)</primary>
			</indexterm>
			 <para>
				Debian sử dụng ba phần để phân biệt các gói theo giấy phép do tác giả của chúng chọn. <literal>Main</literal> tập hợp tất cả các gói hoàn toàn tuân thủ Hướng dẫn Phần mềm Tự do Debian.
			</para>
			 <para>
				Các lưu trử <literal>non-free</literal> thì khác nhau vì nó có chứa phần mềm không hoàn toàn phù hợp với những nguyên tắc này nhưng có thể phân phối mà không có hạn chế. Kho lưu trữ này, không phải là một phần chính thức của Debian, là một dịch vụ dành cho những người dùng cần có một số chương trình - tuy nhiên Debian luôn đề nghị ưu tiên cho phần mềm tự do. Sự tồn tại của phần này thể hiện một vấn đề đáng kể nêu bởi Richard M.Stallman và khiến Free Software Foundation khuyến khích người dùng sử dụng Debian.
			</para>
			 <para>
				<literal>Contrib</literal> (đóng góp) Là một bộ phần mềm nguồn mở không thể hoạt động mà không có một số thành phần không phải là tự do. Các thành phần này có thể là phần mềm từ khu vực <literal>non-free</literal>, hoặc các tệp không tự do như ROM của các trò chơi, BIOS của bảng điều khiển, vv <literal>Contrib</literal> cũng bao gồm phần mềm tự do mà việc biên dịch yêu cầu các thành phần độc quyền. Điều này bắt đầu từ trường hợp của bộ Office trong OpenOffice.org, để chạy được nó cần sử dụng môi trường Java độc quyền.
			</para>
			 </sidebar> <sidebar> <title><emphasis>MẸO SỬ DỤNG</emphasis> <filename>/etc/apt/sources.list.d/*.list</filename> tệp tin</title>
			 <para>
				Nếu nhiều nguồn gói được tham chiếu, có thể hữu ích khi chia chúng thành nhiều tệp. Mỗi phần sau đó được lưu trữ trong tên tập tin <filename>/etc/apt/sources.list.d/<replaceable>filename</replaceable>.list</filename> (tham khảo thêm ở phần hỗ trợ <xref linkend="sidebar.directory.d" />).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				Các mục <literal>cdrom</literal> mô tả CD / DVD-ROM bạn có. Trái với các mục nhập khác, đĩa CD-ROM không phải lúc nào cũng có sẵn vì nó đã được đưa vào ổ đĩa và chỉ có thể đọc được một đĩa duy nhất một lần. Vì những lý do này, các nguồn này được quản lý theo một cách hơi khác và cần phải được thêm vào với chương trình <command>apt-cdrom</command>, thường được thực hiện với tham số <literal>add</literal>. Sau đó sẽ yêu cầu đĩa được đưa vào ổ đĩa và sẽ duyệt nội dung tìm kiếm các tập tin <filename>Packages</filename>. Nó sẽ sử dụng các tệp này để cập nhật cơ sở dữ liệu các gói có sẵn (thao tác này thường được thực hiện bởi lệnh <command>apt update</command>). Từ đó, APT có thể yêu cầu đĩa được lắp nếu nó cần một trong các gói của nó.
			</para>

		</section>
		 <section>
			<title>Kho cho người dùng <emphasis role="distribution">Ổn định</emphasis></title>
			 <para>
				Dưới đây là  tệp tin <filename>sources.list</filename> tiêu chuẩn cho một hệ thống đang chạy phiên bản <emphasis role="distribution">Stable</emphasis> của Debian:
			</para>
			 <example id="example.stable-sources-list">
				<title>Tệp tin <filename>/etc/apt/sources.list</filename> cho người dùng bản Debian Stable (ổn định).</title>
				 
<programlisting># Security updates
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

## Debian mirror

# Base repository
deb http://ftp.debian.org/debian jessie main contrib non-free
deb-src http://ftp.debian.org/debian jessie main contrib non-free

# Stable updates
deb http://ftp.debian.org/debian jessie-updates main contrib non-free
deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free

# Stable backports
deb http://ftp.debian.org/debian jessie-backports main contrib non-free
deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free</programlisting>

			</example>
			 <para>
				Tệp này liệt kê tất cả các nguồn của các gói có liên quan đến phiên bản <emphasis role="distribution">Jessie</emphasis> của Debian (<emphasis role="distribution">Stable</emphasis> hiện tại kể từ khi viết bài này). Chúng tôi đã chọn sử dụng tên “jessie” rõ ràng thay vì sử dụng bí danh tương ứng “stable” (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) vì chúng tôi không muốn người phân phối thứ cấp thay đổi ngoài kiểm soát của chúng tôi khi phát hành phiên bản ổn định kế tiếp.
			</para>
			 <para>
				Hầu hết các gói sẽ đến từ “kho cơ sở“ có chứa tất cả các gói nhưng ít khi được cập nhật (khoảng một lần mỗi 2 tháng cho một “thời điểm phát hành“). Các kho khác là một phần (chúng không chứa tất cả các gói) và có thể lưu trữ bản cập nhật (các gói với phiên bản mới hơn) mà APT có thể cài đặt. Các phần sau sẽ giải thích mục đích và các quy tắc điều chỉnh từng kho đó.
			</para>
			 <para>
				Lưu ý rằng khi phiên bản mong muốn của gói có sẵn trên một số kho, tệp đầu tiên được liệt kê trong tệp <filename>sources.list</filename> sẽ được sử dụng. Vì lý do này, các nguồn phi chính thức thường được thêm vào cuối tập tin.
			</para>
			 <para>
				Lưu ý rằng, hầu hết những gì phần này nói <emphasis role="distribution">Stable</emphasis> đều áp dụng tốt cho <emphasis role="distribution">Oldstable</emphasis> vì sau này chỉ là một <emphasis role="distribution">Stable</emphasis> cũ hơn được duy trì song song.
			</para>
			 <section id="sect.security-updates">
				<title>Cập nhật Bảo mật</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>security updates</primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>security updates</secondary>
				</indexterm>
				 <para>
					Bản cập nhật bảo mật không được lưu trữ trên mạng thông thường của các bản sao (mirror) Debian, nhưng trên <literal>security.debian.org</literal> ( một tập hợp nhỏ các máy được duy trì bởi các quản trị viên hệ thống <link linkend="dsa-team">Debian Systems</link>). Bộ lưu trữ này chứa các bản cập nhật bảo mật (do Nhóm an ninh Debian và / hoặc bởi các nhà bảo trì gói tin chuẩn bị) cho bản phân phối <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Máy chủ cũng có thể lưu trữ cập nhật bảo mật cho <emphasis role="distribution">Testing</emphasis> nhưng điều này không xảy ra rất thường xuyên vì những cập nhật này có xu hướng đạt tới <emphasis role="distribution">Testing</emphasis> thông qua luồng cập nhật thường xuyên đến từ <emphasis role="distribution">Unstable</emphasis>.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>Cập nhật ổn định</title>
				 <indexterm>
					<primary>stable updates</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>stable updates</secondary>
				</indexterm>
				 <para>
					Bản cập nhật ổn định không nhạy cảm về phương diện bảo mật nhưng được coi là đủ quan trọng để được phát hành cho người dùng trước khi phát hành phiên bản ổn định tiếp theo.
				</para>
				 <para>
					Kho này thường chứa các bản sửa lỗi cho các lỗi quan trọng mà không thể sửa trước khi phát hành hoặc đã được giới thiệu bởi các bản cập nhật tiếp theo. Tùy thuộc vào mức độ khẩn cấp, nó cũng có thể chứa các bản cập nhật cho các gói đang được phát phải tiến liên tục theo thời gian ... như các quy tắc phát hiện spam của <emphasis role="pkg">spamassassin</emphasis>, cơ sở dữ liệu virut của <emphasis role="pkg">clamav</emphasis>, hoặc các quy tắc thời gian tiết kiệm theo thời gian của tất cả các múi giờ (<emphasis role="pkg">tzdata</emphasis>).
				</para>
				 <para>
					Trong thực tế, kho này là một tập hợp con của kho lưu trữ <literal>proposed-updates</literal>, đã được lựa chọn cẩn thận bởi “Nhà quản lý phát hành phiên bản ổn định“.
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>Đề xuất cập nhật</title>
				 <indexterm>
					<primary><literal>proposed-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Đề xuất cập nhật ổn định</literal></primary>
				</indexterm>
				 <para>
					Sau khi xuất bản, phiên bản phân phối <emphasis role="distribution">Stable</emphasis> chỉ được cập nhật khoảng 2 tháng một lần. Kho lưu trữ <literal>proposed-updates</literal> là nơi cập nhật dự kiến ​​được chuẩn bị (dưới sự giám sát của “Nhà Quản lý phát hành phiên bản ổn định“).
				</para>
				 <para>
					Các bản cập nhật bảo mật và ổn định được ghi lại trong các phần trước đây luôn được bao gồm trong kho này, nhưng có nhiều hơn, bởi vì các nhà bảo trì gói phần mềm cũng có cơ hội sửa lỗi quan trọng mà chưa phát hành được trong bản các phiên bản ổn đinh.
				</para>
				 <para>
					Bất cứ ai cũng có thể sử dụng kho này để kiểm tra các cập nhật trước khi công bố chính thức. Đoạn trích dưới đây sử dụng bí danh <literal>jessie-proposed-updates</literal> rõ ràng hơn và nhất quán hơn kể từ khi có <literal>wheezy-proposed-updates</literal> (đối với cập nhật <emphasis role="distribution">Oldstable</emphasis>):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free</programlisting>

			</section>
			 <section id="sect.backports">
				<title>Backports Ổn định</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>backports</secondary>
				</indexterm>
				 <para>
					Kho lưu trữ <literal>stable-backports</literal> chứa “backports của các gói“. Thuật ngữ dùng để chỉ một gói phần mềm gần đây đã được biên dịch lại cho một phân phối cũ hơn, thường là cho <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Khi phân phối dần trở nên lỗi thời, nhiều dự án phần mềm đã phát hành các phiên bản mới không được tích hợp vào bản <emphasis role="distribution">Stable</emphasis> hiện tại (chỉ sửa đổi để giải quyết các vấn đề quan trọng nhất, chẳng hạn như các vấn đề về bảo mật). Vì các phân bố <emphasis role="distribution">Testing</emphasis> và <emphasis role="distribution">Unstable</emphasis> có thể trở nên rủi ro hơn, các nhà bảo trì gói đôi khi cung cấp các bản ghi lại các ứng dụng phần mềm gần đây cho <emphasis role="distribution">Stable</emphasis>, có lợi thế để hạn chế sự không ổn định tiềm ẩn trong một số lượng nhỏ các gói đã chọn. <ulink type="block" url="http://backports.debian.org" />
				</para>
				 <para>
					Kho lưu trữ <literal>stable-backports</literal> hiện đã có trên mirror của Debian thông thường. Nhưng backports cho <emphasis role="distribution">Squeeze</emphasis> vẫn được lưu trữ trên một máy chủ chuyên dụng (<literal>backports.debian.org</literal>) và yêu cầu nhập vào <filename>sources.list</filename> sau:
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 
<programlisting>deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free</programlisting>
				 <para>
					Backports từ <literal>stable-backports</literal> luôn được tạo từ các gói có sẵn trong <emphasis role="distribution">Testing</emphasis>. Điều này đảm bảo rằng tất cả backports được cài đặt sẽ được nâng cấp lên phiên bản ổn định tương ứng sau khi phiên bản ổn định tiếp theo của Debian sẵn sàng được phát hành
				</para>
				 <para>
					Mặc dù kho này cung cấp phiên bản mới hơn của gói, APT sẽ không cài đặt chúng trừ khi bạn đưa ra hướng dẫn rõ ràng để làm như vậy (hoặc trừ khi bạn đã làm như vậy với một phiên bản cũ của backport nào đó):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/jessie-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>package</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>Các kho cho Người dùng <emphasis role="distribution">Testing</emphasis> / <emphasis role="distribution">Unstable</emphasis></title>
			 <para>
				Dưới đây là một <filename>sources.list</filename> chuẩn cho một hệ thống đang chạy phiên bản <emphasis role="distribution">Testing</emphasis> hoặc <emphasis role="distribution">Unstable</emphasis> của Debian:
			</para>
			 <example id="example.testing-sources-list">
				<title><filename>/etc/apt/sources.list</filename> file for users of Debian <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
				 
<programlisting>
# Unstable
deb http://ftp.debian.org/debian unstable main contrib non-free
deb-src http://ftp.debian.org/debian unstable main contrib non-free

# Testing
deb http://ftp.debian.org/debian testing main contrib non-free
deb-src http://ftp.debian.org/debian testing main contrib non-free

# Stable
deb http://ftp.debian.org/debian stable main contrib non-free
deb-src http://ftp.debian.org/debian stable main contrib non-free

# Security updates
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free</programlisting>

			</example>
			 <para>
				Với tệp tin <filename>sources.list</filename> này APT sẽ cài đặt các gói từ <emphasis role="distribution">Unstable</emphasis>. Nếu không muốn, sử dụng cài đặt <literal>APT :: Default-Release</literal> (hướng dẫn để APT chọn gói từ phân phối khác) (có thể là <emphasis role="distribution">Testing</emphasis> trong trường hợp này).
			</para>
			 <para>
				Có nhiều lý do để bao gồm tất cả các kho đó, mặc dù thường chỉ cần một kho là đủ. <emphasis role="distribution">Testing</emphasis> người dùng sẽ đánh giá cao việc chọn lựa cẩn thận một gói cố định từ <emphasis role="distribution">Unstable</emphasis> khi phiên bản trong <emphasis role="distribution">Testing</emphasis> bị ảnh hưởng bởi một lỗi khó chịu. Ngược lại, người dùng <emphasis role="distribution">Unstable</emphasis> cũng có thể bị ức chế bởi các hồi quy không mong về downgrade gói xuống phiên bản <emphasis role="distribution">Testing</emphasis> (được cho là làm việc) của họ.
			</para>
			 <para>
				Việc bao gồm phiên bản <emphasis role="distribution">Stable</emphasis> được tranh luận nhiều hơn nhưng nó thường cho phép truy cập vào một số gói đã bị xoá khỏi các phiên bản phát triển. Nó cũng đảm bảo rằng bạn nhận được các bản cập nhật mới nhất cho các gói đã không được sửa đổi kể từ lần phát hành ổn định cuối cùng.
			</para>
			 <section>
				<title>Kho lưu trữ <emphasis role="distribution">Experimental</emphasis></title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					Lưu trữ các gói <emphasis role="distribution">Experimental</emphasis> có mặt trên tất cả các mirror của Debian và chứa các gói không có trong phiên bản <emphasis role="distribution">Unstable</emphasis> vì chất lượng kém hơn - thường là các phiên bản phát triển phần mềm hoặc các phiên bản trước (alpha, beta, release candidate ...). Một gói cũng có thể được gửi đến đó sau khi trải qua các thay đổi tiếp theo có thể gây ra vấn đề. Người bảo trì sau đó cố gắng xử lý chúng với sự trợ giúp của những người dùng tiên tiến có thể xử lý các vấn đề quan trọng. Sau giai đoạn đầu tiên này, gói phần mềm được chuyển vào <emphasis role="distribution">Unstable</emphasis>, nơi nó đạt đến một lượng người quan tâm lớn hơn và sẽ được thử nghiệm chi tiết hơn.
				</para>
				 <para>
					<emphasis role="distribution">Experimental</emphasis> thường được sử dụng bởi những người dùng không ngại phá vỡ hệ thống của họ và sau đó sửa chữa nó. Sự phân phối này cho phép nhập một gói mà người dùng muốn thử hoặc sử dụng khi nhu cầu phát sinh. Đó chính xác là cách mà Debian tiếp cận, kể từ khi bổ sung nó vào file <filename>sources.list</filename> của APT không dẫn tới việc sử dụng các gói của nó một cách có hệ thống. Dòng được thêm vào là:
				</para>
				 <informalexample> 
<programlisting>deb http://ftp.debian.org/debian experimental main contrib non-free</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Tài nguyên không chính thức: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				Có rất nhiều nguồn phi chính thức của các gói Debian do người dùng tiên tiến thiết lập để biên dịch lại một số phần mềm (Ubuntu làm cho nó trở nên phổ biến với dịch vụ Lưu trữ Trọn gói Cá nhân - Personal Package Archive service), bởi các lập trình viên tạo ra chúng cho tất cả mọi người, thậm chí cả các nhà phát triển các gói đó ở Phiên bản Debian trước.
			</para>
			 <para>
				Trang <literal>mentors.debian.net</literal> rất thú vị (mặc dù nó chỉ cung cấp các gói nguồn) vì nó tập hợp các gói do các ứng cử viên tạo ra cho trạng thái của nhà phát triển chính thức của Debian; hay bởi các tình nguyện viên muốn tạo các gói Debian mà không cần phải đi qua quá trình hội nhập đó. Những gói này được cung cấp mà không có sự đảm bảo về chất lượng; Bạn nên kiểm tra nguồn gốc và tính toàn vẹn của chúng trước khi sử dụng chúng trong hệ thống vận hành.
			</para>
			 <sidebar> <title><emphasis>CỘNG ĐỒNG</emphasis> Các trang web <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				Tên miền <emphasis>debian.net</emphasis> không phải là tài nguyên chính thức của dự án Debian. Mỗi nhà phát triển Debian có thể sử dụng tên miền đó để sử dụng. Các trang web này có thể chứa các dịch vụ không chính thức (đôi khi các trang web cá nhân) được lưu trữ trên một máy không thuộc dự án và do các nhà phát triển Debian thiết lập hoặc thậm chí các nguyên mẫu sẽ được chuyển sang <emphasis>debian.org</emphasis>. Có hai lý do có thể giải thích tại sao một số nguyên mẫu này vẫn còn trên <emphasis>debian.net</emphasis>: hoặc đã không có ai thực hiện những nỗ lực cần thiết để biến nó thành dịch vụ chính thức (được lưu trữ trên miền <emphasis>debian.org</emphasis> và với một bảo đảm việc bảo trì);hoặc Dịch vụ là đang gây tranh cãi để được chính thức hóa.
			</para>
			 </sidebar> <para>
				Cài đặt gói có nghĩa là trao quyền cho người tạo của nó vì họ quyết định về nội dung của các tập lệnh khởi tạo được chạy dưới dạng nhận dạng đó. Các gói Debian chính thức được tạo ra bởi các tình nguyện viên đã được đồng chọn và xem lại và ai có thể đóng gói các gói của mình sao cho có thể kiểm tra nguồn gốc và tính toàn vẹn của chúng.
			</para>
			 <para>
				Nói chung, hãy thận trọng với một gói mà bạn không biết nguồn gốc và không được lưu trữ trên một trong các máy chủ Debian chính thức: đánh giá mức độ mà bạn có thể tin cậy người tạo và kiểm tra tính toàn vẹn của gói. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>TIẾN THÊM MỘT BƯỚC</emphasis> Các gói cũ: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				Dịch vụ <literal>snapshot.debian.org</literal>, được giới thiệu vào tháng 4 năm 2010, có thể được sử dụng để “đi ngược thời gian“ và để tìm một phiên bản cũ của gói. Nó có thể được sử dụng để xác định phiên bản nào của gói có một tính năng cũ nào đó, và cụ thể hơn, để trở lại phiên bản cũ trước khi chờ sửa lỗi tính năng cũ.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Bộ nhớ đệm trung gian cho Các Gói Debian (Caching Proxy)</title>
			 <indexterm>
				<primary>proxy cache</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				Khi toàn bộ mạng máy tính được cấu hình để sử dụng cùng một máy chủ từ xa để tải các gói cập nhật giống nhau, bất kỳ quản trị viên nào cũng biết rằng sẽ có lợi nếu có một proxy trung gian hoạt động như một bộ nhớ cache mạng cục bộ (xem sidebar <xref linkend="sidebar.cache" />).
			</para>
			 <para>
				Bạn có thể cấu hình APT sử dụng một "chuẩn" proxy (xem <xref linkend="sect.apt-config" /> cho phía APT, và <xref linkend="sect.http-ftp-proxy" /> cho phía proxy), nhưng hệ sinh thái Debian cung cấp các giải pháp tốt hơn để giải quyết vấn đề này. Phần mềm chuyên dụng được trình bày trong phần này thông minh hơn một bộ nhớ cache proxy đơn giản bởi vì chúng có thể dựa vào cấu trúc cụ thể của kho APT (ví dụ như nó biết khi nào các tệp tin đã lỗi thời hoặc không, và do đó điều chỉnh thời gian lưu trữ).
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> và <emphasis role="pkg">apt-cacher-ng</emphasis> hoạt động như những máy chủ proxy proxy thông thường. Tệp tin <filename>sources.list</filename> của APT không được thay đổi, nhưng APT được định cấu hình để sử dụng nó làm proxy cho các yêu cầu đi ra ngoài.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">approx</emphasis>, mặt khác, hoạt động giống như một máy chủ HTTP “sao chép“ bất kỳ số kho lưu trữ từ xa nào trong URL cấp cao nhất của nó. Sự đối chiếu giữa các thư mục cấp cao nhất và các URL từ xa của các kho lưu trữ được lưu trữ trong <filename>/etc/approx/approx.conf</filename>:
			</para>
			 
<programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://ftp.debian.org/debian
security http://security.debian.org</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> chạy mặc định trên cổng 9999 thông qua dịch vụ inetd (xem <xref linkend="sect.inetd" />) và yêu cầu người dùng điều chỉnh tệp <filename>sources.list</filename> của họ để trỏ tới máy chủ approx:
			</para>
			 
<programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free
deb http://apt.falcot.com:9999/debian jessie main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title>Các lệnh <command>aptitude</command>, <command>apt-get</command>, và <command>apt</command> </title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT là một dự án lớn, ban đầu bao gồm một giao diện đồ họa. Nó dựa trên một thư viện chứa ứng dụng cốt lõi, và <command>apt-get</command> là giao diện đầu tiên - dòng lệnh - được phát triển trong dự án. <command>apt</command> là một giao diện dựa trên dòng lệnh cung cấp bởi APT mà khắc phục một số sai lầm trong thiết kế của <command>apt-get</command>.
		</para>
		 <para>
			Nhiều giao diện đồ họa khác sau đó xuất hiện như các dự án thêm vào: <command>synaptic</command>, <command>aptitude</command> (bao gồm cả giao diện chế độ văn bản và một dạng đồ hoạ - mặc dù vẫn chưa hoàn thành), <command>wajig</command>, vv Giao diện được khuyên dùng nhất, <command>apt</command>, sẽ được sử dụng trong các ví dụ được đưa ra trong phần này. Tuy nhiên lưu ý rằng <command>apt-get</command> và <command>aptitude</command> có một cú pháp lệnh rất giống nhau. Khi có sự khác biệt lớn giữa <command>apt</command>, <command>apt-get</command> và <command>aptitude</command>, những khác biệt này sẽ được chỉ ra cụ thể.
		</para>
		 <section>
			<title>Khởi tạo</title>
			 <para>
				Đối với bất kỳ công việc nào sử dụng APT, danh sách các gói cần phải được cập nhật; Điều này có thể được thực hiện đơn giản thông qua <command>apt update</command>. Tùy thuộc vào tốc độ kết nối, thao tác này có thể mất một khoảng thời gian kể từ khi tải về một số tệp <filename>Packages</filename> / <filename>Sources</filename> / <filename>Translation-<replaceable>language-code</replaceable></filename> tệp này đã trở nên ngày càng lớn hơn trong qúa trình phát triển của Debian (ít nhất 10 MB Dữ liệu cho phần <literal>main</literal>). Tất nhiên, cài đặt từ một bộ CD-ROM không yêu cầu phải tải xuống - trong trường hợp này thì sẽ nhanh hơn nhiều.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Cài đặt và Gỡ bỏ</title>
			 <indexterm>
				<primary>package</primary>
				<secondary>installation</secondary>
			</indexterm>
			 <indexterm>
				<primary>package</primary>
				<secondary>removal</secondary>
			</indexterm>
			 <indexterm>
				<primary>installation</primary>
				<secondary>package installation</secondary>
			</indexterm>
			 <indexterm>
				<primary>Gỡ bỏ một gói</primary>
			</indexterm>
			 <para>
				Với APT, các gói có thể được thêm hoặc xóa khỏi hệ thống, tương ứng với <command>apt install<replaceable>package</replaceable></command> và <command>apt remove<replaceable>package</replaceable></command>. Trong cả hai trường hợp, APT sẽ tự động cài đặt các gói phụ thuộc cần thiết hoặc xóa các gói phụ thuộc vào gói đang được xóa. Lệnh <command>apt purge <replaceable>package</replaceable></command> liên quan đến việc gỡ cài đặt hoàn toàn - các tệp cấu hình cũng bị xóa.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>MẸO</emphasis> Cài đặt cùng một nhóm các gói nhiều lần</title>
			 <para>
				Có thể hữu ích để cài đặt cùng một danh sách các gói trên một số máy tính một cách có hệ thống. Điều này có thể được thực hiện khá dễ dàng.
			</para>
			 <para>
				Đầu tiên, lấy danh sách các gói cài đặt trên máy tính sẽ lấy làm “mô hình” để sao chép.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				Tệp <filename>pkg-list</filename> chứa danh sách các gói được cài đặt. Tiếp theo, chuyển tệp <filename>pkg-list</filename> lên các máy tính bạn muốn cập nhật và sử dụng các lệnh sau:
			</para>
			 
<screen>## Update dpkg's database of known packages
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Update dpkg's selections
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Ask apt-get to install the selected packages
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				Các lệnh đầu tiên ghi lại danh sách các gói sẵn có trong cơ sở dữ liệu dpkg, sau đó <command>dpkg --set-selects</command> phục hồi việc lựa chọn các gói mà bạn muốn cài đặt và thao tác <command>apt-get</command> thực hiện các thao tác yêu cầu! <command>aptitude</command> không có lệnh này.
			</para>
			 </sidebar> <sidebar> <title><emphasis>MẸO</emphasis> Xóa và cài đặt đồng thời</title>
			 <para>
				Có thể yêu cầu <command>apt</command> (hoặc <command>apt-get</command>, hoặc <command>aptitude</command>) để cài đặt các gói nào đó và loại bỏ các gói khác trên cùng một dòng lệnh bằng cách thêm một hậu tố. Với lệnh <command>apt install</command>, thêm “<literal>-</literal>“ vào tên của các gói bạn muốn loại bỏ. Với lệnh <command>apt removede</command>, thêm “<literal>+</literal>“ vào tên của các gói bạn muốn cài đặt.
			</para>
			 <para>
				Ví dụ tiếp theo cho thấy hai cách khác nhau để cài đặt <replaceable>package1</replaceable> và để loại bỏ <replaceable>package2</replaceable>.
			</para>
			 
<screen># <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>
[...]</screen>
			 <para>
				Điều này cũng có thể được sử dụng để gỡ bỏ các gói mà nếu không sẽ được cài đặt, ví dụ như do một <literal>Recommends</literal>. Nói chung, trình phân giải gói phụ thuộc sẽ sử dụng thông tin đó làm gợi ý tìm kiếm các giải pháp thay thế.
			</para>
			 </sidebar> <sidebar> <title><emphasis>MẸO</emphasis> <command>apt --reinstall</command> và <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>reinstallation</primary>
			</indexterm>
			 <para>
				Hệ thống đôi khi có thể bị hư hỏng sau khi loại bỏ hoặc sửa đổi các tập tin trong một gói. Cách dễ nhất để lấy các tệp này là cài đặt lại gói bị ảnh hưởng. Thật không may, hệ thống quản lý gói thấy rằng nó đã được cài đặt và sẽ từ chối cài đặt lại nó; Để tránh điều này, hãy sử dụng tùy chọn <literal> - reinstall</literal> của lệnh <command>apt</command> và <command>apt-get</command>. Lệnh sau cài đặt lại <emphasis role="pkg">postfix</emphasis> ngay cả khi nó đã có sẵn:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				Dòng lệnh <command>aptitude</command> hơi khác, nhưng đạt được kết quả tương tự với cài đặt lại <command>aptitude postfix</command>.
			</para>
			 <para>
				Vấn đề không xảy ra với <command>dpkg</command>, nhưng quản trị viên hiếm khi sử dụng nó trực tiếp.
			</para>
			 <para>
				Hãy cẩn thận! Sử dụng <command>apt --reinstall</command> để khôi phục các gói được sửa đổi trong quá trình tấn công chắc chắn sẽ không phục hồi được hệ thống như trước đây. <xref linkend="sect.dealing-with-compromised-machine" /> mô tả chi tiết các bước thực hiện cần thiết đối với một hệ thống bị xâm nhập.
			</para>
			 </sidebar> <para>
				Nếu tệp <filename>sources.list</filename> đề cập đến một số bản phân phối, có thể đưa ra phiên bản của gói để cài đặt. Một số phiên bản cụ thể có thể được yêu cầu với cài đặt <command>apt <replaceable>package</replaceable> = <replaceable>version</replaceable></command>, nhưng chỉ ra xuất xứ bản phân phối của nó (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> hoặc <emphasis role="distribution">Unstable</emphasis>) - với <command>apt install<replaceable>package</replaceable> / <replaceable>distribution</replaceable></command> - thường được ưa thích hơn. Với lệnh này, bạn có thể quay trở lại phiên bản cũ của gói (nếu bạn biết rằng nó hoạt động tốt), miễn là nó vẫn còn có sẵn trong một trong các nguồn được tham chiếu bởi tệp tin <filename>sources.list</filename>. Nếu không, kho lưu trữ <literal>snapshot.debian.org</literal> có thể dùng để (xem sidebar <xref linkend="sidebar.snapshot.debian.org" />).
			</para>
			 <example>
				<title>Cài đặt phiên bản <emphasis role="distribution">unstable</emphasis> của <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <sidebar> <title><emphasis>TÌM HIỂU THÊM</emphasis> Bộ nhớ cache của các tệp tin <filename>.deb</filename></title>
			 <para>
				APT giữ một bản sao của mỗi tệp <filename>.deb</filename> đã tải xuống trong thư mục <filename>/var/cache/apt/archives/</filename>. Trong trường hợp cập nhật thường xuyên, thư mục này có thể nhanh chóng chiếm rất nhiều không gian đĩa với nhiều phiên bản của mỗi gói; Bạn nên thường xuyên sắp xếp chúng. Hai lệnh có thể được sử dụng: <command>apt-get clean</command> hoàn toàn làm trống thư mục; <command>apt-get autoclean</command> chỉ gỡ bỏ các gói không thể tải xuống được nữa (vì chúng đã biến mất khỏi máy nhân bản Debian) và do đó không có ích gì (tham số cấu hình <literal>APT :: Clean-Installed</literal> có thể ngăn chặn việc xóa các tệp tin <filename>.deb</filename>cài đặt hiện tại). Lưu ý rằng <command>apt</command> không hỗ trợ các lệnh đó.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>Nâng cấp hệ thống</title>
			 <indexterm>
				<primary>upgrade</primary>
				<secondary>system upgrade</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				Chúng tôi khuyên bạn nên nâng cấp đều đặn, bởi vì chúng bao gồm các cập nhật bảo mật mới nhất. Để nâng cấp, sử dụng <command>apt upgrade</command>, <command>apt-get upgrade</command> hoặc <command>aptitude safe-upgrade</command> (tất nhiên sau khi <command>apt update</command>). Lệnh này sẽ tìm các gói được cài đặt và có thể được nâng cấp mà không cần phải gỡ bỏ bất kỳ gói nào. Nói cách khác, mục tiêu là đảm bảo nâng cấp ít nhất phòng chống xâm nhập. <command>apt-get</command> hơi đòi hỏi nhiều hơn <command>aptitude</command> hoặc <command>apt</command> bởi vì nó sẽ từ chối cài đặt các gói không được cài đặt trước.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>MẸO</emphasis> Nâng cấp liên tục</title>
			 <para>
				Như  đã giải thích từ trước, mục đích của lệnh <command>apt update</command> là tải xuống cho mỗi gói nguồn có tệp <filename>Packages</filename> (hoặc <filename>Sources</filename>) tương ứng. Tuy nhiên, ngay cả sau khi nén <command>bzip2</command>, các tệp này vẫn có thể khá lớn (<filename>Packages.xz</filename> cho phần <foreignphrase>main</foreignphrase> của <emphasis role="distribution">Jessie</emphasis> mất hơn 6 MB). Nếu bạn muốn nâng cấp thường xuyên, các tải xuống này có thể mất rất nhiều thời gian.
			</para>
			 <para>
				Để tăng tốc quá trình, APT có thể tải các tập tin “diff“ chứa các thay đổi kể từ lần cập nhật trước đó, trái ngược với toàn bộ tập tin. Để đạt được điều này, các mirror chính thức của Debian phân phối các tệp tin khác nhau liệt kê sự khác biệt giữa một phiên bản của tệp <filename>Packages</filename> và phiên bản sau. Chúng được tạo ra tại mỗi bản cập nhật của lưu trữ và lịch sử của một tuần được giữ. Mỗi tệp tin “diff“ chỉ mất vài chục kilobyt cho <emphasis role="distribution">Unstable</emphasis>, do đó số lượng dữ liệu được tải xuống hàng tuần <command>apt update</command> thường được giảm đi 10 lần. Đối với các bản phân phối như <emphasis role="distribution">Stable</emphasis> và <emphasis role="distribution">Testing</emphasis>với thay đổi ít hơn, lợi ích thậm chí còn nhiều hơn đáng kể
			</para>
			 <para>
				Tuy nhiên, đôi khi điều này có thể khiến bạn phải tải toàn bộ tệp <filename>Packages</filename>, đặc biệt khi nâng cấp cuối cùng là rất cũ và khi cơ chế gia tăng sự khác biệt không đóng góp nhiều. Điều này cũng có thể thú vị khi truy cập mạng rất nhanh nhưng khi bộ xử lý của máy nâng cấp là khá chậm, vì thời gian lưu trong quá trình tải mất nhiều hơn khi máy tính tính toán các phiên bản mới của các tệp này (bắt đầu từ Phiên bản cũ hơn và nhập vào các khác biệt tải về). Để làm điều đó, bạn có thể sử dụng tham số cấu hình <literal>Acquire :: Pdiffs</literal> và đặt gía trị là <literal>false</literal>.
			</para>
			 </sidebar> <para>
				<command>apt</command> thường sẽ chọn số phiên bản gần đây nhất (ngoại trừ các gói từ <emphasis role="distribution">Experimental</emphasis> và <emphasis role="distribution">stable-backports</emphasis>, mặc định mặc định là số phiên bản của chúng). Nếu bạn đã chỉ định <emphasis role="distribution">Testing</emphasis> hoặc <emphasis role="distribution">Unstable</emphasis> trong <filename>sources.list</filename> của mình, <command>apt upgrade</command> sẽ chuyển hầu hết hệ thống <emphasis role="distribution">Stable</emphasis> của bạn sang <emphasis role="distribution">Testing</emphasis> hoặc <emphasis role="distribution">Unstable</emphasis>, điều này có thể không phải là điều bạn mong muốn.
			</para>
			 <para>
				Để yêu cầu <command>apt</command> sử dụng một phân phối cụ thể khi tìm kiếm các gói được nâng cấp, bạn cần sử dụng tùy chọn <literal>-t</literal> hoặc <literal> - target-release</literal>, theo sau là tên phân phối bạn muốn (ví dụ: <command>apt -t stable upgrade</command>) . Để tránh chỉ định tùy chọn này mỗi khi bạn sử dụng <command>apt</command>, bạn có thể thêm <literal>APT :: Default-Release "stable "; </literal> trong tệp <filename>/etc/apt/apt.conf.d/local</filename>.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				Đối với nâng cấp quan trọng hơn, chẳng hạn như sự thay đổi từ một phiên bản Debian lớn sang phiên bản tiếp theo, bạn cần phải sử dụng <command>apt full-upgrade</command>. Với chỉ dẫn này, <command>apt</command> sẽ hoàn tất quá trình nâng cấp ngay cả khi nó đã gỡ bỏ một số gói đã lỗi thời hoặc cài đặt các phụ thuộc mới. Đây cũng là lệnh được sử dụng bởi những người dùng làm việc hàng ngày với bản phát hành <emphasis role="distribution">Unstable</emphasis> của Debian và theo dõi sự phát triển của từng ngày. Nó đơn giản đến nỗi hầu như không cần giải thích: danh tiếng của APT dựa trên tính năng tuyệt vời này.
			</para>
			 <para>
				Không giống như <command>apt</command> và <command>aptitude</command>, <command>apt-get</command> không biết lệnh <command>full-upgrade</command>. Thay vào đó, bạn nên sử dụng <command>apt-get dist-upgrade</command>, câu lệnh mạnh mẽ và tuyệt vời mà <command>apt</command> và <command>aptitude</command> cũng chấp nhận để tạo sự tiện lợi của người dùng quen với nó.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>Tùy chọn Cấu hình</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>configuration</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				Bên cạnh các thành phần cấu hình đã đề cập, có thể cấu hình các khía cạnh một vài tham số của APT bằng cách thêm các chỉ thị vào một tệp tin của thư mục <filename>/etc/apt/apt.conf.d/</filename>. Hãy nhớ ví dụ rằng APT có thể cho <command>dpkg</command> bỏ qua các lỗi xung đột tệp bằng cách chỉ định <literal>DPkg :: options {"- force-overwrite"; } </literal>.
			</para>
			 <para>
				Nếu Web chỉ có thể được truy cập thông qua proxy, hãy thêm một dòng như <literal>Acquire::http::proxy "http://<replaceable>yourproxy</replaceable>:3128"</literal>. Đối với một FTP proxy, hãy viết <literal>Acquire::ftp::proxy "ftp://<replaceable>yourproxy</replaceable>"</literal>. Để khám phá thêm các tùy chọn cấu hình, hãy đọc trang hướng dẫn sử dụng <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> trang thông tin của câu lệnh với câu lệnh <command>man apt.conf</command> (để biết chi tiết về các trang một cách thủ công, xem <xref linkend="sect.manual-pages" />).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>KIẾN THỨC CƠ BẢN</emphasis> Thư mục kết thúc bằng <filename>.d</filename></title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				Thư mục có đuôi <filename>.d</filename> được sử dụng ngày càng nhiều hơn. Mỗi thư mục đại diện cho một tệp tin cấu hình chia ra nhiều tệp. Ví dụ, tất cả các tệp trong <filename>/etc/apt/apt.conf.d/</filename> là các tệp hướng dẫn để cấu hình APT. APT bao gồm chúng theo thứ tự chữ cái, vì vậy những cấu hình cuối cùng có thể đè lên cấu hình trong những tệp đầu tiên.
			</para>
			 <para>
				Cấu trúc này mang lại sự linh hoạt cho quản trị viên máy tính và trình bảo trì gói. Thật vậy, quản trị viên có thể dễ dàng thay đổi cấu hình của phần mềm bằng cách thêm một tệp tin đã được tạo sẵn trong thư mục được đề cập mà không cần thay đổi tệp hiện có. Trình duy trì gói sử dụng cách tiếp cận tương tự khi nó cần phải áp dụng cấu hình của một phần mềm khác để đảm bảo rằng nó cũng tồn tại hoàn hảo với nó. Chính sách Debian - môt cách rõ ràng - cấm việc sửa đổi các tệp cấu hình của các gói khác - chỉ những người dùng được phép mới có thể thực hiện điều này. Hãy nhớ rằng trong quá trình nâng cấp gói, người dùng sẽ chọn phiên bản của tệp cấu hình cần lưu giữ khi phát hiện thấy một sửa đổi. Bất kỳ sửa đổi bên ngoài của tập tin sẽ kích hoạt yêu cầu đó, điều này có thể sẽ làm phiền các quản trị viên, những người chắc chắn không thay đổi bất cứ điều gì.
			</para>
			 <para>
				Nếu không có thư mục <filename>.d</filename>, một gói phần mềm bên ngoài không thể thay đổi các thiết lập của một chương trình mà không cần sửa đổi tập tin cấu hình của nó. Thay vào đó, nó phải mời người sử dụng thực hiện nó và liệt kê các hành động được thực hiện trong file <filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename>.
			</para>
			 <para>
				Tùy thuộc vào ứng dụng, thư mục <filename>.d</filename> được sử dụng trực tiếp hoặc được quản lý bởi một tập lệnh bên ngoài sẽ nối tất cả các tệp để tự tạo tệp cấu hình. Điều quan trọng là phải thực thi mã lệnh sau bất kỳ sự thay đổi nào trong thư mục đó để cập nhật các sửa đổi gần nhất. Cũng như vậy, điều quan trọng là không làm việc trực tiếp trong tệp tin cấu hình được tạo tự động, vì mọi thứ sẽ bị mất khi thực hiện lệnh tiếp theo của tập lệnh. Phương pháp lựa chọn (<filename>.d</filename> thư mục được sử dụng trực tiếp hoặc một tập tin được tạo ra từ thư mục đó) thường phải tuần theo các ràng buộc cài đặt, nhưng trong cả hai trường hợp lợi ích về cấu hình linh hoạt hơn bù đắp được cho các biến chứng nhỏ mà họ đòi hỏi. Máy chủ mail Exim 4 là một ví dụ về phương pháp tệp được tạo: có thể được thiết lập cấu hình qua nhiều tệp (<filename>/etc/exim4/conf.d / *</filename>) được nối vào <filename>/var/lib/exim4/config.autogenerated</filename> bởi lệnh <command>update-exim4.conf</command>.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>Các ưu tiên Quản lý Gói</title>
			 <para>
				Một trong những khía cạnh quan trọng nhất trong cấu hình của APT là quản lý các ưu tiên liên quan đến từng nguồn gói. Ví dụ: bạn có thể muốn mở rộng một bản phân phối với một hoặc hai gói mới hơn từ <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> hoặc <emphasis role="distribution">Experimental</emphasis>. Có thể gán một mức độ ưu tiên cho mỗi gói có sẵn (cùng một gói có thể có một số ưu tiên tùy thuộc vào phiên bản của nó hoặc bản phân phối cung cấp nó). Những ưu tiên này sẽ ảnh hưởng đến hành vi của APT: cho mỗi gói, nó sẽ luôn chọn phiên bản có mức độ ưu tiên cao nhất (trừ khi phiên bản này cũ hơn phiên bản đã cài đặt và nếu mức độ ưu tiên của nó nhỏ hơn 1000).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>pinning, APT pinning</primary>
			</indexterm>
			 <indexterm>
				<primary>package</primary>
				<secondary>priority</secondary>
			</indexterm>
			 <indexterm>
				<primary>priority</primary>
				<secondary>package priority</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>preferences</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>preferences</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				APT định nghĩa một số ưu tiên mặc định. Mỗi phiên bản gói được cài đặt có mức ưu tiên là 100. Phiên bản không được cài đặt mặc định có mức ưu tiên là 500, nhưng có thể lên tới 990 nếu nó là một phần của bản phát hành đích (được định nghĩa bằng tùy chọn dòng lệnh <literal>-t</literal> hoặc <literal>APT :: Default-Release</literal> chỉ thị cấu hình).
			</para>
			 <para>
				Bạn có thể sửa đổi các ưu tiên bằng cách thêm các mục trong tệp tin <filename>/etc/apt/preferences</filename> với tên của gói cần tác động, phiên bản, nguồn gốc và mức độ ưu tiên mới của chúng.
			</para>
			 <para>
				APT sẽ không bao giờ cài đặt một phiên bản cũ hơn của một gói (có nghĩa là một gói có số phiên bản thấp hơn một gói hiện đang được cài đặt) ngoại trừ mức ưu tiên của nó cao hơn 1000. APT sẽ luôn cài đặt gói ưu tiên cao nhất theo sau hạn chế. Nếu hai gói có cùng mức độ ưu tiên, APT sẽ cài đặt gói mới nhất (có số phiên bản cao nhất). Nếu hai gói cùng phiên bản có cùng mức độ ưu tiên nhưng khác nhau về nội dung của chúng, APT sẽ cài đặt phiên bản không được cài đặt (quy tắc này đã được tạo để bao gồm trường hợp cập nhật gói mà không cần tăng số phiên bản, thường là bắt buộc ).
			</para>
			 <para>
				Trong các điều khoản cụ thể hơn, một gói ưu tiên ít hơn 0 sẽ không bao giờ được cài đặt. Một gói với mức độ ưu tiên từ 0 đến 100 sẽ chỉ được cài đặt nếu không có phiên bản khác của gói đã được cài đặt. Với mức ưu tiên từ 100 đến 500, gói sẽ chỉ được cài đặt nếu không có phiên bản mới nào được cài đặt hoặc có sẵn trong phân phối khác. Một gói ưu tiên giữa 501 và 990 sẽ chỉ được cài đặt nếu không có phiên bản mới hơn được cài đặt hoặc có sẵn trong phân phối đích. Với mức ưu tiên từ 990 đến 1000, gói sẽ được cài đặt trừ khi phiên bản được cài đặt là phiên bản mới hơn. Ưu tiên lớn hơn 1000 sẽ luôn dẫn đến việc cài đặt gói ngay cả khi nó buộc APT hạ cấp xuống phiên bản cũ hơn.
			</para>
			 <para>
				Khi APT kiểm tra <filename>/etc/apt/preferences</filename>, trước tiên phải tính đến các mục cụ thể nhất (thường là các gói cụ thể), sau đó là các loại chung chung hơn (ví dụ như tất cả các gói của một bản phân phối). Nếu một số mục chung chung tồn tại, mục phù hợp đầu tiên sẽ được sử dụng. Các tiêu chí lựa chọn bao gồm tên của gói và nguồn cung cấp nó. Mỗi nguồn gói được xác định bằng thông tin có trong tệp <filename>Release</filename> mà APT tải cùng với tệp <filename>Packages</filename>. Nó chỉ rõ nguồn gốc (thường là “Debian“ cho các gói các mirror chính thức, nhưng nó cũng có thể là tên của một người hoặc một tổ chức cho các kho của bên thứ ba). Nó cũng cho biết tên của bản phân phối (thường là <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> hoặc <emphasis role="distribution">Experimental</emphasis> cho các bản phân phối chuẩn do Debian cung cấp) cùng với phiên bản của nó (ví dụ 8 cho Debian <emphasis role="distribution">Jessie</emphasis>). Chúng ta hãy nhìn vào cú pháp của nó thông qua một số nghiên cứu thực tế của cơ chế này.
			</para>
			 <sidebar> <title><emphasis>TRƯỜNG HỢP CỤ THỂ</emphasis> Mức độ ưu tiên của <emphasis role="distribution">experimental</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				Nếu bạn liệt kê <emphasis role="distribution">Experimental</emphasis> trong tệp <filename>sources.list</filename>, gói tương ứng hầu như sẽ không bao giờ được cài đặt vì mức độ ưu tiên mặc định của APT là 1. Đây là một trường hợp cụ thể, được thiết kế để tránh cho người dùng khỏi cài đặt nhầm gói <emphasis role="distribution">Experimental</emphasis>. Gói này chỉ có thể được cài đặt bằng cách gõ <command>aptitude install <replaceable>package</replaceable> / experiment</command> - người dùng gõ lệnh này có thể nhận thức được những rủi ro mà họ thực hiện. Tuy nhiên vẫn có thể (mặc dù <emphasis>không</emphasis> khuyến khích) để xử lý các gói của <emphasis role="distribution">Experimental</emphasis> giống như ở các bản phân phối khác bằng cách cho chúng độ ưu tiên 500. Điều này được thực hiện với một mục nhập cụ thể trong <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar> <para>
				Giả sử rằng bạn chỉ muốn sử dụng các gói từ phiên bản ổn định của Debian. Không được cài đặt những phiên bản được cung cấp trong các phiên bản khác ngoại trừ yêu cầu rõ ràng. Bạn có thể viết các mục sau trong file <filename>/etc/apt /preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> xác định tên của bản phân phối đã chọn. <literal>o=Debian</literal> giới hạn phạm vi cho các gói có nguồn gốc là “Debian“.
			</para>
			 <para>
				Bây giờ chúng ta giả sử rằng bạn có một máy chủ với một vài chương trình cục bộ phụ thuộc vào phiên bản 5.14 của Perl và bạn muốn đảm bảo rằng các nâng cấp sẽ không cài đặt một phiên bản khác của nó. Bạn có thể sử dụng mục này:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.14*
Pin-Priority: 1001</programlisting>
			 </informalexample> <para>
				Tài liệu tham khảo cho tệp cấu hình này có sẵn trong trang hướng dẫn <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>, bạn có thể xem bằng lệnh <command>man apt_preferences</command>.
			</para>
			 <sidebar> <title><emphasis>MẸO</emphasis> Các ghi chú trong <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Explanation</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin-Priority</literal></primary>
			</indexterm>
			 <para>
				Không có cú pháp chính thức để đưa ghí chú ​​vào tệp <filename>/etc/apt/preferences</filename>, nhưng một số mô tả bằng văn bản có thể được cung cấp bằng cách đặt một hoặc nhiều trường “<literal>Explanation</literal>“ vào đầu mỗi mục:
			</para>
			 <informalexample> 
<programlisting>Explanation: The package xserver-xorg-video-intel provided
Explanation: in experimental can be used safely
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>Làm việc với một số bản phân phối</title>
			 <para>
				<command>apt</command> là một công cụ tuyệt vời, việc chọn các gói đến từ các bản phân phối khác khá hấp dẫn. Ví dụ: sau khi đã cài đặt một hệ thống <emphasis role="distribution">Stable</emphasis>, bạn có thể thử một gói phần mềm có sẵn trong <emphasis role="distribution">Testing</emphasis> hoặc <emphasis role="distribution">Unstable</emphasis> mà không bị phân tán quá nhiều từ trạng thái ban đầu của hệ thống.
			</para>
			 <para>
				Thậm chí nếu bạn đôi khi gặp phải các vấn đề trong khi trộn các gói từ các phân phối khác nhau, thì <command>apt</command> sẽ quản lý sự tồn tại song song này rất tốt và hạn chế rủi ro rất hiệu quả. Cách tốt nhất để tiến hành là liệt kê tất cả các bản phân phối được sử dụng trong <filename>/etc/apt/sources.list</filename> (một số người luôn đặt ba bản phân phối nhưng hãy nhớ rằng <emphasis role="distribution">Unstable</emphasis> dành cho những người dùng có kinh nghiệm) và để xác định phân phối tham chiếu của bạn với <literal>APT::Default-Release</literal> (xem <xref linkend="sect.apt-upgrade" />).
			</para>
			 <para>
				Hãy giả sử <emphasis role="distribution">Stable</emphasis> là bản phân phối tham khảo của bạn nhưng <emphasis role="distribution">Testing</emphasis> và <emphasis role="distribution">Unstable</emphasis> cũng được liệt kê trong tệp <filename>sources.list</filename> của bạn. Trong trường hợp này, bạn có thể sử dụng <command>apt install<replaceable>package</replaceable>/testing</command> để cài đặt một gói từ <emphasis role="distribution">Testing</emphasis>. Nếu cài đặt không thành công do một số gói phụ thuộc không đáng tin cậy, hãy giải quyết các gói phụ thuộc trong <emphasis role="distribution">Testing</emphasis> bằng cách thêm tham số <literal>-t testing </literal>. Điều tương tự cũng áp dụng cho <emphasis role="distribution">Unstable</emphasis>.
			</para>
			 <para>
				Trong trường hợp này, nâng cấp (<command>upgrade</command> và <command>full-upgrade</command>) được thực hiện trong <emphasis role="distribution">Stable</emphasis> ngoại trừ các gói đã được nâng cấp lên phân phối khác: các gói này sẽ theo các cập nhật có sẵn trong các bản phân phối khác. Chúng ta sẽ giải thích hành vi này với sự trợ giúp của các ưu tiên mặc định được thiết lập bởi APT dưới đây. Đừng ngần ngại sử dụng <command>apt-cache policy</command> (xem bên bar <xref linkend="sidebar.apt-cache-policy" />) để xác minh các ưu tiên đã cho.
			</para>
			 <para>
				Tất cả mọi thứ tập trung vào thực tế rằng APT chỉ xem xét các gói có phiên bản cao hơn hoặc bằng với phiên bản đã cài đặt (giả sử rằng <filename>/etc/apt/preferences</filename>không được sử dụng để ép buộc các ưu tiên cao hơn 1000 đối với một số gói).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>MẸO</emphasis> <command>apt-cache policy</command></title>
			 <para>
				Để hiểu rõ hơn về cơ chế ưu tiên, hãy chạy lệnh <command>apt-cache policy</command> để hiển thị mức độ ưu tiên mặc định được liên kết với từng nguồn gói. Bạn cũng có thể sử dụng <command>apt-cache policy <replaceable>package</replaceable></command> để hiển thị các ưu tiên của tất cả các phiên bản có sẵn của một gói cụ thể.
			</para>
			 </sidebar> <para>
				Giả sử bạn đã cài đặt phiên bản 1 của gói đầu tiên từ <emphasis role="distribution">Stable</emphasis> và phiên bản 2 và 3 có sẵn tương ứng trong <emphasis role="distribution">Testing</emphasis> và <emphasis role="distribution">Unstable</emphasis>. Phiên bản đã cài đặt có mức ưu tiên 100 nhưng phiên bản có sẵn trong <emphasis role="distribution">Stable</emphasis> (giống hệt nhau) có mức độ ưu tiên là 990 (vì đây là một phần của bản phát hành mục tiêu). Gói trong <emphasis role="distribution">Testing</emphasis> và <emphasis role="distribution">Unstable</emphasis> có mức ưu tiên là 500 (mức độ ưu tiên mặc định của một phiên bản không được cài đặt). Gói được chọn là phiên bản 1 với mức ưu tiên là 990. Gói “lưu lại ở trong <emphasis role="distribution">Stable</emphasis>“.
			</para>
			 <para>
				Lấy ví dụ về gói khác có phiên bản 2 đã được cài đặt từ <emphasis role="distribution">Testing</emphasis>. Phiên bản 1 có trong <emphasis role="distribution">Stable</emphasis> và phiên bản 3 trong <emphasis role="distribution">Unstable</emphasis>. Phiên bản 1 (ưu tiên 990 - do đó thấp hơn 1000) bị loại bỏ vì nó thấp hơn phiên bản đã cài đặt. Điều này chỉ để lại phiên bản 2 và 3, cả hai ưu tiên 500. Đối mặt với sự thay thế này, APT chọn phiên bản mới nhất, một từ <emphasis role="distribution">Unstable</emphasis>.Nếu bạn không muốn một gói được cài đặt từ <emphasis role="distribution">Testing</emphasis> để di chuyển sang <emphasis role="distribution">Unstable</emphasis>, bạn phải chỉ định một Ưu tiên thấp hơn 500 (490 ví dụ) cho các gói đến từ <emphasis role="distribution">Unstable</emphasis>. Bạn có thể sửa đổi <filename>/etc/apt/preferences</filename> với thay đổi như sau:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>Theo dõi gói cài đặt tự động</title>
			 <para>
				Một trong những chức năng thiết yếu của <command>apt</command> là theo dõi các gói được cài đặt chỉ qua các gói phụ thuộc. Các gói này được gọi là “tự động“, và thường bao gồm các thư viện chẳng hạn.
			</para>
			 <para>
				Với thông tin này, khi gói bị xóa, người quản lý gói có thể tính toán một danh sách các gói tự động không cần thiết nữa (vì không có gói cài đặt thủ công) tùy thuộc vào chúng. <command>apt-get autoremove</command> sẽ loại bỏ các gói đó. <command>aptitude</command> và <command>apt</command> không có lệnh này: trước đây vì nó loại bỏ chúng tự động ngay khi chúng được xác định, và thứ hai có lẽ vì người dùng không nên tự chạy lệnh như vậy. Trong mọi trường hợp, các công cụ hiển thị một thông báo rõ ràng liệt kê các gói bị ảnh hưởng.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				Thói quen tốt là đánh dấu tự động bất kỳ gói nào mà bạn không cần trực tiếp để chúng được tự động loại bỏ khi không cần thiết nữa. <command>apt-mark auto <replaceable>package</replaceable></command> sẽ đánh dấu gói cho sẵn như tự động trong khi <command>apt-mark manual <replaceable>package</replaceable></command> làm ngược lại. <command>aptitude markauto</command> và <command>aptitude unmarkauto</command> hoạt động theo cùng một cách mặc dù chúng có nhiều tính năng đánh dấu nhiều gói cùng một lúc (xem <xref linkend="sect.aptitude" />). Giao diện tương tác dựa trên consolecủa <command>aptitude</command> cũng giúp bạn dễ dàng xem xét “cờ tự động“ trên nhiều gói.
			</para>
			 <indexterm>
				<primary><command>aptitude why</command></primary>
			</indexterm>
			 <para>
				Mọi người có thể muốn biết tại sao một gói cài đặt tự động được hiện diện trên hệ thống. Để nhận thông tin này từ dòng lệnh, bạn có thể sử dụng <command>aptitude why<replaceable>package</replaceable></command> (<command>apt</command> và <command>apt-get</command> không có tính năng tương tự):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>THAY THẾ</emphasis> <command>deborphan</command> và <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				Khi mà <command>apt</command>, <command>apt-get</command> và <command>aptitude</command> không thể theo dõi các gói tự động, có hai tiện ích tạo ra danh sách các gói không cần thiết: <command>deborphan</command> và <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> là tiện ích thô sơ nhất của cả hai. Nó chỉ đơn giản quét các <literal>libs</literal> và <literal>oldlibs</literal> phần (trong trường hợp không có hướng dẫn bổ sung) tìm kiếm các gói đang được cài đặt và không có gói khác phụ thuộc vào. Danh sách kết quả sau đó có thể làm cơ sở để loại bỏ các gói không cần thiết.
			</para>
			 <para>
				<command>debfoster</command> có cách tiếp cận phức tạp hơn, tương tự như của APT: nó duy trì một danh sách các gói đã được cài đặt một cách rõ ràng và ghi nhớ những gói nào thực sự cần thiết giữa mỗi lần gọi. Nếu các gói mới xuất hiện trên hệ thống và nếu <command>debfoster</command> không biết chúng như các gói cần thiết, chúng sẽ được hiển thị trên màn hình cùng với danh sách các gói phụ thuộc của chúng. Chương trình sau đó đưa ra một lựa chọn: loại bỏ các gói (có thể cùng với những gói phụ thuộc vào nó), đánh dấu nó như là cần thiết một cách rõ ràng, hoặc bỏ qua nó tạm thời.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>Câu lệnh <command>apt-cache</command> </title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>package search</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>header display</secondary>
		</indexterm>
		 <indexterm>
			<primary>search of packages</primary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>search</secondary>
		</indexterm>
		 <para>
			Lệnh <command>apt-cache</command> có thể hiển thị nhiều thông tin được lưu trữ trong cơ sở dữ liệu nội bộ của APT. Thông tin này là một loại bộ nhớ cache vì nó được tập hợp từ các nguồn khác nhau được liệt kê trong tệp <filename>sources.list</filename>. Điều này xảy ra trong quá trình hoạt động <command>apt update</command>.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>VOCABULARY</emphasis> Bộ đệm - Cache</title>
		 <para>
			Bộ nhớ cache là một hệ thống lưu trữ tạm thời được sử dụng để tăng tốc độ truy cập dữ liệu thường xuyên khi phương pháp truy cập thông thường đắt tiền (xét về mặt hiệu suất). Khái niệm này có thể được áp dụng trong nhiều tình huống và ở các quy mô khác nhau, từ cốt lõi của bộ vi xử lý đến các hệ thống lưu trữ cao cấp.
		</para>
		 <para>
			Trong trường hợp của APT, tệp <filename>Packages</filename> tham chiếu là tệp nằm trên mirror của Debian. Điều đó nói rằng sẽ không hiệu quả nếu đi qua tất cả mạng để tìm kiếm tất cả những gì chúng ta có thể muốn trong cơ sở dữ liệu các gói có sẵn. Đó là lý do tại sao APT lưu trữ một bản sao của các tệp này (trong <filename>/var/lib/apt/list/</filename>) và các tìm kiếm được thực hiện trong các tệp cục bộ đó. Tương tự, <filename>/var/cache/apt/archives/</filename> chứa một bộ nhớ cache của các gói đã tải xuống để tránh tải lại chúng nếu bạn cần cài đặt lại chúng sau khi gỡ bỏ.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			Lệnh <command>apt-cache</command> có thể thực hiện tìm kiếm gói dựa trên từ khóa với <command>apt-cache search <replaceable>keyword</replaceable></command>. Nó cũng có thể hiển thị tiêu đề của các phiên bản có sẵn của gói với <command>apt-cache show <replaceable>package</replaceable></command>. Lệnh này cung cấp mô tả của gói, các phụ thuộc của nó, tên của người quản lý, vv Lưu ý rằng <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> làm việc theo cách tương tự nhau.
		</para>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> là một công cụ rất thô sơ, về cơ bản là thực hiện câu lệnh <command>grep</command> trên mô tả của gói. Nó thường trả về quá nhiều kết quả hoặc không có gì cả khi bạn bao gồm quá nhiều từ khoá tìm kiếm.
		</para>
		 <para>
			<command>axi-cache search <replaceable>term</replaceable></command> thì cung cấp kết quả tốt hơn, được sắp xếp theo mức độ liên quan. Nó sử dụng công cụ tìm kiếm <emphasis>Xapian</emphasis> và là một phần của gói <emphasis role="pkg">apt-xapian-index</emphasis> chỉ mục tất cả thông tin gói (và nhiều hơn nữa, như các tệp <filename>.desktop</filename> từ tất cả các gói Debian). Nó biết về các thẻ (xem bên <xref linkend="sidebar.debtags" />) và trả kết quả trong một vài phần nghìn giây.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
105 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
98% debtags - Enables support for package tags
94% debian-goodies - Small toolbox-style utilities 
93% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
93% goplay - games (and more) package browser using DebTags
[...]
87% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
[...]
More terms: search debian searching strigi debtags bsearch libbsearch
More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			Một số tính năng hiếm khi được sử dụng. Ví dụ: <command>apt-cache policy</command> hiển thị các ưu tiên của các nguồn gói cũng như nguồn của các gói riêng lẻ. Một ví dụ khác là <command>apt-cache dumpavail</command> hiển thị tiêu đề của tất cả các phiên bản có sẵn của tất cả các gói. <command>apt-cache pkgnames</command> hiển thị danh sách tất cả các gói xuất hiện ít nhất một lần trong bộ nhớ cache.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>Frontends: <command>aptitude</command>, <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>interfaces</secondary>
		</indexterm>
		 <para>
			APT là một chương trình C ++ có mã chủ yếu nằm trong thư viện chia sẻ <command>libapt-pkg</command>. Sử dụng một thư viện chia sẻ tạo điều kiện cho việc tạo ra các giao diện người dùng (front-end), vì mã có trong thư viện có thể dễ dàng sử dụng lại. Trong lịch sử, <command>apt-get</command> chỉ được thiết kế như là một thử nghiệm cho <command>libapt-pkg</command> nhưng nó đã có thành công vượt ngoài sự mong đợi.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> là một chương trình tương tác có thể được sử dụng trong chế độ bán đồ họa trên giao diện console. Bạn có thể duyệt qua danh sách các gói đã cài đặt và sẵn có, tìm kiếm tất cả các thông tin có sẵn, và chọn các gói cài đặt hoặc gỡ bỏ. Chương trình được thiết kế đặc biệt để sử dụng bởi các quản trị viên, do đó những hành vi mặc định của nó thông minh hơn câu lệnh<command>apt-get</command>, và giao diện của nó dễ hiểu hơn nhiều.
			</para>
			 <figure>
				<title>Trình quản lý gói <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Khi bắt đầu, <command>aptitude</command> hiển thị danh sách các gói được sắp xếp theo trạng thái (cài đặt, không cài đặt hoặc cài đặt nhưng không có trên các mirror - phần khác hiển thị các tác vụ, gói ảo và các gói mới xuất hiện gần đây trên các mirror). Để tạo thuận lợi cho việc duyệt theo chủ đề, có các chế độ xem khác. Trong mọi trường hợp, <command>aptitude</command> hiển thị một danh sách kết hợp các loại và gói trên màn hình. Danh mục được tổ chức thông qua cấu trúc cây, có thể mở hoặc đóng các chi nhánh tương ứng bằng các thẻ <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> và <keycombo><keycap>]</keycap></keycombo>.<keycombo><keycap>+</keycap></keycombo> nên được sử dụng để đánh dấu một gói cài đặt, <keycombo><keycap>-</keycap></keycombo> để đánh dấu nó để xóa và <keycombo><keycap>_</keycap></keycombo> để xóa nó (cần chú ý các phím này cũng có thể được sử dụng cho các danh mục, trong trường hợp đó các hành động tương ứng sẽ được áp dụng cho tất cả các Gói thuộc loại này). <keycombo><keycap>u</keycap></keycombo> cập nhật danh sách các gói sẵn có và <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> chuẩn bị nâng cấp hệ thống toàn cục. <keycombo><keycap>g</keycap></keycombo> chuyển sang chế độ xem tóm tắt về những thay đổi được yêu cầu (và gõ <keycombo><keycap>g</keycap></keycombo> một lần nữa sẽ áp dụng các thay đổi), và <keycombo><keycap>q</keycap></keycombo> thoát khỏi chế độ xem hiện tại. Nếu bạn đang ở chế độ xem ban đầu, điều này sẽ đóng <command>aptitude</command> một cách có hiệu quả.
			</para>
			 <sidebar> <title><emphasis>TÀI LIỆU</emphasis> <command>aptitude</command></title>
			 <para>
				Phần này không đề cập chi tiết hơn về việc sử dụng <command>aptitude</command>, nó tập trung vào việc cung cấp cho bạn một bộ công cụ thiết yếu để sử dụng. <command>aptitude</command> có tài liệu khá chi tiết và chúng tôi khuyên bạn sử dụng tài liệu hướng dẫn hoàn chỉnh của nó có sẵn trong gói <emphasis role="pkg">aptitude-doc-en</emphasis> (xem <filename>/usr/share/doc/aptitude/html/en/index.html</filename>).
			</para>
			 </sidebar> <para>
				Để tìm kiếm một gói, bạn có thể gõ <keycombo><keycap>/</keycap></keycombo>theo sau bởi một mẫu tìm kiếm. Mẫu này phù hợp với tên của gói, nhưng cũng có thể được áp dụng cho mô tả (nếu trước bởi <literal>~d</literal>), đến phần (với <literal>~s</literal>) hoặc các đặc điểm tìm kiếm khác được nêu cụ thể trong tài liệu. Các mẫu tương tự có thể dùng để lọc danh sách các gói được hiển thị: gõ phím <keycombo><keycap>l</keycap></keycombo> (như trong <foreignphrase>limit</foreignphrase>) và nhập mẫu.
			</para>
			 <para>
				Quản lý “cờ tự động“ của các gói Debian (xem <xref linkend="sect.automatic-tracking" />) khá dễ dàng với <command>aptitude</command>. Bạn có thể duyệt qua danh sách các gói được cài đặt và đánh dấu các gói như là tự động với <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> hoặc để xóa đánh dấu bằng khóa <keycombo><keycap>m</keycap></keycombo>. “Gói tự động“ được hiển thị với chữ “A“ trong danh sách các gói. Tính năng này cũng cung cấp một cách đơn giản để hình dung các gói được sử dụng trên máy mà không cần có tất cả các thư viện và gói phụ thuộc mà bạn không thực sự quan tâm. Mẫu liên quan có thể được sử dụng với <keycombo><keycap>l</keycap></keycombo> (để kích hoạt chế độ lọc) là <literal>~ i!~M</literal>. Nó chỉ định rằng bạn chỉ muốn xem các gói đã cài đặt (<literal>~i</literal>) không được đánh dấu là tự động (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>CÔNG CỤ</emphasis> Sử dụng <command>aptitude</command> trên giao diện dòng lệnh</title>
			 <para>
				Hầu hết các tính năng của <command>aptitude</command> đều có thể truy cập thông qua giao diện tương tác cũng như qua các dòng lệnh. Những dòng lệnh này sẽ quen thuộc với người dùng thường xuyên với câu lệnh <command>apt-get</command> và <command>apt-cache</command>.
			</para>
			 <para>
				Các tính năng tiên tiến của <command>aptitude</command> cũng có sẵn trên dòng lệnh. Bạn có thể sử dụng các mẫu tìm kiếm gói giống như trong phiên bản tương tác. Ví dụ, nếu bạn muốn dọn dẹp danh sách các gói được cài đặt theo cách thủ công, và nếu bạn biết rằng không có chương trình cài đặt cục bộ nào yêu cầu bất kỳ thư viện cụ thể nào hoặc các mô đun Perl, bạn có thể đánh dấu các gói tương ứng là tự động bằng một lệnh:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				Ở đây, bạn có thể thấy rõ sức mạnh của hệ thống tìm kiếm theo mẫu tìm kiếm của <command>aptitude</command>, cho phép lựa chọn ngay tất cả các gói trong phần <literal>libs</literal> và <literal>perl</literal>.
			</para>
			 <para>
				Hãy cẩn thận, nếu một số gói được đánh dấu là tự động và nếu không có gói khác phụ thuộc vào chúng, chúng sẽ được gỡ bỏ ngay lập tức (sau khi có yêu cầu xác nhận).
			</para>
			 </sidebar> <section>
				<title>Quản lý Khuyến cáo, Đề xuất và Nhiệm vụ</title>
				 <para>
					Một tính năng thú vị khác của <command>aptitude</command> là nó tôn trọng các đề xuất giữa các gói trong khi vẫn cho phép người dùng lựa chọn không cài đặt chúng theo từng trường hợp. Ví dụ: gói <emphasis role="pkg">gnome</emphasis> đề xuất <emphasis role="pkg">gdebi</emphasis> (trong số nhiều đề xuất khác). Khi bạn chọn gói trước để cài đặt, gói thứ hai cũng sẽ được chọn (và được đánh dấu là tự động nếu chưa được cài đặt trên hệ thống). Gõ <keycombo><keycap>g</keycap></keycombo> sẽ hiển thị rõ ràng: <emphasis role="pkg">gdebi</emphasis> xuất hiện trên màn hình tóm tắt các hành động đang chờ xử lý trong danh sách các gói được cài đặt tự động để thỏa mãn sự phụ thuộc. Tuy nhiên, bạn có thể quyết định không cài đặt nó bằng cách bỏ chọn nó trước khi thao tác xác nhận.
				</para>
				 <para>
					Lưu ý rằng tính năng theo dõi đề xuất này không áp dụng cho việc nâng cấp. Ví dụ: nếu một phiên bản mới của <emphasis role="pkg">gnome</emphasis> đề xuất một gói mà nó không được khuyến cáo trước đây, gói sẽ không được đánh dấu để cài đặt. Tuy nhiên, nó sẽ được liệt kê trên màn hình nâng cấp để quản trị viên vẫn có thể chọn nó để cài đặt.
				</para>
				 <para>
					Các đề xuất giữa các gói cũng được xem xét, nhưng sẽ phù hợp với tình trạng cụ thể của chúng. Ví dụ: vì <emphasis role="pkg">gnome</emphasis> gợi ý <emphasis role="pkg">dia-gnome</emphasis>, gói thứ hai sẽ được hiển thị trên màn hình tóm tắt các hành động đang chờ xử lý (trong phần gói đề xuất bởi các gói khác). Bằng cách này, nó có thể nhìn thấy được và quản trị viên có thể quyết định có nên đưa gợi ý ​​vào tài khoản hay không. Vì nó chỉ là một đề xuất và không phải là một sự phụ thuộc hay một đề nghị, gói sẽ không được chọn một cách tự động - lựa chọn của nó đòi hỏi sự can thiệp bằng tay từ người sử dụng (vì vậy gói sẽ không được đánh dấu là tự động).
				</para>
				 <para>
					Cũng với tinh thần đó, hãy nhớ rằng <command>aptitude</command> sử dụng thông minh khái niệm về nhiệm vụ. Vì các tác vụ được hiển thị dưới dạng danh mục trong các màn hình của các danh sách gói, bạn có thể chọn một tác vụ đầy đủ để cài đặt hoặc gỡ bỏ, hoặc duyệt qua danh sách các gói được bao gồm trong tác vụ để chọn một tập con nhỏ hơn.
				</para>

			</section>
			 <section>
				<title>Thuật toán Solver tốt hơn</title>
				 <para>
					Để kết luận phần này, hãy chú ý rằng <command>aptitude</command> có các thuật toán phức tạp hơn so với <command>apt-get</command> khi giải quyết các tình huống khó khăn. Khi một loạt hành động được yêu cầu và khi những hành động kết hợp này dẫn đến một hệ thống không liên kết, <command>aptitude</command> đánh giá một số kịch bản có thể và trình bày chúng theo thứ tự giảm liên quan. Tuy nhiên, các thuật toán này không phải là không sai sót. May mắn thay, luôn có khả năng tự chọn hành động để thực hiện. Khi hành động hiện tại đã chọn dẫn đến các mâu thuẫn, phần trên của màn hình cho thấy một số gói “bị hỏng“ (và bạn có thể điều hướng trực tiếp đến các gói đó bằng cách nhấn <keycombo><keycap>b</keycap></keycombo>). Sau đó có thể tự xây dựng một giải pháp cho các vấn đề. Cụ thể, bạn có thể truy cập vào các phiên bản có sẵn khác bằng cách đơn giản chọn gói có <keycombo><keycap>Enter</keycap></keycombo>. Nếu lựa chọn một trong các phiên bản này giải quyết được vấn đề, bạn nên sử dụng chúng. Khi số gói bị hỏng bị giảm xuống, bạn có thể đi tới màn hình tóm tắt các hành động đang chờ xử lý để kiểm tra lần cuối trước khi áp dụng chúng.
				</para>
				 <sidebar> <title><emphasis>GHI CHÚ</emphasis> nhật ký của <command>aptitude</command></title>
				 <para>
					Giống <command>dpkg</command>, <command>aptitude</command> giữ dấu vết các hành động được thực hiện trong tệp nhật ký của nó (<filename>/var/log/aptitude</filename>). Tuy nhiên, vì cả hai lệnh làm việc ở một mức độ rất khác nhau, bạn không thể tìm thấy cùng một thông tin trong các bản ghi tương ứng của chúng. Trong khi <command>dpkg</command> ghi lại tất cả các hoạt động được thực hiện trên các gói riêng lẻ từng bước, <command>aptitude</command> cho phép xem rộng hơn các hoạt động cấp cao như nâng cấp toàn hệ thống.
				</para>
				 <para>
					Lưu ý, tệp tin ghi lại chỉ chứa một bản tóm tắt các hoạt động được thực hiện bởi <command>aptitude</command>. Nếu các giao diện khác (hoặc thậm chí là <command>dpkg</command>) đôi khi được sử dụng, nhật ký của <command>aptitude</command> sẽ chỉ chứa một phần của các hoạt động, vì vậy bạn không thể chỉ dựa vào nó để xây dựng một lịch sử đáng tin cậy của hệ thống.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> là một trình quản lý gói đồ hoạ cho Debian có giao diện đồ họa rõ ràng và hiệu quả dựa trên GTK + / GNOME. Nhiều bộ lọc sẵn sàng được sử dụng của nó cho phép truy cập nhanh vào các gói mới có sẵn, các gói đã cài đặt, các gói có thể nâng cấp, các gói đã lỗi thời, v.v. Nếu bạn duyệt qua các danh sách này, bạn có thể chọn các hoạt động được thực hiện trên các gói (cài đặt, nâng cấp, xóa, tẩy); Các hoạt động này không được thực hiện ngay lập tức, nhưng đưa vào một danh sách công việc. Một nhấp chuột duy nhất sau đó xác nhận các hoạt động, và chúng sẽ được thực hiện trong một lần.
			</para>
			 <figure>
				<title><command>synaptic</command> Trình quản lý gói</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>Kiểm tra Tính xác thực Gói</title>
		 <indexterm>
			<primary>Gói</primary>
			<secondary>kiểm tra xác thực</secondary>
		</indexterm>
		 <indexterm>
			<primary>Gói</primary>
			<secondary>niêm phong</secondary>
		</indexterm>
		 <indexterm>
			<primary>Gói</primary>
			<secondary>chữ ký</secondary>
		</indexterm>
		 <indexterm>
			<primary>chữ ký</primary>
			<secondary>chữ ký gói</secondary>
		</indexterm>
		 <indexterm>
			<primary>xác thực</primary>
			<secondary>xác thực gói</secondary>
		</indexterm>
		 <para>
			Vấn đề an ninh rất quan trọng đối với các quản trị viên của Falcot Corp. Theo đó, họ cần đảm bảo rằng họ chỉ cài đặt các gói được bảo đảm đến từ Debian mà không bị giả mạo trên đường đi. Một máy tính cracker có thể cố gắng thêm mã nguy hiểm vào một gói hợp pháp khác. Một gói như vậy, nếu được cài đặt, có thể làm bất cứ điều gì mà nó được thiết kế để làm, bao gồm cả việc tiết lộ mật khẩu hoặc thông tin bí mật. Để phá vỡ nguy cơ này, Debian cung cấp một con dấu chứng minh giả mạo để đảm bảo - khi cài đặt - một gói thực sự đến từ người quản lý chính thức và không bị một bên thứ ba sửa đổi.
		</para>
		 <para>
			Con dấu này hoạt động với một chuỗi các bảng mã mật mã và một chữ ký. Tệp đã ký là tệp <filename>Release</filename> do các Mirror của Debian cung cấp. Nó chứa một danh sách các tập tin <filename>Packages</filename> (bao gồm cả các dạng nén của chúng, <filename>Packages.gz</filename> và <filename>Packages.xz</filename>, và các phiên bản gia tăng), cùng với MD5, SHA1 và SHA256 băm của chúng, đảm bảo rằng các tập tin này không bị giả mạo. Các tệp tin <filename>Packages</filename> này chứa một danh sách các gói Debian có sẵn trên gương, cùng với các tệp băm của chúng, đảm bảo rằng lần lượt các nội dung của các gói cũng không bị thay đổi.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			Các khóa tin cậy được quản lý bằng lệnh <command>apt-key</command> tìm thấy trong gói <emphasis role="pkg">apt</emphasis>. Chương trình này duy trì khoá chính của khóa công khai GnuPG được sử dụng để xác minh chữ ký trong tệp <filename>Release.gpg</filename> có sẵn trên Mirror. Nó có thể được sử dụng để thêm các khóa mới bằng tay (khi cần Mirror không chính thức). Nói chung, chỉ cần các khóa Debian chính thức. Các khóa này được tự động cập nhật bởi gói <emphasis role="pkg">debian-archive-keyring</emphasis> (đặt cặp khóa tương ứng trong <filename>/etc/apt/trusted.gpg.d</filename>). Tuy nhiên, cài đặt đầu tiên của gói cụ thể này đòi hỏi sự thận trọng: ngay cả khi gói được ký kết giống như bất kỳ tệp khác, chữ ký không thể được xác minh bên ngoài. Do đó, các quản trị viên cẩn trọng nên kiểm tra dấu vân tay của chìa khoá nhập trước khi tin tưởng họ để cài đặt các gói mới:
		</para>
		 
<screen role="scale"></screen>
		 <sidebar> <title><emphasis>TRONG THỰC HÀNH</emphasis> Thêm khoá tin cậy</title>
		 <indexterm>
			<primary>trusted key</primary>
		</indexterm>
		 <indexterm>
			<primary>key</primary>
			<secondary>Các khóa xác thực của APT</secondary>
		</indexterm>
		 <para>
			Khi mã nguồn gói của bên thứ ba được thêm vào tệp tin <filename>sources.list</filename>, APT cần được tin cậy để tin tưởng vào khoá xác thực GPG tương ứng (nếu không sẽ tiếp tục nhắc nhở rằng nó không thể đảm bảo tính xác thực của các gói đến từ kho đó) . Bước đầu tiên là cần có để có được khoá công khai. Thông thường thì khoá sẽ được cung cấp dưới dạng một tệp văn bản nhỏ, chúng ta sẽ gọi là <filename>key.asc</filename> trong các ví dụ sau.
		</para>
		 <para>
			Để thêm khóa vào chuôi khoá tin cậy, quản trị viên có thể chạy <command>apt-key add &lt; key.asc</command>. Một cách khác là sử dụng giao diện đồ hoạ <command>synaptic</command>: thẻ “Xác thực“ trong thẻ <menuchoice><guimenu>Settings</guimenu> <guisubmenu>Repositories</guisubmenu></menuchoice> cung cấp khả năng nhập một khóa từ tệp <filename>key.asc</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			Đối với những người muốn một ứng dụng chuyên dụng và chi tiết hơn về các khóa tin cậy, bạn có thể sử dụng <command>gui-apt-key</command> (trong cùng một gói), một giao diện đồ họa nhỏ quản lý khóa tin cậy.
		</para>
		 </sidebar> <para>
			Một khi các khóa thích hợp nằm trong chùm khóa, APT sẽ kiểm tra các chữ ký trước bất kỳ hoạt động nguy hiểm nào để các kết thúc phía trước hiển thị một cảnh báo nếu được yêu cầu cài đặt một gói mà tính xác thực không thể xác định được.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>Nâng cấp từ bản phân phối ổn định đến kế tiếp</title>
		 <para>
			Một trong những tính năng nổi tiếng nhất của Debian là khả năng nâng cấp một hệ thống được cài đặt từ một bản phát hành ổn định sang một phiên bản tiếp theo: <foreignphrase>dist-upgrade</foreignphrase> - một cụm từ nổi tiếng - đã đóng góp phần lớn cho danh tiếng của dự án. Với một vài biện pháp phòng ngừa, việc nâng cấp máy tính chỉ có thể mất vài phút, hoặc vài phút, tùy thuộc vào tốc độ tải xuống từ các kho gói.
		</para>
		 <section>
			<title>Thủ tục Khuyến cáo</title>
			 <para>
				Vì Debian đã có thời gian để phát triển giữa các bản phát hành ổn định nên bạn nên đọc ghi chú phát hành trước khi nâng cấp.
			</para>
			 <sidebar> <title><emphasis>KIẾN THỨC CƠ BẢN</emphasis> Ghi chú phát hành</title>
			 <para>
				Các lưu ý phát hành cho một hệ điều hành (và nói chung là cho bất kỳ phần mềm nào) là một tài liệu tổng quan về phần mềm, với một số chi tiết liên quan đến đặc thù của một phiên bản. Các tài liệu nói chung ngắn gọn so với tài liệu đầy đủ, và chúng thường liệt kê các tính năng đã được giới thiệu kể từ phiên bản trước đó. Nó cũng cung cấp chi tiết về thủ tục nâng cấp, cảnh báo cho người sử dụng các phiên bản trước, và đôi khi là danh sách các lỗi.
			</para>
			 <para>
				Ghi chú phát hành có sẵn trên mạng: các ghi chú phát hành cho bản phát hành ổn định hiện tại có URL dành riêng, trong khi các ghi chú phát hành cũ hơn có thể được tìm thấy với tên mã của chúng: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/wheezy/releasenotes" />
			</para>
			 </sidebar> <para>
				Trong phần này, chúng ta sẽ tập trung vào việc nâng cấp hệ thống <emphasis role="distribution">Wheezy</emphasis> lên <emphasis role="distribution">Jessie</emphasis>. Đây là một hoạt động chủ yếu trên một hệ thống; Do đó, nó không bao giờ 100% không có lỗi , và không nên thực hiện trước khi tất cả các dữ liệu quan trọng chưa được sao lưu.
			</para>
			 <para>
				Một thói quen tốt khác làm cho việc nâng cấp dễ dàng hơn (và ngắn hơn) là làm sạch các gói đã cài đặt của bạn và chỉ giữ những gói cần thiết. Các công cụ hữu ích để làm bao gồm <command>aptitude</command>, <command>deborphan</command> và <command>debfoster</command> (xem <xref linkend="sect.automatic-tracking" />). Ví dụ: bạn có thể sử dụng lệnh sau và sau đó sử dụng chế độ tương tác của <command>aptitude</command> để kiểm tra kỹ và điều chỉnh theo lịch trình xóa:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Bây giờ đến phần nâng cấp chính. Trước tiên, bạn cần thay đổi tệp <filename>/etc/apt/sources.list</filename> để cho APT lấy gói của nó từ <emphasis role="distribution">Jessie</emphasis> thay vì <emphasis role="distribution">Wheezy</emphasis>. Nếu tập tin chỉ chứa các tham chiếu đến <emphasis role="distribution">Stable</emphasis> thay vì tên mã rõ ràng, sự thay đổi thậm chí không bắt buộc, vì <emphasis role="distribution">Stable</emphasis> luôn đề cập đến phiên bản phát hành mới nhất của Debian. Trong cả hai trường hợp, phải làm mới cơ sở dữ liệu của gói có sẵn (với lệnh <command>apt update</command> hoặc nút làm mới trong <command>synaptic</command>).
			</para>
			 <para>
				Khi những mã nguồn gói mới này được đăng ký, trước tiên bạn nên làm một nâng cấp tối thiểu với <command>apt upgrade</command>. Bằng cách nâng cấp theo hai bước, chúng ta sẽ giảm bớt công việc của các công cụ quản lý gói và thường đảm bảo rằng chúng ta có các phiên bản mới nhất, có thể đã tích lũy các bản sửa lỗi và cải tiến cần thiết để hoàn tất việc nâng cấp bản phân phối đầy đủ.
			</para>
			 <para>
				Sau khi nâng cấp lần đầu tiên được thực hiện, đó là thời gian để tự quản lý bản nâng cấp, hoặc với <command>apt full-upgrade</command>, <command>aptitude</command> hoặc <command>synaptic</command>. Bạn nên cẩn thận kiểm tra các hành động được đề xuất trước khi áp dụng: bạn có thể muốn thêm gói đề xuất hoặc bỏ chọn gói chỉ được đề nghị và được biết là không hữu ích. Trong bất kỳ trường hợp nào, giao diện người dùng phải có một kịch bản kết thúc bằng một hệ thống <emphasis role="distribution">Jessie</emphasis> mạch lạc và cập nhật. Sau đó, tất cả những gì bạn cần làm là chờ đợi trong khi các gói cần thiết được tải xuống, trả lời các câu hỏi của Debconf về các tệp cấu hình được chỉnh sửa cục bộ và ngồi đợi trong khi APT thực hiện nhiệm vụ cao cả của nó.
			</para>

		</section>
		 <section>
			<title>Xử lý sự cố sau khi nâng cấp</title>
			 <para>
				Mặc dù những nỗ lực tốt nhất của người quản lý Debian, một nâng cấp hệ thống lớn không phải lúc nào cũng trôi chảy như bạn mong muốn. Phiên bản phần mềm mới có thể không tương thích với các phiên bản trước (ví dụ, hành vi mặc định của họ hoặc định dạng dữ liệu của họ có thể đã thay đổi). Ngoài ra, một số lỗi có thể trượt qua các vết nứt mặc dù giai đoạn thử nghiệm luôn đi trước một bản phát hành Debian.
			</para>
			 <para>
				Để dự đoán một số vấn đề này, bạn có thể cài đặt gói <emphasis role="pkg">apt-listchanges</emphasis>, hiển thị thông tin về các sự cố có thể xảy ra khi bắt đầu nâng cấp gói. Thông tin này do các nhà bảo trì gói tin lập và đưa vào tệp tin <filename>/usr/share/doc/<replaceable>package</replaceable>/NEWS.Debian</filename> vì lợi ích của người dùng. Đọc các tệp này (có thể thông qua <emphasis role="pkg">apt-listchanges</emphasis>) sẽ giúp bạn tránh những sự trục trặc bất ngờ.
			</para>
			 <para>
				Đôi khi bạn có thể thấy rằng phiên bản mới của một phần mềm không hoạt động. Điều này thường xảy ra nếu ứng dụng không phải là đặc biệt phổ biến và chưa được kiểm tra đủ; Cập nhật vào phút chót cũng có thể đưa ra các hồi quy chỉ được tìm thấy sau khi phát hành ổn định. Trong cả hai trường hợp, điều đầu tiên cần làm là xem hệ thống theo dõi lỗi tại <literal>https: //bugs.debian.org/<replaceable>package</replaceable></literal> và kiểm tra xem vấn đề đã được báo cáo hay chưa. Nếu không, bạn nên tự mình báo cáo với <command>reportbug</command>. Nếu nó đã được biết, báo cáo lỗi và các thông điệp liên quan thường là một nguồn thông tin tuyệt vời liên quan đến lỗi:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						Đôi khi một bản vá đã tồn tại, và nó có sẵn trên báo cáo lỗi; Bạn có thể biên dịch lại một phiên bản cố định của gói bị hỏng cục bộ(xem <xref linkend="sect.rebuilding-package" />);
					</para>

				</listitem>
				 <listitem>
					<para>
						Trong một số trường hợp khác, người dùng có thể đã tìm ra giải pháp cho vấn đề và chia sẻ thông tin chi tiết về vấn đề này trong bài trả lời của họ cho báo cáo;
					</para>

				</listitem>
				 <listitem>
					<para>
						Trong các trường hợp khác, một gói cố định có thể đã được chuẩn bị và công khai bởi người bảo trì.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Tùy thuộc vào mức độ nghiêm trọng của lỗi, một phiên bản mới của gói có thể được chuẩn bị đặc biệt cho một bản sửa đổi mới của bản phát hành ổn định. Khi điều này xảy ra, gói cố định được tạo sẵn trong phần <literal>proposed-updates</literal> của các mirror của Debian (xem <xref linkend="sect.proposed-updates" />). Mục tương ứng có thể được tạm thời thêm vào tệp tin <filename>sources.list</filename> và các gói cập nhật có thể được cài đặt với <command>apt</command> hoặc <command>aptitude</command>.
			</para>
			 <para>
				Đôi khi gói cố định không có sẵn trong phần này bởi vì nó đang chờ phê duyệt bởi Nhà quản lý phát hành phiên bản ổn định. Bạn có thể xác minh nếu có trường hợp đó trên trang web của họ. Các gói liệt kê không có sẵn, nhưng ít nhất bạn biết rằng quá trình xuất bản đang được tiến hành. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>Đảm bảo một hệ thống luôn cập nhật</title>
		 <para>
			Bản phân phối Debian rất năng động và thay đổi liên tục. Hầu hết các thay đổi đều có trong các phiên bản <emphasis role="distribution">Testing</emphasis> và <emphasis role="distribution">Unstable</emphasis>, nhưng ngay cả <emphasis role="distribution">Stable</emphasis> cũng được cập nhật theo thời gian, chủ yếu dành cho các bản sửa lỗi liên quan đến bảo mật. Cho dù phiên bản nào của Debian đang chạy, luôn cố gắng đảm bảo cho nó được cập nhật, để bạn có thể có được lợi ích của những tiến triển mới nhất và các bản sửa lỗi.
		</para>
		 <para>
			Mặc dù có thể chạy thường xuyên một công cụ để kiểm tra các bản cập nhật có sẵn và chạy các nâng cấp, nhưng đó là một công việc lặp đi lặp lại rất tẻ nhạt, đặc biệt khi nó cần phải được thực hiện trên một số máy. May mắn thay, giống như nhiều nhiệm vụ lặp đi lặp lại, nó có thể được tự động hóa một phần, và một bộ công cụ đã được phát triển để làm điều đó.
		</para>
		 <para>
			Công cụ đầu tiên trong số này là <command>apticron</command>, trong gói có cùng tên. Công dụng chính của nó là chạy một kịch bản hàng ngày (thông qua <command>cron</command>). Kịch bản cập nhật danh sách các gói có sẵn, và nếu một số gói cài đặt không có trong phiên bản mới nhất, nó sẽ gửi một email với một danh sách các gói này cùng với những thay đổi đã được thực hiện trong các phiên bản mới. Rõ ràng, gói này chủ yếu nhắm tới người dùng của Debian <emphasis role="distribution">Stable</emphasis>, vì email hàng ngày sẽ rất dài cho các phiên bản nhịp độ nhanh hơn của Debian. Khi cập nhật có sẵn, <command>apticron</command> tự động tải chúng xuống. Nó không cài đặt chúng - quản trị viên vẫn sẽ làm điều đó - nhưng các gói đã được tải về và có sẵn cục bộ (trong bộ nhớ cache của APT) làm cho công việc nhanh hơn.
		</para>
		 <para>
			Các quản trị viên phụ trách một số máy tính sẽ đánh gía cao khi được thông báo về các nâng cấp chưa được nâng cấp, nhưng việc nâng cấp vẫn còn tẻ nhạt như trước, đó là nơi tập lệnh <filename>/etc/cron.daily/apt</filename> (trong gói <emphasis role="pkg">apt</emphasis>) Có ích. Tập lệnh này cũng được chạy hàng ngày (và không tương tác) bởi <command>cron</command>. Để kiểm soát hành vi của nó, sử dụng các biến cấu hình APT (do đó lưu trữ trong một tệp tin dưới <filename>/etc/apt/apt.conf.d /</filename>). Các biến số chính là:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						Tùy chọn này cho phép bạn xác định tần số (tính theo ngày) mà danh sách gói được làm mới. Người dùng có thể thực hiện lệnh mà không cần có biến này, vì <command>apticron</command> đã làm nhiệm vụ này.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						Tương tự, tùy chọn này cho thấy một tần số (tính theo ngày), lần này để tải các gói thực tế. Và có thể, người dùng <command>apticron</command> sẽ không cần nó.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						Tuỳ chọn này bao gồm một tính năng mà <command>apticron</command> không có. Nó kiểm soát các gói đã lỗi thời (những gì không được tham chiếu bởi bất kỳ phân phối nào nữa) được xóa khỏi bộ nhớ cache APT. Điều này giữ cho bộ nhớ cache APT ở một kích thước hợp lý và có nghĩa là bạn không cần phải lo lắng về nhiệm vụ đó.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						Khi tùy chọn này được kích hoạt, tập lệnh hàng ngày sẽ thực thi <command>unattended-upgrade</command> (từ gói <emphasis role="pkg">unattended-upgrades</emphasis>) - theo đề nghị của nó - có thể tự động hóa quá trình nâng cấp cho một số gói (theo mặc định nó chỉ cần đảm bảo cập nhật bảo mật, Có thể được tùy chỉnh trong <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Lưu ý rằng tùy chọn này có thể được thiết lập với sự trợ giúp của debconf bằng cách chạy <command>dpkg-reconfigure -plow unattended-upgrades</command>.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Các tùy chọn khác có thể cho phép bạn kiểm soát hành vi làm sạch bộ nhớ cache với độ chính xác hơn. Chúng không được liệt kê ở đây, nhưng chúng được mô tả trong tập lệnh <filename>/etc/cron.daily/apt</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			Những công cụ này làm việc rất tốt cho các máy chủ, nhưng người dùng máy tính để bàn thường thích một hệ thống tương tác hơn. Đó là lý do tại sao nhiệm vụ “Môi trường máy tính để bàn Debian“ cài đặt <emphasis role="pkg">gnome-packagekit</emphasis> (ít nhất khi bạn chọn GNOME làm môi trường máy tính để bàn). Nó cung cấp một biểu tượng trong khu vực thông báo của môi trường máy tính để bàn khi cập nhật có sẵn; Nhấp vào biểu tượng này sau đó chạy <command>gpk-update-viewer</command>, một giao diện đơn giản để thực hiện cập nhật. Bạn có thể duyệt qua các bản cập nhật khả dụng, đọc mô tả ngắn gọn về các gói có liên quan và các mục tương ứng <filename>changelog</filename> và chọn áp dụng bản cập nhật hay không theo từng trường hợp.
		</para>
		 <figure>
			<title>Nâng cấp với <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>Tự động nâng cấp</title>
		 <indexterm>
			<primary>nâng cấp</primary>
			<secondary>hệ thống tự động nâng cấp</secondary>
		</indexterm>
		 <indexterm>
			<primary>tự động nâng cấp</primary>
		</indexterm>
		 <para>
			Vì Falcot Corp có nhiều máy tính nhưng chỉ có giới hạn nhân lực, nên các quản trị viên cố gắng nâng cấp càng nhiều càng tốt. Các chương trình phụ trách các quá trình này do đó phải chạy mà không có sự can thiệp của con người.
		</para>
		 <section>
			<title>Cấu hình <command>dpkg</command></title>
			 <para>
				Như đã đề cập ở trên, <command>dpkg</command> có thể được tùy chọn không yêu cầu xác nhận khi thay thế tệp tin cấu hình (với tùy chọn <literal> - force-confdef --force-confold</literal>). Tương tác có thể có ba nguồn khác: một số đến từ chính APT, một số được quản lý bởi <command>debconf</command>, và một số xảy ra trên dòng lệnh do các tập lệnh cấu hình gói.
			</para>

		</section>
		 <section>
			<title>Cấu hình APT</title>
			 <para>
				Trường hợp của APT rất đơn giản: tùy chọn <literal>-y</literal> (hoặc <literal>--assum-yes</literal>) cho APT biết câu trả lời cho tất cả các câu hỏi là “có“.
			</para>

		</section>
		 <section>
			<title>Cấu hình <command>debconf</command></title>
			 <para>
				Trường hợp của <command>debconf</command> cần được cung cấp thêm chi tiết. Chương trình này đã được thiết kế để kiểm soát sự liên quan và số lượng của câu hỏi được hiển thị cho người dùng, cũng như cách chúng được hiển thị. Đó là lý do tại sao cấu hình yêu cầu một sự ưu tiên tối thiểu cho các câu hỏi; Chỉ những câu hỏi trên mức ưu tiên tối thiểu được hiển thị. <command>debconf</command> giả định câu trả lời mặc định (được xác định bởi người duy trì gói) đối với các câu hỏi mà nó quyết định bỏ qua.
			</para>
			 <para>
				Thành phần cấu hình có liên quan khác là giao diện được sử dụng bởi giao diện người dùng. Nếu bạn chọn <literal>noninteractive</literal> trong số các lựa chọn, tất cả tương tác người dùng sẽ bị vô hiệu hoá. Nếu một gói cố gắng hiển thị một lưu ý thông tin, nó sẽ được gửi tới quản trị viên qua email.
			</para>
			 <para>
				Để định cấu hình lại <command>debconf</command>, hãy sử dụng công cụ <command>dpkg-reconfigure</command> từ gói <emphasis role="pkg">debconf</emphasis>; Lệnh có liên quan là <command>dpkg-cấu hình lại debconf</command>. Lưu ý rằng các giá trị được cấu hình có thể được tạm thời ghi đè bằng các biến môi trường khi cần thiết (ví dụ: <varname>DEBIAN_FRONTEND</varname> điều khiển giao diện, như đã được ghi lại trong trang hướng dẫn sử dụng. <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry>).
			</para>

		</section>
		 <section>
			<title>Xử lý tương tác dòng lệnh</title>
			 <para>
				Nguồn cuối cùng của các tương tác, và hầu như cần phải có, là các tập lệnh cấu hình được chạy bởi <command>dpkg</command>. Không may là không có giải pháp tiêu chuẩn, và không có câu trả lời luôn luôn tốt nhất.
			</para>
			 <para>
				Cách tiếp cận phổ biến là để ngăn chặn các đầu vào tiêu chuẩn bằng cách chuyển hướng nội dung trống của <filename>/dev/null</filename> vào nó với <command><replaceable>command</replaceable> &lt;/dev/ null</command> hoặc để cung cấp cho nó với một số lượng bất tận các dòng mới. Không có phương pháp nào trong số này là 100% đáng tin cậy nhưng thường dẫn đến các câu trả lời mặc định đang được sử dụng, vì hầu hết các kịch bản đều xem xét việc thiếu câu trả lời như là sự chấp nhận giá trị mặc định.
			</para>

		</section>
		 <section>
			<title>Kết hợp Hoàn hảo</title>
			 <para>
				Bằng cách kết hợp các thành phần đã nêu, có thể thiết kế một kịch bản nhỏ nhưng đáng tin cậy có thể xử lý các nâng cấp tự động.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>Tập lệnh nâng cấp không tương tác</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade</programlisting>

			</example>
			 <sidebar> <title><emphasis>TRONG THỰC HÀNH</emphasis> Trường hợp của Falcot Corp</title>
			 <para>
				Các máy tính Falcot là một hệ thống không đồng nhất, với các máy có các chức năng khác nhau. Do đó, các quản trị viên sẽ chọn giải pháp phù hợp nhất cho mỗi máy tính.
			</para>
			 <para>
				Trong thực tế, các máy chủ chạy <emphasis role="distribution">Jessie</emphasis> được cấu hình với sự kết hợp hoàn hảo ở trên và được cập nhật tự động. Chỉ những máy chủ quan trọng nhất (tường lửa, đối với trường hợp) được thiết lập với <command>apticron</command>, do đó việc nâng cấp luôn diễn ra dưới sự giám sát của quản trị viên.
			</para>
			 <para>
				Các máy trạm văn phòng trong các dịch vụ hành chính cũng chạy <emphasis role="distribution">Jessie</emphasis>, nhưng chúng được trang bị <emphasis role="pkg">gnome-packagekit</emphasis>, do đó người dùng tự kích hoạt bản nâng cấp. Lý do của quyết định này là nếu nâng cấp xảy ra mà không có hành động rõ ràng thì hành vi của máy tính có thể thay đổi bất ngờ, điều này có thể gây nhầm lẫn cho người dùng chính.
			</para>
			 <para>
				Trong phòng thí nghiệm, một số máy tính sử dụng <emphasis role="distribution">Testing</emphasis> - để tận dụng các phiên bản phần mềm mới nhất - cũng không được nâng cấp tự động. Quản trị viên chỉ cấu hình APT để chuẩn bị nâng cấp nhưng không ban hành; Khi họ quyết định nâng cấp (thủ công) thì sẽ tránh được những phần tẻ nhạt trong danh sách gói tải xuống và gói tải xuống và quản trị viên có thể tập trung vào phần thực sự hữu ích.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>Tìm gói</title>
		 <para>
			Với số lượng lớn và ngày càng tăng của phần mềm trong Debian, xuất hiện một nghịch lý: Debian thường có một công cụ cho hầu hết các tác vụ, nhưng công cụ này rất khó có thể tìm thấy trong vô số các gói khác. Việc thiếu các cách thích hợp để tìm kiếm (và để tìm) đúng công cụ từ lâu đã là một vấn đề. May mắn thay, vấn đề này đã gần như hoàn toàn được giải quyết.
		</para>
		 <para>
			Tìm kiếm đơn giản nhất là tìm kiếm một tên gói chính xác. Nếu <command>apt hiển thị <replaceable>package</replaceable></command> trả về kết quả, thì gói đó tồn tại. Tuy nhiên, điều này đòi hỏi phải biết hoặc thậm chí đoán tên gói, không phải lúc nào cũng có thể.
		</para>
		 <sidebar> <title><emphasis>MẸO</emphasis> Quy ước đặt tên gói</title>
		 <para>
			Một số loại gói được đặt tên theo một quy ước đặt tên thông thường; Biết quy ước đôi khi có thể cho phép bạn đoán tên gói chính xác. Ví dụ, đối với mô đun Perl, quy ước nói rằng một mô-đun được gọi là <literal>XML::Handler::Composer</literal> phải được đóng gói dưới dạng <emphasis role="pkg">libxml-handler-composer-perl</emphasis>. Thư viện cho phép sử dụng hệ thống <command>gconf</command> từ Python được đóng gói như <emphasis role="pkg">python-gconf</emphasis>. Tuy nhiên không thể định nghĩa một lược đồ đặt tên chung chung cho tất cả các gói, mặc dù người bảo trì gói thường cố gắng tuân theo sự lựa chọn của các nhà phát triển gói đó.
		</para>
		 </sidebar> <para>
			Mẫu tìm kiếm thành công hơn một chút là tìm kiếm văn bản thuần bằng tên gói, nhưng nó vẫn còn rất hạn chế. Bạn thường có thể tìm thấy kết quả bằng cách tìm kiếm mô tả gói: vì mỗi gói có một mô tả chi tiết hơn hoặc thêm vào tên gói của nó, một tìm kiếm từ khóa trong những mô tả này thường rất hữu ích. <command>apt-cache</command> và <command>axi-cache</command> là những công cụ được lựa chọn cho loại tìm kiếm này; Ví dụ, <command>apt-cache search video</command> sẽ trả lại danh sách tất cả các gói có tên hoặc mô tả chứa từ khóa “video“.
		</para>
		 <para>
			Đối với tìm kiếm phức tạp hơn, cần có một công cụ mạnh hơn như <command>aptitude</command>. <command>aptitude</command> cho phép bạn tìm kiếm theo một biểu thức logic dựa trên các trường dữ liệu meta của gói. Ví dụ: lệnh sau đây tìm kiếm các gói có tên chứa <literal>kino</literal>, mô tả chứa <literal>video</literal> và tên của người quản trị có chứa <literal>paul</literal>:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
State: not installed
Version: 1.3.4-2.1+b1
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8,472 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=
         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=
         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=
         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,
         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=
         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),
         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=
         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),
         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),
         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),
         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,
         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus
Replaces: kino-dvtitler, kino-timfx, kinoplus
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV
 camcorders. This program uses many keyboard commands for fast navigating and
 editing inside the movie. 
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly
 distributed as separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/

Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::x11, role::program, scope::application, suite::gnome,
      uitoolkit::gtk, use::editing, use::learning, works-with::video,
      x11::application</screen>
		 <para>
			Tìm kiếm chỉ trả về một gói, <emphasis role="pkg">kino</emphasis>, đáp ứng cả ba tiêu chí.
		</para>
		 <para>
			Ngay cả những tìm kiếm nhiều tiêu chí này cũng khá khó sử dụng, điều này lý giải tại sao chúng không được sử dụng nhiều. Do đó, một hệ thống gắn thẻ mới đã được phát triển và nó cung cấp cách mới để tìm kiếm. Gói được cho các thẻ cung cấp sự phân loại theo nhiều chủ đề, được gọi là “phân loại dựa trên khía cạnh“. Trong trường hợp <emphasis role="pkg">kino</emphasis> ở trên, các thẻ của gói cho thấy rằng Kino là một phần mềm dựa trên nền Gnome hoạt động trên dữ liệu video và có mục đích chính là chỉnh sửa.
		</para>
		 <para>
			Việc duyệt qua phân loại này có thể giúp bạn tìm kiếm một gói hàng tương ứng với các nhu cầu đã biết; Ngay cả khi nó trả về một số lượng truy cập (vừa phải), phần còn lại của tìm kiếm có thể được thực hiện bằng tay. Để làm điều đó, bạn có thể sử dụng mẫu tìm kiếm <literal>~G</literal> trong <command>aptitude</command>, nhưng có thể dễ dàng điều hướng trang web nơi quản lý thẻ: <ulink type="block" url="http://debtags.alioth.debian.org/cloud/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>tag</primary>
		</indexterm>
		 <para>
			Chọn thẻ <literal>works-with:: video</literal> và <literal>use :: editing</literal> mang lại một số ít các gói, bao gồm trình biên tập video <emphasis role="pkg">kino</emphasis> và <emphasis role="pkg">pitivi</emphasis>. Hệ thống phân loại này chắc chắn sẽ được sử dụng ngày càng nhiều, và quản lý gói sẽ dần dần cung cấp các giao diện tìm kiếm hiệu quả dựa trên nó.
		</para>
		 <para>
			Tóm lại, công cụ tốt nhất cho công việc phụ thuộc vào sự phức tạp của tìm kiếm mà bạn muốn thực hiện:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<command>apt-cache</command> chỉ cho phép tìm kiếm trong các tên gói và mô tả, rất tiện lợi khi tìm kiếm một gói cụ thể phù hợp với một vài từ khóa mục tiêu;
				</para>

			</listitem>
			 <listitem>
				<para>
					Khi các tiêu chí tìm kiếm cũng bao gồm các mối quan hệ giữa các gói hoặc các mô tả dữ liệu khác như tên của người duy trì, <command>synaptic</command> sẽ hữu ích hơn;
				</para>

			</listitem>
			 <listitem>
				<para>
					Khi cần tìm kiếm dựa trên thẻ, có thể sử dụng công cụ <command>packagesearch</command>, một giao diện đồ hoạ dành riêng cho việc tìm kiếm các gói có sẵn dọc theo một số tiêu chí (bao gồm tên của các tệp tin chứa trong đó). Để sử dụng trên dòng lệnh, <command>axi-cache</command> sẽ phù hợp hơn.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					Cuối cùng, khi các tìm kiếm liên quan đến các biểu thức phức tạp với các toán tử logic, công cụ được lựa chọn sẽ là cú pháp mẫu tìm kiếm của <command>aptitude</command>, nó khá mạnh mẽ mặc dù đôi khi không rõ ràng; Nó hoạt động trên cả hai chế độ dòng lệnh và chế độ tương tác.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

