<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="solving-problems">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-solving-problems.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>文書</keyword>
      <keyword>問題の解決</keyword>
      <keyword>ログファイル</keyword>
      <keyword>README.Debian</keyword>
      <keyword>マニュアル</keyword>
      <keyword>info</keyword>
    </keywordset>
  </chapterinfo>
  <title>問題の解決と関連情報の探索</title>
  <highlights>
    <para>管理者にとって最も重要な技能は、既知か未知かに関わらず、いかなる状況にも対処できる技能です。この章では遭遇した問題の原因を探し出すのにおそらく役立ついくつかの方法を紹介します。そうすれば、問題を解決できるようになるかもしれません。</para>
  </highlights>
  <section id="sect.documentation-sources">
    <title>情報源となる文書</title>
    <indexterm><primary>文書</primary></indexterm>

    <para>問題が起きた際に一体何が起きたのかを理解する前に、問題に関連しているプログラムがどのような役割を担っているかを理論的に知る必要があります。これを行う最良の方法はプログラムの文書を参照することです。しかし、それらの文書は数多くて広範囲に分散しているため、管理者は文書の置かれている場所をすべて知っておくべきです。</para>
    <section id="sect.manual-pages">
      <title>マニュアルページ</title>
      <indexterm><primary><command>man</command></primary></indexterm>
      <indexterm><primary><command>apropos</command></primary></indexterm>
      <indexterm><primary>マニュアルページ</primary></indexterm>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> <acronym>RTFM</acronym></title>
        <indexterm><primary><acronym>RTFM</acronym></primary></indexterm>

	<para><acronym>RTFM</acronym> という頭字語は「Read the F***ing Manual」を意味しますが、より敵意のない表現「Read the Fine Manual」に発展しました。このフレーズは新人の質問に (素っ気なく) 答える際に時々使われます。これはかなりぶっきらぼうなもので、文書を読んでなさそうな人に質問された時に感じる若干の苛立ちを表しています。この典型的な回答は、全く答えないか長々と腹を立てて答えるのに比べれば、より良いという人もいます (なぜなら、この回答は文書に探し求める情報が含まれていることを表しているからです)。</para>

	<para>どんな場合でも、もし誰かから「RTFM」と答えられたら、腹を立てないことが通常懸命です。なぜなら、RTFM という回答はあなたが厄介者と思われている可能性を意味するからです。努力して RTFM と言われないようにした方がよいでしょう。また、必要な情報がマニュアルに載っていない場合もあるでしょう。このような場合はなるべく最初の質問でこの点について触れておくべきでしょう。さらにフォーラムに質問を投稿する前に、情報を見つけるために自分が行ったさまざまな段階を示すべきです。Eric Raymond の指針に従うことは、最もよくある間違いを避け、有用な答えを得るために良い方法です。<ulink type="block" url="http://catb.org/~esr/faqs/smart-questions.html" /></para>
      </sidebar>

      <para>マニュアルページはどちらかと言えば素っ気なく見えるのですが、大量の不可欠な情報を含んでいます。それではマニュアルページを閲覧するコマンドを練習しましょう。単純に <command>man <replaceable>manual-page</replaceable></command> と打ってください。コマンドのマニュアルページは通常、文書を探しているコマンドと同じ名前で閲覧することが可能です。たとえば、<command>cp</command> コマンドで使えるオプションを学ぶには、シェルプロンプトで <command>man cp</command> コマンドを入力してください (補注<xref linkend="sidebar.shell" />を参照してください)。</para>

      
      <sidebar id="sidebar.shell">
        <title><emphasis>BACK TO BASICS</emphasis> シェル、コマンドラインインタプリタ</title>
        <indexterm><primary>コマンドラインインタプリタ</primary></indexterm>
        <indexterm><primary>シェル</primary></indexterm>

	<para>コマンドラインインタプリタは「シェル」とも呼ばれており、ユーザが入力するかスクリプトに書かれたコマンドを実行するプログラムです。対話型モードでは、シェルはプロンプトを表示します (プロンプトの末尾には、通常ユーザの場合 <literal>$</literal>、管理者の場合 <literal>#</literal> が付けられます)。この状態は新しいコマンドを読み取る準備ができたことを意味しています。シェルの使い方の基礎は<xref linkend="short-remedial-course" />で解説します。</para>

	<para>デフォルトであり最もよく使われているシェルは <command>bash</command> (Bourne Again SHell) ですが、他のシェルには <command>dash</command>、<command>csh</command>、<command>tcsh</command>、<command>zsh</command> などがあります。</para>

	<para>とりわけ注目すべきは、多くのシェルがプロンプトへの入力を補助する機能を備えている点です。たとえばコマンドやファイル名の補完 (補完は通常 <keycap>tab</keycap> キーを押すことで始動します) や以前のコマンドを再呼び出し (履歴管理) 機能を備えています。</para>
      </sidebar>

      <para>man ページはコマンドラインから呼び出すことができるプログラムに関する文書というだけでなく、設定ファイル、システムコール、C 言語ライブラリ関数、その他に関する文書も備えています。しばしば同じ名前が異なる分類で使われている場合があります。たとえば、シェルの <command>read</command> コマンドは <function>read</function> システムコールと同じ名前です。そんなわけで、マニュアルページは各分類にセクション番号を付けて整理されています。</para>
      <orderedlist>
        <listitem>
	  <para>第 1 セクションにはコマンドラインから実行できるコマンドに関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 2 セクションにはシステムコール (カーネルから提供される関数) に関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 3 セクションにはライブラリ関数 (システムライブラリから提供される関数) に関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 4 セクションにはデバイスに関する文書が含まれます (Unix 系システムには特別なファイルがあり、通常 <filename>/dev/</filename> ディレクトリに格納されています)。</para>
        </listitem>
        <listitem>
	  <para>第 5 セクションには設定ファイル (書式や規約) に関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 6 セクションにはゲームに関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 7 セクションには一連のマクロと標準化規約に関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 8 セクションにはシステム管理コマンドに関する文書が含まれます。</para>
        </listitem>
        <listitem>
	  <para>第 9 セクションにはカーネルルーチンに関する文書が含まれます。</para>
        </listitem>
      </orderedlist>

      <para>探しているマニュアルページのセクション番号を指定することも可能です。すなわち <function>read</function> システムコールに関する文書を見るには、<command>man 2 read</command> と入力してください。セクション番号を指定しなかった場合、指定した名前に関するマニュアルページが最初に見つかったセクションから内容が表示されます。そんなわけで、<command>man shadow</command> は <citerefentry><refentrytitle>shadow</refentrytitle><manvolnum>5</manvolnum></citerefentry> を表示します。なぜなら、<foreignphrase>shadow</foreignphrase> に関するマニュアルページは第 1 セクションから第 4 セクションの間に存在しないからです。</para>

      <sidebar>
        <title><emphasis>TIP</emphasis> <command>whatis</command></title>
        <indexterm><primary><command>whatis</command></primary></indexterm>

	<para>マニュアルページ全体は見たくないけれども、探しているものが正しいか確認するために短い説明文は見たいという場合、単純に <command>whatis <replaceable>command</replaceable></command> と入力してください。</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>whatis scp</userinput>
<computeroutput>scp (1)     - secure copy (remote file copy program)</computeroutput></screen>

	<para>ここで表示されている短い説明文はすべてのマニュアルページの最初に書かれている <emphasis>NAME</emphasis> 節に書かれています。</para>
      </sidebar>

      <para>もちろん、コマンドの名前を知らなければ、マニュアルページは役に立ちません。コマンドの名前がわからない場合に役立つのが <command>apropos</command> コマンドです。<command>apropos</command> コマンドはマニュアルページ内、正確に言うと短い説明文内を検索します。それぞれのマニュアルページは基本的に 1 行の要旨から始まります。<command>apropos</command> はマニュアルページの要旨にキーワードを含むプログラムのマニュアルページのリストを返します。キーワードをうまく選べば、必要なコマンドの名前を見つけることができるでしょう。</para>

      <example>
        <title><command>apropos</command> を使って <command>cp</command> を探す</title>

        <screen>
<computeroutput>$ </computeroutput><userinput>apropos "copy file"</userinput>
<computeroutput>cp (1)               - copy files and directories
cpio (1)             - copy files to and from archives
gvfs-copy (1)        - Copy files
gvfs-move (1)        - Copy files
hcopy (1)            - copy files from or to an HFS volume
install (1)          - copy files and set attributes
ntfscp (8)           - copy file to an NTFS volume.
</computeroutput></screen>
      </example>

      <sidebar>
        <title><emphasis>TIP</emphasis> リンクを追いかけながら閲覧</title>

	<para>多くのマニュアルページは通常最後に「SEE ALSO」節を設けています。「SEE ALSO」節では、類似するコマンドに関連する他のマニュアルページや外部文書を参照しています。最初の選択が最適でない場合、このようにして関連する文書を発見することが可能です。</para>
      </sidebar>

      <para><command>man</command> コマンドがマニュアルページを調べる唯一の方法というわけではありません。(KDE の) <command>konqueror</command> と (GNOME の) <command>yelp</command> プログラムも同じ用途に使うことが可能です。また、<command>man2html</command> パッケージが提供するウェブインターフェースもあり、ウェブブラウザからマニュアルページを閲覧することも可能です。<command>man2html</command> パッケージがインストールされているコンピュータで以下の URL を使ってください。<ulink type="block" url="http://localhost/cgi-bin/man/man2html" /></para>

      <para><command>man2html</command> ユーティリティを動かすにはウェブサーバが必要です。このため、<command>man2html</command> サービスをインストールするマシンは管理下にあるサーバの 1 台だけにするべきです。こうすることで、ローカルネットワークのユーザは全員 (非 Linux マシンでも) <command>man2html</command> サービスからの恩恵を受けることができますし、HTTP サーバを各ワークステーションにセットアップする必要がなくなります。<command>man2html</command> サービスをインストールしたマシンに他のネットワークからもアクセスできる場合、<command>man2html</command> サービスにアクセスできるのはローカルネットワークのユーザだけに制限することが望ましいです。</para>
      <indexterm><primary><command>man2html</command></primary></indexterm>

      <sidebar>
        <title><emphasis>DEBIAN POLICY</emphasis> 必要な man ページ</title>

	<para>Debian の提供するプログラムは必ずマニュアルページを備えています。上流開発者がマニュアルページを用意していない場合、Debian パッケージメンテナが少なくとも文書の原本の場所を読者に伝えるために最低限のページを書くのが普通です。</para>
      </sidebar>
    </section>
    <section>
      <title><emphasis>info</emphasis> 文書</title>
      <indexterm><primary><emphasis>info</emphasis></primary></indexterm>
      <indexterm><primary>GNU</primary><secondary>Info</secondary></indexterm>

      <para>これまでずっと GNU プロジェクトはほとんどのプログラムのマニュアルを <emphasis>info</emphasis> フォーマットで書き続けてきました。そのため、多くのマニュアルページでは対応する <emphasis>info</emphasis> 文書を参照することが求められています。<emphasis>info</emphasis> フォーマットにはいくつかの利点がありますが、<emphasis>info</emphasis> 文書を表示するためにデフォルトで用意されているプログラム (これは <command>info</command> と呼ばれています) は若干理解に苦労するものです。<command>info</command> の代わりに <command>pinfo</command> (<emphasis role="pkg">pinfo</emphasis> パッケージに含まれます) を使うのが賢明かもしれません。</para>
      <indexterm><primary><command>pinfo</command></primary></indexterm>

      <para><emphasis>info</emphasis> 文書は階層的な構造をしており、<command>pinfo</command> をパラメータなしで実行した場合、最初の階層から利用できるノードのリストが表示されます。通常、ノードには対応するコマンドの名前が付けられています。</para>

      <para><command>pinfo</command> でノード間を移動するには、矢印キーを使います。もう 1 つの方法として、グラフィカルブラウザを使うこともできます。これはずっとユーザフレンドリーな方法かもしれません。<emphasis>info</emphasis> 文書に対応するグラフィカルブラウザとして、再登場になりますが <command>konqueror</command> と <command>yelp</command> があります。さらに <command>info2www</command> はウェブインターフェースを提供します。<ulink type="block" url="http://localhost/cgi-bin/info2www" /></para>
      <indexterm><primary><command>info2www</command></primary></indexterm>

      <para><emphasis>info</emphasis> システムは <command>man</command> ページシステムと異なり翻訳に適さないシステムであるという点に注意してください。そんなわけで、<emphasis>info</emphasis> 文書はほとんど常に英語で書かれています。しかしながら、<command>pinfo</command> プログラムに対して存在しない <emphasis>info</emphasis> ページを表示するよう要求した場合、プログラムは同名の <emphasis>man</emphasis> ページを (存在すれば) 表示します。これは翻訳されているかもしれません。</para>
    </section>
    <section>
      <title>独自の文書</title>
      <indexterm><primary>文書</primary></indexterm>

      <para>各パッケージには独自の文書が含まれています。最も貧弱な文書しか持たないプログラムの場合でも、興味深く重要な情報を含む <filename>README</filename> ファイルは提供されています。<filename>README</filename> ファイルは <filename>/usr/share/doc/<replaceable>package</replaceable>/</filename> ディレクトリにインストールされます (ここで <replaceable>package</replaceable> はパッケージ名を示します)。<filename>README</filename> ファイルのサイズが著しく大きな場合、<filename>README</filename> ファイルはプログラムのメインパッケージに含まれないかもしれません。この場合、通常 <literal><replaceable>package</replaceable>-doc</literal> と名付けられた専用の文書パッケージに含まれています。メインパッケージは通常文書パッケージを推奨します。そうすれば、ユーザが簡単に文書を見つけられるからです。</para>
      <indexterm><primary><filename>README.Debian</filename></primary></indexterm>
      <indexterm><primary><filename>changelog.Debian.gz</filename></primary></indexterm>
      <indexterm><primary><filename>NEWS.Debian.gz</filename></primary></indexterm>

      <para><filename>/usr/share/doc/<replaceable>package</replaceable>/</filename> ディレクトリには Debian の配布するいくつかのファイルが含まれています。これらのファイルは、ソフトウェアを昔ながらの方法でインストールした場合と比較して、パッケージからインストールした場合に固有の特殊性および改良点を具体的に述べることで、<filename>README</filename> を補完しています。<filename>README.Debian</filename> ファイルには、Debian ポリシーに適合させるために行ったすべての変更が書かれています。<filename>changelog.Debian.gz</filename> ファイルには、パッケージに対して行われた変更履歴が書かれています。すなわち、このファイルは挙動が違う 2 つのインストール済みバージョンの間でどのような変更が行われたかを理解するのにとても役立ちます。最後に、<filename>NEWS.Debian.gz</filename> ファイルが含まれる場合があります。このファイルには、プログラムに対して行われた修正のうち、管理者に直接関わる可能性のある主な修正が書かれています。</para>
    </section>
    <section>
      <title>ウェブサイト</title>

      <para>多くの場合、フリーソフトウェアプログラムはソフトウェアを配布して開発者とユーザのコミュニティを作るためのウェブサイトを持っています。これらのサイトには、さまざまな形態で関連する情報がたくさん載せられています。ここで情報とは、公式文書、FAQ (よくある質問)、メーリングリストアーカイブなどです。多くの場合、あなたが直面するであろう問題は既に何度も質問されている問題です。このため、FAQ かメーリングリストアーカイブに問題に対する解決策があるかもしれません。関連するページを素早く発見するには、検索エンジンをうまく使いこなす (検索対象をそのプログラム専用のインターネットドメインまたはサブドメインに限定する) と非常に有益です。検索でヒットしたページ数が多すぎたり、検索結果に探しているものが含まれなければ、キーワード <userinput>debian</userinput> を追加することにより、検索結果を絞り込むか関連する情報に狙いを定めることが可能です。</para>

      <sidebar>
        <title><emphasis>TIPS</emphasis> エラーから解決策へ</title>

	<para>ソフトウェアが極めて特殊なエラーメッセージを返す場合、検索エンジンにそのままエラーメッセージを入力してください (メッセージは二重引用符 <literal>"</literal> で囲んでください。こうすることで、メッセージに含まれる単語を個別に検索するのではなく、メッセージ全体を検索します)。多くの場合、検索ヒットした 1 番目の結果から必要な答えが見つかるでしょう。</para>

	<para>一般的なエラーメッセージが返されることもあります。たとえば「Permission denied」などの場合です。「Permission denied」が返された場合、関連する要素 (ファイル、ユーザ ID、グループなど) のパーミッションを確認するのが最も良い方法です。</para>
      </sidebar>

      <para>ソフトウェアのウェブサイトのアドレスがわからない場合、さまざまな手段でそれを知ることができます。最初に、パッケージのメタ情報を表示して (<command>apt-cache show <replaceable>package</replaceable></command>) <literal>Homepage</literal> フィールドがあるか確認してください。別の方法として、パッケージ説明文にプログラムの公式サイトへのリンクが載っているかもしれません。URL が見つからなければ、<filename>/usr/share/doc/<replaceable>package</replaceable>/copyright</filename> を確認してください。Debian メンテナは通常このファイルの中に、プログラムのソースコードを手に入れた場所を示しており、これこそが探しているウェブサイトのものである可能性が高いです。それでもなおウェブサイトがわからない場合、たとえば FSF の フリーソフトウェアディレクトリなどのフリーソフトウェアディレクトリを確認するか、Google、DuckDuckGo、Yahoo などの検索エンジンで直接検索してください。<ulink type="block" url="https://directory.fsf.org/wiki/Main_Page" /></para>
      <indexterm><primary><filename>copyright</filename></primary></indexterm>
      <indexterm><primary>フリーソフトウェアディレクトリ</primary></indexterm>

      <para>また、Debian wiki も確認するほうが良いかもしれません。Debian wiki は共同ウェブサイトで、誰でも、単なる訪問者でさえも、ブラウザから直接提案を出すことが可能です。Debian wiki はプロジェクトを設計したりプロジェクトの方向性を決定する管理者、協力し合って文書を書くことで知識を共有したいユーザから使われます。<ulink type="block" url="http://wiki.debian.org/" /></para>
      <indexterm><primary><emphasis>wiki.debian.org</emphasis></primary></indexterm>
    </section>
    <section>
      <title>チュートリアル (<emphasis>HOWTO</emphasis>)</title>
      <indexterm><primary><emphasis>HOWTO</emphasis></primary></indexterm>

      <para>HOWTO は具体的かつ段階的に所定の目標を達成する「手順」を記述する文書です。目標のカバーする領域は比較的多岐にわたりますが、事実上技術的な目標であることが多いです。ここで技術的な目標とはたとえば IP マスカレードの構成、ソフトウェア RAID の設定、Samba サーバのインストールなどがあります。HOWTO はあるテクノロジーを導入する際に起こりうるすべての潜在的な問題に対処できるように書かれていることが多いです。</para>

      <para>Linux Documentation Project (LDP) は数多くの HOWTO を管理しており、LDP のウェブサイトには LDP の管理する HOWTO 文書がすべてホストされています。<ulink type="block" url="http://www.tldp.org/" /></para>
      <indexterm><primary>LDP</primary></indexterm>
      <indexterm><primary>Linux Documentation Project</primary></indexterm>

      <para>LDP の管理している HOWTO 文書の内容は話半分に聞くべきです。なぜなら文書が書かれたのは何年も前ということが多いからです。さらに文書に含まれる情報が古いこともあります。翻訳された文書の場合、この傾向はより強くなります。元文書の新しいバージョンが公開されたところで、対応する翻訳文書が定期的に更新されるわけでもなければ、即時に更新されるわけでもないからです。翻訳はボランティアが行っておりいかなる制限も受けません。</para>
    </section>
  </section>
  <section id="sect.common-procedures">
    <title>常套手段</title>
    <indexterm><primary>標準的なやり方</primary></indexterm>

    <para>この節の目的は、管理者が頻繁に実行する特定の操作に関する、いくつかの一般的なヒントを示すことです。もちろんこれらの手順は包括的にすべての考え得る場合をカバーするものではありませんが、より困難な状況に直面した際の出発点として機能します。</para>

    <sidebar>
      <title><emphasis>DISCOVERY</emphasis> 非英語の文書</title>

      <para>多くの場合、非英語に翻訳された文書は対応するパッケージ名の後ろに <literal>-<replaceable>lang</replaceable></literal> を付けた名前の別パッケージとして提供されています (ここで <replaceable>lang</replaceable> は 2 文字の ISO 言語コードです)。</para>

      <para>たとえば、<emphasis>apt-howto-ja</emphasis> パッケージには <emphasis>APT</emphasis> に関する HOWTO の日本語翻訳が含まれています。同様に、<emphasis>debian-reference-ja</emphasis> パッケージは Debian に関するリファレンスガイド (最初 Osamu Aoki が英語で書いた文書) の日本語版です。</para>
    </sidebar>
    <section>
      <title>プログラムの設定</title>
      <indexterm><primary>設定</primary><secondary>プログラムの設定</secondary></indexterm>
      <indexterm><primary>プログラム</primary><secondary>設定</secondary></indexterm>

      <para>未知のパッケージを設定する場合、段階を追って進まなければいけません。最初に、パッケージメンテナの書いた文書を読んでください。<filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename> を読むことで、そのソフトウェアを簡単に使うための特別規則を学ぶことが可能です。このファイルには、プログラムの元の挙動 (HOWTO などの一般的な文書に書かれている挙動) からの違いが書かれているため、必ず読まなければいけない場合があります。またこのファイルには、ありふれた問題で時間を無駄にするのを避けるために、最も一般的なエラーの詳細も書かれています。</para>

      <para>その後、ソフトウェアの公式文書を確認してください。既存のさまざまな文書源を見つける方法は<xref linkend="sect.documentation-sources" />を参照してください。<command>dpkg -L <replaceable>package</replaceable></command> コマンドでパッケージに含まれるファイルのリストが表示されます。さらに、このコマンドを使えば、利用できる文書 (と同時に <filename>/etc/</filename> に格納された設定ファイル) を素早く特定することも可能です。<command>dpkg -s <replaceable>package</replaceable></command> でパッケージのメタ情報が表示されるので、そこから推奨パッケージや提案パッケージが分かります。さらにそこから、ソフトウェアの設定を簡単に行うための文書またはユーティリティを見つけることも可能です。</para>

      <para>最後に、設定ファイルには通常、各設定項目に関して設定できる値をそれぞれ詳細に説明した説明用コメントが数多く書かれています。このため、利用できる行を選んで有効化するだけで十分な場合もあります。また、設定ファイルの例が <filename>/usr/share/doc/<replaceable>package</replaceable>/examples/</filename> ディレクトリの中に格納されている場合もあります。設定ファイルの例は、自分の設定ファイルのたたき台になります。</para>

      <sidebar>
        <title><emphasis>DEBIAN POLICY</emphasis> 例のインストール先</title>
        <indexterm><primary>例、インストール先</primary></indexterm>

	<para>すべての例は必ず <filename>/usr/share/doc/<replaceable>package</replaceable>/examples/</filename> ディレクトリにインストールされます。このディレクトリに格納できる例には設定ファイル、プログラムのソースコード (ライブラリの使用例)、ある状況下で管理者が使うデータ変換スクリプトなどがあります。これらの例が特定のアーキテクチャに固有なものの場合、例は <filename>/usr/lib/<replaceable>package</replaceable>/examples/</filename> にインストールされます。このディレクトリに含まれる例は <filename>/usr/share/doc/<replaceable>package</replaceable>/examples/</filename> ディレクトリに含まれるファイルを指すリンクとするべきです。</para>
      </sidebar>
    </section>
    <section>
      <title>デーモンの挙動を監視する</title>

      <para>デーモンの挙動を理解するのはやや面倒です。なぜなら、デーモンは管理者と直接的に対話するものではないからです。デーモンが実際にどのような作業をしているかを確認するには、デーモンをテストする必要があります。たとえば、Apache (ウェブサーバ) デーモンの挙動を確認するには、HTTP リクエストを使ってテストします。</para>

      <para>この種のテストを行うために、デーモンは通常自分のしたことだけでなく発生したエラーも含めてすべてを「ログファイル」や「システムログ」と呼ばれるログに記録します。ログは <filename>/var/log/</filename> の中か、このディレクトリのサブディレクトリの中に保存されます。それぞれのデーモンの正確なログファイル名を知るには、文書を確認してください。そのテストによって考え得る使用例のすべてが満足されない限り、テストは必ずしも 1 回で十分とは限らない点に注意してください。さらに、いくつかの問題は特定の状況下でしか起こりません。</para>

      <sidebar>
        <title><emphasis>TOOL</emphasis> <command>rsyslogd</command> デーモン</title>
        <indexterm><primary><command>syslogd</command></primary></indexterm>
        <indexterm><primary>ログ</primary><secondary>ファイル</secondary></indexterm>
        <indexterm><primary>ファイル</primary><secondary>ログ</secondary></indexterm>

	<para><command>rsyslogd</command> は特別です。なぜなら、<command>rsyslogd</command> デーモンは他のプログラムから受信したログ (内部的なシステムメッセージ) を収集するからです。それぞれのログエントリにはサブシステム (電子メール、カーネル、認証など) と優先度が関連付けられています。さらに <command>rsyslogd</command> はサブシステムと優先度の情報を使って各ログエントリをどのように処理するかを決めます。ログメッセージは、複数のログファイルに記録される場合もあれば、管理者のコンソールに送信される場合もあります。設定の詳細は <filename>/etc/rsyslog.conf</filename> 設定ファイル (同名のマニュアルページに説明があります) で定義されています。</para>

        <para>C 言語にはログ送信専用の関数があるので、これを使うと <command>rsyslogd</command> デーモンを簡単に使えるようになります。しかしながら、いくつかのデーモンは自分でログファイルを管理します (たとえば Linux 上で動く Windows 共有の実装である <command>samba</command> はそのようなデーモンの一例です)。</para>

        <para><command>systemd</command> を使っている場合、ログは <command>rsyslogd</command> に転送される前に <command>systemd</command> によって収集されるという点に注意してください。つまり <command>systemd</command> のジャーナルを介してログを利用したり、<command>journalctl</command> を使ってログを調査することが可能です (詳細は<xref linkend="sect.systemd" />をご覧ください)。</para>
      </sidebar>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> デーモン</title>
        <indexterm><primary>デーモン</primary></indexterm>

	<para>デーモンはユーザが明示的に呼び出すプログラムではなく、バックグラウンドで実行され、特定の状態が満足されたら作業を行うプログラムです。多くのサーバプログラムはデーモンです。専門用語の名前の最後に付けられた「d」という文字は通常それがデーモンであることを意味しています (<command>sshd</command>、<command>smtpd</command>、<command>httpd</command> などがその一例です)。</para>
      </sidebar>

      <para>問題に対する予防手段として、管理者は日常的に最も重要なサーバログを読むべきです。そうすれば、不満を抱くユーザから報告を受ける前に問題を調査できます。実際のところ、ユーザは報告の前に問題が数日間にわたって繰り返して起こるまで待つかもしれません。長いログファイルの内容を分析するには専用ツールを使います。数多くのサーバに対して専用のログ分析ツールが存在し、特にウェブサーバ (Apache 向けの <command>analog</command>、<command>awstats</command>、<command>webalizer</command>)、FTP サーバ、プロキシ/キャッシュサーバ、ファイアウォール、電子メールサーバ、DNS サーバ、プリンタサーバに対してはそのログを解析するユーティリティが存在します。いくつかのユーティリティはモジュール式で機能し、複数のログファイルを解析できます。<command>lire</command> はそのようなユーティリティの一例です。また、ログファイルから対処が必要な警告を検索する <command>logcheck</command> (<xref linkend="security" />で紹介するソフトウェア) などの他のツールも存在します。</para>
      <indexterm><primary><command>analog</command></primary></indexterm>
      <indexterm><primary><command>awtats</command></primary></indexterm>
      <indexterm><primary><command>webalizer</command></primary></indexterm>
      <indexterm><primary><command>logcheck</command></primary></indexterm>
      <indexterm><primary><command>lire</command></primary></indexterm>
    </section>
    <section>
      <title>メーリングリストで助けを求める</title>

      <para>いろいろと検索しても問題の原因が分からなかった場合、他の人 (おそらく自分よりも経験豊富な人) から助けを受けることも可能です。<email>debian-user@lists.debian.org</email> メーリングリストはまさにこのために用意されています。他のコミュニティと同様、このメーリングリストにも従う必要のあるルールが存在します。どんな質問でもそれを投稿する前に、メーリングリストに最近投稿された議論および公式文書の中で、自分の問題がまだ取り上げられていないという点を確認するべきです。<ulink type="block" url="https://wiki.debian.org/DebianMailingLists" /><ulink type="block" url="https://lists.debian.org/debian-user/" /></para>
      <indexterm><primary><email>debian-user@lists.debian.org</email></primary></indexterm>
      <indexterm><primary>メーリングリスト</primary></indexterm>

      <sidebar>
        <title><emphasis>TIP</emphasis> ウェブでメーリングリストを読む</title>

	<para><email>debian-user@lists.debian.org</email> などの流量の多いメーリングリストは、ディスカッションフォーラム (またはニュースグループ) 的に読むと良いかもしれません。Gmane.org を使うと、ニュースグループのように Debian メーリングリストを参照することが可能です。<email>debian-user@lists.debian.org</email> は以下から閲覧できます。<ulink type="block" url="http://dir.gmane.org/gmane.linux.debian.user" /></para>
      </sidebar>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> ネチケットの適用</title>

	<para>一般的に言って、電子メーリングリスト上でのやり取りはすべてネチケットを守るべきです。ネチケットとは、礼儀作法から避けるべき間違いまで、常識的なルールを指しています。<ulink type="block" url="http://tools.ietf.org/html/rfc1855" /><indexterm><primary>ネチケット</primary></indexterm></para>

        <para>さらに、Debian プロジェクトが管理する任意のコミュニケーションチャンネルに参加する際には、Debian 利用上の注意を遵守することを求められます。<ulink type="block" url="https://www.debian.org/code_of_conduct" /></para>
      </sidebar>

      <para>前述の 2 条件を満足した時点で、問題の内容をメーリングリストに投稿してみてください。投稿の際には、関連する情報をできる限り含めるようにしてください。ここで関連する情報とは、実施したさまざまなテスト、参照した文書、その問題を診断する際に使った方法、関連するか関連する可能性のあるパッケージなどを指します。さらに Debian バグ追跡システム (BTS、補注<xref linkend="sidebar.bts" />を参照してください) で同様の問題がないか確認し、検索の結果を挙げ、見つかったバグへのリンクを提供してください。以下から BTS を使い始めることが可能です。<ulink type="block" url="http://www.debian.org/Bugs/index.html" /></para>

      <para>礼儀正しく正確であればあるほど、答えを得られる (少なくとも多少の反応を得られる) チャンスが大きくなります。私信で関連する情報を受け取った場合、その情報を要約して公にすることを考えてください。そうすれば、他の人がその恩恵を受けられます。またこうすることで、さまざまな検索エンジンを通じて、同じ疑問を持つ人がメーリングリストのアーカイブからその解決策を得ることが可能です。</para>
    </section>
    <section>
      <title>問題が難しすぎる場合のバグ報告</title>
      <indexterm><primary>バグ報告</primary></indexterm>
      <indexterm><primary>バグ報告</primary></indexterm>

      <para>問題を解決するために行ったすべての努力が失敗に終わった場合、問題の原因はあなたの責任のおよぶところになく、プログラムのバグかもしれません。この場合 Debian にバグを報告したり、上流開発者に直接報告したりするとよいでしょう。これを行うには、可能な限り問題を分割し、問題を再現できる最小のテスト環境を作ってください。問題の明白な原因となっているプログラムがわかっている場合、<command>dpkg -S <replaceable>file_in_question</replaceable></command> コマンドで関連するパッケージを見つけることが可能です。そしてバグ追跡システム (<literal>https://bugs.debian.org/<replaceable>package</replaceable></literal>) を使って、問題となっているパッケージに対してそのバグがまだ報告されていないことを確かめてください。その後、<command>reportbug</command> コマンドでバグ報告を送信してください。その際には、可能な限り多くの情報を含め、特に誰もがバグを再現できる最小テストケースの完全な説明を含めてください。</para>

      <para>この章では、効率的な問題解決の手段を解説しました。以降の章ではこの手段を使うことになるでしょう。必要に応じて何度でも使ってください!</para>
    </section>
  </section>
</chapter>
