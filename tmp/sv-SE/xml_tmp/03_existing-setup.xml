<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="existing-setup">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-existing-setup.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>Befintlig installation</keyword>
      <keyword>Återanvänd</keyword>
      <keyword>Migration</keyword>
    </keywordset>
  </chapterinfo>
  <title>Analysera den befintliga inställningen och migrera</title>
  <highlights>
    <para>All omstrukturering av datorer bör ta hänsyn till existerande system. Detta möjliggör återanvändning av tillgängliga resurser så långt som möjligt och garanterar interoperabilitet mellan de olika element som utgör systemet. Denna studie kommer att introducera ett generiskt ramverk att följa i all migration av datorinfrastruktur till Linux.</para>
  </highlights>
  <section id="sect.heterogeneous-environments">
    <title>Samexistens i heterogena miljöer</title>
    <indexterm><primary>miljö</primary><secondary>heterogen miljö</secondary></indexterm>

    <para>Debian integerar väl i alla typer av existerande miljöer och fungerar väl med andra operativsystem. Denna nästan perfekta harmoni kommer från marknadstryck som kräver att upphovsmän till programvaror utvecklar program som följer standarder. Överrensstämmelse med standarder låter administratörer byta ut program: klienter eller servrar, oavsett om de är fria eller ej.</para>
    <section>
      <title>Integration med Windows-maskiner</title>

      <para>Sambas SMB/CIFS-stöd säkerställer utmärkt kommunikation inom en Windows-kontext. Det möjliggör delning av filer och skrivarköer till Windows-klienter och inkluderar programvara som låter en Linux-maskin använda resurser som tillgängliggörs av Windows-servrar.</para>

      <sidebar>
        <title><emphasis>VERKTYG</emphasis> Samba</title>
        <indexterm><primary>Samba</primary></indexterm>

        <para>Den senaste versionen av Samba kan ersätta de flesta Windows-funktioner: allt från de hos en enkel Windows NT-server (autentisering, filer, skrivarköer, hämtning av skrivardrivrutiner, DFS, etc.) till de mest avancerade (en domänkontroller kompatibel med Active Directory).</para>
      </sidebar>
    </section>
    <section>
      <title>Integration med OS X-maskiner</title>

      <indexterm><primary>Zeroconf</primary></indexterm>
      <indexterm><primary>Bonjour</primary></indexterm>
      <indexterm><primary>Avahi</primary></indexterm>
      <para>OS X-maskiner tillhandahåller, och kan använda, nätverkstjänster så som filservrar och skrivardelning. Dessa tjänster publiceras på det loakal nätverket vilket låter andra maskiner upptäcka dem och använda dem utan någon manuell konfiguration, via Bonjour-implementation av protokollsviten Zeroconf. Debian inkluderar en annan implementation som kallas Avahi, vilken tillhandahåller samma funktionalitet.</para>

      <indexterm><primary>AFP</primary></indexterm>
      <indexterm><primary>AppleShare</primary></indexterm>
      <para>Åt andra håller kan Netatalk-demonen användas för att tillhandahålla filservrar tilll OS X-maskiner på nätverket. Den implementera AFP-protokollet (AppleShare) så väl som de nödvändiga aviseringarna så att servrar kan upptäckas automatiskt av OS X-klienter.</para>

      <indexterm><primary>AppleTalk</primary></indexterm>
      <para>Äldre Mac OS-nätverk (före OS X) använde ett annat protokoll kallat AppleTalk. För miljöer som inkluderar maskiner som använder detta protokoll tillhandahåller Netatalk även AppleTalk-protokollet (faktum är att den började som en omimplementation av det protokollet). Den säkerstället funktioner så som filserver och skrivarköer så väl som tidsserver (klocksynkronisering)l. Dess router-funktion möjliggör sammankoppling med AppleTalk-nätverk.</para>
    </section>
    <section>
      <title>Integration med andra Linux-/Unix-maskiner</title>

      <para>Avslutningsvis garanterar NFS och NIS, som båda är inkluderade, interaktion med Unix-system. NFS säkerstället filserverfunktionalitet medan NIS skapar användarkataloger. BSD-utskriftslagret som används av de flesta Unix-system tillåter också delning av skrivarköer.</para>

      <figure>
        <title>Samexistens mellan Debian och OS X-, Windows- och Unix-system</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/existing-setup-1.png" width="25%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>
  <section id="sect.how-to-migrate">
    <title>Hur man migrerar</title>
    <indexterm><primary>migration</primary></indexterm>

    <para>För att garantera kontinuitet för tjänster måste varje datormigration planeras och utföras enligt planen. Denna princip gäller oavsett vilket operativsystem som används.</para>
    <section>
      <title>Undersökning och identifiering av tjänster</title>

      <para>Även om detta steg framstår som simpelt är det grundläggande. En seriös administratör förstår grundligt de huvudsakliga rollerna varje server har, men sådana roller kan förändras och ibland kan avancerade användare ha installerat ”vilda” tjänster. Att känna till att de existerar kommer åtminstone att låta dig avgöra vad du vill göra med dem, snarare än att bara ta bort dem på måfå.</para>

      <para>For this purpose, it is wise to inform your users of the
      project before migrating the server. To involve them in the
      project, it may be useful to install the most common free
      software programs on their desktops prior to migration, which
      they will come across again after the migration to Debian; Libre
      Office and the Mozilla suite are the best examples here.</para>
      <section>
        <title>Network and Processes</title>
        <indexterm><primary><command>nmap</command></primary></indexterm>
       
	<para>The <command>nmap</command> tool (in the package with the same
	name) will quickly identify Internet services hosted by a network
	connected machine without even requiring to log in to it. Simply
	call the following command on another machine connected to the same
	network:</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>nmap mirwiz</userinput>
<computeroutput>Starting Nmap 7.40 ( https://nmap.org ) at 2017-06-06 14:41 CEST
Nmap scan report for mirwiz (192.168.1.104)
Host is up (0.00062s latency).
Not shown: 992 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
25/tcp   open  smtp
80/tcp   open  http
111/tcp  open  rpcbind
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
5666/tcp open  nrpe
9999/tcp open  abyss

Nmap done: 1 IP address (1 host up) scanned in 0.06 seconds</computeroutput>
</screen>

        <sidebar>
          <title><emphasis>ALTERNATIVE</emphasis> Use <command>netstat</command> to find the list of available services</title>

	  <para>On a Linux machine, the <command>netstat -tupan</command>
	  command will show the list of active or pending TCP sessions, as
	  well UDP ports on which running programs are listening. This
	  facilitates identification of services offered on the
	  network.</para>
        </sidebar>

        <sidebar>
          <title><emphasis>GOING FURTHER</emphasis> IPv6</title>

	  <para>Some network commands may work either with IPv4 (the
	  default usually) or with IPv6.  These include the
	  <command>nmap</command> and <command>netstat</command>
	  commands, but also others, such as <command>route</command>
	  or <command>ip</command>. The convention is that this
	  behavior is enabled by the <parameter>-6</parameter>
	  command-line option.</para>
        </sidebar>

	<para>If the server is a Unix machine offering shell accounts to
	users, it is interesting to determine if processes are executed in
	the background in the absence of their owner. The command
	<command>ps auxw</command> displays a list of all processes with
	their user identity. By checking this information against the
	output of the <command>who</command> command, which gives a list of
	logged in users, it is possible to identify rogue or undeclared servers or
	programs running in the background. Looking at
	<filename>crontabs</filename> (tables listing automatic actions
	scheduled by users) will often provide interesting information on
	functions fulfilled by the server (a complete explanation of
	<command>cron</command> is available in <xref linkend="sect.task-scheduling-cron-atd" />).</para>

	<para>In any case, it is essential to backup your servers: this
	allows recovery of information after the fact, when users will
	report specific problems due to the migration.</para>
      </section>
    </section>
    <section>
      <title>Backing up the Configuration</title>

      <para>It is wise to retain the configuration of every identified
      service in order to be able to install the equivalent on the
      updated server. The bare minimum is to make a backup copy of the
      configuration files.</para>

      <para>For Unix machines, the configuration files are usually
      found in <filename>/etc/</filename>, but they may be located in
      a sub-directory of <filename>/usr/local/</filename>. This is the
      case if a program has been installed from sources, rather than
      with a package. In some cases, one may also find them under
      <filename>/opt/</filename>.</para>

      <para>For data managing services (such as databases), it is strongly
      recommended to export the data to a standard format that will be easily
      imported by the new software. Such a format is usually in text mode
      and documented; it may be, for example, an SQL dump for a database,
      or an LDIF file for an LDAP server.</para>

      <figure>
        <title>Database backups</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/existing-setup-2.png" width="50%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Each server software is different, and it is impossible to
      describe all existing cases in detail. Compare the documentation
      for the existing and the new software to identify the exportable
      (thus, re-importable) portions and those which will require
      manual handling. Reading this book will clarify the
      configuration of the main Linux server programs.</para>
    </section>
    <section>
      <title>Taking Over an Existing Debian Server</title>
      <indexterm><primary>recovering a Debian machine</primary></indexterm>
      <indexterm><primary>exploring a Debian machine</primary></indexterm>
      <indexterm><primary>taking over a Debian server</primary></indexterm>

      <para>To effectively take over its maintenance, one may analyze a
      machine already running with Debian.</para>

      <para>The first file to check is
      <filename>/etc/debian_version</filename>, which usually contains the
      version number for the installed Debian system (it is part of the
      <emphasis>base-files</emphasis> package). If it indicates
      <literal><replaceable>codename</replaceable>/sid</literal>, it means
      that the system was updated with packages coming from one of the
      development distributions (either testing or unstable).</para>

      <para>The <command>apt-show-versions</command> program (from the
      Debian package of the same name) checks the list of installed
      packages and identifies the available versions.
      <command>aptitude</command> can also be used for these tasks, albeit
      in a less systematic manner.</para>

      <para>A glance at the <filename>/etc/apt/sources.list</filename> file
      (and <filename>/etc/apt/sources.list.d/</filename> directory)
      will show where the installed Debian packages likely came from. If
      many unknown sources appear, the administrator may choose to
      completely reinstall the computer's system to ensure optimal
      compatibility with the software provided by Debian.</para>

      <para>The <filename>sources.list</filename> file is often a good
      indicator: the majority of administrators keep, at least in comments,
      the list of APT sources that were previously used. But you should not forget that
      sources used in the past might have been deleted, and that some
      random packages grabbed on the Internet might have been manually
      installed (with the <command>dpkg</command> command). In this case,
      the machine is misleading in its appearance of “standard” Debian.
      This is why you should pay attention to any indication that will give
      away the presence of external packages (appearance of
      <filename>deb</filename> files in unusual directories, package
      version numbers with a special suffix indicating that it originated
      from outside the Debian project, such as <literal>ubuntu</literal> or
      <literal>lmde</literal>, etc.)</para>

      <para>Likewise, it is interesting to analyze the contents of the
      <filename>/usr/local/</filename> directory, whose purpose is to contain
      programs compiled and installed manually. Listing software installed
      in this manner is instructive, since this raises questions on the
      reasons for not using the corresponding Debian package, if such a
      package exists.</para>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> <emphasis role="pkg">cruft</emphasis></title>

	<para>The <emphasis role="pkg">cruft</emphasis> package proposes to
	list the available files that are not owned by any package. It has
	some filters (more or less effective, and more or less up to date)
	to avoid reporting some legitimate files (files generated by Debian
	packages, or generated configuration files not managed by
	<command>dpkg</command>, etc.).</para>

	<para>Be careful to not blindly delete everything that
	<command>cruft</command> might list!</para>
      </sidebar>
    </section>
    <section>
      <title>Installing Debian</title>

      <para>Once all the required information on the current server is
      known, we can shut it down and begin to install Debian on
      it.</para>
      <indexterm><primary>arkitektur</primary></indexterm>

      <para>To choose the appropriate version, we must know the
      computer's architecture. If it is a reasonably recent PC, it is
      most likely to be amd64 (older PCs were usually i386). In other
      cases, we can narrow down the possibilities according to the
      previously used system.</para>

      <para><xref linkend="tab-corresp" xrefstyle="select: label nopage" /> is not
      intended to be exhaustive, but may be helpful. In any case, the
      original documentation for the computer is the most reliable source
      to find this information.</para>

      <table colsep="1" id="tab-corresp">
        <title>Matching operating system and architecture</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Operating System</entry>
              <entry>Architecture(s)</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>DEC Unix (OSF/1)</entry>
              <entry>alpha, mipsel</entry>
            </row>
            <row>
              <entry>HP Unix</entry>
              <entry>ia64, hppa</entry>
            </row>
            <row>
              <entry>IBM AIX</entry>
              <entry>powerpc</entry>
            </row>
            <row>
              <entry>Irix</entry>
              <entry>mips</entry>
            </row>
            <row>
              <entry>OS X</entry>
              <entry>amd64, powerpc, i386</entry>
            </row>
            <row>
              <entry>z/OS, MVS</entry>
              <entry>s390x, s390</entry>
            </row>
            <row>
              <entry>Solaris, SunOS</entry>
              <entry>sparc, i386, m68k</entry>
            </row>
            <row>
              <entry>Ultrix</entry>
              <entry>mips</entry>
            </row>
            <row>
              <entry>VMS</entry>
              <entry>alpha</entry>
            </row>
            <row>
              <entry>Windows 95/98/ME</entry>
              <entry>i386</entry>
            </row>
            <row>
              <entry>Windows NT/2000</entry>
              <entry>i386, alpha, ia64, mipsel</entry>
            </row>
            <row>
              <entry>Windows XP / Windows Server 2008</entry>
              <entry>i386, amd64, ia64</entry>
            </row>
            <row>
              <entry>Windows RT</entry>
              <entry>armel, armhf, arm64</entry>
            </row>
            <row>
              <entry>Windows Vista / Windows 7-8-10</entry>
              <entry>i386, amd64</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <sidebar>
        <title><emphasis>HARDWARE</emphasis> 64 bit PC vs 32 bit PC</title>
        <indexterm><primary>amd64</primary></indexterm>
        <indexterm><primary>i386</primary></indexterm>

	<para>Most recent computers have 64 bit Intel or AMD
	processors, compatible with older 32 bit processors; the
	software compiled for “i386” architecture thus works. On the
	other hand, this compatibility mode does not fully exploit the
	capabilities of these new processors. This is why Debian
	provides the “amd64” architecture, which works for recent AMD
	chips as well as Intel “em64t” processors (including most of
	the Core series), which are very similar to AMD64.</para>
      </sidebar>
    </section>
    <section>
      <title>Installing and Configuring the Selected Services</title>

      <para>Once Debian is installed, we must install and configure one by
      one all of the services that this computer must host. The new
      configuration must take into consideration the prior one in order to
      ensure a smooth transition. All the information collected in the
      first two steps will be useful to successfully complete this part.</para>

      <figure>
        <title>Install the selected services</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/existing-setup-4.png" width="66%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Prior to jumping into this exercise with both feet, it is
      strongly recommended that you read the remainder of this book. After
      that you will have a more precise understanding of how to configure
      the expected services.</para>

      <para></para>
    </section>
  </section>
</chapter>
