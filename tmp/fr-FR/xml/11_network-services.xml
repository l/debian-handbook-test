<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="network-services" lang="fr-FR">
	<chapterinfo>
		 <keywordset>
			<keyword>Postfix</keyword>
			 <keyword>Apache</keyword>
			 <keyword>NFS</keyword>
			 <keyword>Samba</keyword>
			 <keyword>Squid</keyword>
			 <keyword>OpenLDAP</keyword>
			 <keyword>SIP</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Services réseau : Postfix, Apache, NFS, Samba, Squid, LDAP, SIP, XMPP, TURN</title>
	 <highlights> <para>
		Les services réseau sont les programmes interagissant directement avec les utilisateurs dans leur travail quotidien. C'est la partie émergée de l'iceberg « système d'information » présentée dans ce chapitre. La partie immergée, l'infrastructure sur laquelle ils s'appuient, reste en arrière-plan.
	</para>
	 <para>
		De nombreux services réseau nécessitent une technologie de chiffrement pour fonctionner de manière fiable et sécurisée, tout particulièrement lorsqu'ils sont utilisés sur l'Internet public. Les certificats X.509 (que l'on connaît aussi sous l'appellation de certificats SSL ou certificats TLS) sont fréquemment utilisés à cet effet. Un certificat pour un domaine spécifique peut souvent être partagé entre plusieurs des services présentés dans ce chapitre.
	</para>
	 <indexterm>
		<primary>TLS</primary>
	</indexterm>
	 <indexterm>
		<primary>X.509</primary>
	</indexterm>
	 <indexterm>
		<primary>Certificats</primary>
	</indexterm>
	 </highlights> <section id="sect.smtp-mail-server">
		<title>Serveur de messagerie électronique</title>
		 <para>
			Les administrateurs de Falcot SA ont retenu Postfix comme serveur de courrier électronique en raison de sa simplicité de configuration et de sa fiabilité. En effet, sa conception réduit au maximum les droits de chacune de ses sous-tâches, ce qui limite l'impact de toute faille de sécurité.
		</para>
		 <indexterm>
			<primary>email</primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <indexterm>
			<primary>serveur email</primary>
		</indexterm>
		 <indexterm>
			<primary>Postfix</primary>
		</indexterm>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Le serveur Exim4</title>
		 <indexterm>
			<primary>Exim</primary>
		</indexterm>
		 <para>
			Debian emploie Exim4 comme serveur de messagerie par défaut (il est donc automatiquement installé pendant l'installation initiale). La configuration, fournie par le paquet <emphasis role="pkg">exim4-config</emphasis>, est automatiquement personnalisée grâce à un certain nombre de questions debconf très similaires à celles posées par <emphasis role="pkg">postfix</emphasis>.
		</para>
		 <para>
			La configuration est, au choix, soit dans un seul gros fichier (<filename>/etc/exim4/exim4.conf.template</filename>), soit dans un certain nombre de fragments de fichiers répartis dans <filename>/etc/exim4/conf.d/</filename>. Dans les deux cas, les fichiers sont exploités par la commande <command>update-exim4.conf</command> comme modèles pour générer <filename>/var/lib/exim4/config.autogenerated</filename>, qui est le fichier utilisé par Exim4. Grâce à ce mécanisme, les valeurs obtenues par la configuration debconf de Exim (stockées dans <filename>/etc/exim4/update-exim4.conf.conf</filename>) peuvent être injectées dans le fichier de configuration d'Exim, et cela même si l'administrateur ou un autre paquet ont modifié la configuration Exim par défaut.
		</para>
		 <para>
			La syntaxe de configuration d'Exim4 est assez particulière et il faut un certain temps pour s'y accoutumer. Toutefois, une fois que ces particularités sont maîtrisées, il s'agit d'un serveur de messagerie très complet et très puissant. Il suffit de parcourir les dizaines de pages de documentation pour s'en rendre compte. <ulink type="block" url="http://www.exim.org/docs.html" />
		</para>
		 </sidebar> <section>
			<title>Installation de Postfix</title>
			 <para>
				Le paquet Debian <emphasis role="pkg">postfix</emphasis> contient le démon SMTP principal. Divers modules (comme <emphasis role="pkg">postfix-ldap</emphasis> ou <emphasis role="pkg">postfix-pgsql</emphasis>) offrent des fonctionnalités supplémentaires à Postfix (notamment en termes d'accès à des bases de données de correspondances). Ne les installez que si vous en avez déjà perçu le besoin.
			</para>
			 <sidebar id="sidebar.smtp"> <title><emphasis>B.A.-BA</emphasis> SMTP</title>
			 <indexterm>
				<primary>SMTP</primary>
			</indexterm>
			 <indexterm>
				<primary><foreignphrase>Simple Mail Transfer Protocol</foreignphrase></primary>
			</indexterm>
			 <indexterm>
				<primary>serveur</primary>
				<secondary>SMTP</secondary>
			</indexterm>
			 <para>
				SMTP <emphasis>(Simple Mail Transfer Protocol)</emphasis> est le protocole employé par les serveurs de messagerie pour s'échanger et router les courriers électroniques.
			</para>
			 </sidebar> <para>
				Au cours de l'installation du paquet, plusieurs questions sont posées par l'intermédiaire de <command>debconf</command>. Les réponses permettront de générer un premier fichier <filename>/etc/postfix/main.cf</filename>.
			</para>
			 <para>
				La première question porte sur le type d'installation. Parmi les choix proposés, seuls deux sont pertinents dans le cadre d'un serveur connecté à Internet. Il s'agit de <guimenuitem>Site Internet</guimenuitem> et de <guimenuitem>Site Internet utilisant un smarthost</guimenuitem>. Le premier choix est adapté à un serveur qui reçoit et envoie le courrier directement à ses destinataires, mode retenu par les administrateurs de Falcot. Le second correspond à un serveur qui reçoit directement le courrier mais en envoie par le biais d'un serveur SMTP intermédiaire — désigné par le terme <foreignphrase>smarthost</foreignphrase> — plutôt que directement au serveur du destinataire. C'est surtout utile pour les particuliers disposant d'une adresse IP dynamique, parce que certains serveurs de messagerie refusent tout message provenant directement d'une telle adresse IP. Le <foreignphrase>smarthost</foreignphrase> sera ici le serveur SMTP du fournisseur d'accès à Internet (FAI), qui est toujours configuré pour transmettre le courrier provenant de ses clients. Cette solution est également intéressante pour toute machine qui n'est pas connectée en permanence, car cela lui évite de devoir gérer une file d'attente des messages non délivrables qu'il faudra réessayer d'expédier plus tard.
			</para>
			 <sidebar> <title><emphasis>VOCABULAIRE</emphasis> FAI</title>
			 <indexterm>
				<primary>FAI, Fournisseur d'accès à Internet</primary>
			</indexterm>
			 <para>
				FAI est l'abréviation de « Fournisseur d'accès à Internet ». Il s'agit d'une entité (souvent société commerciale) qui fournit des connexions à Internet ainsi que les services de base associés (serveur de messagerie électronique, de news, etc.). Parmi les FAI français, on peut citer Free, Orange (ex-Wanadoo), SFR, AOL, FDN, etc. L'abréviation anglaise correspondante est ISP pour <foreignphrase>Internet Service Provider</foreignphrase>.
			</para>
			 <para>
			</para>
			 </sidebar> <para>
				La deuxième question porte sur le nom complet de la machine, employé pour générer une adresse de courrier électronique depuis un nom d'utilisateur local (c'est la partie suivant l'arobase « <literal>@</literal> »). Pour Falcot, la réponse est <literal>mail.falcot.com</literal>. C'est la seule question posée en standard, mais elle ne suffit pas pour avoir une configuration satisfaisante, les administrateurs exécutent donc <command>dpkg-reconfigure postfix</command> afin de pouvoir personnaliser plus de paramètres.
			</para>
			 <para>
				Parmi les questions supplémentaires, l'ordinateur demande de saisir tous les noms de domaines associés à cette machine. La liste proposée inclut le nom complet de la machine et des synonymes de <literal>localhost</literal>, mais pas le domaine principal <literal>falcot.com</literal>, qu'il faut ajouter manuellement. D'une manière générale, il convient habituellement de donner ici tous les noms de domaines pour lesquels cette machine fait office de serveur MX (c'est-à-dire tous ceux pour lesquels le DNS indique qu'elle est apte à accepter du courrier). Ces informations sont ensuite stockées dans la variable <literal>mydestination</literal> du fichier <filename>/etc/postfix/main.cf</filename> (principal fichier de configuration de Postfix).
			</para>
			 <indexterm>
				<primary>serveur</primary>
				<secondary>MX</secondary>
			</indexterm>
			 <indexterm>
				<primary>MX</primary>
				<secondary>serveur</secondary>
			</indexterm>
			 <figure>
				<title>Rôle de l'enregistrement DNS <emphasis>MX</emphasis> dans un envoi de courrier électronique</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/mail-server.png" format="PNG" scalefit="1" width="60%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <sidebar> <title><emphasis>COMPLÉMENTS</emphasis> Interrogation des enregistrements MX</title>
			 <para>
				Si le serveur DNS ne publie pas d'enregisrement MX pour un domaine, le serveur de messagerie tentera d'envoyer le courrier à la machine de même nom. Il emploiera donc l'enregistrement de type A correspondant (ou AAAA en IPv6).
			</para>
			 </sidebar> <para>
				Selon les cas, l'installation peut également demander d'indiquer les réseaux habilités à envoyer du courrier par l'intermédiaire de cette machine. Par défaut, Postfix est configuré pour n'accepter que des courriers électroniques issus de la machine elle-même ; il faut généralement ajouter le réseau local. Les administrateurs ont donc ajouté <literal>192.168.0.0/16</literal> à la réponse par défaut. Si la question n'est pas posée, il faut modifier le fichier de configuration et y changer la variable <literal>mynetworks</literal>, comme on le voit sur l'exemple plus loin.
			</para>
			 <para>
				L'emploi de <command>procmail</command> peut aussi être proposé pour délivrer le courrier localement. Cet outil permet aux utilisateurs de trier leur courrier entrant, ce pour quoi ils doivent indiquer des règles de tri dans leur fichier <filename>~/.procmailrc</filename>.
			</para>
			 <indexterm>
				<primary><command>procmail</command></primary>
			</indexterm>
			 <indexterm>
				<primary>courrier électronique</primary>
				<secondary>filtrage</secondary>
			</indexterm>
			 <indexterm>
				<primary>filtrage de courrier électronique</primary>
			</indexterm>
			 <para>
				Après cette première étape, les administrateurs ont obtenu le fichier de configuration ci-dessous. Il va servir de base pour les sections suivantes, qui le modifieront pour activer certaines fonctionnalités.
			</para>
			 <example>
				<title>Fichier <filename>/etc/postfix/main.cf</filename> initial</title>
				 
<programlisting>
# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = mail.falcot.com
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
myorigin = /etc/mailname
mydestination = mail.falcot.com, falcot.com, localhost.localdomain, localhost
relayhost = 
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.168.0.0/16
mailbox_command = procmail -a "$EXTENSION"
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
inet_protocols = all</programlisting>

			</example>
			 <sidebar> <title><emphasis>SÉCURITÉ</emphasis> Certificat SSL <foreignphrase>snake oil</foreignphrase></title>
			 <para>
				L'expression anglaise <foreignphrase>snake oil</foreignphrase> pourrait se traduire par « poudre aux yeux ». Ces certificats présentent un intérêt limité : on ne peut pas s'appuyer sur eux pour authentifier le serveur car il s'agit de certificats autosignés générés automatiquement. Cependant, ils sont utiles pour améliorer la confidentialité des échanges.
			</para>
			 <para>
				Ils ne devraient être utilisés qu'à des fins de test, en production on se doit d'utiliser de vrais certificats. Ces derniers pourront être générés, par exemple, en suivant la procédure décrite dans la <xref linkend="sect.easy-rsa" />.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.configuring-virtual-domains">
			<title>Configuration de domaines virtuels</title>
			 <indexterm>
				<primary>domaine</primary>
				<secondary>virtuel</secondary>
			</indexterm>
			 <indexterm>
				<primary>virtuel, domaine</primary>
			</indexterm>
			 <para>
				Le serveur de messagerie peut recevoir le courrier pour d'autres domaines que le domaine principal ; on parle alors de domaines virtuels. Dans ces situations, il est rare que le courrier soit destiné aux utilisateurs locaux. Postfix offre deux fonctionnalités intéressantes pour gérer ces domaines virtuels.
			</para>
			 <sidebar> <title><emphasis>ATTENTION</emphasis> Domaines virtuels et domaines canoniques</title>
			 <para>
				Aucun des domaines virtuels ne doit être indiqué dans la variable <literal>mydestination</literal>. Celle-ci contient uniquement les noms des domaines « canoniques », directement associés à la machine et à ses utilisateurs locaux.
			</para>
			 </sidebar> <section>
				<title>Domaine virtuel d'alias</title>
				 <indexterm>
					<primary>alias</primary>
					<secondary>domaine virtuel d'alias</secondary>
				</indexterm>
				 <indexterm>
					<primary>domaine virtuel</primary>
					<secondary>domaine virtuel d'alias</secondary>
				</indexterm>
				 <para>
					Un domaine virtuel d'alias ne contient que des alias, c'est-à-dire des adresses électroniques renvoyant le courrier vers d'autres adresses électroniques.
				</para>
				 <para>
					Pour activer un tel domaine, il faut préciser son nom dans la variable <literal>virtual_alias_domains</literal> et indiquer le fichier stockant les correspondances d'adresses dans la variable <literal>virtual_alias_maps</literal>.
				</para>
				 <example>
					<title>Directives à ajouter au fichier <filename>/etc/postfix/main.cf</filename></title>
					 
<programlisting>
virtual_alias_domains = marqueafalcot.tm.fr
virtual_alias_maps = hash:/etc/postfix/virtual
</programlisting>

				</example>
				 <para>
					Le fichier <filename>/etc/postfix/virtual</filename>, décrivant les correspondances, emploie un format relativement simple. Chaque ligne contient deux champs séparés par une série de blancs, dont le premier est le nom de l'alias et le second une liste d'adresses électroniques vers lesquelles il pointe. La syntaxe spéciale <literal>@domaine.fr</literal> englobe tous les alias restants d'un domaine.
				</para>
				 <example>
					<title>Exemple de fichier <filename>/etc/postfix/virtual</filename></title>
					 
<programlisting>
webmaster@marqueafalcot.tm.fr  jean@falcot.com
contact@marqueafalcot.tm.fr    laure@falcot.com, sophie@falcot.com
# L'alias ci-dessous est générique, il englobe toutes les
# adresses électroniques du domaine marqueafalcot.tm.fr
# non employées ailleurs dans ce fichier.
# Ces adresses sont renvoyées au même nom d'utilisateur 
# mais dans le domaine falcot.com
@marqueafalcot.tm.fr           @falcot.com
</programlisting>

				</example>

			</section>
			 <section>
				<title>Domaine virtuel de boîtes aux lettres</title>
				 <sidebar> <title><emphasis>ATTENTION</emphasis> Domaine virtuel mixte ?</title>
				 <para>
					Il n'est pas permis d'indiquer le même domaine dans les variables <literal>virtual_alias_domains</literal> et <literal>virtual_mailbox_domains</literal>. En revanche, tout domaine de <literal>virtual_mailbox_domains</literal> est implicitement compris dans <literal>virtual_alias_domains</literal>. Il est donc possible de mélanger alias et boîtes aux lettres au sein d'un domaine virtuel.
				</para>
				 </sidebar> <indexterm>
					<primary>boîte aux lettres, domaine virtuel</primary>
				</indexterm>
				 <indexterm>
					<primary>domaine virtuel</primary>
					<secondary>domaine virtuel de boîtes à lettres</secondary>
				</indexterm>
				 <para>
					Les courriers destinés à un domaine virtuel de boîtes aux lettres sont stockés dans des boîtes aux lettres qui ne sont pas associées à un utilisateur local du système.
				</para>
				 <para>
					Pour activer un domaine virtuel de boîtes aux lettres, il faut l'écrire dans la variable <literal>virtual_mailbox_domains</literal> et préciser le fichier donnant les boîtes aux lettres avec la variable <literal>virtual_mailbox_maps</literal>. Le paramètre <literal>virtual_mailbox_base</literal> indique le répertoire sous lequel les différentes boîtes aux lettres seront stockées.
				</para>
				 <para>
					Les paramètres <literal>virtual_uid_maps</literal> et <literal>virtual_gid_maps</literal> définissent des tables de correspondances entre l'adresse électronique, l'utilisateur et le groupe Unix propriétaire de la boîte aux lettres. Pour indiquer systématiquement le même propriétaire, la syntaxe <literal>static:5000</literal> dénote un UID/GID fixe.
				</para>
				 <example>
					<title>Directives à ajouter au fichier <filename>/etc/postfix/main.cf</filename></title>
					 
<programlisting>
virtual_mailbox_domains = falcot.org
virtual_mailbox_maps = hash:/etc/postfix/vmailbox
virtual_mailbox_base = /var/mail/vhosts
</programlisting>

				</example>
				 <para>
					Le format du fichier <filename>/etc/postfix/vmailbox</filename> est de nouveau très simple : deux champs séparés par des blancs. Le premier indique une adresse électronique de l'un des domaines virtuels et le second l'emplacement relatif de la boîte aux lettres associée (par rapport au répertoire donné par <emphasis>virtual_mailbox_base</emphasis>). Si le nom de la boîte aux lettres se termine par une barre de division (<literal>/</literal>), cette boîte sera stockée au format <emphasis>maildir</emphasis> ; dans le cas contraire, c'est le traditionnel <emphasis>mbox</emphasis> qui sera retenu. Le format <emphasis>maildir</emphasis> emploie un répertoire complet pour représenter la boîte aux lettres et chaque message est stocké dans un fichier. A contrario, une boîte aux lettres au format <emphasis>mbox</emphasis> est stockée dans un seul fichier et chaque ligne débutant par <literal>From </literal> (<literal>From</literal> suivi d'une espace) marque le début d'un nouveau message électronique.
				</para>
				 <example>
					<title>Fichier <filename>/etc/postfix/vmailbox</filename></title>
					 
<programlisting>
# le courrier de jean est stocké au format maildir 
# (1 fichier par courrier dans un répertoire privé)
jean@falcot.org falcot.org/jean/
# le courrier de sophie est stocké dans un fichier 
# "mbox" traditionnel (tous les courriers concaténés
# dans un fichier)
sophie@falcot.org falcot.org/sophie
</programlisting>

				</example>

			</section>

		</section>
		 <section id="sect.restrictions-for-receiving-and-sending">
			<title>Restrictions à la réception et à l'envoi</title>
			 <para>
				Avec le nombre croissant de messages non sollicités <foreignphrase>(spams)</foreignphrase>, il est nécessaire d'être de plus en plus strict sur les messages que le serveur accepte. Cette section présente les différentes stratégies intégrées à Postfix.
			</para>
			 <sidebar> <title><emphasis>CULTURE</emphasis> Le problème du spam</title>
			 <indexterm>
				<primary>spam</primary>
			</indexterm>
			 <para>
				Le terme de spam désigne toutes les publicités non sollicitées (en anglais, on parle d'UCE — <foreignphrase>Unsolicited Commercial Email</foreignphrase>) qui inondent nos boîtes aux lettres électroniques et les spammeurs sont les gens sans scrupules qui les expédient. Peu leur importent les nuisances qu'ils causent, statistiquement il suffit qu'un très faible pourcentage de personnes se laissent tenter par leurs offres pour qu'ils rentrent dans leurs frais. Le coût d'expédition d'un message électronique est en effet très faible. Toute adresse électronique publique (par exemple, employée sur un forum web, apparaissant dans une archive de liste de diffusion, citée dans un blog, etc.) sera découverte par les robots des spammeurs et sera soumise à un flux incessant de messages non sollicités.
			</para>
			 <para>
				Face à ces nuisances, tous les administrateurs informatiques essaient de mettre en place des filtres anti-spam, mais les spammeurs cherchent sans arrêt à les contourner. Certains n'hésitent pas à faire appel aux services de réseaux mafieux contrôlant de nombreuses machines compromises par un ver. Les dernières statistiques estiment que 95 % des courriers expédiés sont des spams !
			</para>
			 </sidebar> <section>
				<title>Restreindre l'accès en fonction de l'adresse IP</title>
				 <para>
					La directive <literal>smtpd_client_restrictions</literal> contrôle les machines autorisées à communiquer avec le serveur de courrier électronique.
				</para>
				 <example>
					<title>Restrictions en fonction de l'adresse du client</title>
					 
<programlisting>
smtpd_client_restrictions = permit_mynetworks,
    warn_if_reject reject_unknown_client,
    check_client_access hash:/etc/postfix/access_clientip,
    reject_rbl_client sbl-xbl.spamhaus.org,
    reject_rbl_client list.dsbl.org
</programlisting>

				</example>
				 <para>
					Lorsqu'une variable contient une liste de règles comme dans l'exemple ci-dessus, il faut savoir que celles-ci sont évaluées dans l'ordre, de la première à la dernière. Chaque règle peut accepter le message, le refuser ou le laisser poursuivre son chemin à travers celles qui suivent. L'ordre a donc une importance et l'inversion de deux règles peut mettre en place un comportement très différent.
				</para>
				 <para>
					La directive <literal>permit_mynetworks</literal>, placée en tête de la liste des règles, accepte inconditionnellement toute machine du réseau local (tel que défini par la variable <literal>mynetworks</literal> dans la configuration).
				</para>
				 <para>
					La deuxième directive refuse normalement les machines dépourvues de configuration DNS totalement valide. Une configuration valide dispose d'une résolution inverse fonctionnelle et le nom DNS renvoyé pointe sur l'adresse IP employée. Cette restriction est généralement trop sévère, de nombreux serveurs de courrier électronique ne disposant pas de DNS inverse. C'est pourquoi les administrateurs de Falcot ont précédé la directive <literal>reject_unknown_client</literal> de <literal>warn_if_reject</literal>, qui transforme le refus en simple avertissement enregistré dans les logs. Ils peuvent ainsi surveiller le nombre de messages qui auraient été refusés et décider plus tard d'activer ou non cette règle en connaissant pleinement ses effets.
				</para>
				 <sidebar> <title><emphasis>ASTUCE</emphasis> Tables <foreignphrase>access</foreignphrase></title>
				 <para>
					Les différents critères de restriction incluent des tables (modifiables par les administrateurs) de combinaisons expéditeurs/adresses IP/noms de machines autorisés ou interdits. Ces tables peuvent être créées en recopiant une version décompressée du fichier <filename>/usr/share/doc/postfix-doc/examples/access.gz</filename> sous le nom indiqué. C'est un modèle autodocumenté dans ses commentaires. Chaque table documentera ainsi sa propre syntaxe.
				</para>
				 <para>
					La table <filename>/etc/postfix/access_clientip</filename> donne la liste des adresses IP et réseau. La table <filename>/etc/postfix/access_helo</filename> fournit celle des noms de machines et de domaines. Enfin, la table <filename>/etc/postfix/access_sender</filename> précise les adresses électroniques. Après toute modification, chacun de ces fichiers doit être transformé en table de hachage, c'est-à-dire en une forme optimisée pour les accès rapides, par la commande <command>postmap /etc/postfix/<replaceable>fichier</replaceable></command>.
				</para>
				 </sidebar> <para>
					La troisième directive permet à l'administrateur de mettre en place une liste noire et une liste blanche de serveurs de courrier électronique, stockées dans le fichier <filename>/etc/postfix/access_clientip</filename>. Une liste blanche permet à l'administrateur de préciser les serveurs de confiance dispensés des règles suivantes.
				</para>
				 <para>
					Les deux dernières règles de l'exemple refusent tout message provenant d'un serveur présent dans l'une des différentes listes noires indiquées (RBL signifie <foreignphrase>Remote Black Lists</foreignphrase>, ou listes noires distantes). Celles-ci recensent les machines mal configurées employées par les spammeurs pour relayer leur courrier, ainsi que les relais inhabituels que constituent des machines infectées par des vers ou virus ayant cet effet.
				</para>
				 <indexterm>
					<primary>RBL</primary>
				</indexterm>
				 <indexterm>
					<primary><foreignphrase>Remote Black List</foreignphrase></primary>
				</indexterm>
				 <sidebar> <title><emphasis>ASTUCE</emphasis> Liste blanche et RBL</title>
				 <para>
					Les listes noires recensent parfois un serveur légitime victime d'un incident. Tout courrier issu de ce serveur serait alors refusé à moins que vous ne l'ayez listé dans la liste blanche associée au fichier <filename>/etc/postfix/access_clientip</filename>.
				</para>
				 <para>
					Pour cette raison, il est prudent de placer dans une liste blanche les serveurs de messagerie de confiance et avec qui vous échangez beaucoup de courriers.
				</para>
				 </sidebar>
			</section>
			 <section>
				<title>Vérifier la validité de la commande <literal>EHLO</literal> ou <literal>HELO</literal></title>
				 <para>
					Chaque échange SMTP doit débuter par l'envoi d'une commande <literal>HELO</literal> (ou <literal>EHLO</literal>) suivie du nom du serveur de courrier électronique, dont il est possible de vérifier la validité.
				</para>
				 <indexterm>
					<primary><literal>HELO</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>EHLO</literal></primary>
				</indexterm>
				 <example>
					<title>Restrictions sur le nom annoncé lors du <literal>EHLO</literal></title>
					 
<programlisting>
smtpd_helo_restrictions = permit_mynetworks,
    reject_invalid_hostname,
    check_helo_access hash:/etc/postfix/access_helo,
    reject_non_fqdn_hostname,
    warn_if_reject reject_unknown_hostname
</programlisting>

				</example>
				 <para>
					La première directive <literal>permit_mynetworks</literal> autorise toutes les machines du réseau local à s'annoncer librement. C'est important car certains logiciels de courrier électronique respectent mal cette partie du protocole SMTP et peuvent donc annoncer des noms fantaisistes.
				</para>
				 <para>
					La règle <literal>reject_invalid_hostname</literal> refuse tout courrier dont l'annonce <literal>EHLO</literal> indique un nom de machine syntaxiquement incorrect. La règle <literal>reject_non_fqdn_hostname</literal> refuse tout message dont le nom de machine annoncé n'est pas complètement qualifié (un nom qualifié inclut le nom de domaine). La règle <literal>reject_unknown_hostname</literal> refuse le courrier si la machine annoncée n'existe pas dans la base de données du DNS. Cette dernière règle refusant malheureusement trop de messages, elle est atténuée par le <literal>warn_if_reject</literal> pour évaluer son impact avant de décider de l'activer ou non.
				</para>
				 <para>
					L'emploi de <literal>permit_mynetworks</literal> au début a l'effet secondaire intéressant de n'appliquer les règles suivantes qu'à des machines extérieures au réseau local. Il est ainsi possible de mettre en liste noire tous ceux qui s'annoncent membres du réseau <literal>falcot.com</literal>... ce qui s'effectue en ajoutant la ligne <literal>falcot.com REJECT You're not in our network!</literal> au fichier <filename>/etc/postfix/access_helo</filename>.
				</para>

			</section>
			 <section>
				<title>Accepter ou refuser en fonction de l'émetteur (annoncé)</title>
				 <para>
					Chaque message envoyé est associé à un expéditeur annoncé par la commande <literal>MAIL FROM</literal> du protocole SMTP, information qu'il est possible de vérifier de plusieurs manières.
				</para>
				 <indexterm>
					<primary><literal>MAIL FROM</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>courrier électronique</primary>
					<secondary>filtrage sur l'expéditeur</secondary>
				</indexterm>
				 <example>
					<title>Vérifications sur l'expéditeur</title>
					 
<programlisting>
smtpd_sender_restrictions = 
    check_sender_access hash:/etc/postfix/access_sender,
    reject_unknown_sender_domain, reject_unlisted_sender,
    reject_non_fqdn_sender
</programlisting>

				</example>
				 <para>
					La table <filename>/etc/postfix/access_sender</filename> associe des traitements particuliers à certains expéditeurs. En général, il s'agit simplement de les placer dans une liste blanche ou noire.
				</para>
				 <para>
					La règle <literal>reject_unknown_sender_domain</literal> requiert un domaine d'expéditeur valide, nécessaire à une adresse valide. La règle <literal>reject_unlisted_sender</literal> refuse les expéditeurs locaux si leur adresse n'existe pas. Personne ne peut ainsi envoyer de courrier issu d'une adresse invalide dans le domaine <literal>falcot.com</literal>. Tout message d'expéditeur <literal>tartempion@falcot.com</literal> ne serait donc accepté que si cette adresse existe vraiment.
				</para>
				 <para>
					Enfin, la règle <literal>reject_non_fqdn_sender</literal> refuse les messages en provenance d'adresses électroniques sans nom de domaine complètement qualifié. Concrètement, elle refusera un courrier provenant de <literal>utilisateur@machine</literal> : celui-ci doit s'annoncer comme <literal>utilisateur@machine.domaine.fr</literal> ou <literal>utilisateur@domaine.fr</literal>.
				</para>

			</section>
			 <section>
				<title>Accepter ou refuser en fonction du destinataire</title>
				 <para>
					Chaque courrier compte un ou plusieurs destinataires, communiqués par l'intermédiaire de la commande <literal>RCPT TO</literal> du protocole SMTP. On pourra également vérifier ces informations, même si c'est moins intéressant que pour l'expéditeur.
				</para>
				 <indexterm>
					<primary>RCPT TO</primary>
				</indexterm>
				 <indexterm>
					<primary>courrier électronique</primary>
					<secondary>filtrage sur le destinataire</secondary>
				</indexterm>
				 <example>
					<title>Vérifications sur le destinataire</title>
					 
<programlisting>
smtpd_recipient_restrictions = permit_mynetworks, 
    reject_unauth_destination, reject_unlisted_recipient, 
    reject_non_fqdn_recipient
</programlisting>

				</example>
				 <para>
					<literal>reject_unauth_destination</literal> est la règle de base imposant à tout courrier provenant de l'extérieur de nous être destiné ; dans le cas contraire, il faut refuser de relayer le message. Sans cette règle, votre serveur est un relais ouvert qui permet aux spammeurs d'envoyer des courriers non sollicités par son intermédiaire. Elle est donc indispensable et on la placera de préférence en début de liste pour qu'aucune autre règle ne risque d'autoriser le passage du courrier avant d'avoir éliminé les messages ne concernant pas ce serveur.
				</para>
				 <para>
					La règle <literal>reject_unlisted_recipient</literal> refuse les messages à destination d'utilisateurs locaux inexistants (ce qui est logique). Enfin, la règle <literal>reject_non_fqdn_recipient</literal> refuse les adresses électroniques non qualifiées. Il est ainsi impossible d'écrire à <literal>jean</literal> ou à <literal>jean@machine</literal> ; il faut employer la forme complète de l'adresse : <literal>jean@machine.falcot.com</literal> ou <literal>jean@falcot.com</literal>.
				</para>

			</section>
			 <section>
				<title>Restrictions associées à la commande <literal>DATA</literal></title>
				 <para>
					La commande <literal>DATA</literal> du protocole SMTP précède l'envoi des données contenues dans le message. Elle ne fournit aucune information en soi, mais prévient de ce qui va suivre. Il est pourtant possible de lui mettre en place des contrôles.
				</para>
				 <indexterm>
					<primary><literal>DATA</literal></primary>
				</indexterm>
				 <example>
					<title>Restriction sur la commande <literal>DATA</literal></title>
					 
<programlisting>
smtpd_data_restrictions = reject_unauth_pipelining
</programlisting>

				</example>
				 <para>
					La règle <literal>reject_unauth_pipelining</literal> refuse le message si le correspondant envoie une commande sans avoir attendu la réponse à la commande précédente. Les robots des spammeurs font régulièrement cela : pour travailler plus vite, ils se moquent des réponses et visent seulement à envoyer un maximum de courriers, dans le laps de temps le plus court.
				</para>

			</section>
			 <section>
				<title>Application des restrictions</title>
				 <para>
					Bien que toutes les règles évoquées précédemment soient prévues pour vérifier les informations à différents moments d'un échange SMTP, le refus réel n'est signifié par Postfix que lors de la réponse à la commande <literal>RCPT TO</literal> (annonce du destinataire).
				</para>
				 <para>
					Ainsi, même si le message est refusé suite à une commande <literal>EHLO</literal> invalide, Postfix connaîtra l'émetteur et le destinataire lorsqu'il annoncera le refus. Il peut donc enregistrer un message de log plus explicite que s'il avait interrompu la connexion dès le début. De plus, beaucoup de clients SMTP ne s'attendent pas à subir un échec sur l'une des premières commandes du protocole SMTP et les clients mal programmés seront moins perturbés par ce refus tardif.
				</para>
				 <para>
					Dernier avantage de ce choix : les règles peuvent associer les informations obtenues à différents stades de l'échange SMTP. On pourra ainsi refuser une connexion non locale si elle s'annonce avec un émetteur local.
				</para>

			</section>
			 <section>
				<title>Filtrer en fonction du contenu du message</title>
				 <para>
					Le système de vérification et de restriction ne serait pas complet sans moyen de réagir au contenu du message. Postfix distingue deux types de vérifications : sur les en-têtes du courrier et sur le corps du message.
				</para>
				 <example>
					<title>Activation des filtres sur le contenu</title>
					 
<programlisting>
header_checks = regexp:/etc/postfix/header_checks
body_checks = regexp:/etc/postfix/body_checks
</programlisting>

				</example>
				 <indexterm>
					<primary>courrier électronique</primary>
					<secondary>filtrage sur le contenu</secondary>
				</indexterm>
				 <para>
					Les deux fichiers contiennent une liste d'expressions rationnelles <foreignphrase>(regexp)</foreignphrase>. Chacune est associée à une action à exécuter si elle est satisfaite par les en-têtes ou le corps du message.
				</para>
				 <sidebar> <title><emphasis>DÉCOUVERTE</emphasis> Tables <foreignphrase>regexp</foreignphrase></title>
				 <para>
					Le fichier <filename>/usr/share/doc/postfix-doc/examples/header_checks.gz</filename> peut servir de modèle pour créer les fichiers <filename>/etc/postfix/header_checks</filename> et <filename>/etc/postfix/body_checks</filename>. Il contient de nombreux commentaires explicatifs.
				</para>
				 </sidebar> <example>
					<title>Exemple de fichier <filename>/etc/postfix/header_checks</filename></title>
					 
<programlisting>
/^X-Mailer: GOTO Sarbacane/ REJECT I fight spam (GOTO Sarbacane)
/^Subject: *Your email contains VIRUSES/ DISCARD virus notification
</programlisting>

				</example>
				 <sidebar id="sidebar.regexp"> <title><emphasis>B.A.-BA</emphasis> Expression rationnelle</title>
				 <para>
					Le terme d'expression rationnelle (en anglais, <foreignphrase>regular expression</foreignphrase> ou <foreignphrase>regexp</foreignphrase>) désigne une notation générique servant à décrire le contenu et/ou la structure d'une chaîne de caractères recherchée. Certains caractères spéciaux permettent de définir des alternatives (par exemple, « assez|trop » pour « assez » ou « trop »), des ensembles de caractères possibles (« [0-9] » pour un chiffre entre 0 et 9, ou « . » pour n'importe quel caractère), des quantifications (« s? » pour « » ou « s », à savoir 0 ou une fois le caractère « s » ; « s+ » pour un ou plusieurs caractères « s » consécutifs, etc.). La parenthèse permet de grouper des motifs de recherche.
				</para>
				 <para>
					La syntaxe précise de ces expressions varie selon l'outil qui les emploie mais les fonctionnalités de base restent les mêmes. <ulink type="block" url="http://fr.wikipedia.org/wiki/Expression_rationnelle" />
				</para>
				 </sidebar> <para>
					La première vérifie l'en-tête indiquant le logiciel de courrier électronique envoyé : si elle trouve <literal>GOTO Sarbacane</literal> (un logiciel d'envoi en masse de courriers), elle refuse le message. La seconde expression contrôle le sujet du message : s'il indique une notification de virus sans intérêt, elle accepte le message mais le supprime immédiatement.
				</para>
				 <para>
					L'emploi de ces filtres est à double tranchant, car il est facile de les faire trop génériques et de perdre des courriers légitimes. Dans ce cas, non seulement les messages seront perdus, mais leurs expéditeurs recevront des messages d'erreur inopportuns — souvent agaçants.
				</para>

			</section>

		</section>
		 <section id="sect.setting-up-greylisting">
			<title>Mise en place du <foreignphrase>greylisting</foreignphrase></title>
			 <indexterm>
				<primary><foreignphrase>greylisting</foreignphrase></primary>
			</indexterm>
			 <para>
				Le <foreignphrase>greylisting</foreignphrase> est une technique de filtrage qui consiste à refuser un message avec une erreur temporaire pour finalement l'accepter à la deuxième tentative (à condition qu'un certain délai se soit écoulé entre les deux tentatives). Ce filtre est particulièrement efficace contre les spams envoyés par les vers et les virus qui infectent de nombreuses machines compromises. En effet, il est rare que ces logiciels prennent le soin de vérifier le code retour SMTP et stockent les messages pour les renvoyer plus tard, d'autant plus qu'un certain nombre des adresses qu'ils ont récoltées sont effectivement invalides et que réessayer ne peut que leur faire perdre du temps.
			</para>
			 <para>
				Postfix n'offre pas cette fonctionnalité de manière native, mais il permet d'externaliser la décision d'accepter ou rejeter un message donné. Le paquet <emphasis role="pkg">postgrey</emphasis> propose justement un logiciel prévu pour s'interfacer avec ce service de délégation des politiques d'accès.
			</para>
			 <para>
				<emphasis role="pkg">postgrey</emphasis> installé, il se présente comme un démon en attente de connexions sur le port 10 023. Il suffit alors d'employer le paramètre <literal>check_policy_service</literal> comme restriction supplémentaire :
			</para>
			 
<programlisting>
smtpd_recipient_restrictions = permit_mynetworks,
    [...]
    check_policy_service inet:127.0.0.1:10023
</programlisting>
			 <para>
				À chaque fois que Postfix doit évaluer cette restriction, il va se connecter au démon <command>postgrey</command> et lui envoyer des informations concernant le message concerné. De son côté, Postgrey récupère le triplet (adresse IP, expéditeur, destinataire) et regarde dans sa base de données s'il l'a déjà rencontré récemment. Si oui, il répond en ordonnant d'accepter le message, sinon il répond de le refuser temporairement et enregistre dans sa base de données le triplet en question.
			</para>
			 <para>
				Évidemment, le grand désavantage du greylisting est qu'il va retarder la réception des courriels légitimes et parfois ces délais sont inacceptables. Il inflige également un coût important aux serveurs qui envoient de nombreux courriers légitimes.
			</para>
			 <sidebar> <title><emphasis>EN PRATIQUE</emphasis> Limites du greylisting</title>
			 <para>
				En théorie, le greylisting ne retarde que le premier courriel d'un expéditeur donné pour un destinataire donné et le délai est de l'ordre de quelques minutes à quelques dizaines de minutes. Cependant, la réalité n'est pas toujours si simple. En effet, certains gros fournisseurs d'accès emploient plusieurs serveurs SMTP en grappe et après le premier refus, rien ne garantit que le même serveur effectue la deuxième tentative. Si ce n'est pas le cas, la deuxième tentative échouera à nouveau et, au lieu d'un délai de quelques minutes, on peut constater des délais de plusieurs heures (jusqu'à ce que l'on retombe sur un serveur qui avait déjà essayé) car à chaque nouvelle erreur, le serveur SMTP augmente le délai d'attente avant le prochain essai.
			</para>
			 <para>
				Ainsi donc, l'adresse IP entrante pour un expéditeur donné n'est pas forcément fixe dans le temps. De même, l'adresse d'un expéditeur donné n'est pas forcément fixe non plus. De nombreux logiciels de listes de diffusion encodent des informations dans l'adresse de l'expéditeur afin de traiter de manière automatisée les retours d'erreurs <foreignphrase>(bounces)</foreignphrase>. Chaque nouveau message d'une liste de diffusion peut devoir repasser par le filtre du greylisting, ce qui implique à l'émetteur de le stocker. Pour les très grosses listes avec des dizaines de milliers d'abonnés, cela peut rapidement devenir problématique.
			</para>
			 <para>
				Pour ces raisons, Postgrey dispose d'une liste blanche de sites correspondant à ces caractéristiques. Pour ceux-là, il répond d'accepter le message immédiatement. Il est possible de la personnaliser en éditant le fichier <filename>/etc/postgrey/whitelist_clients</filename>.
			</para>
			 </sidebar> <sidebar> <title><emphasis>POUR ALLER PLUS LOIN</emphasis> Greylisting sélectif avec <emphasis role="pkg">milter-greylist</emphasis></title>
			 <para>
				Pour limiter les inconvénients du greylisting, il est possible de ne l'appliquer qu'à un sous-ensemble des clients qui sont déjà considérés comme des sources probables de spam parce qu'ils apparaissent dans une liste noire DNS. Ceci n'est pas possible avec <emphasis role="pkg">postgrey</emphasis> mais le paquet <emphasis role="pkg">milter-greylist</emphasis> permet de l'effectuer.
			</para>
			 <para>
				Dans ce scénario, comme les listes noires DNS ne déclenchent aucun refus définitif, il est possible d'employer des listes noires DNS assez agressives et notamment celles qui listent toutes les adresses IP dynamiques des clients des fournisseurs d'accès, comme <literal>pbl.spamhaus.org</literal> ou <literal>dul.dnsbl.sorbs.net</literal>.
			</para>
			 <para>
				Comme <emphasis role="pkg">milter-greylist</emphasis> utilise l'interface standard de <emphasis>milter</emphasis> définie par Sendmail, la configuration au niveau de Postfix se limite à <literal>smtpd_milters = unix:/var/run/milter-greylist/milter-greylist.sock</literal>. La page de manuel <citerefentry><refentrytitle>greylist.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> documente le fichier <filename>/etc/milter-greylist/greylist.conf</filename> et les différentes façons de configurer <emphasis role="pkg">milter-greylist</emphasis>. Il faut aussi éditer le fichier <filename>/etc/default/milter-greylist</filename> pour activer le service.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Personnalisation des filtres en fonction du destinataire</title>
			 <para>
				La <xref linkend="sect.restrictions-for-receiving-and-sending" /> et la <xref linkend="sect.setting-up-greylisting" /> ont passé en revue un grand nombre de restrictions possibles. Ces dernières servent essentiellement à limiter le nombre de spams reçus, mais elles présentent toutes des petits inconvénients. C'est pourquoi il est de plus en plus fréquent de devoir personnaliser le filtrage effectué en fonction du destinataire. Chez Falcot, le greylisting s'avérera intéressant pour la plupart des utilisateurs sauf quelques personnes dont le travail dépend de la faible latence du courrier électronique (le service d'assistance technique, par exemple). De même, le service commercial rencontre parfois des difficultés pour recevoir les réponses de certains fournisseurs asiatiques car ils sont répertoriés dans des listes noires. Ils ont donc demandé une adresse e-mail non filtrée pour pouvoir correspondre malgré tout.
			</para>
			 <para>
				Postfix gère cela grâce à un concept de « classes de restrictions ». On référence les classes dans la variable <literal>smtpd_restriction_classes</literal> et on les définit par simple affectation tout comme on définirait <literal>smtpd_recipient_restrictions</literal>. Ensuite la directive <literal>check_recipient_access</literal> permet d'employer une table de correspondances pour définir les restrictions à employer pour un destinataire donné.
			</para>
			 <example>
				<title>Définir des classes de restriction dans <filename>main.cf</filename></title>
				 
<programlisting>smtpd_restriction_classes = greylisting, aggressive, permissive

greylisting = check_policy_service inet:127.0.0.1:10023
aggressive = reject_rbl_client sbl-xbl.spamhaus.org,
        check_policy_service inet:127.0.0.1:10023
permissive = permit

smtpd_recipient_restrictions = permit_mynetworks,
        reject_unauth_destination,
        check_recipient_access hash:/etc/postfix/recipient_access
</programlisting>

			</example>
			 <example>
				<title>Fichier <filename>/etc/postfix/recipient_access</filename></title>
				 
<programlisting>
# Adresses sans filtrage
postmaster@falcot.com  permissive
support@falcot.com     permissive
sales-asia@falcot.com  permissive

# Filtrage agressif pour quelques privilégiés
joe@falcot.com         aggressive

# Règle spéciale pour le robot de gestion de listes
sympa@falcot.com       reject_unverified_sender

# Par défaut, le greylisting
falcot.com             greylisting
</programlisting>

			</example>

		</section>
		 <section id="sect.postfix-antivirus">
			<title>Intégration d'un antivirus</title>
			 <indexterm>
				<primary>antivirus</primary>
			</indexterm>
			 <para>
				Avec les nombreux virus circulant en pièce jointe des courriers électroniques, il est important de placer un antivirus à l'entrée du réseau de l'entreprise car, même après une campagne de sensibilisation sur ce sujet, certains utilisateurs cliqueront sur l'icône d'une pièce jointe liée à un message manifestement très suspect.
			</para>
			 <para>
				L'antivirus libre retenu par les administrateurs de Falcot est <command>clamav</command>. En plus du paquet <emphasis role="pkg">clamav</emphasis>, ils ont installé les paquets <emphasis role="pkg">arj</emphasis>, <emphasis role="pkg">unzoo</emphasis>, <emphasis role="pkg">unrar</emphasis> et <emphasis role="pkg">lha</emphasis>, qui permettent aussi à l'antivirus d'analyser le contenu d'archives dans l'un de ces formats.
			</para>
			 <indexterm>
				<primary><command>clamav</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>clamav-milter</command></primary>
			</indexterm>
			 <para>
				Pour interfacer cet antivirus au serveur de messagerie, on emploiera le logiciel <command>clamav-milter</command>. Un <emphasis>milter</emphasis> (terme dérivé de l'expression <foreignphrase>mail filter</foreignphrase>) est un logiciel de filtrage de courriers spécialement conçu pour s'interfacer avec les serveurs de courrier électronique. Les <emphasis>milters</emphasis> exploitent une interface de programmation (API) dédiée qui assure de bien meilleures performances comparé aux filtres gérés en dehors des serveurs de courrier. <emphasis>Sendmail</emphasis> a été le premier à introduire cette technologie mais <emphasis>Postfix</emphasis> lui a emboîté le pas.
			</para>
			 <sidebar> <title><emphasis>DÉCOUVERTE</emphasis> Un milter pour Spamassassin</title>
			 <indexterm>
				<primary><emphasis role="pkg">spamass-milter</emphasis></primary>
			</indexterm>
			 <para>
				Le paquet <emphasis role="pkg">spamass-milter</emphasis> contient un filtre basé sur le célèbre logiciel de détection de courriels non sollicités <emphasis>SpamAssassin</emphasis>. Il peut être employé pour marquer les messages comme des spams probables (en ajoutant un en-tête supplémentaire) et/ou pour les rejeter si le score du message dépasse une certaine limite.
			</para>
			 </sidebar> <para>
				Une fois le paquet <emphasis role="pkg">clamav-milter</emphasis> installé, le milter devrait être reconfiguré pour utiliser un port TCP plutôt que la socket nommée proposée par défaut. Lors de l'exécution de <command>dpkg-reconfigure clamav-milter</command>, il s'agit de répondre <literal>inet:10002@127.0.0.1</literal> à la question portant sur l'interface de communication avec Sendmail.
			</para>
			 <sidebar> <title><emphasis>NOTE</emphasis> Vrai port TCP ou socket nommée ?</title>
			 <para>
				La raison pour laquelle nous utilisons un vrai port TCP plutôt qu'une socket nommée est que le démon Postfix est souvent enfermé dans un <foreignphrase>chroot</foreignphrase> et n'a pas accès au répertoire dans lequel la socket est créée. Il serait toutefois possible de conserver l'utilisation de la socket, en modifiant son emplacement pour qu'elle soit dans le <foreignphrase>chroot</foreignphrase> (donc sous <filename>/var/spool/postfix/</filename>).
			</para>
			 </sidebar> <para>
				La configuration standard de <command>clamav</command> convient dans la majorité des situations mais <command>dpkg-reconfigure clamav-base</command> permet de personnaliser les paramètres les plus importants.
			</para>
			 <para>
				La dernière étape consiste à demander à Postfix d'utiliser le logiciel de filtrage que l'on vient de configurer. Cela se fait simplement en ajoutant une directive dans <filename>/etc/postfix/main.cf</filename> :
			</para>
			 
<programlisting>
# Virus check with clamav-milter
smtpd_milters = inet:[127.0.0.1]:10002
</programlisting>
			 <para>
				En cas de problèmes avec l'antivirus, il suffira de commenter cette ligne et d'exécuter la commande <command>service postfix reload</command> pour faire prendre en compte cette modification.
			</para>
			 <sidebar> <title><emphasis>EN PRATIQUE</emphasis> Tester l'antivirus</title>
			 <para>
				Une fois l'antivirus mis en place, il convient de vérifier qu'il opère correctement. Pour cela, le plus simple est d'envoyer un courrier électronique test avec en pièce jointe le fichier <filename>eicar.com</filename> ou <filename>eicar.com.zip</filename> que l'on peut récupérer en ligne : <ulink type="block" url="http://www.eicar.org/86-0-Intended-use.html" />
			</para>
			 <para>
				Il ne s'agit pas d'un vrai virus mais d'un fichier reconnu comme tel par tous les antivirus du marché afin que chacun puisse facilement vérifier que l'installation fonctionne comme prévu.
			</para>
			 </sidebar> <para>
				Les messages traités par Postfix passent désormais systématiquement par un détecteur-filtre antivirus.
			</para>

		</section>
		 <section id="sect.authenticated-smtp">
			<title>SMTP authentifié</title>
			 <para>
				Pour être capable d'envoyer des courriers électroniques, il faut pouvoir accéder à un serveur SMTP et il faut que ce dernier vous y autorise. Lorsqu'on est itinérant, cela nécessite de changer régulièrement de serveur SMTP puisque celui de Falcot ne va pas accepter de relayer des messages de la part d'une adresse IP apparemment extérieure à l'entreprise. Il y a deux solutions : soit l'itinérant installe son propre serveur de courrier sur son ordinateur, soit il continue d'utiliser le serveur SMTP de l'entreprise mais il s'authentifie au préalable comme étant un employé de la société. La première solution n'est pas conseillée car l'ordinateur n'est pas connecté en permanence et il ne peut donc pas essayer régulièrement de réémettre en cas de problème. Nous allons donc voir comment mettre en place la seconde.
			</para>
			 <para>
				L'authentification SMTP de Postfix s'appuie sur SASL <foreignphrase>(Simple Authentication and Security Layer)</foreignphrase>. Il faut installer les paquets <emphasis role="pkg">libsasl2-modules</emphasis> et <emphasis role="pkg">sasl2-bin</emphasis>, puis il convient d'enregistrer un mot de passe dans la base SASL pour chaque utilisateur qui doit pouvoir s'authentifier sur le serveur SMTP. On utilise pour cela la commande <command>saslpasswd2</command>. L'option <literal>-u</literal> précise le domaine d'authentification, il doit correspondre au paramètre <literal>smtpd_sasl_local_domain</literal> de Postfix. L'option <literal>-c</literal> sert à créer un utilisateur et l'option <literal>-f</literal> permet de modifier une base SASL située ailleurs qu'à son emplacement standard (<filename>/etc/sasldb2</filename>).
			</para>
			 
<screen role="scale">
<computeroutput># </computeroutput><userinput>saslpasswd2 -h `postconf -h myhostname` -f /var/spool/postfix/etc/sasldb2 -c jean</userinput>
<computeroutput>[... saisir deux fois le mot de passe de jean ...]</computeroutput></screen>
			 <para>
				Notons au passage que l'on a créé la base de données SASL dans le répertoire de Postfix. Par souci de cohérence, on va faire pointer <filename>/etc/sasldb2</filename> vers la base employée par Postfix. Cela s'effectue avec la commande <command>ln -sf /var/spool/postfix/etc/sasldb2 /etc/sasldb2</command>.
			</para>
			 <para>
				Reste maintenant à configurer Postfix pour faire usage de SASL. En premier lieu, il faut ajouter l'utilisateur <literal>postfix</literal> dans le groupe <literal>sasl</literal> afin qu'il puisse accéder à la base de données des comptes SASL. Ensuite, il faut ajouter quelques paramètres pour activer SASL, puis modifier le paramètre <literal>smtpd_recipient_restrictions</literal> pour autoriser les clients authentifiés par SASL à envoyer des courriels à tous les destinataires.
			</para>
			 <example>
				<title>Modification de <filename>/etc/postfix/main.cf</filename> pour activer SASL</title>
				 
<programlisting>
# Activer l'authentification par SASL
smtpd_sasl_auth_enable = yes
# Définir le domaine d'authentification SASL employé
smtpd_sasl_local_domain = $myhostname
[...]
# Ajout de permit_sasl_authenticated avant reject_unauth_destination
# pour relayer le courrier des usagers authentifiés par SASL
smtpd_recipient_restrictions = permit_mynetworks,
    permit_sasl_authenticated,
    reject_unauth_destination,
[...]
</programlisting>

			</example>
			 <sidebar> <title><emphasis>COMPLÉMENTS</emphasis> Client SMTP authentifié</title>
			 <para>
				La plupart des logiciels de messagerie électronique savent désormais s'authentifier auprès d'un serveur SMTP pour expédier le courrier sortant. Il suffit de configurer les paramètres correspondants. Si ce n'est pas le cas, il est possible d'employer un serveur Postfix local et de le configurer pour relayer le courrier vers le serveur SMTP distant. Dans ce cas, Postfix sera le client dans l'authentification SASL. Voici les paramètres nécessaires :
			</para>
			 
<programlisting>
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
relay_host = [mail.falcot.com]
</programlisting>
			 <para>
				Le fichier <filename>/etc/postfix/sasl_passwd</filename> doit contenir le nom d'utilisateur et le mot de passe à employer pour s'authentifier sur le serveur smtp.falcot.com. Voici un exemple :
			</para>
			 
<programlisting>
[mail.falcot.com]   joe:LyinIsji
</programlisting>
			 <para>
				Comme pour toutes les tables de correspondance Postfix, il faut penser à employer <command>postmap</command> pour régénérer <filename>/etc/postfix/sasl_passwd.db</filename>.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.http-web-server">
		<title>Serveur web (HTTP)</title>
		 <para>
			Les administrateurs de Falcot SA ont choisi Apache comme serveur HTTP. Debian <emphasis role="distribution">Jessie</emphasis> fournit la version 2.4.10 de ce logiciel.
		</para>
		 <indexterm>
			<primary><command>apache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>serveur</primary>
			<secondary>web</secondary>
		</indexterm>
		 <indexterm>
			<primary>web, serveur</primary>
		</indexterm>
		 <indexterm>
			<primary>serveur</primary>
			<secondary>HTTP</secondary>
		</indexterm>
		 <indexterm>
			<primary>HTTP</primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Autres serveurs web</title>
		 <para>
			Apache n'est que le plus connu et le plus répandu des serveurs web, mais il en existe d'autres, qui peuvent offrir de meilleures performances dans certains cas d'usage, le plus souvent au détriment de la quantité de fonctions et modules disponibles. Lorsqu'il s'agit de servir des fichiers statiques, ou d'agir en serveur mandataire <foreignphrase>(proxy)</foreignphrase>, il est judicieux de s'intéresser à ces alternatives, parmi lesquelles on peut citer Nginx et lighttpd.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">nginx</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">lighttpd</emphasis></primary>
		</indexterm>
		 </sidebar> <section>
			<title>Installation d'Apache</title>
			 <para>
				Il suffit d'installer le paquet <emphasis role="pkg">apache2</emphasis>. Il contient tous les modules, y compris ceux qui affectent la façon dont Apache gère le traitement parallèle des nombreuses demandes (<foreignphrase>Multi-Processing Modules</foreignphrase> (MPM) — ces modules étaient auparavant fournis par des paquets distincts <emphasis role="pkg">apache2-mpm-*</emphasis>). Il entraîne aussi l'installation de <emphasis role="pkg">apache2-utils</emphasis> qui contient des utilitaires en ligne de commandes qui sont décrits plus loin.
			</para>
			 <para>
				Le module MPM employé définit la manière dont Apache traite les requêtes entrantes. Avec le MPM <foreignphrase>worker</foreignphrase> il utilise des <foreignphrase>threads</foreignphrase> (processus légers), alors qu'avec le MPM <foreignphrase>prefork</foreignphrase> il utilise un ensemble de processus créés par avance. Avec le MPM <foreignphrase>event</foreignphrase> il utilise également des <foreignphrase>threads</foreignphrase>, mais les connexions inactives (notamment celle gardées ouvertes par la fonctionnalité <emphasis>keep-alive</emphasis> du protocole HTTP) sont rendues à un <foreignphrase>thread</foreignphrase> dédié à leur gestion.
			</para>
			 <para>
				Les administrateurs de Falcot installent dans la foulée <emphasis role="pkg">libapache2-mod-php5</emphasis> pour activer PHP dans Apache. Cela entraîne la désactivation du MPM <emphasis>event</emphasis>, et active à la place <emphasis>prefork</emphasis>. En effet, PHP ne fonctionne qu'avec ce module MPM particulier.
			</para>
			 <sidebar> <title><emphasis>SÉCURITÉ</emphasis> Exécution sous l'utilisateur <literal>www-data</literal></title>
			 <indexterm>
				<primary><literal>www-data</literal></primary>
			</indexterm>
			 <indexterm>
				<primary>suexec</primary>
			</indexterm>
			 <para>
				Par défaut, Apache traite les requêtes entrantes en tant qu'utilisateur <literal>www-data</literal>. Ainsi, une faille de sécurité dans un script CGI exécuté par Apache (pour une page dynamique) ne compromet pas tout le système, mais seulement les données possédées par cet utilisateur.
			</para>
			 <para>
				L'usage du module <emphasis>suexec</emphasis> permet de changer cette règle afin que certains CGI soient exécutés avec les droits d'un autre utilisateur. Cela se paramètre avec la directive <literal>SuexecUserGroup <replaceable>utilisateur</replaceable> <replaceable>groupe</replaceable></literal> dans la configuration de Apache.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">libapache2-mpm-itk</emphasis></primary>
			</indexterm>
			 <para>
				Il est également possible d'utiliser un MPM dédié, comme celui fourni par <emphasis role="pkg">libapache2-mpm-itk</emphasis>. Celui-ci a un fonctionnement différent, en ce qu'il permet d'« isoler » les hôtes virtuels (en réalité des ensembles de pages) de manière à ce qu'ils tournent chacun sous un utilisateur différent. Ainsi, une faille dans un site web dynamique ne compromettra pas les fichiers appartenant à l'utilisateur d'un autre site web.
			</para>
			 </sidebar> <sidebar> <title><emphasis>DÉCOUVERTE</emphasis> Liste des modules</title>
			 <para>
				La liste complète des modules standards d'Apache se trouve en ligne. <ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/index.html" />
			</para>
			 </sidebar> <para>
				Apache est un serveur modulaire et la plupart des fonctionnalités sont implémentées dans des modules externes que le programme charge pendant son initialisation. La configuration par défaut n'active que les modules les plus courants et les plus utiles. Mais la commande <command>a2enmod <replaceable>module</replaceable></command> permet d'activer un nouveau module tandis que <command>a2dismod <replaceable>module</replaceable></command> le désactive. Ces deux programmes ne font rien d'autre que créer ou supprimer des liens symboliques dans <filename>/etc/apache2/mods-enabled/</filename> pointant vers des fichiers de <filename>/etc/apache2/mods-available/</filename>.
			</para>
			 <para>
				Par défaut, le serveur web écoute sur le port 80 (configuré dans <filename>/etc/apache2/ports.conf</filename>) et renvoie les pages web depuis le répertoire <filename>/var/www/html/</filename> (configuré dans <filename>/etc/apache2/sites-enabled/000-default.conf</filename>).
			</para>
			 <sidebar> <title><emphasis>POUR ALLER PLUS LOIN</emphasis> Prise en charge de SSL</title>
			 <indexterm>
				<primary>HTTPS</primary>
			</indexterm>
			 <indexterm>
				<primary>HTTP</primary>
				<secondary>sécurisé</secondary>
			</indexterm>
			 <para>
				Apache 2.4 intègre en standard le module SSL nécessaire au HTTP sécurisé (HTTPS). Il faut juste l'activer avec <command>a2enmod ssl</command> puis placer les directives nécessaires dans la configuration. Un exemple est fourni dans <filename>/etc/apache2/sites-available/default-ssl.conf</filename>. <ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/mod_ssl.html" />
			</para>
			 <para>
				Il faudra prendre quelques précautions si l'on souhaite favoriser les connexions SSL avec confidentialité persistante (<foreignphrase>Perfect Forward Secrecy</foreignphrase> — ces sessions utilisent des clés de session éphémères, ce qui assure que la compromission de la clé secrète du serveur ne mène pas à celle de messages chiffrés qui auraient été préalablement interceptés sur le réseau). Pour plus de détails, et notamment pour les recommandations de Mozilla : <ulink type="block" url="https://wiki.mozilla.org/Security/Server_Side_TLS#Apache" />
			</para>
			 <indexterm>
				<primary>confidentialité persistante (<foreignphrase>Perfect Forward Secrecy</foreignphrase>)</primary>
			</indexterm>
			 </sidebar>
		</section>
		 <section>
			<title>Configuration d'hôtes virtuels</title>
			 <para>
				Un hôte virtuel est une identité (supplémentaire) assumée par le serveur web.
			</para>
			 <indexterm>
				<primary>hôte virtuel</primary>
			</indexterm>
			 <para>
				Apache distingue deux types d'hôtes virtuels : ceux qui se basent sur l'adresse IP (ou le port) et ceux qui reposent sur le nom DNS du serveur web. La première méthode nécessite une adresse IP différente pour chaque site tandis que la seconde n'emploie qu'une adresse IP et différencie les sites par le nom d'hôte communiqué par le client HTTP (ce qui ne fonctionne qu'avec la version 1.1 du protocole HTTP, heureusement déjà employée par tous les navigateurs web).
			</para>
			 <para>
				La rareté (de plus en plus pressante) des adresses IPv4 fait en général privilégier cette deuxième méthode. Elle est cependant complexifiée si chacun des hôtes virtuels a besoin de HTTPS : le protocole SSL n'a pas toujours permis ce fonctionnement et l'extension SNI <foreignphrase>(Server Name Indication)</foreignphrase> qui le rend possible n'est pas connue de tous les navigateurs. Si plusieurs sites HTTPS doivent fonctionner sur un même serveur, on préférera donc les différencier soit par leur port, soit par leur adresse IP (en utilisant éventuellement IPv6).
			</para>
			 <para>
				La configuration par défaut d'Apache 2 exploite les hôtes virtuels basés sur le nom. De plus, un hôte virtuel par défaut a été défini dans le fichier <literal>/etc/apache2/sites-enabled/000-default.conf</literal>. Cet hôte virtuel sera employé si aucun autre hôte virtuel ne correspond à la requête du client.
			</para>
			 <sidebar> <title><emphasis>ATTENTION</emphasis> Premier hôte virtuel</title>
			 <para>
				Le premier hôte virtuel défini répondra systématiquement aux requêtes concernant des hôtes virtuels inconnus. C'est pourquoi nous avons d'abord défini ici <literal>www.falcot.com</literal>.
			</para>
			 </sidebar> <sidebar> <title><emphasis>DÉCOUVERTE</emphasis> Apache prend en charge SNI</title>
			 <indexterm>
				<primary><foreignphrase>Server Name Indication</foreignphrase></primary>
			</indexterm>
			 <para>
				Apache prend en charge une extension du protocole SSL appelée <foreignphrase>Server Name Indication</foreignphrase> (SNI). Elle permet au navigateur web d'envoyer le nom d'hôte du serveur web dès l'établissement de la connexion SSL, donc bien avant l'envoi de la requête HTTP qui sert habituellement à identifier le bon site web parmi tous les hôtes virtuels hébergés sur le même serveur (et la même adresse IP). Ainsi, Apache peut sélectionner le certificat SSL adéquat pour la communication.
			</para>
			 <para>
				Avant l'introduction de SNI, Apache employait systématiquement le certificat de l'hôte virtuel par défaut. Lorsque le certificat ne correspondait pas au site web demandé, les navigateurs affichaient donc des avertissements. Notons que ce comportement persiste lorsque l'utilisateur dispose d'un navigateur n'acceptant pas SNI. Fort heureusement la plupart des navigateurs l'exploitent désormais ; c'est le cas de Microsoft Internet Explorer depuis sa version 7.0 (sur Vista seulement, pas XP), de Mozilla Firefox depuis sa version 2.0, de Apple Safari depuis sa version 3.2.1 et de toutes les versions de Google Chrome.
			</para>
			 <para>
				Le paquet Apache fournit par Debian est compilé avec le support SNI. Aucune configuration particulière n'est donc nécessaire.
			</para>
			 <para>
				On veillera également à ce que le premier hôte virtuel (celui par défaut) dispose bien d'une configuration autorisant TLSv1 (et donc SSL). En effet, c'est toujours les paramètres du premier hôte virtuel qui sont utilisés pour établir la connexion et il faut qu'ils la permettent !
			</para>
			 </sidebar> <para>
				Chaque hôte virtuel supplémentaire est ensuite décrit par un fichier placé dans le répertoire <filename>/etc/apache2/sites-available/</filename>. Ainsi, la mise en place du domaine <literal>falcot.org</literal> se résume à créer le fichier ci-dessous, puis à l'activer avec <command>a2ensite www.falcot.org</command>.
			</para>
			 <example>
				<title>Fichier <filename>/etc/apache2/sites-available/www.falcot.org.conf</filename></title>
				 
<programlisting>
&lt;VirtualHost *:80&gt;
ServerName www.falcot.org
ServerAlias falcot.org
DocumentRoot /srv/www/www.falcot.org
&lt;/VirtualHost&gt;
</programlisting>

			</example>
			 <para>
				Le serveur Apache est ici configuré pour n'utiliser qu'un seul fichier de log pour tous les hôtes virtuels (ce qu'on pourrait changer en intégrant des directives <literal>CustomLog</literal> dans les définitions des hôtes virtuels). Il est donc nécessaire de personnaliser le format de ce fichier pour y intégrer le nom de l'hôte virtuel. Pour cela, on ajoutera un fichier <filename>/etc/apache2/conf-available/customlog.conf</filename> définissant un nouveau format (directive <literal>LogFormat</literal>) et on l'activera avec <command>a2enconf customlog</command>. Il faut également supprimer (ou passer en commentaire) la ligne <literal>CustomLog</literal> du fichier <filename>/etc/apache2/sites-available/000-default.conf</filename>.
			</para>
			 <example>
				<title>Fichier <filename>/etc/apache2/conf.d/customlog.conf</filename></title>
				 
<programlisting role="scale">
# Nouveau format de log avec nom de l'hôte virtuel (vhost)
LogFormat "%v %h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" vhost

# On emploie le format vhost en standard
CustomLog /var/log/apache2/access.log vhost
</programlisting>

			</example>

		</section>
		 <section>
			<title>Directives courantes</title>
			 <para>
				Cette section passe brièvement en revue quelques-unes des directives de configuration d'Apache les plus usitées.
			</para>
			 <indexterm>
				<primary>Apache, directives</primary>
			</indexterm>
			 <indexterm>
				<primary>directives Apache</primary>
			</indexterm>
			 <para>
				Le fichier de configuration principal contient habituellement plusieurs blocs <literal>Directory</literal> destinés à paramétrer le comportement du serveur en fonction de l'emplacement du fichier servi. À l'intérieur de ce bloc, on trouve généralement les directives <literal>Options</literal> et <literal>AllowOverride</literal>.
			</para>
			 <indexterm>
				<primary><literal>Options</literal>, directive Apache</primary>
			</indexterm>
			 <indexterm>
				<primary><literal>AllowOverride</literal>, directive Apache</primary>
			</indexterm>
			 <example>
				<title>Bloc Directory</title>
				 
<programlisting>
&lt;Directory /var/www&gt;
Options Includes FollowSymlinks
AllowOverride All
DirectoryIndex index.php index.html index.htm
&lt;/Directory&gt;
</programlisting>

			</example>
			 <para>
				La directive <literal>DirectoryIndex</literal> précise la liste des fichiers à essayer pour répondre à une requête sur un répertoire. Le premier fichier existant est appelé pour générer la réponse.
			</para>
			 <indexterm>
				<primary><literal>DirectoryIndex</literal>, directive Apache</primary>
			</indexterm>
			 <para>
				La directive <literal>Options</literal> est suivie d'une liste d'options à activer. <literal>None</literal> désactive toutes les options. Inversement, <literal>All</literal> les active toutes sauf <literal>MultiViews</literal>. Voici les options existantes :
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						<literal>ExecCGI</literal> indique qu'il est possible d'exécuter des scripts CGI. <indexterm><primary><literal>ExecCGI</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>FollowSymlinks</literal> indique au serveur qu'il doit suivre les liens symboliques et donc effectuer la requête sur le fichier réel qui en est la cible. <indexterm><primary><literal>FollowSymlinks</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>SymlinksIfOwnerMatch</literal> a le même rôle mais impose la restriction supplémentaire de ne suivre le lien que si le fichier pointé appartient au même propriétaire. <indexterm><primary><literal>SymlinksIfOwnerMatch</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>Includes</literal> active les inclusions côté serveur (<foreignphrase>Server Side Includes</foreignphrase>, ou SSI). Il s'agit de directives directement intégrées dans les pages HTML et exécutées à la volée à chaque requête. <indexterm><primary><literal>Includes</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>Indexes</literal> autorise le serveur à retourner le contenu du dossier si la requête HTTP pointe sur un répertoire dépourvu de fichier d'index (tous les fichiers de la directive <literal>DirectoryIndex</literal> ayant été tentés en vain). <indexterm><primary><literal>Indexes</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>MultiViews</literal> active la négociation de contenu, ce qui permet notamment au serveur de renvoyer la page web correspondant à la langue annoncée par le navigateur web. <indexterm><primary><literal>MultiViews</literal>, directive Apache</primary></indexterm>
					</para>

				</listitem>

			</itemizedlist>
			 <para>
			</para>
			 <sidebar> <title><emphasis>B.A.-BA</emphasis> Fichier <filename>.htaccess</filename></title>
			 <para>
				Le fichier <filename>.htaccess</filename> contient des directives de configuration d'Apache, prises en compte à chaque fois qu'une requête concerne un élément du répertoire où il est stocké. Sa portée embrasse également les fichiers de toute l'arborescence qui en est issue.
			</para>
			 <indexterm>
				<primary><filename>.htaccess</filename></primary>
			</indexterm>
			 <para>
				La plupart des directives qu'on peut placer dans un bloc <literal>Directory</literal> peut également se trouver dans un fichier <filename>.htaccess</filename>.
			</para>
			 </sidebar> <para>
				La directive <literal>AllowOverride</literal> donne toutes les options qu'on peut activer ou désactiver par l'intermédiaire d'un fichier <filename>.htaccess</filename>. Il est souvent important de contrôler l'option <literal>ExecCGI</literal> pour rester maître des utilisateurs autorisés à exécuter un programme au sein du serveur web (sous l'identifiant <literal>www-data</literal>).
			</para>
			 <indexterm>
				<primary><literal>AllowOverride</literal>, directive Apache</primary>
			</indexterm>
			 <section>
				<title>Requérir une authentification</title>
				 <indexterm>
					<primary>authentification web</primary>
				</indexterm>
				 <para>
					Il est parfois nécessaire de restreindre l'accès à une partie d'un site. Les utilisateurs légitimes doivent alors fournir un identifiant et un mot de passe pour accéder à son contenu.
				</para>
				 <example>
					<title>Fichier <filename>.htaccess</filename> requérant une authentification</title>
					 
<programlisting>
Require valid-user
AuthName "Répertoire privé"
AuthType Basic
AuthUserFile /etc/apache2/authfiles/htpasswd-prive
</programlisting>

				</example>
				 <sidebar> <title><emphasis>SÉCURITÉ</emphasis> Aucune sécurité</title>
				 <para>
					Ce système d'authentification (<literal>Basic</literal>) a une sécurité très faible puisque les mots de passe circulent sans protection (ils sont uniquement codés en <emphasis>base64</emphasis> — un simple encodage et non pas un procédé de chiffrement). Il faut noter que les documents protégés par ce mécanisme circulent également de manière non chiffrée. Si la sécurité vous importe, faites appel à SSL pour chiffrer toute la connexion HTTP.
				</para>
				 </sidebar> <para>
					Le fichier <filename>/etc/apache2/authfiles/htpasswd-prive</filename> contient la liste des utilisateurs et leurs mots de passe ; on le manipule avec la commande <command>htpasswd</command>. Pour ajouter un utilisateur ou changer un mot de passe, on exécutera la commande suivante : <indexterm><primary><command>htpasswd</command></primary></indexterm>
				</para>
				 
<screen>
<computeroutput># </computeroutput><userinput>htpasswd /etc/apache2/authfiles/htpasswd-prive <replaceable>utilisateur</replaceable>
</userinput><computeroutput>New password:
Re-type new password:
Adding password for user <replaceable>utilisateur</replaceable>
</computeroutput></screen>

			</section>
			 <section>
				<title>Restrictions d'accès</title>
				 <indexterm>
					<primary>restriction d'accès web</primary>
				</indexterm>
				 <para>
					La directive <literal>Require</literal> contrôle les restrictions d'accès à un répertoire (et ses sous-répertoires).
				</para>
				 <indexterm>
					<primary>Apache, directives</primary>
				</indexterm>
				 <indexterm>
					<primary>directives Apache</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Require</literal>, directive Apache</primary>
				</indexterm>
				 <para>
					Cette directive peut être utilisée pour restreindre les accès suivant de nombreux critères. Les restrictions d'accès basées sur les adresses IP du client sont décrites plus loin mais cette directive est bien plus puissante, tout particulièrement lorsque plusieurs directives <literal>Require</literal> sont combinées dans un bloc <literal>RequireAll</literal>.
				</para>
				 <example>
					<title>Uniquement autoriser le réseau local</title>
					 
<programlisting>Require ip 192.168.0.0/16</programlisting>

				</example>
				 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Ancienne syntaxe</title>
				 <para>
					La syntaxe <literal>Require</literal> n'est disponible qu'avec Apache 2.4 (la version dans <emphasis role="distribution">Jessie</emphasis>). Pour les utilisateurs de <emphasis role="distribution">Wheezy</emphasis>, la syntaxe nécessaire pour Apache 2.2 est différente. Elle est décrite ici pour information bien qu'il soit aussi possible de l'utiliser avec Apache 2.4 en utilisant le module <literal>mod_access_compat</literal>.
				</para>
				 <para>
					Les directives <literal>Allow from</literal> et <literal>Deny from</literal> contrôlent les restrictions d'accès à un répertoire (et ses sous-répertoires).
				</para>
				 <indexterm>
					<primary><literal>Allow from</literal>, directive Apache</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Deny from</literal>, directive Apache</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Order</literal>, directive Apache</primary>
				</indexterm>
				 <para>
					La directive <literal>Order</literal> indique dans quel ordre évaluer les directives <literal>Allow from</literal> et <literal>Deny from</literal> (et la dernière qui s'applique est retenue). Concrètement, <literal>Order deny,allow</literal> autorise l'accès si aucune des règles <literal>Deny from</literal> ne s'applique ou si une des règles <literal>Allow from</literal> s'applique. Inversement, <literal>Order allow,deny</literal> refuse l'accès si aucune directive <literal>Allow from</literal> ne l'autorise (ou si une directive <literal>Deny from</literal> s'applique).
				</para>
				 <para>
					Les directives <literal>Allow from</literal> et <literal>Deny from</literal> peuvent être suivies d'une adresse IP, d'un réseau (exemples : <literal>192.168.0.0/255.255.255.0</literal>, <literal>192.168.0.0/24</literal> et même <literal>192.168.0</literal>), d'un nom de machine ou de domaine, ou du mot-clé <literal>all</literal> désignant tout le monde.
				</para>
				 <para>
					Par exemple, pour interdire les connexions par défaut mais les autoriser depuis le réseau local, il est possible d'utiliser :
				</para>
				 
<programlisting>
Order deny,allow
Allow from 192.168.0.0/16
Deny from all
</programlisting>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title>Analyseur de logs</title>
			 <para>
				L'analyseur de logs est un compagnon fréquent du serveur web puisqu'il permet aux administrateurs d'avoir une idée plus précise de l'usage fait de ce service.
			</para>
			 <para>
				Les administrateurs de Falcot SA ont retenu <emphasis>AWStats</emphasis> (<foreignphrase>Advanced Web Statistics</foreignphrase>, ou statistiques web avancées) pour analyser les fichiers de logs d'Apache.
			</para>
			 <indexterm>
				<primary><emphasis>AWStats</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>analyseur de logs web</primary>
			</indexterm>
			 <indexterm>
				<primary>logs</primary>
				<secondary>web, analyseur</secondary>
			</indexterm>
			 <indexterm>
				<primary>analyseur de logs web</primary>
			</indexterm>
			 <para>
				La première étape de la configuration consiste à créer le fichier <filename>/etc/awstats/awstats.conf</filename>. Les administrateurs de Falcot n'ont modifié que les différents paramètres donnés ci-dessous :
			</para>
			 
<programlisting>
LogFile="/var/log/apache2/access.log"
LogFormat = "%virtualname %host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot"
SiteDomain="www.falcot.com"
HostAliases="falcot.com REGEX[^.*\.falcot\.com$]"
DNSLookup=1
LoadPlugin="tooltips"
</programlisting>
			 <para>
				Tous ces paramètres sont documentés par commentaires dans le fichier modèle. <varname>LogFile</varname> et <varname>LogFormat</varname> indiquent l'emplacement du fichier de log et les informations qu'il contient. Les paramètres <varname>SiteDomain</varname> et <varname>HostAliases</varname> indiquent les différents noms associés au site web principal.
			</para>
			 <para>
				Pour les sites à fort trafic, il est déconseillé de positionner <varname>DNSLookup</varname> à <literal>1</literal> comme dans l'exemple précédent. En revanche, pour les petits sites, ce réglage permet d'avoir des rapports plus lisibles qui emploient les noms complets des machines plutôt que leurs adresses IP.
			</para>
			 <sidebar> <title><emphasis>SÉCURITÉ</emphasis> Accès aux statistiques</title>
			 <para>
				Les statistiques d'AWStats sont disponibles sur le site web sans restrictions. On pourra le protéger de manière à ce que seules quelques adresses IP (internes probablement) puissent y accéder. Cela s'effectue en donnant la liste des adresses IP autorisées dans le paramètre <varname>AllowAccessFromWebToFollowingIPAddresses</varname>.
			</para>
			 </sidebar> <para>
				On activera AWStats pour d'autres hôtes virtuels, en créant un fichier spécifique par hôte, par exemple <filename>/etc/awstats/awstats.www.falcot.org.conf</filename>.
			</para>
			 <example>
				<title>Fichier de configuration AWStats pour un hôte virtuel</title>
				 
<programlisting>
Include "/etc/awstats/awstats.conf"
SiteDomain="www.falcot.org"
HostAliases="falcot.org"
</programlisting>

			</example>
			 <para>
				AWStats emploie de nombreuses icônes stockées dans le répertoire <filename>/usr/share/awstats/icon/</filename>. Pour les rendre disponibles sur le site web, il faut modifier la configuration d'Apache et y ajouter la directive suivante :
			</para>
			 
<programlisting>
Alias /awstats-icon/ /usr/share/awstats/icon/
</programlisting>
			 <para>
				Après quelques minutes (et les premières exécutions du script), le résultat est accessible en ligne : <ulink type="block" url="http://www.falcot.com/cgi-bin/awstats.pl" /> <ulink type="block" url="http://www.falcot.org/cgi-bin/awstats.pl" />
			</para>
			 <sidebar> <title><emphasis>ATTENTION</emphasis> Rotation de logs</title>
			 <para>
				Pour que les statistiques prennent en compte tous les logs, il est impératif qu'<emphasis>AWStats</emphasis> soit invoqué juste avant la rotation des fichiers de logs d'Apache. Si l'on regarde la directive <emphasis>prerotate</emphasis> du fichier <filename>/etc/logrotate.d/apache2</filename>, on s'aperçoit qu'il suffit pour cela d'ajouter un lien symbolique vers <filename>/usr/share/awstats/tools/update.sh</filename> dans le répertoire <filename>/etc/logrotate.d/httpd-prerotate</filename> :
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>cat /etc/logrotate.d/apache2
</userinput><computeroutput>/var/log/apache2/*.log {
  daily
  missingok
  rotate 14
  compress
  delaycompress
  notifempty
  create 644 root adm
  sharedscripts
  postrotate
    if /etc/init.d/apache2 status &gt; /dev/null  ; then \
      /etc/init.d/apache2 reload &gt; /dev/null ; \
    fi ;
  endscript
  prerotate
    if [ -d /etc/logrotate.d/httpd-prerotate ] ; then \
      run-parts /etc/logrotate.d/httpd-prerotate ; \
    fi ; \
  endscript
}
$ </computeroutput><userinput>sudo mkdir -p /etc/logrotate.d/httpd-prerotate
</userinput><computeroutput>$ </computeroutput><userinput>sudo ln -sf /usr/share/awstats/tools/update.sh \
  /etc/logrotate.d/httpd-prerotate/awstats
</userinput></screen>
			 <para>
				Au passage, il est bon de s'assurer que les fichiers de logs mis en place par <command>logrotate</command> soient lisibles par tout le monde (et notamment AWStats). Dans l'exemple ci-dessus, c'est effectivement le cas (voir la ligne <literal>create 644 root adm</literal>, qui diffère de la valeur 640 utilisée par défaut).
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.ftp-file-server">
		<title>Serveur de fichiers FTP</title>
		 <indexterm>
			<primary>FTP <foreignphrase>(File Transfer Protocol)</foreignphrase></primary>
		</indexterm>
		 <para>
			Le protocole de transfert de fichiers FTP (<foreignphrase>File Transfer Protocol</foreignphrase>) est un des premiers protocoles d'Internet (la RFC 959 date de 1985 !). Il a servi à diffuser des fichiers avant même l'invention du Web (la RFC 1945 décrivant le protocole HTTP/1.0 date de 1996 mais ce dernier existait depuis 1990).
		</para>
		 <para>
			Ce protocole permet à la fois de déposer des fichiers et d'en récupérer. FTP est encore fréquemment employé pour déposer les mises à jour d'un site web hébergé par son fournisseur d'accès Internet (ou tout autre prestataire d'hébergement de site web). Dans ce cas, on emploie un identifiant et un mot de passe, puis le serveur FTP donne accès en lecture/écriture à son répertoire personnel.
		</para>
		 <para>
			D'autres serveurs FTP servent essentiellement à diffuser des fichiers que les gens souhaitent télécharger. C'est le cas, par exemple, avec les paquets Debian. Le contenu de ces serveurs FTP est récupéré depuis divers autres serveurs géographiquement éloignés et mis à disposition des utilisateurs locaux. Dans ce cas, l'authentification du client n'est pas nécessaire ; on parle de FTP anonyme et l'accès est en lecture seule. En réalité, le client s'authentifie avec le nom d'utilisateur <literal>anonymous</literal> et un mot de passe quelconque (qui est souvent, par convention, l'adresse électronique de l'usager).
		</para>
		 <para>
			De nombreux serveurs FTP sont disponibles dans Debian (<emphasis role="pkg">ftpd</emphasis>, <emphasis role="pkg">proftpd-basic</emphasis>, <emphasis role="pkg">pyftpd</emphasis>, etc.). Le choix des administrateurs de Falcot SA s'est porté sur <emphasis role="pkg">vsftpd</emphasis>. En effet, ils n'ont besoin du serveur FTP que pour diffuser quelques fichiers (dont un dépôt de paquets Debian) et ils n'avaient nullement besoin de pléthore de fonctionnalités. Ils ont donc privilégié l'aspect sécurité du logiciel.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">vsftpd</emphasis></primary>
		</indexterm>
		 <para>
			L'installation du paquet entraîne la création d'un utilisateur système <literal>ftp</literal>. Ce compte est systématiquement employé pour gérer les connexions FTP anonymes et son répertoire personnel (<filename>/srv/ftp/</filename>) est la racine de l'arborescence mise à disposition des utilisateurs se connectant sur le service. La configuration par défaut (telle que détaillée dans <filename>/etc/vsftpd.conf</filename>) nécessite quelques modifications pour répondre au simple besoin de mise à disposition publique de gros fichiers : l'accès anonyme doit être activé (<literal>anonymous=YES</literal>) et l'accès (en lecture seule) des utilisateurs locaux doit être désactivé (<literal>local_enable=NO</literal>). Ce dernier point est particulièrement important car le protocole FTP n'utilise pas de chiffrement et le mot de passe de l'utilisateur pourrait être intercepté à la volée.
		</para>

	</section>
	 <section id="sect.nfs-file-server">
		<title>Serveur de fichiers NFS</title>
		 <para>
			NFS <foreignphrase>(Network File System)</foreignphrase> est un protocole qui permet d'accéder à un système de fichiers à distance par le réseau, pris en charge par tous les systèmes Unix. Pour Windows, il faudra employer Samba.
		</para>
		 <indexterm>
			<primary>NFS</primary>
		</indexterm>
		 <indexterm>
			<primary><foreignphrase>Network</foreignphrase></primary>
			<secondary><foreignphrase>File System</foreignphrase></secondary>
		</indexterm>
		 <indexterm>
			<primary>système</primary>
			<secondary>de fichiers réseau</secondary>
		</indexterm>
		 <indexterm>
			<primary>fichiers</primary>
			<secondary>serveur de</secondary>
		</indexterm>
		 <indexterm>
			<primary>serveur</primary>
			<secondary>de fichiers</secondary>
		</indexterm>
		 <para>
			NFS est un outil très utile. S'il avait de nombreuses limitations auparavant, elles ont pour la plupart disparu avec la version 4 du protocole. L'inconvénient est que la dernière version de NFS est désormais plus difficile à configurer dès que l'on veut utiliser des fonctions de sécurité de base telles que l'authentification et le chiffrement, puisqu'il repose sur Kerberos pour ces fonctionnalités. Et sans ces deux dernières, l'utilisation du protocole NFS doit se limiter à un réseau local de confiance car les données qui circulent sur le réseau ne sont pas chiffrées (un <emphasis><foreignphrase>sniffer</foreignphrase></emphasis> peut les intercepter) et les droits d'accès sont accordés en fonction de l'adresse IP du client (qui peut être usurpée).
		</para>
		 <sidebar> <title><emphasis>DOCUMENTATION</emphasis> NFS howto</title>
		 <para>
			Trouver de la bonne documentation sur NFSv4 est assez difficile. Voici quelques liens vers des explications de qualité variable mais qui donnent au moins quelques indications (en anglais) sur ce qu'il convient de faire. <ulink type="block" url="https://help.ubuntu.com/community/NFSv4Howto" /> <ulink type="block" url="http://wiki.linux-nfs.org/wiki/index.php/Nfsv4_configuration" />
		</para>
		 </sidebar> <section>
			<title>Sécuriser NFS (au mieux)</title>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>sécurité</secondary>
			</indexterm>
			 <para>
				Si les fonctionnalités de sécurité de Kerberos ne sont pas utilisées, il faut s'assurer que seules les machines autorisées à l'employer peuvent se connecter aux différents serveurs RPC qui lui permettent de fonctionner, car le protocole de base considère les données reçues du réseau comme des données sûres. Le pare-feu doit donc interdire l'usurpation d'adresse IP <foreignphrase>(IP spoofing)</foreignphrase> pour qu'une machine extérieure ne puisse pas se faire passer pour une machine intérieure, et les différents ports employés doivent être restreints aux machines devant accéder aux partages NFS.
			</para>
			 <sidebar> <title><emphasis>B.A.-BA</emphasis> RPC</title>
			 <para>
				RPC (<foreignphrase>Remote Procedure Call</foreignphrase>, ou appel de procédure distante) est un standard Unix pour des services distants. NFS est un service RPC.
			</para>
			 <indexterm>
				<primary>RPC</primary>
			</indexterm>
			 <indexterm>
				<primary><foreignphrase>Remote Procedure Call</foreignphrase></primary>
			</indexterm>
			 <para>
				Les services RPC s'enregistrent dans un annuaire, le <foreignphrase>portmapper</foreignphrase>. Un client désireux d'effectuer une requête NFS s'adresse au <foreignphrase>portmapper</foreignphrase> (port 111 en TCP ou UDP) et lui demande où se trouve le serveur NFS. On lui répond généralement en indiquant le port 2049 (port par défaut pour NFS). Tous les services RPC ne disposent pas nécessairement d'un port fixe.
			</para>
			 </sidebar> <para>
				Les anciennes versions du protocole nécessitaient d'autres services RPC qui utilisaient des ports assignés dynamiquement. Heureusement, avec la version 4 de NFS, seul le port 2049 (pour NFS) et 111 (pour l'annuaire, le <foreignphrase>portmapper</foreignphrase>) sont nécessaires et ils sont donc faciles à filtrer avec le pare-feu.
			</para>
			 <indexterm>
				<primary><command>portmapper</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Serveur NFS</title>
			 <para>
				Le serveur NFS est intégré au noyau Linux ; Debian le compile dans ses noyaux sous forme de module. Pour l'activer automatiquement à chaque démarrage, il faut installer le paquet <emphasis role="pkg">nfs-kernel-server</emphasis>, qui contient les scripts d'initialisation adéquats.
			</para>
			 <para>
				Le fichier de configuration du serveur NFS, <filename>/etc/exports</filename>, donne les répertoires exportés à l'extérieur. À chaque partage NFS sont associées des machines qui ont le droit d'y accéder. Un certain nombre d'options permettent de dicter quelques règles d'accès. Le format de ce fichier est très simple :
			</para>
			 <indexterm>
				<primary><filename>exports</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/exports</filename></primary>
			</indexterm>
			 
<programlisting>
/repertoire/a/partager machine1(option1,option2,...) machine2(...) ...
</programlisting>
			 <para>
				Il est important de remarquer qu'avec NFSv4, tous les répertoires exportés doivent faire partie d'une seule et même arborescence, et que le répertoire racine de cette arborescence doit être exporté et identifié avec l'option <literal>fsid=0</literal> ou <literal>fsid=root</literal>.
			</para>
			 <para>
				Chaque machine est identifiée par son nom DNS ou son adresse IP. Il est aussi possible de spécifier un ensemble de machines en employant la syntaxe <literal>*.falcot.com</literal> ou en décrivant une plage complète d'adresses IP (exemples : <literal>192.168.0.0/255.255.255.0</literal>, <literal>192.168.0.0/24</literal>).
			</para>
			 <para>
				Par défaut, un partage n'est accessible qu'en lecture seule (option <literal>ro</literal> comme <foreignphrase>read only</foreignphrase>). L'option <literal>rw</literal> (comme <foreignphrase>read-write</foreignphrase>) donne un accès en lecture/écriture. Les clients NFS doivent se connecter depuis un port réservé à root (c'est-à-dire inférieur à 1 024) à moins que l'option <literal>insecure</literal> (« pas sûr ») n'ait été employée (l'option <literal>secure</literal> — « sûr » — est implicite en l'absence de <literal>insecure</literal>, mais on peut quand même la mentionner).
			</para>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>options</secondary>
			</indexterm>
			 <para>
				Le serveur ne répond à une requête NFS que lorsque l'opération sur disque a été complétée (option <literal>sync</literal>). L'option <literal>async</literal> (asynchrone) désactive cette fonctionnalité et améliore quelque peu les performances, au détriment de la fiabilité puisqu'il subsiste alors un risque de perte de données en cas de <foreignphrase>crash</foreignphrase> du serveur (des données acquittées par le serveur NFS n'auront pas été sauvegardées sur le disque avant le <foreignphrase>crash</foreignphrase>). La valeur par défaut de cette option ayant changé récemment (par rapport à l'historique de NFS), il est recommandé de toujours mentionner explicitement l'option souhaitée.
			</para>
			 <para>
				Pour ne pas donner un accès root au système de fichiers à n'importe quel client NFS, toutes les requêtes provenant d'un utilisateur root sont transformées en requêtes provenant de l'utilisateur <literal>nobody</literal>. Cette option (<literal>root_squash</literal>) est activée par défaut ; l'option inverse <literal>no_root_squash</literal> ne doit être employée qu'avec parcimonie étant donné les risques qu'elle comporte. Les options <literal>anonuid=<replaceable>uid</replaceable></literal> et <literal>anongid=<replaceable>gid</replaceable></literal> permettent d'employer un autre utilisateur écran à la place des UID/GID 65534 (qui correspondent à l'utilisateur <literal>nobody</literal> et au groupe <literal>nogroup</literal>).
			</para>
			 <para>
				Avec NFSv4, il est possible d'ajouter une option <literal>sec</literal> pour préciser le niveau de sécurité souhaité : <literal>sec=sys</literal> est la valeur par défaut sans aucune sécurité particulière, <literal>sec=krb5</literal> active uniquement l'authentification, <literal>sec=krb5i</literal> y ajoute une protection d'intégrité, et <literal>sec=krb5p</literal> est le plus haut niveau qui inclut la protection de la confidentialité (avec le chiffrement des données). Pour que cela puisse marcher, une installation fonctionnelle de Kerberos est nécessaire (ce service n'est pas traité par ce livre).
			</para>
			 <para>
				D'autres options existent encore, que vous découvrirez dans la page de manuel <citerefentry><refentrytitle>exports</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>.
			</para>
			 <sidebar> <title><emphasis>ATTENTION</emphasis> Première installation</title>
			 <para>
				Le script <filename>/etc/init.d/nfs-kernel-server</filename> ne démarre rien si le fichier <filename>/etc/exports</filename> ne prévoit aucun partage NFS. C'est pourquoi il faut démarrer le serveur NFS juste après avoir rempli ce fichier pour la première fois :
			</para>
			 
<screen>
<computeroutput># </computeroutput><userinput>service nfs-kernel-server start</userinput></screen>
			 </sidebar>
		</section>
		 <section>
			<title>Client NFS</title>
			 <indexterm>
				<primary>client</primary>
				<secondary>NFS</secondary>
			</indexterm>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>client</secondary>
			</indexterm>
			 <para>
				Comme tous les systèmes de fichiers, il est nécessaire de le monter pour l'intégrer dans l'arborescence du système. Étant donné qu'il s'agit d'un système de fichiers un peu particulier, il a fallu adapter la syntaxe habituelle de la commande <command>mount</command> et le format du fichier <filename>/etc/fstab</filename>.
			</para>
			 <example>
				<title>Montage manuel avec la commande <command>mount</command></title>
				 
<screen>
          <computeroutput># </computeroutput><userinput>mount -t nfs4 -o rw,nosuid arrakis.interne.falcot.com:/partage /srv/partage</userinput></screen>

			</example>
			 <example>
				<title>Entrée NFS dans le fichier <filename>/etc/fstab</filename></title>
				 
<programlisting>
arrakis.interne.falcot.com:/partage /srv/partage nfs4 rw,nosuid 0 0
</programlisting>

			</example>
			 <para>
				L'entrée ci-dessus monte automatiquement à chaque démarrage le répertoire NFS <filename>/partage/</filename> présent sur le serveur <literal>arrakis</literal> dans le répertoire local <filename>/srv/partage/</filename>. L'accès demandé est en lecture/écriture (paramètre <literal>rw</literal>). L'option <literal>nosuid</literal> est une mesure de protection qui supprime tout bit <literal>setuid</literal> ou <literal>setgid</literal> présent sur les programmes contenus dans le partage NFS. Si le répertoire NFS est dédié au stockage de documents, il est recommandé d'employer de plus l'option <literal>noexec</literal> qui empêche l'exécution de programmes par NFS. Il est important de noter que sur le serveur, le répertoire <filename>partage</filename> est situé sous l'export de la racine NFSv4 (par exemple <filename>/export/partage</filename>), ce n'est pas un répertoire de premier niveau de l'arborescence.
			</para>
			 <para>
				La page de manuel <citerefentry><refentrytitle>nfs</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> détaille toutes les options possibles.
			</para>

		</section>

	</section>
	 <section id="sect.windows-file-server-with-samba">
		<title>Partage Windows avec Samba</title>
		 <para>
			Samba est une suite d'outils qui permettent de gérer le protocole SMB (aussi appelé « CIFS ») sous Linux. Ce dernier est employé par Windows pour accéder aux partages réseau et aux imprimantes partagées.
		</para>
		 <indexterm>
			<primary>partage Windows</primary>
		</indexterm>
		 <indexterm>
			<primary>Samba</primary>
		</indexterm>
		 <indexterm>
			<primary>SMB</primary>
		</indexterm>
		 <indexterm>
			<primary>CIFS</primary>
		</indexterm>
		 <indexterm>
			<primary>serveur</primary>
			<secondary>de fichiers</secondary>
		</indexterm>
		 <para>
			Samba sait également jouer le rôle de contrôleur de domaine Windows. C'est un outil extraordinaire pour assurer une cohabitation parfaite entre les serveurs sous Linux et les machines de bureautique encore sous Windows.
		</para>
		 <section>
			<title>Samba en serveur</title>
			 <para>
				Le paquet Debian <emphasis role="pkg">samba</emphasis> contient les deux principaux serveurs de Samba 4 (<command>smbd</command> et <command>nmbd</command>).
			</para>
			 <indexterm>
				<primary><emphasis>smbd</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis>nmbd</emphasis></primary>
			</indexterm>
			 <sidebar> <title><emphasis>DOCUMENTATION</emphasis> Pour aller plus loin</title>
			 <para>
				Le serveur Samba est extrêmement configurable et peut répondre à de très nombreux cas d'utilisation correspondant à des besoins et des architectures réseau très différents. Le cas traité dans ce livre utilise Samba comme serveur autonome, mais il peut très bien être un contrôleur de domaine NT4 ou un contrôleur de domaine basé sur Active Directory, ou encore un simple membre d'un domaine existant (qui pourrait être géré par un serveur Windows).
			</para>
			 <indexterm>
				<primary>contrôleur de domaine</primary>
			</indexterm>
			 <indexterm>
				<primary>domaine Windows</primary>
			</indexterm>
			 <para>
				Le paquet <emphasis role="pkg">samba-doc</emphasis> contient de nombreux exemples commentés dans <filename>/usr/share/doc/samba-doc/examples/</filename>.
			</para>
			 </sidebar> <sidebar> <title><emphasis>OUTIL</emphasis> Authentifier à l'aide d'un serveur Windows</title>
			 <para>
				Winbind permet d'utiliser un serveur Windows comme serveur d'authentification et s'intègre à PAM et à NSS. Il est ainsi possible de mettre en place des machines Linux où tous les utilisateurs d'un domaine Windows disposeront automatiquement d'un compte.
			</para>
			 <indexterm>
				<primary>Winbind</primary>
			</indexterm>
			 <para>
				Vous trouverez plus d'informations à ce sujet dans le répertoire <filename>/usr/share/doc/samba-doc/examples/pam_winbind/</filename>.
			</para>
			 </sidebar> <section>
				<title>Configuration avec <command>debconf</command></title>
				 <para>
					Le paquet met en place une configuration minimale en posant quelques questions au cours de l'installation initiale. Il est vraiment recommandé de l'adapter en lançant la commande <command>dpkg-reconfigure samba-common</command>.
				</para>
				 <para>
					La première information nécessaire est le nom du groupe de travail auquel le serveur Samba va appartenir (la réponse est <literal>FALCOTNET</literal> dans le cas de Falcot).
				</para>
				 <para>
					Le paquet propose également d'identifier le serveur WINS grâce aux informations fournies par le démon DHCP. Les administrateurs de Falcot ont refusé cette option, puisque leur intention était d'employer Samba pour jouer aussi le rôle de serveur WINS !
				</para>
				 <indexterm>
					<primary>WINS</primary>
				</indexterm>

			</section>
			 <section>
				<title>Configuration manuelle</title>
				 <section>
					<title>Modifications à <filename>smb.conf</filename></title>
					 <para>
						Pour adapter le serveur aux besoins de Falcot, il faut modifier d'autres options dans le fichier de configuration de Samba, <filename>/etc/samba/smb.conf</filename>. Les extraits ci-dessous résument les changements effectués au sein de la section <literal>[global]</literal>.
					</para>
					 
<programlisting>
[global]

## Browsing/Identification ###

# Change this to the workgroup/NT-domain name your Samba server will part of
   workgroup = FALCOTNET

# Windows Internet Name Serving Support Section:
# WINS Support - Tells the NMBD component of Samba to enable its WINS Server
   wins support = yes <co id="smb.conf.wins"></co>

[...]

####### Authentication #######

# Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller". 
#
# Most people will want "standalone sever" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
   server role = standalone server

# "security = user" is always a good idea. This will require a Unix account
# in this server for every user accessing the server.
   security = user <co id="smb.conf.security"></co>

[...]</programlisting>
					 <calloutlist>
						<callout arearefs="smb.conf.wins">
							<para>
								Indique que Samba doit jouer le rôle de serveur de noms Netbios (Wins) pour le réseau local.
							</para>

						</callout>
						 <callout arearefs="smb.conf.security">
							<para>
								C'est la valeur par défaut de ce paramètre. Comme il est central à la configuration de Samba, il est toutefois raisonnable de le renseigner de manière explicite. Chaque utilisateur doit s'authentifier avant de pouvoir accéder au moindre partage.
							</para>

						</callout>

					</calloutlist>

				</section>
				 <section>
					<title>Ajout des utilisateurs</title>
					 <para>
						Chaque utilisateur de Samba ayant besoin d'un compte sur le serveur, il faut créer les comptes Unix puis enregistrer chaque utilisateur dans la base de données de Samba. La création des comptes Unix se réalise tout à fait normalement (avec la commande <command>adduser</command> par exemple).
					</para>
					 <para>
						L'ajout d'un utilisateur existant dans la base de données de Samba s'effectue par la commande <command>smbpasswd -a <replaceable>utilisateur</replaceable></command>, qui demande le mot de passe interactivement.
					</para>
					 <para>
						On supprime un utilisateur avec la commande <command>smbpasswd -x <replaceable>utilisateur</replaceable></command>. Un compte Samba peut n'être que gelé quelque temps avec la commande <command>smbpasswd -d <replaceable>utilisateur</replaceable></command>, puis réactivé avec <command>smbpasswd -e <replaceable>utilisateur</replaceable></command>.
					</para>

				</section>

			</section>

		</section>
		 <section>
			<title>Samba en client</title>
			 <para>
				Les fonctionnalités clientes de Samba donnent à une machine Linux l'accès à des partages Windows et à des imprimantes partagées. Les paquets Debian <emphasis role="pkg">cifs-utils</emphasis> et <emphasis role="pkg">smbclient</emphasis> regroupent les programmes clients nécessaires.
			</para>
			 <indexterm>
				<primary><emphasis>smbclient</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis>cifs-utils</emphasis></primary>
			</indexterm>
			 <section>
				<title>Le programme <command>smbclient</command></title>
				 <para>
					Le programme <command>smbclient</command> interroge tous les serveurs SMB. Il accepte l'option <literal>-U <replaceable>utilisateur</replaceable></literal> pour se connecter au serveur sous une autre identité. <command>smbclient //<replaceable>serveur</replaceable>/<replaceable>partage</replaceable></command> accède au partage de manière interactive (comme le client FTP en ligne de commande). <command>smbclient -L <replaceable>serveur</replaceable></command> donne la liste des partages disponibles (et visibles).
				</para>

			</section>
			 <section>
				<title>Monter un partage Windows</title>
				 <para>
					La commande <command>mount</command> permet de monter un partage Windows dans l'arborescence du système Linux (avec l'aide de <command>mount.cifs</command> fourni par <emphasis role="pkg">cifs-utils</emphasis>).
				</para>
				 <indexterm>
					<primary><command>mount.cifs</command></primary>
				</indexterm>
				 <indexterm>
					<primary>partage Windows, montage</primary>
				</indexterm>
				 <example>
					<title>Montage d'un partage Windows</title>
					 
<programlisting>
mount -t cifs //arrakis/shared /shared \
      -o credentials=/etc/smb-credentials
</programlisting>

				</example>
				 <para>
					Le fichier <filename>/etc/smb-credentials</filename> ne sera pas lisible par les utilisateurs et respectera le format suivant :
				</para>
				 
<programlisting>
username = <replaceable>utilisateur</replaceable>
password = <replaceable>mot_de_passe</replaceable></programlisting>
				 <para>
					On peut préciser d'autres options sur la ligne de commande, que la page de manuel <citerefentry><refentrytitle>mount.cifs</refentrytitle>
					<manvolnum>1</manvolnum></citerefentry> détaille. Deux options intéressantes permettent de forcer l'utilisateur (<literal>uid</literal>) et le groupe (<literal>gid</literal>) propriétaire des fichiers accessibles sur le montage afin de ne pas restreindre l'accès à root.
				</para>
				 <para>
					Il est aussi possible de configurer le montage d'un partage Windows dans <filename>/etc/fstab</filename> :
				</para>
				 
<programlisting>//<replaceable>serveur</replaceable>/shared /shared cifs credentials=/etc/smb-credentials
</programlisting>
				 <para>
					Un partage SMB/CIFS peut être démonté avec la commande <command>umount</command> standard.
				</para>

			</section>
			 <section>
				<title>Imprimer sur une imprimante partagée</title>
				 <para>
					Cups est une solution élégante pour imprimer sur une imprimante partagée par une machine Windows depuis un poste Linux. Si le paquet <emphasis role="pkg">smbclient</emphasis> est installé, Cups offre la possibilité d'installer automatiquement une imprimante partagée par un poste Windows.
				</para>
				 <indexterm>
					<primary>impression</primary>
					<secondary>réseau</secondary>
				</indexterm>
				 <para>
					Voici les étapes à suivre :
				</para>
				 <itemizedlist>
					<listitem>
						<para>
							Entrer dans l'interface de configuration de CUPS : <literal>http://localhost:631/admin</literal>.
						</para>

					</listitem>
					 <listitem>
						<para>
							Cliquer sur « Ajouter une imprimante ».
						</para>

					</listitem>
					 <listitem>
						<para>
							Choisir le périphérique de l'imprimante : <guimenuitem>Windows Printer via SAMBA</guimenuitem>.
						</para>

					</listitem>
					 <listitem>
						<para>
							L'URI décrivant l'imprimante doit avoir la forme suivante :
						</para>
						 <para>
							<literal>smb://<replaceable>utilisateur</replaceable>:<replaceable>motdepasse</replaceable>@<replaceable>serveur</replaceable>/<replaceable>imprimante</replaceable></literal>.
						</para>

					</listitem>
					 <listitem>
						<para>
							Saisir le nom qui identifiera cette imprimante de manière unique, puis une description pour cette imprimante et sa localisation. Ces informations seront utiles aux utilisateurs, et leur permettront d'identifier les imprimantes.
						</para>

					</listitem>
					 <listitem>
						<para>
							Indiquer les noms du fabricant et du modèle de l'imprimante, ou fournir directement un fichier de description d'imprimante (PPD).
						</para>

					</listitem>

				</itemizedlist>
				 <para>
					Et voilà, l'imprimante est fonctionnelle !
				</para>

			</section>

		</section>

	</section>
	 <section id="sect.http-ftp-proxy">
		<title>Mandataire HTTP/FTP</title>
		 <para>
			Un mandataire HTTP/FTP (ou proxy) est un intermédiaire pour les connexions HTTP et/ou FTP. Son rôle est double :
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					Celui de serveur cache : il garde une copie des documents téléchargés pour éviter de les rapatrier plusieurs fois.
				</para>

			</listitem>
			 <listitem>
				<para>
					Celui de serveur filtrant s'il est obligatoire et que les connexions sortantes sont par ailleurs bloquées. En tant qu'intermédiaire inévitable, il a en effet la liberté d'effectuer ou non la requête demandée.
				</para>

			</listitem>

		</itemizedlist>
		 <indexterm>
			<primary>mandataire HTTP/FTP</primary>
		</indexterm>
		 <indexterm>
			<primary><foreignphrase>proxy cache</foreignphrase></primary>
		</indexterm>
		 <para>
			Le serveur mandataire employé par Falcot SA est Squid.
		</para>
		 <indexterm>
			<primary>Squid</primary>
		</indexterm>
		 <section>
			<title>Installation</title>
			 <para>
				Le paquet Debian <emphasis role="pkg">squid3</emphasis> n'est qu'un mandataire modulaire. Pour le transformer en serveur filtrant, il faut lui adjoindre le paquet <emphasis role="pkg">squidguard</emphasis>. Le paquet <emphasis role="pkg">squid-cgi</emphasis> permet d'interroger et d'administrer un mandataire Squid.
			</para>
			 <para>
				Préalablement à l'installation, il faut vérifier que le système est capable d'identifier son nom complet. La commande <command>hostname -f</command> doit renvoyer un nom long (incluant un nom de domaine). Si ce n'est pas le cas, il faut modifier <filename>/etc/hosts</filename> pour documenter le nom complet du système (exemple : <literal>arrakis.falcot.com</literal>). N'hésitez pas à faire valider le nom officiel de l'ordinateur avec votre administrateur réseau afin de ne pas créer de conflits inutiles.
			</para>

		</section>
		 <section>
			<title>Configuration d'un cache</title>
			 <para>
				Pour activer la fonctionnalité de serveur cache, il suffit de modifier le fichier de configuration <filename>/etc/squid3/squid.conf</filename> pour autoriser les machines du réseau local à effectuer des requêtes au travers du mandataire. L'exemple ci-dessous montre les modifications effectuées par les administrateurs de Falcot SA.
			</para>
			 <example>
				<title>Extrait du fichier <filename>/etc/squid3/squid.conf</filename></title>
				 
<programlisting>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS

# Example rule allowing access from your local networks. Adapt
# to list your (internal) IP networks from where browsing should
# be allowed
acl our_networks src 192.168.1.0/24 192.168.2.0/24
http_access allow our_networks
http_access allow localhost
# And finally deny all other access to this proxy
http_access deny all</programlisting>

			</example>

		</section>
		 <section>
			<title>Configuration d'un filtre</title>
			 <para>
				Le filtrage des requêtes n'est pas effectué par <command>squid</command> mais par <command>squidGuard</command>. Il faut donc configurer <command>squid</command> pour qu'il interagisse avec ce dernier, ce qui s'effectue en ajoutant au fichier <filename>/etc/squid3/squid.conf</filename> la directive suivante :
			</para>
			 <indexterm>
				<primary><command>squidGuard</command></primary>
			</indexterm>
			 
<programlisting>
url_rewrite_program /usr/bin/squidGuard -c /etc/squid3/squidGuard.conf</programlisting>
			 <para>
				Il faut également installer le programme CGI <filename>/usr/lib/cgi-bin/squidGuard.cgi</filename> à partir du fichier d'exemple <filename>squidGuard.cgi.gz</filename>, que l'on trouve dans le répertoire <filename>/usr/share/doc/squidguard/examples/</filename>. On modifiera ce script en changeant les variables <varname>$proxy</varname> (nom du serveur mandataire) et <varname>$proxymaster</varname> (courrier électronique de contact de l'administrateur). Les variables <varname>$image</varname> et <varname>$redirect</varname> devront pointer sur des images existantes, symbolisant le refus d'accéder à la page demandée.
			</para>
			 <para>
				La commande <command>service squid3 reload</command> active le filtre. Le paquet <emphasis role="pkg">squidguard</emphasis> n'offrant aucun filtrage par défaut, l'administrateur a la responsabilité de le définir. Pour cela, il doit créer le fichier <filename>/etc/squid3/squidGuard.conf</filename>, en utilisant éventuellement <filename>/etc/squidguard/squidGuard.conf.default</filename> comme modèle.
			</para>
			 <para>
				Après chaque modification du fichier de configuration de <command>squidGuard</command> ou de l'une des listes de domaines ou d'URL qu'il mentionne, il est nécessaire de régénérer la base de données de travail. Cela s'effectue en exécutant la commande <command>update-squidguard</command>. Le format du fichier de configuration est documenté sur le site web suivant : <ulink type="block" url="http://www.squidguard.org/Doc/configure.html" />
			</para>
			 <indexterm>
				<primary><command>update-squidguard</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> DansGuardian</title>
			 <indexterm>
				<primary><emphasis role="pkg">dansguardian</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>PICS</primary>
			</indexterm>
			 <para>
				Le paquet <emphasis role="pkg">dansguardian</emphasis> constitue une alternative à <emphasis>squidguard</emphasis>. Ce logiciel ne se contente pas de gérer une liste noire d'URL interdites, il est capable de gérer le système de notation PICS (<foreignphrase>Platform for Internet Content Selection</foreignphrase> — plate-forme pour la sélection de contenu Internet) et de décider si une page est acceptable ou non en analysant dynamiquement son contenu.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.ldap-directory">
		<title>Annuaire LDAP</title>
		 <indexterm>
			<primary>LDAP</primary>
		</indexterm>
		 <indexterm>
			<primary>OpenLDAP</primary>
		</indexterm>
		 <indexterm>
			<primary>annuaire LDAP</primary>
		</indexterm>
		 <para>
			OpenLDAP implémente le protocole LDAP ; ce n'est qu'une base de données adaptée pour gérer des annuaires. Son intérêt est multiple : l'emploi d'un serveur LDAP aide à centraliser la gestion des comptes des utilisateurs et des droits associés. De plus, la base de données LDAP est facile à dupliquer, ce qui permet de mettre en place plusieurs serveurs synchronisés. En cas de croissance rapide du réseau, il sera aisé de monter en puissance en répartissant la charge sur plusieurs serveurs.
		</para>
		 <para>
			Les données LDAP sont structurées et hiérarchisées. Les « schémas » définissent les objets que la base peut stocker avec la liste de tous les attributs possibles. La syntaxe qui permet de désigner un objet de la base traduit cette structure, même si elle n'est pas facile à maîtriser.
		</para>
		 <section>
			<title>Installation</title>
			 <para>
				Le paquet <emphasis role="pkg">slapd</emphasis> contient le serveur OpenLDAP. Le paquet <emphasis role="pkg">ldap-utils</emphasis> renferme des utilitaires en ligne de commande pour interagir avec les serveurs LDAP.
			</para>
			 <indexterm>
				<primary><emphasis>slapd</emphasis></primary>
			</indexterm>
			 <para>
				L'installation du paquet <emphasis role="pkg">slapd</emphasis> est généralement peu interactive, et le résultat ne répond que rarement aux besoins. Heureusement, il suffit de lancer la commande <command>dpkg-reconfigure slapd</command> pour reconfigurer la base de données LDAP plus en détail :
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						Faut-il ignorer la configuration de <command>slapd</command> ? Non, bien sûr, nous allons configurer ce service.
					</para>

				</listitem>
				 <listitem>
					<para>
						Quel est le nom de domaine ? « <literal>falcot.com</literal> ».
					</para>

				</listitem>
				 <listitem>
					<para>
						Quel est le nom de l'organisation ? « Falcot SA ».
					</para>

				</listitem>
				 <listitem>
					<para>
						Il faut saisir un mot de passe administrateur pour la base de données.
					</para>

				</listitem>
				 <listitem>
					<para>
						Quel est le module de base de données à utiliser ? « MDB ».
					</para>

				</listitem>
				 <listitem>
					<para>
						La base doit-elle être supprimée si le paquet <command>slapd</command> est supprimé ? Non. Mieux vaut éviter de perdre ces données suite à une mauvaise manipulation.
					</para>

				</listitem>
				 <listitem>
					<para>
						Faut-il déplacer l'ancienne base de données ? Cette question n'est posée que si l'on déclenche une nouvelle configuration alors qu'une base de données existe déjà. Ne répondre « oui » que si l'on veut effectivement repartir d'une base propre, par exemple si l'on exécute <command>dpkg-reconfigure slapd</command> juste après l'installation initiale.
					</para>

				</listitem>
				 <listitem>
					<para>
						Faut-il autoriser LDAPv2 ? Non, ce n'est pas la peine. Tous les outils que nous employons connaissent LDAPv3.
					</para>

				</listitem>

			</itemizedlist>
			 <sidebar> <title><emphasis>B.A.-BA</emphasis> Format LDIF</title>
			 <para>
				Un fichier LDIF (<foreignphrase>LDAP Data Interchange Format</foreignphrase>, ou format d'échange de données de LDAP) est un fichier textuel portable décrivant le contenu (ou une partie de celui-ci) d'une base de données LDAP afin de pouvoir intégrer les données dans n'importe quel autre serveur LDAP.
			</para>
			 <indexterm>
				<primary>LDIF</primary>
			</indexterm>
			 </sidebar> <para>
				Une base de données minimale est maintenant configurée, ce qu'on peut vérifier en l'interrogeant directement :
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>ldapsearch -x -b dc=falcot,dc=com</userinput>
<computeroutput># extended LDIF
#
# LDAPv3
# base &lt;dc=falcot,dc=com&gt; with scope sub
# filter: (objectclass=*)
# requesting: ALL
#

# falcot.com
dn: dc=falcot,dc=com
objectClass: top
objectClass: dcObject
objectClass: organization
o: Falcot SA
dc: falcot

# admin, falcot.com
dn: cn=admin,dc=falcot,dc=com
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
description: LDAP administrator

# search result
search: 2
result: 0 Success

# numResponses: 3
# numEntries: 2
</computeroutput></screen>
			 <para>
				La requête a renvoyé deux objets : l'organisation dans son ensemble et l'administrateur.
			</para>

		</section>
		 <section>
			<title>Remplissage de l'annuaire</title>
			 <para>
				La base de données vide n'ayant pas grand intérêt, il s'agit maintenant d'y intégrer l'ensemble des annuaires existants, notamment les utilisateurs, groupes, services et hôtes.
			</para>
			 <para>
				Le paquet Debian <emphasis role="pkg">migrationtools</emphasis> offre un ensemble de scripts qui permettent justement de récupérer les informations depuis les annuaires Unix standards (<filename>/etc/passwd</filename>, <filename>/etc/group</filename>, <filename>/etc/services</filename>, <filename>/etc/hosts</filename>, etc.), puis de les intégrer dans la base de données LDAP.
			</para>
			 <indexterm>
				<primary><emphasis>migrationtools</emphasis></primary>
			</indexterm>
			 <para>
				Après installation du paquet, il faut éditer le fichier <filename>/etc/migrationtools/migrate_common.ph</filename> pour activer les options <varname>IGNORE_UID_BELOW</varname> et <varname>IGNORE_GID_BELOW</varname> (qu'il suffit de décommenter) et mettre à jour <varname>DEFAULT_MAIL_DOMAIN</varname>/<varname>DEFAULT_BASE</varname>.
			</para>
			 <para>
				La mise à jour à proprement parler se fait en exécutant la commande <command>migrate_all_online.sh</command> comme suit :
			</para>
			 
<screen>
<computeroutput># </computeroutput><userinput>cd /usr/share/migrationtools</userinput>
<computeroutput># </computeroutput><userinput>LDAPADD="/usr/bin/ldapadd -c" ETC_ALIASES=/dev/null ./migrate_all_online.sh</userinput></screen>
			 <para>
				Le script <command>migrate_all_online.sh</command> pose plusieurs questions auxquelles il faut répondre correctement pour indiquer la base de données LDAP dans laquelle les données vont être intégrées. Le <xref linkend="tab-migrate-all" xrefstyle="select: label nopage" /> résume les réponses données dans le cas de Falcot.
			</para>
			 <table colsep="1" id="tab-migrate-all">
				<title>Réponses aux questions du script <command>migrate_all_online.sh</command></title>
				 <tgroup cols="2">
					<colspec align="justify"></colspec>
					<colspec align="justify"></colspec>
					 <thead>
						<row>
							<entry>Question</entry>
							<entry>Réponse</entry>
						</row>

					</thead>
					 <tbody>
						<row>
							<entry><foreignphrase>X.500 naming context</foreignphrase></entry>
							 <entry><literal>dc=falcot,dc=com</literal></entry>

						</row>
						 <row>
							<entry><foreignphrase>LDAP server hostname</foreignphrase></entry>
							 <entry><literal>localhost</literal></entry>

						</row>
						 <row>
							<entry><foreignphrase>Manager DN</foreignphrase></entry>
							 <entry><literal>cn=admin,dc=falcot,dc=com</literal></entry>

						</row>
						 <row>
							<entry><foreignphrase>Bind credentials</foreignphrase></entry>
							 <entry>Le mot de passe administrateur</entry>

						</row>
						 <row>
							<entry><foreignphrase>Create DUAConfigProfile</foreignphrase></entry>
							 <entry>Non</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <para>
				La migration du fichier <filename>/etc/aliases</filename> est volontairement ignorée parce que le schéma standard (installé par Debian) ne comprend pas les structures employées par ce script pour décrire les alias de courrier électronique. S'il est nécessaire d'intégrer cette information dans la base de données LDAP, il faudra ajouter le fichier <filename>/etc/ldap/schema/misc.schema</filename> comme schéma standard.
			</para>
			 <sidebar> <title><emphasis>OUTIL</emphasis> Explorer un annuaire LDAP</title>
			 <para>
				Le programme <command>jxplorer</command> (du paquet Debian éponyme) est un outil graphique qui permet d'explorer et de modifier une base de données LDAP. Il est intéressant et aide notamment à mieux se représenter la structure hiérarchique des données LDAP.
			</para>
			 <indexterm>
				<primary><command>jxplorer</command></primary>
			</indexterm>
			 </sidebar> <para>
				On peut également noter l'emploi de l'option <literal>-c</literal> de la commande <command>ldapadd</command> lui demandant de ne pas s'interrompre en cas d'erreur. Elle est nécessaire car la conversion du fichier <filename>/etc/services</filename> génère quelques erreurs que l'on peut ignorer sans soucis.
			</para>

		</section>
		 <section>
			<title>Utiliser LDAP pour gérer les comptes</title>
			 <para>
				Maintenant que la base de données LDAP contient des informations, il est temps de les utiliser. Cette section explique comment paramétrer un système Linux afin que les différents annuaires système emploient la base de données LDAP de manière transparente.
			</para>
			 <section id="sect.config-nss">
				<title>Configuration de NSS</title>
				 <para>
					NSS (<foreignphrase>Name Service Switch</foreignphrase>, ou multiplexeur de service de noms, voir encadré <xref linkend="sidebar.intro-nss" />) est un système modulaire pour définir ou récupérer les informations des annuaires système. Pour utiliser LDAP comme une source de données NSS, il faut mettre en place le paquet <emphasis role="pkg">libnss-ldap</emphasis>. Son installation pose plusieurs questions dont les réponses sont résumées dans le <xref linkend="tab-libnss-ldap" xrefstyle="select: label nopage" />.
				</para>
				 <indexterm>
					<primary><emphasis>libnss-ldap</emphasis></primary>
				</indexterm>
				 <table colsep="1" id="tab-libnss-ldap">
					<title>Configuration du paquet <emphasis>libnss-ldap</emphasis></title>
					 <tgroup cols="2">
						<colspec align="justify"></colspec>
						 <colspec align="justify"></colspec>
						 <thead>
							<row>
								<entry>Question</entry>
								 <entry>Réponse</entry>

							</row>

						</thead>
						 <tbody>
							<row>
								<entry>URI du serveur LDAP</entry>
								 <entry><literal>ldap://ldap.falcot.com</literal></entry>

							</row>
							 <row>
								<entry>Nom distinctif de la base de recherche</entry>
								 <entry><literal>dc=falcot,dc=com</literal></entry>

							</row>
							 <row>
								<entry>Version de LDAP à utiliser</entry>
								 <entry><literal>3</literal></entry>

							</row>
							 <row>
								<entry>La base demande-t-elle un <foreignphrase>login</foreignphrase> ?</entry>
								 <entry>Non</entry>

							</row>
							 <row>
								<entry>Faut-il donner les privilèges de superutilisateur local au compte administrateur LDAP ?</entry>
								 <entry>Oui</entry>

							</row>
							 <row>
								<entry>Doit-on rendre le fichier de configuration lisible et modifiable uniquement par son propriétaire ?</entry>
								 <entry>Non</entry>

							</row>
							 <row>
								<entry>Compte LDAP pour le super-utilisateur (root)</entry>
								 <entry><literal>cn=admin,dc=falcot,dc=com</literal></entry>

							</row>
							 <row>
								<entry>Mot de passe du compte super-utilisateur LDAP</entry>
								 <entry>Le mot de passe administrateur</entry>

							</row>

						</tbody>

					</tgroup>

				</table>
				 <para>
					Il faut ensuite modifier le fichier <filename>/etc/nsswitch.conf</filename> pour lui indiquer d'employer le module <command>ldap</command> fraîchement installé.
				</para>
				 <example>
					<title>Fichier <filename>/etc/nsswitch.conf</filename></title>
					 
<programlisting>
# /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc' and `info' packages installed, try:
# `info libc "Name Service Switch"' for information about this file.

passwd: ldap compat
group: ldap compat
shadow: ldap compat

hosts: files dns ldap
networks: ldap files

protocols: ldap db files
services: ldap db files
ethers: ldap db files
rpc: ldap db files

netgroup: ldap files
</programlisting>

				</example>
				 <para>
					Le module <command>ldap</command>, systématiquement ajouté au début, est donc consulté en premier. Le service <literal>hosts</literal> fait exception puisque pour contacter le serveur LDAP, il faut consulter le DNS au préalable (pour résoudre <literal>ldap.falcot.com</literal>). Sans cette précaution, une requête de résolution de nom de machine consulterait le serveur LDAP, ce qui déclencherait une résolution du nom du serveur LDAP, etc., produisant une boucle infinie.
				</para>
				 <para>
					Si l'on souhaite que le serveur LDAP soit la référence unique (et ne pas prendre en compte les fichiers locaux employés par le module <emphasis>files</emphasis>), il est possible de configurer chaque service avec la syntaxe suivante :
				</para>
				 <para>
					<literal><replaceable>service</replaceable>: ldap [NOTFOUND=return] files</literal>.
				</para>
				 <para>
					Si l'entrée demandée n'existe pas dans le serveur LDAP, la réponse sera « n'existe pas » même si la ressource existe dans l'un des fichiers locaux, qui ne seront employés que lorsque le service LDAP sera hors d'usage.
				</para>

			</section>
			 <section id="sect.config-pam">
				<title>Configuration de PAM</title>
				 <para>
					La configuration de PAM (voir l'encadré <xref linkend="sidebar.intro-pam" />) proposée dans cette section permettra aux applications d'effectuer les authentifications nécessaires à partir des données de la base LDAP.
				</para>
				 <sidebar> <title><emphasis>ATTENTION</emphasis> Impossible de s'identifier</title>
				 <para>
					Le changement de la configuration PAM standard employée par les divers programmes est une opération sensible. En cas de mauvaise manipulation, il peut être impossible de s'authentifier, donc de se connecter. Pensez donc à garder un shell root ouvert en parallèle pour corriger vos erreurs le cas échéant.
				</para>
				 </sidebar> <para>
					Il faut installer le module LDAP pour PAM, qui se trouve dans le paquet Debian <emphasis role="pkg">libpam-ldap</emphasis>. Son installation pose des questions similaires à celles de <emphasis role="pkg">libnss-ldap</emphasis> et d'ailleurs, certains paramètres de configuration (comme l'URI du serveur LDAP) sont tout simplement partagés avec le paquet <emphasis role="pkg">libnss-ldap</emphasis>. Les réponses sont résumées dans le <xref linkend="tab-libpam-ldap" xrefstyle="select: label nopage" />.
				</para>
				 <indexterm>
					<primary><emphasis>libpam-ldap</emphasis></primary>
				</indexterm>
				 <table colsep="1" id="tab-libpam-ldap">
					<title>Configuration de <emphasis>libpam-ldap</emphasis></title>
					 <tgroup cols="2">
						<colspec align="justify"></colspec>
						 <colspec align="justify"></colspec>
						 <thead>
							<row>
								<entry>Question</entry>
								 <entry>Réponse</entry>

							</row>

						</thead>
						 <tbody>
							<row>
								<entry>Le super-utilisateur local doit-il être un administrateur de la base LDAP ?</entry>
								 <entry>Oui. Cela permet d'utiliser la commande <command>passwd</command> habituelle pour changer les mots de passe stockés dans la base LDAP.</entry>

							</row>
							 <row>
								<entry>La base LDAP demande-t-elle une identification ?</entry>
								 <entry>Non</entry>

							</row>
							 <row>
								<entry>Compte LDAP pour le super-utilisateur (root)</entry>
								 <entry><literal>cn=admin,dc=falcot,dc=com</literal></entry>

							</row>
							 <row>
								<entry>Mot de passe du compte super-utilisateur LDAP</entry>
								 <entry>Le mot de passe administrateur de la base LDAP</entry>

							</row>
							 <row>
								<entry>Algorithme de chiffrement à utiliser localement pour les mots de passe</entry>
								 <entry>crypt</entry>

							</row>

						</tbody>

					</tgroup>

				</table>
				 <para>
					L'installation de <emphasis>libpam-ldap</emphasis> adapte automatiquement la configuration PAM par défaut définie dans les fichiers <filename>/etc/pam.d/common-auth</filename>, <filename>/etc/pam.d/common-password</filename> et <filename>/etc/pam.d/common-account</filename>. Pour effectuer cela, le paquet s'appuie sur l'utilitaire <command>pam-auth-update</command> prévu à cet usage et fourni par le paquet <emphasis role="pkg">libpam-runtime</emphasis>. L'administrateur peut également exécuter <command>pam-auth-update</command> pour activer et désactiver à sa guise les modules PAM présents sur le système.
				</para>
				 <indexterm>
					<primary><filename>common-auth</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-auth</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>common-password</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-password</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>common-account</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-account</filename></primary>
				</indexterm>

			</section>
			 <section>
				<title>Sécuriser les échanges de données LDAP</title>
				 <indexterm>
					<primary>LDAP</primary>
					<secondary>sécurisé</secondary>
				</indexterm>
				 <para>
					LDAP est par défaut transporté en clair sur le réseau, ce qui signifie que les mots de passe chiffrés circulent sans précaution particulière. Repérables, ils peuvent donc subir une attaque de type dictionnaire. Pour éviter ce désagrément, il convient d'employer une couche supplémentaire de chiffrement et cette section détaille comment procéder.
				</para>
				 <section>
					<title>Configuration côté serveur</title>
					 <indexterm>
						<primary><foreignphrase>OpenSSL</foreignphrase></primary>
						 <secondary>création de clés</secondary>
					</indexterm>
					 <indexterm>
						<primary><filename>biclé</filename></primary>
					</indexterm>
					 <para>
						La première étape consiste à créer une biclé (clé publique et clé privée) pour LDAP. Pour cela, les administrateurs de Falcot réutilisent <emphasis>easy-rsa</emphasis> (voir la <xref linkend="sect.easy-rsa" />). L'exécution de la commande <command>./build-server-key ldap.falcot.com</command> pose plusieurs questions banales (lieu, nom de l'organisation, etc.). Il est impératif de répondre à la question <guimenuitem>Common Name</guimenuitem> par le nom complet du serveur LDAP ; en l'occurrence il s'agit donc de <literal>ldap.falcot.com</literal>.
					</para>
					 <para>
						La commande précédente a généré un certificat dans le fichier <filename>keys/ldap.falcot.com.crt</filename> et la clé privée correspondante est stockée dans <filename>keys/ldap.falcot.com.key</filename>.
					</para>
					 <para>
						Maintenant que ces clés ont été installées à leur emplacement standard, il faut s'assurer que le fichier contenant leur partie privée est lisible par le serveur LDAP, qui fonctionne avec l'identité utilisateur <literal>openldap</literal> :
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>adduser openldap ssl-cert
</userinput><computeroutput>Adding user `openldap' to group `ssl-cert' ...
Adding user openldap to group ssl-cert
Done.
# </computeroutput><userinput>mv keys/ldap.falcot.com.key /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chown root:ssl-cert /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chmod 0640 /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>mv newcert.pem /etc/ssl/certs/ldap.falcot.com.pem
</userinput></screen>
					 <para>
						Le démon <command>slapd</command> doit aussi être configuré pour utiliser ces clés de chiffrement. La configuration du serveur LDAP est gérée de manière dynamique : comme elle est stockée dans une partie dédiée de l'annuaire, elle peut être mise à jour avec des opérations LDAP normales sur cette hiérarchie <literal>cn=config</literal> (et le serveur met à jour <filename>/etc/ldap/slapd.d</filename> à la volée pour rendre cette configuration persistante). Pour modifier la configuration, on utilisera donc <command>ldapmodify</command> :
					</para>
					 <example>
						<title>Configuration de <command>slapd</command> pour la prise en charge du chiffrement</title>
						 
<screen><computeroutput># </computeroutput><userinput>cat &gt;ssl.ldif &lt;&lt;END
dn: cn=config
changetype: modify
add: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/certs/ldap.falcot.com.pem
-
add: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/private/ldap.falcot.com.key
-
END
</userinput><computeroutput># </computeroutput><userinput>ldapmodify -Y EXTERNAL -H ldapi:/// -f ssl.ldif
</userinput><computeroutput>SASL/EXTERNAL authentication started
SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
SASL SSF: 0
modifying entry "cn=config"
</computeroutput></screen>

					</example>
					 <sidebar> <title><emphasis>OUTIL</emphasis> Éditer un annuaire LDAP avec <command>ldapvi</command></title>
					 <indexterm>
						<primary><command>ldapvi</command></primary>
					</indexterm>
					 <para>
						<command>ldapvi</command> permet d'afficher une représentation LDIF d'une partie de l'annuaire LDAP dans un éditeur de texte. Si l'on effectue des modifications dans cet éditeur, <command>ldapvi</command> les convertira en opérations LDAP et effectuera ces dernières automatiquement.
					</para>
					 <para>
						C'est donc une manière particulièrement pratique de mettre à jour la configuration du serveur LDAP, simplement en éditant la hiérarchie <literal>cn=config</literal>.
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>ldapvi -Y EXTERNAL -h ldapi:/// -b cn=config
</userinput></screen>
					 </sidebar> <para>
						La dernière étape pour activer la mise en place du chiffrement est de modifier la variable <varname>SLAPD_SERVICES</varname> du fichier <filename>/etc/default/slapd</filename>. Notons au passage que pour éviter tout risque, on désactive la possibilité de LDAP non sécurisé.
					</para>
					 <example>
						<title>Fichier <filename>/etc/default/slapd</filename></title>
						 
<programlisting>
# Default location of the slapd.conf file or slapd.d cn=config directory. If
# empty, use the compiled-in default (/etc/ldap/slapd.d with a fallback to
# /etc/ldap/slapd.conf).
SLAPD_CONF=

# System account to run the slapd server under. If empty the server
# will run as root.
SLAPD_USER="openldap"

# System group to run the slapd server under. If empty the server will
# run in the primary group of its user.
SLAPD_GROUP="openldap"

# Path to the pid file of the slapd server. If not set the init.d script
# will try to figure it out from $SLAPD_CONF (/etc/ldap/slapd.conf by
# default)
SLAPD_PIDFILE=

# slapd normally serves ldap only on all TCP-ports 389. slapd can also
# service requests on TCP-port 636 (ldaps) and requests via unix
# sockets.
# Example usage:
# SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"
SLAPD_SERVICES="ldaps:/// ldapi:///"

# If SLAPD_NO_START is set, the init script will not start or restart
# slapd (but stop will still work).  Uncomment this if you are
# starting slapd via some other means or if you don't want slapd normally
# started at boot.
#SLAPD_NO_START=1

# If SLAPD_SENTINEL_FILE is set to path to a file and that file exists,
# the init script will not start or restart slapd (but stop will still
# work).  Use this for temporarily disabling startup of slapd (when doing
# maintenance, for example, or through a configuration management system)
# when you don't want to edit a configuration file.
SLAPD_SENTINEL_FILE=/etc/ldap/noslapd

# For Kerberos authentication (via SASL), slapd by default uses the system
# keytab file (/etc/krb5.keytab).  To use a different keytab file,
# uncomment this line and change the path.
#export KRB5_KTNAME=/etc/krb5.keytab

# Additional options to pass to slapd
SLAPD_OPTIONS=""
</programlisting>

					</example>

				</section>
				 <section>
					<title>Configuration côté client</title>
					 <para>
						Côté client, il faut modifier la configuration des modules <emphasis>libpam-ldap</emphasis> et <emphasis>libnss-ldap</emphasis> en utilisant une URI en <literal>ldaps://</literal>.
					</para>
					 <para>
						Les clients LDAP doivent aussi pouvoir s'assurer de l'authenticité du serveur. Dans le contexte d'une infrastructure de clés publiques X.509, les certificats publics sont signés par la clé d'une autorité de certification (<foreignphrase>certificate authority</foreignphrase>, ou CA). Les administrateurs de Falcot ont utilisé <emphasis>easy-rsa</emphasis> pour créer leur propre autorité de certification et il faut maintenant configurer le système pour qu'il fasse confiance à cette autorité. Pour cela, il suffit de placer le certificat dans <filename>/usr/local/share/ca-certificates</filename> et d'exécuter <command>update-ca-certificates</command>.
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>cp keys/ca.crt /usr/local/share/ca-certificates/falcot.crt
</userinput><computeroutput># </computeroutput><userinput>update-ca-certificates
</userinput><computeroutput>Updating certificates in /etc/ssl/certs... 1 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d....
Adding debian:falcot.pem
done.
done.
</computeroutput></screen>
					 <para>
						Pour terminer, il est intéressant de configurer l'URI LDAP et le DN que les divers outils de ligne de commande vont utiliser par défaut. Cela se configure dans <filename>/etc/ldap/ldap.conf</filename> et évite d'avoir à taper ces paramètres sur chaque ligne de commande.
					</para>
					 <example>
						<title>Fichier <filename>/etc/ldap/ldap.conf</filename></title>
						 
<programlisting>#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

BASE   dc=falcot,dc=com
URI    ldaps://ldap.falcot.com

#SIZELIMIT      12
#TIMELIMIT      15
#DEREF          never

# TLS certificates (needed for GnuTLS)
TLS_CACERT      /etc/ssl/certs/ca-certificates.crt
</programlisting>

					</example>

				</section>

			</section>

		</section>

	</section>
	 <section id="sect.rtc-services">
		<title>Services de communication en temps réel</title>
		 <para>
			Les services de communication en temps réel (<foreignphrase>Real-Time Communication</foreignphrase>, RTC) regroupent les services de voix sur IP, de video/webcam, de messagerie instantanée (<foreignphrase>instant messaging</foreignphrase>, IM) et de partage de bureaux. Ce chapitre introduit trois services nécessaires dans une infrastructure de communication en temps réel : un serveur TURN, un serveur SIP et un serveur XMPP. Des explications claires et détaillées de comment planifier, installer et gérer ces services sont disponibles en anglais dans le <foreignphrase>Real-Time Communications Quick Start Guide</foreignphrase>, y compris des exemples spécifiques à Debian. <ulink type="block" url="http://rtcquickstart.org" />
		</para>
		 <indexterm>
			<primary>VoIP</primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <indexterm>
			<primary>RTC</primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <indexterm>
			<primary>Messagerie Instantanée</primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <indexterm>
			<primary><foreignphrase>Chat</foreignphrase></primary>
			<secondary>serveur</secondary>
		</indexterm>
		 <para>
			SIP et XMPP peuvent fournir les mêmes services. SIP est un peu plus connu pour la voix sur IP et la vidéo alors que XMPP est traditionnellement utilisé comme protocole de messagerie instantanée. En réalité, les deux peuvent être utilisés pour les deux services. Pour optimiser les options de connectivité, il est recommandé d'exploiter les deux en parallèle.
		</para>
		 <indexterm>
			<primary>SIP</primary>
		</indexterm>
		 <indexterm>
			<primary>XMPP</primary>
		</indexterm>
		 <para>
			Ces deux services utilisent des certificats X.509 pour garantir la confidentialité et l'authentification. La <xref linkend="sect.easy-rsa" /> donne plus de détails sur la création de ces certificats. Alternativement, on trouvera aussi des explications très utiles dans le <foreignphrase>Real-Time Communications Quick Start Guide</foreignphrase> (en anglais) : <ulink type="block" url="http://rtcquickstart.org/guide/multi/tls.html" />
		</para>
		 <section id="sect.rtc-dns-settings">
			<title>Paramètres DNS pour les services RTC</title>
			 <para>
				Les services RTC nécessitent des enregistrements DNS SRV et NAPTR. Voici un exemple de configuration qui peut être mis dans le fichier de zone pour <literal>falcot.com</literal> :
			</para>
			 <indexterm>
				<primary>DNS</primary>
				<secondary>enregistrement SRV</secondary>
			</indexterm>
			 <indexterm>
				<primary>DNS</primary>
				<secondary>enregistrement NAPTR</secondary>
			</indexterm>
			 
<programlisting>
; le serveur où tout va fonctionner
server1            IN     A      198.51.100.19
server1            IN     AAAA   2001:DB8:1000:2000::19

; IPv4 seulement pour TURN pour le moment, certains clients
; ne fonctionnent pas avec IPv6
turn-server        IN     A      198.51.100.19

; adresses IPv4 et IPv6 pour  SIP
sip-proxy          IN     A      198.51.100.19
sip-proxy          IN     AAAA   2001:DB8:1000:2000::19

; adresses IPv4 et IPv6 pour XMPP
xmpp-gw            IN     A      198.51.100.19
xmpp-gw            IN     AAAA   2001:DB8:1000:2000::19

; DNS SRV et NAPTR pour STUN / TURN
_stun._udp  IN SRV    0 1 3467 turn-server.falcot.com.
_turn._udp  IN SRV    0 1 3467 turn-server.falcot.com.
@           IN NAPTR  10 0 "s" "RELAY:turn.udp" "" _turn._udp.falcot.com.

; DNS SRV et NAPTR pour SIP
_sips._tcp  IN SRV    0 1 5061 sip-proxy.falcot.com.
@           IN NAPTR  10 0 "s" "SIPS+D2T" "" _sips._tcp.falcot.com.

; enregistrements DNS SRV pour les modes XMPP Server et Client:
_xmpp-client._tcp  IN     SRV    5 0 5222 xmpp-gw.falcot.com.
_xmpp-server._tcp  IN     SRV    5 0 5269 xmpp-gw.falcot.com.</programlisting>

		</section>
		 <section id="sect.turn-server">
			<title>Serveur TURN</title>
			 <para>
				TURN est un service qui aide les clients derrière des routeurs NAT et des pare-feu à trouver le chemin le plus efficace pour communiquer avec d'autres clients et pour relayer les flux media si aucun chemin direct n'est trouvé. Il est grandement recommandé d'installer le serveur TURN avant que tous les autres services RTC ne soient disponibles pour les utilisateurs finaux.
			</para>
			 <indexterm>
				<primary>TURN</primary>
				<secondary>serveur</secondary>
			</indexterm>
			 <para>
				TURN et le protocole ICE sont des standards ouverts. Pour tirer profit de ces protocoles, en maximisant la connectivité et en minimisant la frustration des utilisateurs, il est important de s'assurer que tous les logiciels clients les supportent.
			</para>
			 <indexterm>
				<primary>ICE</primary>
			</indexterm>
			 <para>
				Pour que l'algorithme ICE fonctionne efficacement, le serveur doit avoir deux adresses publiques IPv4.
			</para>
			 <section id="sect.turn-server-install">
				<title>Installation du serveur TURN</title>
				 <para>
					Installez le paquet <emphasis role="pkg">resiprocate-turn-server</emphasis>.
				</para>
				 <para>
					Éditez le fichier de configuration <filename>/etc/reTurn/reTurnServer.config</filename>. Le plus important est d'intégrer les adresses IP du serveur.
				</para>
				 
<programlisting>
# vos addresses IP vont ici :
TurnAddress = 198.51.100.19
TurnV6Address = 2001:DB8:1000:2000::19
AltStunAddress = 198.51.100.20
# votre domaine va ici, il doit correspondre à la valeur utilisée pour
# créer vos mots de passe avec l'algorithme de hachage HA1 :
AuthenticationRealm = myrealm

UserDatabaseFile = /etc/reTurn/users.txt
UserDatabaseHashedPasswords = true</programlisting>
				 <para>
					Redémarrez le service.
				</para>

			</section>
			 <section id="sect.turn-server-management">
				<title>Gestion des utilisateurs de TURN</title>
				 <para>
					Utilisez l'utilitaire <command>htdigest</command> pour gérer la liste des utilisateurs du serveur TURN.
				</para>
				
<screen><computeroutput># </computeroutput><userinput>htdigest /etc/reTurn/users.txt myrealm joe</userinput></screen>
				 <para>
					Après toute modification à <filename>/etc/reTurn/users.txt</filename>, envoyez le signal HUP pour que le serveur le recharge (ou autorisez le rechargement automatique dans <filename>/etc/reTurn/reTurnServer.config</filename>).
				</para>

			</section>

		</section>
		 <section id="sect.sip-server">
			<title>Serveur Proxy SIP</title>
			 <para>
				Un serveur proxy SIP gère les connexions SIP entrantes et sortantes entre différentes organisations, les fournisseurs de tronc SIP <foreignphrase>(SIP trunking)</foreignphrase>, les autocommutateurs téléphoniques privés (<foreignphrase>Private Automatic Branch eXchange</foreignphrase>, PBX) comme Asterisk, les téléphones SIP, les logiciels de téléphonie basés sur SIP et les applications WebRTC.
			</para>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>serveur</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>proxy</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>PBX</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary><foreignphrase>trunk</foreignphrase></secondary>
			</indexterm>
			 <para>
				Il est fortement recommandé d'installer et de configurer le proxy SIP avant d'essayer de mettre en place un <foreignphrase>PBX</foreignphrase> (autocommutateur téléphonique privé). Le proxy SIP normalise une large partie du trafic arrivant au PBX et fournit une plus grande connectivité et une résilience plus importante.
			</para>
			 <section id="sect.sip-server-install">
				<title>Installation du proxy SIP</title>
				 <para>
					Installez le paquet <emphasis role="pkg">repro</emphasis>. Utiliser le paquet de <emphasis role="distribution">jessie-backposrts</emphasis> est fortement recommandé car il contient les dernières améliorations qui augmentent la connectivité et la résilience.
				</para>
				 <indexterm>
					<primary>repro</primary>
				</indexterm>
				 <para>
					Éditez le fichier de configuration <filename>/etc/repro/repro.config</filename>. Le plus important est d'ajouter les adresses IP du serveur. L'exemple ci-dessous montre comment configurer à la fois le SIP normal et <foreignphrase>WebSockets/WebRTC</foreignphrase> en utilisant TLS, IPv4 et IPv6 :
				</para>
				 
<programlisting>
# Transport1 est pour SIP sur des connexions TLS
# On utilise le port 5061 ici mais on pourrait utiliser le port
# 443 si des clients sont derrière des pare-feu trop restrictifs
Transport1Interface = 198.51.100.19:5061
Transport1Type = TLS
Transport1TlsDomain = falcot.com
Transport1TlsClientVerification = Optional
Transport1RecordRouteUri = sip:falcot.com;transport=TLS
Transport1TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport1TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport2 est la version IPv6 de Transport1
Transport2Interface = 2001:DB8:1000:2000::19:5061
Transport2Type = TLS
Transport2TlsDomain = falcot.com
Transport2TlsClientVerification = Optional
Transport2RecordRouteUri = sip:falcot.com;transport=TLS
Transport2TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport2TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport3 est pour les connexions SIP sur WebSocket (WebRTC)
# On utilise le port 8443 ici mais on pourrait utiliser le port 443
Transport3Interface = 198.51.100.19:8443
Transport3Type = WSS
Transport3TlsDomain = falcot.com
# Ceci demanderait au navigateur d'envoyer un certificat, mais les
# navigateurs ne semblent pas bien le gérer, on le laisse donc à None :
Transport3TlsClientVerification = None
Transport3RecordRouteUri = sip:falcot.com;transport=WSS
Transport3TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport3TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport4 est la version IPv6 de Transport3
Transport4Interface = 2001:DB8:1000:2000::19:8443
Transport4Type = WSS
Transport4TlsDomain = falcot.com
Transport4TlsClientVerification = None
Transport4RecordRouteUri = sip:falcot.com;transport=WSS
Transport4TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport4TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport5 : ceci pourrait être pour des connexions TCP à un serveur
# Asterisk dans le réseau interne. N'autorisez pas le port 5060
# dans le pare-feu externe.
Transport5Interface = 198.51.100.19:5060
Transport5Type = TCP
Transport5RecordRouteUri = sip:198.51.100.19:5060;transport=TCP

HttpBindAddress = 198.51.100.19, 2001:DB8:1000:2000::19
HttpAdminUserFile = /etc/repro/users.txt

RecordRouteUri = sip:falcot.com;transport=tls
ForceRecordRouting = true
EnumSuffixes = e164.arpa, sip5060.net, e164.org
DisableOutbound = false
EnableFlowTokens = true
EnableCertificateAuthenticator = True</programlisting>
				 <para>
					Définissez le mot de passe administrateur pour l'interface web avec l'utilitaire <command>htdigest</command>. Le nom de l'utilisateur doit être <emphasis>admin</emphasis> et le domaine <foreignphrase>(realm)</foreignphrase> doit correspondre à la valeur spécifiée dans <filename>repro.config</filename>.
				</para>
				 
<screen><computeroutput># </computeroutput><userinput>htdigest /etc/repro/users.txt repro admin</userinput></screen>
				 <para>
					Redémarrez le service pour utiliser la nouvelle configuration.
				</para>

			</section>
			 <section id="sect.sip-server-management">
				<title>Gestion du proxy SIP</title>
				 <para>
					Visitez l'adresse <literal>http://sip-proxy.falcot.com:5080</literal> pour compléter la configuration en ajoutant les domaines, les utilisateurs locaux et les routes statiques.
				</para>
				 <para>
					La première étape est d'ajouter le domaine local. Le processus doit être redémarré après l'ajout ou la suppression de domaines dans la liste.
				</para>
				 <para>
					Le proxy sait comment acheminer les appels entre les utilisateurs locaux et les adresses SIP complètes, la configuration du routage est uniquement nécessaire si le comportement par défaut ne convient pas ; par exemple pour reconnaître des numéros de téléphone, il faut ajouter un préfixe et les router vers un fournisseur SIP.
				</para>

			</section>

		</section>
		 <section id="sect.xmpp-server">
			<title>Serveur XMPP</title>
			 <para>
				Un serveur XMPP gère la connectivité entre les utilisateurs XMPP locaux et les utilisateurs XMPP dans d'autres domaines de l'Internet public.
			</para>
			 <indexterm>
				<primary>XMPP</primary>
				<secondary>serveur</secondary>
			</indexterm>
			 <sidebar> <title><emphasis>VOCABULAIRE</emphasis> XMPP ou Jabber ?</title>
			 <indexterm>
				<primary>Jabber</primary>
			</indexterm>
			 <para>
				Il est parfois fait référence à XMPP sous le nom de Jabber. En réalité, Jabber est une marque alors que XMPP est le nom officiel du standard.
			</para>
			 <indexterm>
				<primary>Jabber</primary>
			</indexterm>
			 </sidebar> <para>
				Prosody est un serveur XMPP populaire qui fonctionne bien sur les serveurs Debian.
			</para>
			 <indexterm>
				<primary>Prosody</primary>
			</indexterm>
			 <section id="sect.xmpp-server-install">
				<title>Installation du serveur XMPP</title>
				 <para>
					Installez le paquet <emphasis role="pkg">prosody</emphasis>. Il est préférable d'utiliser le paquet de <emphasis role="distribution">jessie-backports</emphasis> car il intègre les dernières améliorations pour optimiser la connectivité et la résilience.
				</para>
				 <indexterm>
					<primary>Prosody</primary>
				</indexterm>
				 <para>
					Vérifiez le fichier de configuration <filename>/etc/prosody/prosody.cfg.lua</filename>. La principale chose à faire est de renseigner l'identifiant des utilisateurs autorisés à gérer le serveur.
				</para>
				 
<programlisting>
admins = { "joe@falcot.com" }</programlisting>
				 <para>
					Il faut également un fichier de configuration pour chaque domaine. Copiez l'exemple de <filename>/etc/prosody/conf.avail/example.com.cfg.lua</filename> et adaptez le suivant les besoins. Voici le fichier <literal>falcot.com.cfg.lua</literal> créé par les administrateurs de Falcot :
				</para>
				 
<programlisting>
VirtualHost "falcot.com"
        enabled = true
        ssl = {
                key = "/etc/ssl/private/falcot.com-key.pem";
                certificate = "/etc/ssl/public/falcot.com.pem";
                }</programlisting>
				 <para>
					Pour activer le domaine, il faut créer un lien symbolique dans <filename>/etc/prosody/conf.d/</filename> :
				</para>
				 
<screen><computeroutput># </computeroutput><userinput>ln -s /etc/prosody/conf.avail/falcot.com.cfg.lua /etc/prosody/conf.d/</userinput></screen>
				 <para>
					Redémarrez le service pour utiliser la nouvelle configuration.
				</para>

			</section>
			 <section id="sect.xmpp-server-management">
				<title>Gestion du serveur XMPP</title>
				 <para>
					Certaines opérations de gestion peuvent être réalisées avec l'utilitaire en ligne de commande <literal>prosodyctl</literal>. Par exemple, pour ajouter le compte administrateur spécifié dans <filename>/etc/prosody/prosody.cfg.lua</filename> :
				</para>
				
<programlisting>
# prosodyctl adduser joe@falcot.com</programlisting>
				 <para>
					La page <ulink url="http://prosody.im/doc/configure">Prosody online documentation</ulink> donne plus de détails sur comment personnaliser la configuration.
				</para>

			</section>

		</section>
		 <section id="sect.rtc-port-443">
			<title>Services fonctionnant sur le port 443</title>
			 <para>
				Certains administrateurs préfèrent faire tourner tous leurs services RTC sur le port 443. Cela simplifie la connexion des utilisateurs qui sont dans des endroits éloignés, tels que des hôtels et des aéroports où les autres ports risquent d'être bloqués et où le trafic Internet est acheminé à travers des serveurs proxy HTTP.
			</para>
			 <para>
				Pour réaliser ceci, chaque service (SIP, XMPP et TURN) doit avoir une adresse IP différente. Tous les services peuvent cependant être sur le même hôte puisque Linux gère des adresses IP multiples sur un seul hôte. Le numéro de port, 443, doit être spécifié dans les fichiers de configuration de chaque service et aussi dans les enregistrements DNS de type SRV.
			</para>

		</section>
		 <section id="sect.rtc-webrtc">
			<title>Ajout de WebRTC</title>
			 <para>
				Falcot souhaite que les clients puissent téléphoner directement à partir du site web. Les administrateurs de Falcot veulent aussi utiliser WebRTC dans le cadre de leur plan de reprise après sinistre, pour que le personnel puisse utiliser les navigateurs web de chez eux pour se connecter au système téléphonique de l'entreprise et travailler normalement en cas d'urgence.
			</para>
			 <indexterm>
				<primary>WebRTC</primary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary><foreignphrase>WebSockets</foreignphrase></secondary>
			</indexterm>
			 <sidebar> <title><emphasis>EN PRATIQUE</emphasis> Essayer WebRTC</title>
			 <indexterm>
				<primary>WebRTC</primary>
				<secondary>démonstration</secondary>
			</indexterm>
			 <para>
				Pour découvrir WebRTC, il existe plusieurs sites de démonstration qui permettent de tester directement les équipements. <ulink type="block" url="http://www.sip5060.net/test-calls" />
			</para>
			 </sidebar> <para>
				WebRTC est une technologie qui évolue rapidement et il est donc essentiel d'utiliser les paquets des distributions <emphasis role="distribution">jessie-backports</emphasis> ou <emphasis role="distribution">Testing</emphasis>.
			</para>
			 <para>
				JSCommunicator est un téléphone WebRTC générique, sans marque, qui n'a besoin d'aucun script côté serveur. Il est construit exclusivement avec du HTML, du CSS et du JavaScript. Il est à la base de nombreux autres services et modules WebRTC pour des <foreignphrase>frameworks</foreignphrase> plus avancés. <ulink type="block" url="http://jscommunicator.org" />
			</para>
			 <indexterm>
				<primary>JSCommunicator</primary>
			</indexterm>
			 <para>
				Installer le paquet <emphasis role="pkg">jscommunicator-web-phone</emphasis> est la méthode la plus rapide pour avoir un téléphone WebRTC sur un site web. Cela nécessite d'avoir un proxy SIP avec un transport WebSocket. Les instructions figurant dans la <xref linkend="sect.sip-server-install" /> donnent les informations nécessaires pour activer un transport WebSocket dans le proxy SIP <emphasis role="pkg">repro</emphasis>.
			</para>
			 <para>
				<emphasis role="pkg">jscommunicator-web-phone</emphasis> peut être utilisé de différentes façons. L'une des stratégies les plus simples est d'inclure ou de copier la configuration <filename>/etc/jscommunicator-web-phone/apache.conf</filename> dans la configuration d'un hôte virtuel Apache.
			</para>
			 <para>
				Une fois que les fichiers de JSCommunicator sont disponibles sur le serveur web, il convient de personnaliser le fichier <filename>/etc/jscommunicator-web-phone/config.js</filename> pour pointer sur le serveur TURN et sur le serveur SIP. Par exemple ainsi :
			</para>
			 
<programlisting>
JSCommSettings = {

  // Environnement du serveur web
  webserver: {
    url_prefix: null            // Si défini, préfixe pour construire sound/ URLs
  },

  // Relais STUN/TURN pour les médias
  stun_servers: [],
  turn_servers: [
    { server:"turn:turn-server.falcot.com?transport=udp", username:"joe", password:"j0Ep455d" }
  ],

  // Connexion WebSocket
  websocket: {
      // Notez qu'on utilise le certificat du domaine falcot.com et le port 8443
      // Cela correspond aux exemples Transport3 et Transport4 dans
      // le fichier de configuration repro.confifg de falcot.com
    servers: 'wss://falcot.com:8443',
    connection_recovery_min_interval: 2,
    connection_recovery_max_interval: 30
  },

  ...</programlisting>
			 <para>
				Les sites web les plus avancés qui proposent d'appeler en ligne utilisent généralement un script côté serveur qui génère dynamiquement le fichier <literal>config.js</literal>. Le code source de <ulink url="http://drucall.org">DruCall</ulink> montre comment réaliser ceci en PHP.
			</para>
			 <indexterm>
				<primary>DruCall</primary>
			</indexterm>
			 <para>
				Le tour d'horizon des logiciels serveurs proposé par ce chapitre est loin d'être exhaustif, mais il recouvre toutefois la réalité des services réseau les plus employés. Passons sans plus tarder à un chapitre encore plus technique : approfondissement de certains concepts, déploiement à grande échelle, virtualisation sont autant de sujets passionnants que nous allons aborder.
			</para>

		</section>

	</section>
</chapter>

