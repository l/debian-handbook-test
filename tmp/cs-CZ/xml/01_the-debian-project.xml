<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="the-debian-project" lang="cs-CZ">
	<chapterinfo>
		 <keywordset>
			<keyword>Cíl</keyword>
			 <keyword>Prostředky</keyword>
			 <keyword>Operace</keyword>
			 <keyword>Dobrovolník</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Projekt Debian</title>
	 <highlights> <para>
		Než se ponoříme přímo do technologie, pojďme se podívat na to, co to je projekt Debian, jeho cíle, jeho prostředky a jeho provoz.
	</para>
	 </highlights> <section id="sect.what-is-debian">
		<title>Co je Debian?</title>
		 <indexterm>
			<primary>sdružení</primary>
		</indexterm>
		 <sidebar> <title><emphasis>CULTURE</emphasis> Origin of the Debian name</title>
		 <para>
			Nehledejte dále: Debian není zkratka. Tento název je ve skutečnosti spojení dvou křestních jmen: a to Iana Murdocka, a v té době jeho přítelkyně, Debry. Debra + Ian = Debian.
		</para>
		 </sidebar> <para>
			Debian je distribuce GNU/Linuxu. O tom, co to je distribuce budeme diskutovat podrobněji v části <xref linkend="sect.role-of-distributions" />, ale nyní budeme jednoduše konstatovat, že se jedná o kompletní operační systém, včetně softwaru a systémů pro instalaci a řízení, vše na základě Linuxového jádra a svobodného softwaru (zejména z projektu GNU).
		</para>
		 <para>
			Když v roce 1993, pod vedením FSF, vytvořil Debian, měl Ian Murdock jasné cíle, které vyjádřil v <emphasis>Manifestu Debianu</emphasis>. Svobodný operační systém, o který usiloval, musel mít dva hlavní rysy. Za prvé, kvalitu: Debian musí být vyvinut s největší péčí, aby byl hoden linuxového jádra. Musí být rovněž nekomerční distribucí, která dostatečně věrohodně konkuruje velkým komerčním distribucím. Této dvojí ambice by bylo v jeho očích možné dosáhnout pouze otevřením procesu vývoje Debianu, stejně jako v případě Linuxu a projektu GNU. Vzájemná kontrola by tedy neustále tento produkt zlepšovala.
		</para>
		 <sidebar> <title><emphasis>KULTURA</emphasis> GNU, projekt od FSF</title>
		 <indexterm>
			<primary>GNU</primary>
		</indexterm>
		 <indexterm>
			<primary>GNU</primary>
			<secondary>Není UNIX</secondary>
		</indexterm>
		 <para>
			Projekt GNU je řada svobodného softwaru vyvíjeného nebo sponzorovaného nadací Free Software Foundation (FSF), založené svým kultovním vůdcem, Dr. Richardem M. Stallmanem. GNU je rekurzivní zkratka znamenající “GNU Není Unix”.
		</para>
		 </sidebar> <sidebar> <title><emphasis>KULTURA</emphasis> Richard Stallman</title>
		 <indexterm>
			<primary>Stallman, Richard</primary>
		</indexterm>
		 <indexterm>
			<primary>RMS</primary>
		</indexterm>
		 <para>
			<acronym>FSF</acronym>'s founder and author of the GPL license, Richard M. Stallman (often referred to by his initials, RMS) is a charismatic leader of the Free Software movement. Due to his uncompromising positions, he is not unanimously admired, but his non-technical contributions to Free Software (in particular at the legal and philosophical level) are respected by everybody.
		</para>
		 </sidebar> <section>
			<title>Multiplatformní operační systém</title>
			 <indexterm>
				<primary>meta-distribuce</primary>
			</indexterm>
			 <sidebar> <title><emphasis>Společenství</emphasis> cesta Iana Murdocka</title>
			 <indexterm>
				<primary>Ian Murdock</primary>
			</indexterm>
			 <indexterm>
				<primary>Murdock, Ian</primary>
			</indexterm>
			 <indexterm>
				<primary>Progeny</primary>
			</indexterm>
			 <para>
				Ian Murdock, zakladatel projektu Debian, byl jeho první vůdce od roku 1993 do roku 1996. Po předání štafety Bruceu Perensovi zhostil se Ian méně veřejné role. Vrátil se do práce v zákulisí společenství Svobodného softwaru vytvořením firmy Progeny, se záměrem prodávat distribuci odvozenou z Debianu. Tento podnik se stal, bohužel, obchodním nezdarem a vývoj byl ukončen. Společnost, po několika letech přežívání, pouze jako poskytovatel služeb, nakonec v dubnu 2007 vyhlásil bankrot. Z různých projektů započaté Progeny, pouze <emphasis>discover </emphasis> stále zůstává. Jedná se o automatický nástroj pro detekci hardwaru.
			</para>
			 <para>
				Ian Murdock died on 28 December 2015 in San Francisco after a series of worrying tweets where he reported having been assaulted by police. In July 2016 it was announced that his death had been ruled a suicide.
			</para>
			 </sidebar> <para>
				Debian, remaining true to its initial principles, has had so much success that, today, it has reached a tremendous size. The 12 architectures offered cover 10 hardware architectures and 2 kernels (Linux and FreeBSD, although the FreeBSD-based ports are not part of the set of officially supported architectures). Furthermore, with more than 25,000 source packages, the available software can meet almost any need that one could have, whether at home or in the enterprise.
			</para>
			 <para>
				The sheer size of the distribution can be inconvenient: it is really unreasonable to distribute 14 DVD-ROMs to install a complete version on a standard PC… This is why Debian is increasingly considered as a “meta-distribution”, from which one extracts more specific distributions intended for a particular public: Debian-Desktop for traditional office use, Debian-Edu for education and pedagogical use in an academic environment, Debian-Med for medical applications, Debian-Junior for young children, etc. A more complete list of the subprojects can be found in the section dedicated to that purpose, see <xref linkend="sect.sub-projects" />.
			</para>
			 <para>
				Tyto dílčí pohledy na Debian jsou organizovány v dobře definovaném rámci, což zaručuje bezproblémovou kompatibilitu mezi různými “sub-distribucemi”. Každá z nich se řídí obecným plánem pro vydávání nových verzí. A protože staví na stejných základech, mohou být snadno rozšířeny, dokončeny a personalizovány s aplikacemi dostupnými v repozitářích Debianu.
			</para>
			 <indexterm>
				<primary>dílčí projekt</primary>
			</indexterm>
			 <para>
				Všechny nástroje Debianu fungují v tomto sledu: <command>debian-cd</command> má již dlouhou dobu povoleno vytvoření sady CD-ROM obsahujících pouze předem vybraný soubor balíků; <command>debian-installer</command> je také modulární instalátor, který se snadno přizpůsobí zvláštním potřebám. <command>APT</command> bude instalovat balíky z různých zdrojů a zároveň garantovat celkovou konzistenci systému.
			</para>
			 <sidebar> <title><emphasis>NÁSTROJ</emphasis> Vytvoření CD-ROM Debianu</title>
			 <indexterm>
				<primary><command>debian-cd</command></primary>
			</indexterm>
			 <para>
				<command>debian-cd</command> vytváří ISO obrazy instalačních médií (CD, DVD, Blu-ray, atd.) připravené k použití. Jakékoliv záležitosti týkající se tohoto softwaru jsou diskutovány (v angličtině) na <email>debian-cd@lists.debian.org</email> mailing listu. Tým je pod vedením Steva McIntyra, který řídí oficiální ISO stavební části Debianu.
			</para>
			 </sidebar> <sidebar> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis> Do každého počítače, jeho architektura</title>
			 <para>
				Termín “architektura” označuje typ počítače (mezi nejvíce známé patří Mac nebo PC). U každé architektury dělá odlišnost především její procesor, obvykle nekompatibilní s ostatními procesory. Tyto rozdíly v hardwaru obnášejí různé provozní prostředky, což vyžaduje, aby byl software kompilován specificky pro každou architekturu.
			</para>
			 <indexterm>
				<primary>architektura</primary>
			</indexterm>
			 <indexterm>
				<primary>procesor</primary>
			</indexterm>
			 <para>
				Většina softwaru dostupného v Debianu je napsána v přenosných programovacích jazycích: stejný zdrojový kód může být sestaven pro různé architektury. Ve skutečnosti, spustitelný binární soubor, který je kompilován pro specifickou architekturu, nebude obvykle fungovat na ostatních architekturách.
			</para>
			 <para>
				Připomeňme si, že každý program je vytvořen napsáním zdrojového kódu; tento zdrojový kód je textový soubor složený z instrukcí v daném programovacím jazyce. Než budete moci software používat, je nutné zkompilovat zdrojový kód, což znamená transformovat kód do binárního souboru (série instrukcí stroje spustitelného procesorem). Každý programovací jazyk má konkrétní kompilátor pro provedení této operace (například <command>gcc</command> pro programovací jazyk C).
			</para>
			 <indexterm>
				<primary>zdroj</primary>
				 <secondary>kód</secondary>
			</indexterm>
			 <indexterm>
				<primary>binární kód</primary>
			</indexterm>
			 <indexterm>
				<primary>kompilace</primary>
			</indexterm>
			 <indexterm>
				<primary>kompilátor</primary>
			</indexterm>
			 </sidebar> <sidebar> <title><emphasis>NÁSTROJ</emphasis> Instalátor</title>
			 <indexterm>
				<primary><command>debian-installer</command> </primary>
			</indexterm>
			 <para>
				<command>debian-installer</command> je název instalačního programu Debianu. Jeho modulární konstrukce umožňuje použití v širokém rozsahu instalačních scénářů. Vývojové práce jsou koordinovány na <email>debian-boot@lists.debian.org</email> mailing listu pod vedením Cyrila Bruleboise.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Kvalita svobodného softwaru</title>
			 <para>
				Debian dodržuje všechny principy svobodného softwaru a jeho nové verze nejsou uvolněny, dokud nejsou připraveny. Vývojáři nejsou nuceni stanoveným plánem spěchat kvůli splnění nějakého termínu. Lidé si často stěžují na dlouhou dobu mezi stabilními verzemi Debianu, ale tato opatrnost také zajišťuje legendární spolehlivost Debianu: dlouhé měsíce testování jsou skutečně nezbytné pro úplnou distribuci k získání štítku “stabilní”.
			</para>
			 <para>
				Debian nebude dělat kompromisy ve kvalitě: všechny známé kritické chyby jsou vyřešeny v jakékoli nové verzi, i když to vyžaduje odsunutí původně předpokládaného datum vydání.
			</para>

		</section>
		 <section>
			<title>Právní rámec: nezisková organizace</title>
			 <para>
				Po právní stránce, Debian je projekt řízený Americkou neziskovou, dobrovolnickou asociací. Projekt má kolem tisíce <emphasis>vývojářů Debianu</emphasis>, ale sdružuje mnohem větší počet přispěvatelů (překladatelů, těch, co hlásí chyby, umělců, příležitostných vývojářů, atd.).
			</para>
			 <para>
				Aby se porjekt mohl uskutečnit, má Debian širokou infrastrukturu, s mnoha servery připojenými přes internet, poskytnutými velkým počtem sponzorů.
			</para>
			 <sidebar> <title><emphasis>KOMUNITA</emphasis> Za Debianem, asociace SPI, a místní pobočky</title>
			 <indexterm>
				<primary>sdružení</primary>
			</indexterm>
			 <indexterm>
				<primary>SPI</primary>
			</indexterm>
			 <indexterm>
				<primary>Debian Francie</primary>
			</indexterm>
			 <indexterm>
				<primary>Software ve veřejném zájmu</primary>
			</indexterm>
			 <para>
				Debian doesn't own any server in its own name, since it is only a project within the <emphasis>Software in the Public Interest</emphasis> association, and SPI manages the hardware and financial aspects (donations, purchase of hardware, etc.). While initially created specifically for the Debian project, this association now hosts other free software projects, especially the PostgreSQL database, Freedesktop.org (project for standardization of various parts of modern graphical desktop environments, such as GNOME and KDE Plasma), and the Libre Office office suite. <ulink type="block" url="http://www.spi-inc.org/" />
			</para>
			 <para>
				Kromě SPI s Debianem úzce spolupracují různá místní sdružení za účelem vytváření finančních prostředků pro projekt, bez centralizace všeho v USA: v žargonu Debianu jsou označovány za “důvěryhodné organizace”. Toto uspořádání umožňuje vyhnout se neúměrným mezinárodním nákladům za převod a dobře se hodí k decentralizované povaze projektu.
			</para>
			 <para>
				While the list of trusted organizations is rather short, there are many more Debian-related associations whose goal is to promote Debian: <emphasis>Debian France</emphasis>, <emphasis>Debian-ES</emphasis>, <emphasis>debian.ch</emphasis>, and others around the world. Do not hesitate to join your local association and support the project! <ulink type="block" url="https://wiki.debian.org/Teams/Auditor/Organizations" /> <ulink type="block" url="https://france.debian.net/" /> <ulink type="block" url="http://www.debian-es.org/" /> <ulink type="block" url="https://debian.ch/" />
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.foundation-documents">
		<title>Dokumenty nadace</title>
		 <indexterm>
			<primary>Dokumenty nadace</primary>
		</indexterm>
		 <para>
			Několik let po prvotním vydání, Debian formálně stanovil principy, které by měl dodržovat jako svobodný software. Toto úmyslně aktivistické rozhodnutí umožňuje řádný a bezproblémový růst tím, že zajistí, aby se všechny části ubíraly stejným směrem. K tomu, aby se stal vývojářem Debianu, musí každý uchazeč potvrdit a prokázat svou podporu a dodržování zásad stanovených v nadačních dokumentech projektu.
		</para>
		 <para>
			Proces vývoje je neustále projednáván, ale tyto nadační dokumenty jsou obecně a shodně podporovány, a tak zřídka měněny. Stanovy Debianu nabízí také další záruky pro jejich stálost: ke schválení jakékoliv jejich změny je potřeba tří čtvrtin kvalifikované většiny.
		</para>
		 <section id="sect.social-contract">
			<title>Závazek vůči uživatelům</title>
			 <indexterm>
				<primary>společenská smlouva</primary>
			</indexterm>
			 <indexterm>
				<primary>smlouva, společenský</primary>
			</indexterm>
			 <para>
				Projekt má také “společenskou smlouvu”. Jaké místo má takovýto text v projektu, který je určen pouze pro vývoj operačního systému? To je docela jednoduché: Debian pracuje pro své uživatele, a tím potažmo i pro společnost. Tato smlouva shrnuje závazky, ke kterým se projekt zavazuje. Dovolte nám je podrobněji popsat:
			</para>
			 <orderedlist>
				<listitem>
					<para>
						Debian zůstane ze 100% zdarma.
					</para>
					 <para>
						Toto je pravidlo č. 1. Debian je a zůstane zcela a výhradně složen z volného softwaru. Navíc, veškerý vývoj softwaru sám o sobě v rámci projektu Debian, bude zdarma.
					</para>
					 <sidebar> <title><emphasis>POHLED</emphasis>za software</title>
					 <para>
						První verze sociální smlouvy Debianu říkala “Debian zůstane 100% svobodný <emphasis>software</emphasis>”. Vyouštění tohoto slova (se schválením verze 1.1 smlouvy v dubnu 2004) naznačuje vůli dosáhnout svobody, a to nejen v softwaru, ale také v dokumentaci a jakémkoliv jiném prvku, který Debian chce poskytovat v rámci svého operačního systému.
					</para>
					 <para>
						Tato změna, která byla zamýšlena pouze jako redakční, měla ve skutečnosti četné následky, zejména v odstranění některé problematické dokumentace. Navíc, problém představuje také stále častější používání firmwaru v ovladačích: mnohé z nich nejsou volné, ale jsou nezbytné pro správné fungování odpovídajícího hardwaru.
					</para>
					 </sidebar>
				</listitem>
				 <listitem>
					<para>
						Vratíme se zpět ke komunitě svobodného softwaru.
					</para>
					 <para>
						Jakékoli zlepšení, kterým projekt Debian přispěl k práci zahrnuté v distribuci, je zasláno zpět autorovi ( tzv. “upstream”). Obecně, Debian bude spolupracovat s komunitou spíše, než pracovat v izolaci.
					</para>
					 <sidebar> <title><emphasis>KOMUNITA</emphasis> Upstreamový autor nebo vývojář Debianu?</title>
					 <indexterm>
						<primary>upstreamový autor</primary>
					</indexterm>
					 <indexterm>
						<primary>autor, upstream </primary>
					</indexterm>
					 <indexterm>
						<primary>upstream</primary>
					</indexterm>
					 <para>
						Termínem “upstreamový autor” se rozumí autor (autoři) / vývojář (vývojáři) díla, ti, kteří ho píší a vyvíjí. Na druhou stranu, “vývojář Debianu” používá už existující práci a zahrnuje ji do balíku Debianu (termín “správce Debianu” je vhodnější).
					</para>
					 <para>
						V praxi se takové rozlišování často nepovažuje za jednoznačné. Správce Debianu může napsat opravu, která prospívá všem uživatelům díla. Obecně Debian podporuje ty, kteří mají balíček v Debianu na starosti, aby se také zapojili do “upstreamového” vývoje (tak se potom stanou přispěvateli, aniž by byli omezeni na roli pouhých uživatelů programu).
					</para>
					 </sidebar>
				</listitem>
				 <listitem>
					<para>
						Nebudeme skrývat problémy.
					</para>
					 <para>
						Debian není dokonalý a nové problémy, které je třeba opravit budeme nacházet každý den. Celou databázi chybových hlášení budeme mít pro veřejnost kdykoliv otevřenou k nahlédnutí. Hlášení, která lidé zakládají online se okamžitě zviditelní ostatním.
					</para>

				</listitem>
				 <listitem>
					<para>
						Našimi prioritami jsou naši uživatelé a svobodný software.
					</para>
					 <para>
						Tento závazek je obtížnější definovat. Debian ukládá, tedy pokud je zapotřebí učinit rozhodnutí, zahodit pro vývojáře jednoduché řešení, které bude ohrožovat uživatelskou přívětivost, rozhodout se pro elegantnější řešení, i když je obtížnější ho realizovat. To znamená, že prioritou je zohlednit zájmy uživatelů a volného softwaru.
					</para>

				</listitem>
				 <listitem>
					<para>
						Práce, které nesplňují naše standardy volného softwaru.
					</para>
					 <para>
						Debian akceptuje a chápe, že uživatelé mohou chtít používat některé programy, co nejsou volné. Proto projekt umožňuje využití částí své infrastruktury k distribuci debianovských balíčků nesvobodného softwaru, které lze bezpečně předistribuovat.
					</para>
					 <sidebar> <title><emphasis>KOMUNITA</emphasis> Pro nebo proti nesvobodné sekci?</title>
					 <indexterm>
						<primary>nesvobodný</primary>
					</indexterm>
					 <indexterm>
						<primary>sekce</primary>
						 <secondary>nesvobodná</secondary>
					</indexterm>
					 <para>
						Závazek udržovat strukturu pro přizpůsobení nesvobodného softwaru (tj. “nesvobodná” sekce, viz postranní panel <xref linkend="sidebar.sections" />) je často předmětem debaty v rámci komunity Debianu.
					</para>
					 <para>
						Odpůrci tvrdí, že se to odvrací lidi od volných softwarových ekvivalentů, a je v rozporu se zásadou ve věci poskytování pouze svobodného software. Příznivci nekompromisně konstatují, že většina nesvobodných balíků jsou “téměř zdarma”, a zadržovány jedním nebo dvěma otravnými omezeními (nejběžnější je zákaz komerčního používání softwaru). Distribucí těchto děl v nesvobodné větvi, nepřímo říkáme autorovi, že jeho dílo by bylo lépe známé a hojně používané, pokud by bylo zahrnuto v hlavní sekci. Jsou tak zdvořile vyzváni, aby změnili svou licenci tak, aby vyhovovala tomuto záměru.
					</para>
					 <para>
						Po prvním, bezvýsledném pokusu v roce 2004, je navrácení úplného odstranění nesvobodné sekce na pořad jednání nepravděpodobné, zejména proto, že obsahuje mnoho užitečných dokumentů, které byly přesunuty jednoduše proto, že nesplňovaly nové požadavky pro hlavní část. To platí zejména pro některé soubory dokumentace softwaru vydané projektem GNU (zejména Emacs a Make).
					</para>
					 <para>
						Pokračující existence nesvobodné sekce je zdrojem příležitostných třenic s Nadací svobodného softwaru, a je hlavním důvodem, proč odmítá oficiálně doporučit Debian jako operační systém.
					</para>
					 </sidebar>
				</listitem>

			</orderedlist>

		</section>
		 <section id="sect.dfsg">
			<title>Pokyny Debianu pro svobodný software</title>
			 <indexterm>
				<primary>zásady volného softwaru</primary>
			</indexterm>
			 <indexterm>
				<primary>DFSG</primary>
			</indexterm>
			 <indexterm>
				<primary>Pokyny Debianu pro sovobodný software</primary>
			</indexterm>
			 <indexterm>
				<primary>volný</primary>
				<secondary>software</secondary>
			</indexterm>
			 <para>
				Tento referenční dokument určuje, který software je “dostatečně volný”, aby byl zahrnut do Debianu. Pokud je licence programu v souladu s těmito zásadami, může být zahrnuta do hlavní části; Naopak, a za předpokladu, že volné šíření je zakázáno, jej lze nalézt v nesvobodné sekci. Nesvobodná sekce není oficiální součástí Debianu; Jedná se o přidanou službu poskytovanou uživatelům.
			</para>
			 <para>
				Více než jen výběrovými kritérii pro Debian, se tento text se stal autoritou na téma svobodného softwaru, a sloužil jako základ pro “definici Open Source”. Historicky je tedy jednou z prvních formálních definic pojmu “svobodný software”.
			</para>
			 <para>
				Všeobecná veřejná licence GNU, BSD licence a Umělecká licence jsou příklady tradičních svobodných licencí, které ctí 9 bodů uvedených v tomto textu. Níže najdete text, který je publikován na webových stránkách Debianu. <ulink type="block" url="http://www.debian.org/social_contract#pokyny" />
			</para>
			 <orderedlist>
				<listitem>
					<formalpara>
						<title>Volná redistribuce.</title>
						 <para>
							Licence na jakoukoliv součást Debianu nesmí omezovat žádnou stranu v prodeji nebo darování softwaru jako součásti souhrnné distribuce softwaru obsahující programy z několika různých zdrojů. Licence nesmí zahrnovat honorář nebo jiný poplatek za tento prodej.
						</para>

					</formalpara>
					 <sidebar> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis>Svobodná licence</title>
					 <indexterm>
						<primary>licence</primary>
						 <secondary>BSD</secondary>
					</indexterm>
					 <indexterm>
						<primary>BSD licence</primary>
					</indexterm>
					 <indexterm>
						<primary>licence</primary>
						 <secondary>GPL</secondary>
					</indexterm>
					 <indexterm>
						<primary>GPL</primary>
					</indexterm>
					 <indexterm>
						<primary>GNU</primary>
						 <secondary>Obecné veřejné licence</secondary>
					</indexterm>
					 <indexterm>
						<primary>Obecná veřejná licence</primary>
					</indexterm>
					 <indexterm>
						<primary>licence</primary>
						 <secondary>umělecké</secondary>
					</indexterm>
					 <indexterm>
						<primary>umělecké licence</primary>
					</indexterm>
					 <para>
						GNU GPL, BSD licence a Umělecká licence jsou v souladu s Pokyny Debianu pro svobodný software, i když jsou velmi odlišné.
					</para>
					 <para>
						GNU GPL, kterou používá a propaguje FSF (Free Software Foundation), je nejběžnější. Její hlavní vlastností je, že se vztahuje i na práci z ní vycházející, která se redistribuje: program zahrnující nebo používající GPL kód může být distribuován pouze v souladu s jeho podmínkami. Zakazuje tedy jakékoli opětovné použití v proprietární aplikaci. To představuje vážné problémy při opětovném použití GPL kódu ve volném softwaru nevyhovujícímu této licenci. Takto je někdy nemožné propojit program zveřejněný pod jinou licencí svobodného softwaru s knihovnou distribuovanou pod GPL. Na druhou stranu, tato licence je velmi pevná v základech v americkém právu: právníci FSF se podíleli na jejím navrhování, takže narušitelé jsou často nuceni dosáhnout přátelské dohody s FSF, aniž by se šlo k soudu. <ulink type="block" url="http://www.gnu.org/copyleft/gpl.html" />
					</para>
					 <para>
						The BSD license is the least restrictive: everything is permitted, including use of modified BSD code in a proprietary application. <ulink type="block" url="http://www.opensource.org/licenses/bsd-license.php" />
					</para>
					 <para>
						Nakonec, Umělecká licence dosahuje kompromisu mezi těmito ostatními dvěma: je povoleno zahrnuzí kódu do proprietární aplikace, ale jakákoliv modifikace musí být zveřejněna. <ulink type="block" url="http://www.opensource.org/licenses/artistic-license-2.0.php" />
					</para>
					 <para>
						Kompletní znění těchto licencí je k dispozici v <filename>/usr/share/Common-licenses/</filename> v libovolném systému Debianu.
					</para>
					 </sidebar>
				</listitem>
				 <listitem>
					<formalpara>
						<title>Zdrojový kód.</title>
						 <para>
							Program musí obsahovat zdrojový kód a musí umožňovat distribuci ve zdrojovém kódu, stejně jako v kompilované podobě.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Odvozená díla.</title>
						 <para>
							Licence musí umožňovat úpravy a odvozená díla, a musí umožňovat jejich distribuci za stejných podmínek jako měla licence původního softwaru.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Integrita zdrojového kódu autora.</title>
						 <para>
							Licence může omezit distribuci zdrojového kódu v modifikované podobě <emphasis>pouze</emphasis> pokud licence umožňuje distribuci “patch souborů” se zdrojovým kódem pro účely úpravy programu v okamžiku sestavení. Licence musí výslovně umožňovat distribuci softwaru vytvořeného z modifikovaného zdrojového kódu. Licence může vyžadovat, aby odvozená díla nesla název nebo číslo odlišné od původního softwaru (<emphasis>Toto je kompromis. Skupina Debian nabádá všechny autory, aby nezakazovali úpravy souborů, zdrojových nebo binárních</emphasis>).
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Žádná diskriminace osob nebo skupin.</title>
						 <para>
							Licence nesmí diskriminovat žádnou osobu ani skupinu osob.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Diskriminace proti žádné oblasti lidského úsilí.</title>
						 <para>
							Licence nesmí nikomu bránit v užívání programu v konkrétní oblasti lidského úsilí. Například nesmí zakazovat používání programu v podnicích nebo při genetickém výzkumu.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Přenesení licence.</title>
						 <para>
							Práva spojená s programem se musí vztahovat na všechny, komu je program distribuován bez nutnosti provedení dodatečné licence těmito stranami.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Licence nemůže být pro Debian specifická.</title>
						 <para>
							Práva spojená s programem nemůžou záviset na tom, že je program součástí systému Debian. Pokud je program vyjmut z Debianu a používán nebo distribuován bez Debianu, ale jinak v rámci podmínek licence programu, všechny strany, kterým je program distribuován, by měly mít stejná práva jako ta, která jsou udělena ve spojení se systémem Debian.
						</para>

					</formalpara>

				</listitem>
				 <listitem>
					<formalpara>
						<title>Licence nesmí kontaminovat jiný software.</title>
						 <para>
							Licence nesmí omezovat ostatní software, který je distribuován spolu s licencovaným softwarem. Například, licence nesmí trvat na tom, že všechny ostatní programy distribuované na stejném médiu musí být svobodný software.
						</para>

					</formalpara>
					 <sidebar> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis> Copyleft</title>
					 <indexterm>
						<primary>copyleft</primary>
					</indexterm>
					 <indexterm>
						<primary>copyrights</primary>
					</indexterm>
					 <para>
						Copyleft je princip, který spočívá v používání autorských práv k zaručení svobody díla a děl z něho odvozených, spíše než k omezení práv na užívání, jako je tomu u proprietárního softwaru. Je to také hra se slovy z pojmu “Copyright”. Richard Stallman přišel na tuto myšlenku, když mu jeho přítel, co má rád slovní hříčky, napsal na jemu adresovanou obálku: “copyleft: všechna práva obrácena”. Copyleft ukládá zachování všech počátečních svobod po distribuci původní nebo modifikované verze díla (obvykle programu). Není tedy možné distribuovat program jako proprietární software, pokud je odvozen z kódu programu, který byl vydán pod copyleftem.
					</para>
					 <para>
						Nejznámější skupinou copyleftových licencí je samozřejmě GNU GPL a její deriváty, GNU LGPL nebo Nižší všeobecná veřejná licence a GNU FDL nebo GNU Svobodná licence pro dokumentaci. Je smutné, že copyleftové licence jsou obyčejně vzájemně neslučitelné. V důsledku toho je nejlepší použít pouze jednu z nich.
					</para>
					 </sidebar>
				</listitem>

			</orderedlist>
			 <sidebar id="sidebar.bruce-perens"> <title><emphasis>KOMUNITA</emphasis> Bruce Perens, kontroverzní vůdce</title>
			 <indexterm>
				<primary>Bruce Perens</primary>
			</indexterm>
			 <indexterm>
				<primary>Perens, Bruce</primary>
			</indexterm>
			 <indexterm>
				<primary>Open Source</primary>
			</indexterm>
			 <para>
				Bruce Perens byl druhým vedoucím projektu Debian, těsně po Ianu Murdockovi. Byl velmi kontroverzní ve svých dynamických a autoritářských metodách. Přesto zůstává důležitým přispěvatelem Debianu, jemuž je Debian obzvláště zavázán pro sestavení věhlasných “Směrnic Debianu pro svobodný software” (DFSG), původní myšlenky Eana Schuesslera. Následně, Bruce z nich odvodil slavnou “Definici pro Open Source”, kdy z nich odstranil všech odkazy na Debian. <ulink type="block" url="http://www.opensource.org/" />
			</para>
			 <para>
				Jeho odchod z projektu byl dost emotivní, ale Bruce zůstal silně připojený k Debianu, protože stále pokračuje v propagaci této distribuce v politických a ekonomických sférách. Stále se sporadicky objevuje na e-mailových konferencích, aby přispěl svou radou a představil své nejnovější iniciativy ve prospěch Debianu.
			</para>
			 <indexterm>
				<primary>kódové označení</primary>
			</indexterm>
			 <indexterm>
				<primary>označení</primary>
				<secondary>kódové označení</secondary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Rex</emphasis> </primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Buzz</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Bo</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Hamm</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Slink</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Potato</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Woody</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Sarge</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Etch</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Lenny</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Squeeze</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Wheezy</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Jessie</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Stretch</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Buster</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Bullseye</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="distribution">Sid</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>Toy Story</primary>
			</indexterm>
			 <indexterm>
				<primary>Pixar</primary>
			</indexterm>
			 <para>
				Last anecdotal point, it was Bruce who was responsible for inspiring the different “codenames” for Debian versions (1.1 — <emphasis role="distribution">Rex</emphasis>, 1.2 — <emphasis role="distribution">Buzz</emphasis>, 1.3 — <emphasis role="distribution">Bo</emphasis>, 2.0 — <emphasis role="distribution">Hamm</emphasis>, 2.1 — <emphasis role="distribution">Slink</emphasis>, 2.2 — <emphasis role="distribution">Potato</emphasis>, 3.0 — <emphasis role="distribution">Woody</emphasis>, 3.1 — <emphasis role="distribution">Sarge</emphasis>, 4.0 — <emphasis role="distribution">Etch</emphasis>, 5.0 — <emphasis role="distribution">Lenny</emphasis>, 6.0 — <emphasis role="distribution">Squeeze</emphasis>, 7 — <emphasis role="distribution">Wheezy</emphasis>, 8 — <emphasis role="distribution">Jessie</emphasis>, 9 — <emphasis role="distribution">Stretch</emphasis>, 10 (not released yet) — <emphasis role="distribution">Buster</emphasis>, 11 (not released yet) — <emphasis role="distribution">Bullseye</emphasis>, <emphasis role="distribution">Unstable</emphasis> — <emphasis role="distribution">Sid</emphasis>). They are taken from the names of characters in the Toy Story movie. This animated film entirely composed of computer graphics was produced by Pixar Studios, with whom Bruce was employed at the time that he led the Debian project. The name “Sid” holds particular status, since it will eternally be associated with the <emphasis role="distribution">Unstable</emphasis> branch. In the film, this character was the neighbor child, who was always breaking toys — so beware of getting too close to <emphasis role="distribution">Unstable</emphasis>. Otherwise, <emphasis role="distribution">Sid</emphasis> is also an acronym for “Still In Development”.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.debian-internals">
		<title>Vnitřní fungování projektu Debian</title>
		 <indexterm>
			<primary>operace, vnitřní</primary>
		</indexterm>
		 <indexterm>
			<primary>organizace, interní</primary>
		</indexterm>
		 <para>
			Bohaté konečné výsledky vyproduktované projektem Debian vycházejí současně z práce na infrastruktuře prováděné zkušenými vývojáři Debianu, z individuálních nebo kolektivních prací vývojářů na debianovských balíčcích a z reakcí uživatelů.
		</para>
		 <section>
			<title>Vývojáři Debianu</title>
			 <indexterm>
				<primary>vývojáři</primary>
				 <secondary>vývojáři Debianu</secondary>
			</indexterm>
			 <para>
				Debian developers have various responsibilities, and as official project members, they have great influence on the direction the project takes. A Debian developer is generally responsible for at least one package, but according to their available time and desire, they are free to become involved in numerous teams, acquiring, thus, more responsibilities within the project. <ulink type="block" url="https://www.debian.org/devel/people" /> <ulink type="block" url="https://www.debian.org/intro/organization" /> <ulink type="block" url="https://wiki.debian.org/Teams" />
			</para>
			 <sidebar> <title><emphasis>NÁSTROJ</emphasis>Databáze vývojářů</title>
			 <indexterm>
				<primary>vývojáři</primary>
				 <secondary>databáze vývojářů</secondary>
			</indexterm>
			 <indexterm>
				<primary>databáze</primary>
				 <secondary>databáze vývojářů</secondary>
			</indexterm>
			 <para>
				Debian has a database including all developers registered with the project, and their relevant information (address, telephone, geographical coordinates such as longitude and latitude, etc.). Some of the information (first and last name, country, username within the project, IRC username, GnuPG key, etc.) is public and available on the Web. <ulink type="block" url="https://db.debian.org/" />
			</para>
			 <para>
				Zeměpisné souřadnice umožňují vytvoření mapy s umístěním všech vývojářů po celém světě. Debian je skutečně mezinárodní projekt: jeho vývojáře lze nalézt na všech kontinentech, i když většina je v “západních zemích”.
			</para>
			 <figure>
				<title>Celosvětové rozmístění vývojářů Debianu</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/developers-map.png" format="PNG" scalefit="1" width="70%" />
					</imageobject>

				</mediaobject>
				 <indexterm>
					<primary>rozmístění po celém světě</primary>
				</indexterm>

			</figure>
			 </sidebar> <para>
				Package maintenance is a relatively regimented activity, very documented or even regulated. It must, in effect, comply with all the standards established by the <emphasis>Debian Policy</emphasis>. Fortunately, there are many tools that facilitate the maintainer's work. The developer can, thus, focus on the specifics of their package and on more complex tasks, such as squashing bugs. <ulink type="block" url="https://www.debian.org/doc/debian-policy/" />
			</para>
			 <sidebar> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis>Údržba balíčků, práce vývojáře</title>
			 <indexterm>
				<primary>údržba</primary>
				 <secondary>údržba balíčků</secondary>
			</indexterm>
			 <indexterm>
				<primary>balíček</primary>
				 <secondary>údržba</secondary>
			</indexterm>
			 <para>
				Údržba balíčku znamená nejprve “balení” programu. Konkrétně to znamená definovat prostředky instalace tak, aby po instalaci tento program fungoval a dodržoval pravidla, která projekt Debian pro sebe stanovil. Výsledek této operace je uložen v souboru <filename>.deb</filename>. Účinná instalace programu pak nebude vyžadovat nic víc než extrakci tohoto komprimovaného archivu a spuštění některých předinstalačních nebo poinstalačních zde obsažených skriptů.
			</para>
			 <para>
				Po této počáteční fázi, cyklus údržby opravdu začíná: Příprava aktualizací podle nejnovějších Zásad Debianu, opravy chyb hlášených uživateli a zahrnutí nových “upstreamových” verzí programu, které se přirozeně i nadále současně vyvíjejí. Například v době počátečního balení byl program ve verzi 1.2.3. Po několika měsících vývoje, původní autoři vydávají novou stabilní verzi, očíslovanou 1.4.0. V tuto chvíli by měl správce Debianu balíček aktualizovat, aby uživatelé mohli využívat nejnovější stabilní verzi.
			</para>
			 </sidebar> <indexterm>
				<primary>Zásady Debianu</primary>
			</indexterm>
			 <indexterm>
				<primary>Zásady Debianu</primary>
			</indexterm>
			 <indexterm>
				<primary>zásady</primary>
			</indexterm>
			 <para>
				The Policy, an essential element of the Debian Project, establishes the norms ensuring both the quality of the packages and perfect interoperability of the distribution. Thanks to this Policy, Debian remains consistent despite its gigantic size. This Policy is not fixed in stone, but continuously evolves thanks to proposals formulated on the <email>debian-policy@lists.debian.org</email> mailing list. Amendments that are agreed upon by all interested parties are accepted and applied to the text by a small group of maintainers who have no editorial responsibility (they only include the modifications agreed upon by the Debian developers that are members of the above-mentioned list). You can read current amendment proposals on the bug tracking system: <ulink type="block" url="https://bugs.debian.org/debian-policy" />
			</para>
			 <sidebar> <title><emphasis>KOMUNITA</emphasis> Proces vydávání Zásad</title>
			 <para>
				Kdokoli může navrhnout změnu v Zásadách Debianu pouhým odesláním chybového hlášení s úrovní závažnosti “přání” proti <emphasis role="pkg">debian-policy</emphasis> balíčku. Proces, který se spustí, je dokumentován v <filename>/usr/share/doc/debian-policy/Process.html </filename>: Pokud je uznáno, že zjištěný problém musí být vyřešen vytvořením nového pravidla v Zásadách Debianu, začíná diskuze na seznamu elektronické pošty <email>debian-policy@lists.debian.org</email>, dokud není dosaženo shody a návrh je vydán. Někdo potom návrhne požadovanou změnu a předloží ke schválení (v podobě patche k přezkoumání). Jakmile dva další vývojáři schválí skutečnost, že navrhovaná změna odráží shodu dosaženou v předchozí diskusi (proces “secondování”), návrh může být zařazen do úředního dokumentu jedním ze správců balíčku <emphasis role="pkg">debian-policy</emphasis>. Pokud proces selže v jednom z těchto kroků, správci uzavřou chybu a klasifikují návrh jako zamítnutý.
			</para>
			 </sidebar> <sidebar> <title><emphasis>ZÁSADY DEBIANU</emphasis> dokumentace</title>
			 <indexterm>
				<primary>dokumentace</primary>
				 <secondary>umístění</secondary>
			</indexterm>
			 <indexterm>
				<primary>umístění dokumentu</primary>
			</indexterm>
			 <indexterm>
				<primary> <filename>/usr/share/doc/</filename> </primary>
			</indexterm>
			 <indexterm>
				<primary> <filename>README.Debian</filename> </primary>
			</indexterm>
			 <indexterm>
				<primary> <filename>NEWS.Debian.gz</filename> </primary>
			</indexterm>
			 <para>
				Dokumentace pro každý balíček je uložena v <filename>/usr/share/doc/<replaceable>balíček</replaceable>/</filename>. Tento adresář často obsahuje soubor <filename>README.Debian</filename>, popisující specifické úpravy Debianu, které provádí správce balíčku. Je tedy moudré přečíst si tento soubor před jakýmkoliv nastavováním, a těžit z těchto zkušeností. Nalezneme také soubor <filename>changelog.Debian.gz</filename> popisující změny provedené správcem Debianu při přechodu z jedné verze na následující. To by se nemělo zaměňovat se souborem <filename>changelog.gz</filename> (nebo jeho obdobami), který popisuje změny provedené upstreamovými vývojáři. Soubor <filename>copyright</filename> obsahuje informace o autorech a o licenci vztahující se na software. A na závěr také můžeme najít soubor s názvem <filename>NEWS.Debian.gz</filename>, který vývojářům Debianu umožňuje sdělovat důležité informace týkající se aktualizací; Pokud je nainstalován <emphasis>apt-listchanges</emphasis>, zobrazí se tyto zprávy automaticky. Všechny ostatní soubory jsou specifické pro daný software. Především bychom chtěli poukázat na podadresář <filename>examples</filename>, který často obsahuje příklady konfiguračních souborů.
			</para>
			 </sidebar> <para>
				Zásady do značné míry pokrývají technické aspekty balíčků. Velikost projektu také vyvolává organizační problémy; ty jsou řešeny Stanovami Debianu, které vytváří strukturu a prostředky pro rozhodování. Jinými slovy, formální systém řízení.
			</para>
			 <indexterm>
				<primary>stanovy</primary>
			</indexterm>
			 <indexterm>
				<primary>vedoucí projektu Debian</primary>
			</indexterm>
			 <indexterm>
				<primary>DPL</primary>
			</indexterm>
			 <indexterm>
				<primary>vedoucí</primary>
				 <secondary>role</secondary>
			</indexterm>
			 <indexterm>
				<primary>vedoucí</primary>
				<secondary>zvolení</secondary>
			</indexterm>
			 <para>
				Stanovy definují určitý počet rolí a postů, plus jejich odpovědnosti a pravomoce. Zejména je třeba poznamenat, že vývojáři Debianu mají vždy konečný rozhodovací pravomoc hlasováním o obecném usnesení, kde je vyžadována kvalifikovaná většina tří čtvrtin (75%) hlasů pro učinění významných změn (např. s dopadem na dokumenty nadace). Nicméně, vývojáři každoročně volí “vedoucího”, aby je zastupoval na schůzkách, a zajistit vnitřní koordinaci mezi různými týmy. Tato volba je vždy obdobím intenzivních diskuzí. Role vedoucího není formálně definována žádným dokumentem: kandidáti na tento post obvykle navrhují vlastní definice pozice. V praxi role vedoucího zahrnuje zastupování vůči sdělovacím prostředkům, koordinaci mezi “interními” týmy a zajišťování celkového vedení projektu, na kterém se vývojáři mohou podílet: záměry DPL jsou implicitně schvalovány většinou členů projektu.
			</para>
			 <para>
				V podstatě má vedoucí opravdové pravomoce; jejich zvolení vzešla z těsných hlasování; mohou učinit jakékoli rozhodnutí, které již není pod pravomocí někoho jiného a mohou delegovat části svých povinností.
			</para>
			 <indexterm>
				<primary>Murdock, Ian</primary>
			</indexterm>
			 <indexterm>
				<primary>Perens, Bruce</primary>
			</indexterm>
			 <indexterm>
				<primary>Jackson, Ian</primary>
			</indexterm>
			 <indexterm>
				<primary>Akkerman, Wichert</primary>
			</indexterm>
			 <indexterm>
				<primary>Collins, Ben</primary>
			</indexterm>
			 <indexterm>
				<primary>Garbee, Bdale</primary>
			</indexterm>
			 <indexterm>
				<primary>Michlmayr, Martin</primary>
			</indexterm>
			 <indexterm>
				<primary>Robinson, Branden</primary>
			</indexterm>
			 <indexterm>
				<primary>Towns, Anthony</primary>
			</indexterm>
			 <indexterm>
				<primary>McIntyre, Steve</primary>
			</indexterm>
			 <indexterm>
				<primary>McIntyre, Steve</primary>
			</indexterm>
			 <indexterm>
				<primary>Zacchiroli, Stefano</primary>
			</indexterm>
			 <indexterm>
				<primary>Nussbaum, Lucas</primary>
			</indexterm>
			 <indexterm>
				<primary>Dogguy, Mehdi</primary>
			</indexterm>
			 <indexterm>
				<primary>Lamb, Chris</primary>
			</indexterm>
			 <para>
				Since its inception, the project has been successively led by Ian Murdock, Bruce Perens, Ian Jackson, Wichert Akkerman, Ben Collins, Bdale Garbee, Martin Michlmayr, Branden Robinson, Anthony Towns, Sam Hocevar, Steve McIntyre, Stefano Zacchiroli, Lucas Nussbaum, Mehdi Dogguy and Chris Lamb.
			</para>
			 <indexterm>
				<primary>technická komise</primary>
			</indexterm>
			 <para>
				Stanovy rovněž definují “technickou komisi”. Hlavní úlohou této komise je rozhodovat v technických otázkách, pokud se zúčastnění vývojáři mezi sebou nedohodnou. Jinak má tato komise roli rádce pro vývojáře, kterému se nepodařilo učinit rozhodnutí, za které má odpovědnost. Je důležité poznamenat, že se zapojí pouze v případě, kdy je k tomu jednou ze zainteresovaných stran vyzvána.
			</para>
			 <indexterm>
				<primary>tajemník projektu</primary>
			</indexterm>
			 <para>
				A konečně stanovy definují pozici “tajemníka projektu”, který má na starosti organizaci hlasování v souvislosti s různými volbami a obecnými usneseními.
			</para>
			 <para>
				The “general resolution” procedure is fully detailed in the constitution, from the initial discussion period to the final counting of votes. The most interesting aspect of that process is that when it comes to an actual vote, developers have to rank the different ballot options between them and the winner is selected with a <ulink url="https://en.wikipedia.org/wiki/Condorcet_method">Condorcet method</ulink> (more specifically, the Schulze method). For further details see: <ulink type="block" url="http://www.debian.org/devel/constitution.en.html" />
			</para>
			 <indexterm>
				<primary>obecné usnesení</primary>
			</indexterm>
			 <indexterm>
				<primary>hlasování</primary>
			</indexterm>
			 <sidebar> <title><emphasis>KULTURA</emphasis> Flamewar, diskuse, která zachytí požár</title>
			 <indexterm>
				<primary>flamewar</primary>
			</indexterm>
			 <indexterm>
				<primary>horká debata</primary>
			</indexterm>
			 <para>
				“Flamewar” je mimořádně vášnivá debata, která často končí s lidmi napadajícími se navzájemm, jakmile všechny rozumné argumentace byly vyčerpána na obou stranách. Některá témata jsou častěji předmětem polemik než ostatní (volba textového editoru, “dáváte přednost <command>vi</command> nebo <command>emacsu</command>?”, je staré oblíbené). Tyto věci často vyvolávají velmi rychlé výměny emailů v důsledku velkého počtu lidí se stanoviskem k této záležitosti (všichni) a velmi osobní povahu takových námitek.
			</para>
			 <para>
				Obecně, nic zvlášť užitečného z takových diskusí nevzejde; Všeobecné doporučení je zůstat mimo takové debaty a asi rychle prolistovat jejich obsah, protože jejich čtení v plném rozsahu by bylo příliš časově náročné.
			</para>
			 </sidebar> <para>
				I když stanovy vytváří zdání demokracie, denní realita je zcela odlišná: Debian přirozeně dodržuje pravidla svobodného softwaru do-ocracie: ten, kdo dělá věci rozhoduje, jak je dělat. Mnoho času může být vyplýtváno debatováním o jednotlivých přínosech různých cest, jak přistupovat k problému; zvolené řešení bude to první, která je obojí - funkční a uspokojující..., které vyjde z času, který do něj způsobilá osoba vložila.
			</para>
			 <para>
				To je jediný způsob, jak si vysloužit ostruhy: udělat něco užitečného a ukázat, že se pracovalo dobře. Mnoho “administrativních” týmů Debianu působí za pomocí kooptace, upřednostňující dobrovolníky, kteří již efektivně přispěli a prokázali svou schopnost. Veřejná podstata práce těchto týmů umožňuje novým přispěvatelům pozorovat a začít pomáhat bez zvláštních privilegií. Proto je Debian často popisován jako “meritokracie”.
			</para>
			 <sidebar> <title><emphasis>KULTURA</emphasis> Meritokracie, vláda znalostí</title>
			 <indexterm>
				<primary>meritokracie</primary>
			</indexterm>
			 <para>
				Meritokracie je forma vlády, v níž je autorita vykonávána těmi, kteří mají největší zásluhy. Pro Debian, jsou zásluhy měřítkem kompetence, která je sama o sobě, posuzována sledováním dřívějších činností jednoho nebo více lidí v rámci projektu (Stefano Zacchiroli, bývalý vedoucí projektu, hovoří o “do-okracii”, což znamená “moc pro ty, kteří věci dělají”). Jejich prostá existence dokazuje určitou úroveň kompetence; jejich úspěchy obecně je svobodný software, s dostupným zdrojovým kódem, který může být snadno přezkoumán ostatními k posouzení jejich kvality.
			</para>
			 </sidebar> <para>
				Tato účinná operativní metoda zaručuje kvalitu přispěvatelů v “klíčových” týmech Debianu. Tato metoda není v žádném případě dokonalá a občas se vyskytnou tací, kteří nepřijmou tento způsob fungování. Výběr vývojářů přijatých do týmů se může zdát trochu svévolný, nebo dokonce nespravedlivý. Navíc, ne každý má stejnou představu o službách očekávaných od těchto týmů. Pro někoho je nepřijatelné muset čekat osm dní pro zahrnutí nového debianovského balíčku, zatímco ostatní budou trpělivě čekat tři týdny bez problémů. Jako takové, se pravidelně vyskytují stížnosti od těch nespokojených na “kvalitu služeb” některých týmů.
			</para>
			 <sidebar> <title><emphasis>KOMUNITA</emphasis> Začleňování nových správců</title>
			 <indexterm>
				<primary>správce</primary>
				<secondary>nový správce</secondary>
			</indexterm>
			 <para>
				Tým, který má na starosti přijímání nových vývojářů, je pravidelně nejvíce kritizován. Je třeba uznat, že v průběhu let se debianovský projekt stává stále náročnějším pro vývojáře, které bude přijímat. Někteří lidé v tom mohou vidět nespravedlnost, musíme ale přiznat, že to, co se jevilo jako malá výzva na začátku se stalo výzvou mnohem větší ve společenství čítajícím více než 1 000 lidí, pokud jde o zajištění kvality a integrity všeho, co Debian produkuje pro své uživatele.
			</para>
			 <indexterm>
				<primary>DAM</primary>
			</indexterm>
			 <indexterm>
				<primary>Account manažeři Debianu</primary>
			</indexterm>
			 <para>
				Dále, postup přijetí je ukončen přezkoumáním kandidatury malým týmem - account manažery Debianu. Tito manažeři jsou také obzvláště vystaveni kritice, protože mají konečné slovo v přijetí nebo odmítnutí dobrovolníka v rámci komunity vývojářů Debianu. V praxi, musí někdy zpozdit přijetí osoby, aby se dozvěděli více o činnosti projektu. Člověk může samozřejmě přispívat k Debianu i před přijetím za oficiálního vývojářáře tím, že je zaštiťován vývojáři současnými.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Aktivní role uživatelů</title>
			 <para>
				Jeden by mohl nadnést, zda je vůbec důležité zmiňovat uživatele zároveň s těmi, kteří pracují v rámci projektu Debian, ale odpověď je definitivní ano: hrají důležitou roli v projektu. Někteří uživatelé jsou daleko od toho být nazýváni “pasivními”, někteří spouštějí vývojové verze Debianu a pravidelně zakládají hlášení o chybách a upozorňují na problémy. Jiní jdou ještě dál a předkládají nápady pro zlepšení tím, že podávají hlášení o chybě s úrovní závažnosti “přání”, nebo dokonce předkládají opravy zdrojového kódu nazvané “patche” (viz postranní informace <xref linkend="sidebar.patch" />).
			</para>
			 <sidebar id="sidebar.bts"> <title><emphasis>NÁSTROJ</emphasis> Systém na sledování chyb</title>
			 <indexterm>
				<primary>systém</primary>
				<secondary>Systém na sledování chyb</secondary>
			</indexterm>
			 <indexterm>
				<primary>BTS</primary>
			</indexterm>
			 <indexterm>
				<primary>Systém an sledování chyb (BTS)</primary>
			</indexterm>
			 <indexterm>
				<primary><literal>bugs.debian.org</literal></primary>
			</indexterm>
			 <para>
				Sledovcí systém chyb Debianu (Debian BTS) je používán velkými částmi projektu. Veřejná část (webové rozhraní) umožňuje uživatelům zobrazit všechny ohlášené chyby, s možností zobrazit seřazený seznam chyb vybraných podle různých kritérií, jako například: dotčený balíček, závažnost, stav, adresa ohlašovatele, adresa zodpovědného správce, tag, apod. Je také možné procházet celý historický výpis všech diskusí týkajících se jednotlivých chyb.
			</para>
			 <para>
				Pod povrchem je Debian BTS založen na e-mailu: všechny informace, které uchovává, pocházejí ze zpráv odeslaných různými osobami. Všechny e-maily odeslané na <email>12345@bugs.debian.org</email> budou tedy přiřazeny k historii chyby číslo 12345. Oprávněné osoby mohou chybu “uzavřítٌ” napsáním zprávy popisující důvody rozhodnutí o uzavření na <email>12345-Done@bugs.debian.org</email> (chyba je uzavřena, pokud je uvedený problém vyřešen nebo již není relevantní). Nová chyba je hlášena zasláním e-mailu na <email>Submit@bugs.debian.org</email> podle konkrétního formátu, který identifikuje dotyčný balíček. Adresa <email>Control@bugs.debian.org</email> umožňuje editaci všech “meta-informací” vztahujících se k chybě.
			</para>
			 <para>
				The Debian BTS has other functional features, as well, such as the use of tags for labeling bugs. For more information, see <ulink type="block" url="https://www.debian.org/Bugs/" />
			</para>
			 </sidebar> <sidebar> <title><emphasis>SLOVNÍČEK</emphasis> Závažnost chyby</title>
			 <indexterm>
				<primary>závažnost</primary>
			</indexterm>
			 <indexterm>
				<primary>chyba</primary>
				<secondary>závažnost</secondary>
			</indexterm>
			 <para>
				Závažnost chyby formálně přiřazuje reportovanému problému stupeň důležitosti. V praxi, ne všechny chyby mají stejnou důležitost; například překlep na stránce manuálu se nemůže rovnat bezpečnostnímu riziku v softwaru serveru.
			</para>
			 <para>
				Debian uses an extended scale to describe the severity of a bug. Each level is defined precisely in order to facilitate the selection thereof. <ulink type="block" url="https://www.debian.org/Bugs/Developer#severities" />
			</para>
			 </sidebar> <para>
				Additionally, numerous satisfied users of the service offered by Debian like to make a contribution of their own to the project. As not everyone has appropriate levels of expertise in programming, they may choose to assist with the translation and review of documentation. There are language-specific mailing lists to coordinate this work. <ulink type="block" url="https://lists.debian.org/i18n.html" /> <ulink type="block" url="https://www.debian.org/international/" />
			</para>
			 <sidebar> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis> Co je to i18n a l10n?</title>
			 <indexterm>
				<primary>internacionalizace</primary>
			</indexterm>
			 <indexterm>
				<primary>lokalizace</primary>
			</indexterm>
			 <indexterm>
				<primary>i18n</primary>
			</indexterm>
			 <indexterm>
				<primary>l10n</primary>
			</indexterm>
			 <para>
				“i18n” a “l10n” jsou zkratky slov “internacionalizace” a “lokalizace”, respektive, ponechání prvního a posledního písmena z každého slova a počet písmen uprostřed.
			</para>
			 <para>
				“Internacionalizování” programu spočívá v jeho modifikaci, kdy může být přeložen (lokalizován). To obnáší částečné přepsání programu původně napsaného pro fungování v jednom jazyku za účelem možnosti jeho otevření ve všech jazycích.
			</para>
			 <para>
				“Lokalizace” programu spočívá v překladu původních zpráv (často v angličtině) do jiného jazyka. Abychom toho dosáhli, musí být již program internacializován.
			</para>
			 <para>
				Abychom to shrnuli, internacionalizace připravuje software pro překlad, který je potom spuštěn lokalizací.
			</para>
			 </sidebar> <sidebar id="sidebar.patch"> <title><emphasis>ZPĚT K ZÁKLADŮM</emphasis> Patch, způsob zasílání oprav</title>
			 <indexterm>
				<primary><command>patch</command></primary>
			</indexterm>
			 <indexterm>
				<primary>patch</primary>
			</indexterm>
			 <indexterm>
				<primary><command>diff</command></primary>
			</indexterm>
			 <para>
				Patch je soubor popisující změny, které mají být provedeny na jednom nebo více odkazovaných souborech. Konkrétně, obsahuje seznam řádků k odstranění nebo přidání do kódu, stejně jako (někdy) řádky odebrané z referenčního textu, nahrazující modifikace v kontextu (umožňující identifikaci umístění změn, pokud čísla řádlů byla změněna).
			</para>
			 <para>
				Nástroj používaný pro uplatnění modifikací předávaných v takovém souboru je jednoduše nazýván <command>patch</command>. nástroj, který jej vytváří se jmenuje <command>diff</command> a používá se takto:
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>diff -u file.old file.new &gt;file.patch</userinput></screen>
			 <para>
				Soubor <filename>file.patch</filename> obsahuje instrukce pro provedení obsahových změn <filename>file.old</filename> na <filename>file.new</filename>. Můžeme jej poslat někomu, kdo jej dokáže použít k vytvoření <filename>file.new</filename> z těch ostatních dvou, tímto způsobem:
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>patch -p0 file.old &lt;file.patch</userinput></screen>
			 <para>
				Soubor, <filename>file.old</filename>, je nyní identický s <filename>file.new</filename>.
			</para>
			 </sidebar> <sidebar> <title><emphasis>NÁSTROJ</emphasis> Nahlásit chybu <command>reportbugem</command></title>
			 <indexterm>
				<primary><command>reportbug</command></primary>
			</indexterm>
			 <indexterm>
				<primary>chyba</primary>
				<secondary>nahlásit chybu</secondary>
			</indexterm>
			 <indexterm>
				<primary>nahlásit chybu</primary>
			</indexterm>
			 <para>
				The <command>reportbug</command> tool facilitates sending bug reports on a Debian package. It helps making sure the bug in question hasn't already been filed, thus preventing redundancy in the system. It reminds the user of the definitions of the severity levels, for the report to be as accurate as possible (the developer can always fine-tune these parameters later, if needed). It helps writing a complete bug report without the user needing to know the precise syntax, by writing it and allowing the user to edit it. This report will then be sent via an e-mail server (by default, a remote one run by Debian, but <command>reportbug</command> can also use a local server).
			</para>
			 <para>
				Tento nástroj se nejdříve zaměřuje na vývojové verze, což je místo, kde jsou chyby opraveny. V praxi nejsou chyby ve stabilní verzi Debianu vítány, s velmi málo vyjímkami pro bezpečnostní aktualizace nebo důležité aktualizace (pokud, například, balíček vůbec nefunguje). Náprava menší chyby v debianovském balíčku musí tak počkat na další stabilní verzi.
			</para>
			 </sidebar> <para>
				Všechny tyto příspěvkové mechanismy se stávají více efektivními díky chování uživatelů. Uživatelé jsou daleko tomu být skupinou izolovaných osob, jsou naopak komunitou, kde se spousta výměnných činností děje. Obzvláště sledujeme obdivuhodnou aktivitu na diskuzních emailových seznamech uživatelů, <email>debian-user@lists.debian.org</email> (<xref linkend="solving-problems" /> se tomu detailněji věnuje).
			</para>
			 <para>
				Nejen, že uživatelé pomáhají sobě (i ostatním) s technickými věcmi, které se jich bezprostředně týkají, ale také diskutují o nejlepších způsobech, jak přispět k debianovskému projektu a posunout jej dál - diskutování, které často vede k návrhům na vylepšení.
			</para>
			 <para>
				Protože Debian nevydává žádné prostředky na žádnou sebepropagační kampaň, jeho uživatelé hrají podstatnou roli v jeho rozšiřování a tím upevňování jeho věhlasu prostřednictvím osobních rozhovorů apod.
			</para>
			 <para>
				This method functions quite well, since Debian fans are found at all levels of the free software community: from install parties (workshops where seasoned users assist newcomers to install the system) organized by local LUGs or “Linux User Groups”, to association booths at large tech conventions dealing with Linux, etc.
			</para>
			 <para>
				Volunteers make posters, brochures, stickers, and other useful promotional materials for the project, which they make available to everyone, and which Debian provides freely on its website and on its wiki: <ulink type="block" url="https://www.debian.org/events/material" />
			</para>

		</section>
		 <section>
			<title>Týmy a podprojekty</title>
			 <para>
				Debian byl od samého počátku organizován kolem konceptu zdrojových balíčků, každý se svým správcem nebo skupinou správců. Časem se vytvořilo hodně pracovních týmů, zabezpečujících administrativu infrastruktury, řízení úkolů nepatřících k žádnému konlrétnímu balíčku (zajišťování kvality, zásady Debianu, instalace, apod.), spolu s posledními týmy, které vyrostly kolem podprojektů.
			</para>
			 <section id="sect.sub-projects">
				<title>Současné podprojekty Debianu</title>
				 <para>
					Každému jeho vlastní Debian! Podprojekt je skupina dobrovolníků zajímajících se o přizpůsobení Debianu zvláštním požadavkům. Za výběrem podskupiny programů stojí jejich směřování k určité oblasti (vzdělávání, lékařství, multimediální tvorba, apod.), podprojekty jsou také mimo jiné zahrnuty ve zdokonalování existujících balíčků, balení chybějícího softwaru, adaptace instalátorů, tvoření zvláštní dokumentace.
				</para>
				 <sidebar> <title><emphasis>SLOVNÍK</emphasis> Podprojekt a odvozená distribuce</title>
				 <indexterm>
					<primary>dílčí projekt</primary>
				</indexterm>
				 <indexterm>
					<primary>odvozená distribuce</primary>
				</indexterm>
				 <para>
					Vývojový proces odvozené distribuce spočívá v začátcích s určitou verzí Debianu a k ní vytváření určitého počtu modifikací. Infrastruktura používaná pro tuto práci je zcela vně debianovského projektu. Zde nejsou nutné žádné zásady pro vylepšení plynoucí ze spolupráce. Tento rozdíl vysvětluje jak moc se může odvozená distribuce “odchylovat” od svého originálu a proč musejí pravidelně resynchronizovat svůj zdrojový kód, aby mohli těžit z upstreamových vylepšení.
				</para>
				 <para>
					Na druhou stranu, podprojekt se nemůže odchylovat, protože veškerá na něm vykonaná práce spočívá v přímém zdokonalování Debianu za účelem jeho adaptace ke zvláštnímu úkolu.
				</para>
				 <para>
					Nejznáměšjší distribucí odvozenou z Debianu je bezpochyby Ubuntu, ale je jich hodně. Pokud se chcete o nich dozvědět více podrobností a jejich pozici ve vztahu vůči Debianu, navštivte <xref linkend="derivative-distributions" />.
				</para>
				 </sidebar> <para>
					Zde je malý výběr současných podprojektů:
				</para>
				 <itemizedlist>
					<listitem>
						<para>
							Debian-Junior, od Bena Armstronga, nabízející přitažlivé a snadné použití debianovského systému pro děti.
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian-Edu, od Pettera Reinholdtsena, zaměřený na vytvoření speciální distribuce do akademického prostředí;
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian Med, od Andrease Tilleho, věnuje se lékařství;
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian Multimedia se zaobírá audiem a multimediální tvorbou;
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian-Desktop který se zaměřuje na plochu a koordinuje uměleckou tvorbu pro výchozí téma;
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian GIS, který se stará o aplikace Geografického informačního systému;
						</para>

					</listitem>
					 <listitem>
						<para>
							Debian Accessibility, na závěr, zdokonaluje Debian, aby uspokojil požadavky lidí s omezením.
						</para>

					</listitem>

				</itemizedlist>
				 <para>
					Tento seznam se bude pravděpodobně postupem času a větším vnímáním výhod podprojektů Debianu stále rozrůstat. Za plné podpory současné infrastruktury Debianu, se mohou, v podstatě, plně věnovat práci s čistou přidanou hodnotou, bez starostí o ostaní slaďování s Debianem, protože jsou vyvíjené v rámci projektu.
				</para>

			</section>
			 <section>
				<title>Administrativní týmy</title>
				 <para>
					Většina administrativních týmů je relativně uzavřená a nabírá nové členy interním zvolením. Nejlepším způsobem jak se stát jejich součástí je intelegentně asistovat současným členům a dávat najevo, že rozumíte jejich cílům a metodám práce.
				</para>
				 <para>
					Ftpmasteři mají na starosti oficiální archív debianovských balíčků. Obhospodařují program, který se přejímá balíčky poslané vývojáři a automaticky je po následné kontrole ukládá na referenční server (<literal>ftp-master.debian.org</literal>).
				</para>
				 <para>
					Musí také ověřovat licence všech nových balíčků, za účelem ujištění se, je může Debian rozšiřovat, před jejich zahrnutím do tělesa ostatních, už existujících balíčků. Pokud si vývojář přeje balíček vyjmout, oslovuje tento tým skrze systém sledování chyb a <emphasis>ftp.debian.org</emphasis> “pseudo-package”.
				</para>
				 <indexterm>
					<primary>ftpmaster</primary>
				</indexterm>
				 <sidebar> <title><emphasis>SLOVNÍČEK</emphasis> Pseudo-package, monitorovací nástroj</title>
				 <indexterm>
					<primary>pseudo-package</primary>
				</indexterm>
				 <para>
					Systém sledování chyb, původně vyvinutý pro spojení chyby s balíčkem Debianu, se v praxi osvědčil v zabezpečení dalších záležitostí: seznamů problémů k řešení nebo provádění úkolů bez provázanosti s konkrétním balíčkem Debianu.“Pseudo-packages” tedy dovolují jistým týmům používat systém sledování chyb bez spojení opravdového balíčku s jejich týmem. Každý tedy může hlásit záležitosti, které je zapotřebí řešit. Například BTS má <emphasis>ftp.debian.org</emphasis> vstup, který se používá k nahlašování a sledování problémů v oficiálním archivu balíčků nebo jednoduše k žádostem o odstranění balíčku. Obdobně,<emphasis>www.debian.org</emphasis> pseudo-package odkazuje na chyby na internetových stránkách Debianu a <emphasis>lists.debian.org</emphasis> shromažďuje všechny problémy týkající se mailing listů.
				</para>
				 </sidebar> <sidebar id="sidebar.gitlab"> <title><emphasis>TOOL</emphasis> GitLab, Git repository hosting and much more</title>
				 <indexterm>
					<primary><literal>salsa.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>GitLab</primary>
				</indexterm>
				 <para>
					A GitLab instance, known as <literal>salsa.debian.org</literal>, is used by Debian to host the Git packaging repositories but this software offers much more than simple hosting and Debian contributors have been quick to leverage the continuous integration features (running tests, or even building packages, on each push). Debian contributors also benefit from a cleaner contribution workflow thanks the well understood merge request process (similar to GitHub's pull requests).
				</para>
				 <para>
					GitLab replaced FusionForge (which was running on a service known as <literal>alioth.debian.org</literal>) for collaborative package maintainance. This service is administered by Alexander Wirt, Bastian Blank and Jörg Jaspert. <ulink type="block" url="https://salsa.debian.org/" /> <ulink type="block" url="https://wiki.debian.org/Salsa/Doc" />
				</para>
				 </sidebar> <para id="dsa-team">
					Tým <emphasis>Debian System Administrators</emphasis> (DSA) (<email>debian-admin@lists.debian.org</email>), jak už název napovídá, je zodpovědný za systémovou administraci řádky servrů používaných projektem. Zabezpečují optimální funkčnost všech základních služeb (DNS, Web, e-mail, shell, apod.), instalačního softwaru požadovaného vývojáři Debianu a provádějí veškerá preventivní bezpečnostní opatření.
				</para>
				 <indexterm>
					<primary><emphasis>debian-admin</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary>DSA (Systémový administrátor Debianu)</primary>
				</indexterm>
				 <sidebar> <title><emphasis>NÁSTROJ</emphasis> Sledovač balíčků Debianu</title>
				 <indexterm>
					<primary>systém pro sledování balíčků</primary>
				</indexterm>
				 <indexterm>
					<primary>systém</primary>
					<secondary>systém pro sledování balíčků</secondary>
				</indexterm>
				 <indexterm>
					<primary>Sledovač balíčků Debianu</primary>
				</indexterm>
				 <indexterm>
					<primary>sledovač</primary>
					<secondary>Sledovač balíčků Debianu</secondary>
				</indexterm>
				 <indexterm>
					<primary>balíček</primary>
					<secondary>Sledovač balíčků Debianu</secondary>
				</indexterm>
				 <indexterm>
					<primary>PTS</primary>
				</indexterm>
				 <indexterm>
					<primary>DDPO</primary>
				</indexterm>
				 <indexterm>
					<primary>Přehled balíčků pro vývojáře Debianu</primary>
				</indexterm>
				 <para>
					Toto je jeden z Raphaëlových výtvorů. Základní myšlenkou je pro daný balíček nashromáždit co možná nejvíce inforamací na jedné stránce. Takže se dá rychle překontrolovat status programu, zjistit úloly, co se mají provést a nabídnout podporu. Proto tato stránka shromažďuje veškeré statistiky chyb, v každé distribuci verze, které jsou k dispozici, pokroky balíčku v <emphasis role="distribution">testovací</emphasis> distribuci, status překladů popisů a šablon debconf, případnou dostupnost nových upstreamových verzí, poznámky o neshodách s nejnovější verzí Zásad Debianu, informaci o správci a další informace, které si správce přál uvést. <ulink type="block" url="https://tracker.debian.org/" />
				</para>
				 <para>
					An e-mail subscription service completes this web interface. It automatically sends the following selected information to the list: bugs and related discussions, availability of a new version on the Debian servers, new translations available for proofreading, etc.
				</para>
				 <para>
					Advanced users can, thus, follow all of this information closely and even contribute to the project, once they have got a good enough understanding of how it works.
				</para>
				 <para>
					Another web interface, known as <emphasis>Debian Developer's Packages Overview</emphasis> (DDPO), provides each developer a synopsis of the status of all Debian packages placed under their charge. <ulink type="block" url="https://qa.debian.org/developer.php" />
				</para>
				 <para>
					These two websites are tools developed and managed by the group responsible for quality assurance within Debian (known as Debian QA).
				</para>
				 <indexterm>
					<primary>assurance</primary>
					<secondary>quality assurance</secondary>
				</indexterm>
				 <indexterm>
					<primary>quality</primary>
					<secondary>assurance</secondary>
				</indexterm>
				 </sidebar> <para>
					The <emphasis>listmasters</emphasis> administer the e-mail server that manages the mailing lists. They create new lists, handle bounces (delivery failure notices), and maintain spam filters (unsolicited bulk e-mail).
				</para>
				 <indexterm>
					<primary>listmaster</primary>
				</indexterm>
				 <sidebar> <title><emphasis>CULTURE</emphasis> Traffic on the mailing lists: some figures</title>
				 <indexterm>
					<primary>lists</primary>
					<secondary>mailing lists</secondary>
				</indexterm>
				 <indexterm>
					<primary>mailing lists</primary>
				</indexterm>
				 <para>
					The mailing lists are, without a doubt, the best testimony to activity on a project, since they keep track of everything that happens. Some statistics (from 2017) regarding our mailing lists speak for themselves: Debian hosts more than 250 lists, totaling 217,000 individual subscriptions. The 27,000 messages sent each month generate 476,000 e-mails daily.
				</para>
				 </sidebar> <para>
					Each specific service has its own administration team, generally composed of volunteers who have installed it (and also frequently programmed the corresponding tools themselves). This is the case of the bug tracking system (BTS), the package tracker, <literal>salsa.debian.org</literal> (GitLab server, see sidebar <xref linkend="sidebar.gitlab" />), the services available on <literal>qa.debian.org</literal>, <literal>lintian.debian.org</literal>, <literal>buildd.debian.org</literal>, <literal>cdimage.debian.org</literal>, etc.
				</para>

			</section>
			 <section>
				<title>Development Teams, Transversal Teams</title>
				 <para>
					Unlike administrative teams, the development teams are rather widely open, even to outside contributors. Even if Debian does not have a vocation to create software, the project needs some specific programs to meet its goals. Of course, developed under a free software license, these tools make use of methods proven elsewhere in the free software world.
				</para>
				 <sidebar id="sidebar.git"> <title><emphasis>CULTURE</emphasis> Git</title>
				 <indexterm>
					<primary>Git</primary>
				</indexterm>
				 <indexterm>
					<primary>configuration management</primary>
				</indexterm>
				 <para>
					Git is a tool for collaborative work on multiple files, while maintaining a history of modifications. The files in question are generally text files, such as a program's source code. If several people work together on the same file, <command>git</command> can only merge the alterations made if they were made to different portions of the file. Otherwise, these “conflicts” must be resolved by hand.
				</para>
				 <para>
					Git is a distributed system where each user has a repository with the complete history of changes. Central repositories are used to download the project (<command>git clone</command>) and to share the work done with others (<command>git push</command>). The repository can contain multiple versions of the files but only one version can be worked on at a given time: it's called the working copy (it can be changed to point to another version with <command>git checkout</command>). Git can show you the modifications made to the working copy (<command>git diff</command>), can store them in the repository by creating a new entry in the versions history (<command>git commit</command>), can update the working copy to include modifications made in parallel by other users (<command>git pull</command>), and can record a particular configuration in the history in order to be able to easily extract it later on (<command>git tag</command>).
				</para>
				 <para>
					Git makes it easy to handle multiple concurrent versions of a project in development without them interfering with each other. These versions are called <emphasis>branches</emphasis>. This metaphor of a tree is fairly accurate, since a program is initially developed on a common trunk. When a milestone has been reached (such as version 1.0), development continues on two branches: the development branch prepares the next major release, and the maintenance branch manages updates and fixes for version 1.0.
				</para>
				 <indexterm>
					<primary>Version Control System (VCS)</primary>
				</indexterm>
				 <para>
					Git is, nowadays, the most popular version control system but it is not the only one. Historically, CVS (Concurrent Versions System) was the first widely used tool but its numerous limitations contributed to the appearance of more modern free alternatives. These include, especially, <command>subversion</command> (<command>svn</command>), <command>git</command>, <command>bazaar</command> (<command>bzr</command>), and <command>mercurial</command> (<command>hg</command>). <ulink type="block" url="http://www.nongnu.org/cvs/" /> <ulink type="block" url="http://subversion.apache.org/" /> <ulink type="block" url="http://git-scm.com/" /> <ulink type="block" url="http://bazaar.canonical.com/" /> <ulink type="block" url="http://mercurial.selenic.com/" />
				</para>
				 <indexterm>
					<primary><command>subversion</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>svn</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>git</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>bzr</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>hg</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>mercurial</command></primary>
				</indexterm>
				 <indexterm>
					<primary><command>cvs</command></primary>
				</indexterm>
				 </sidebar> <para>
					Debian has developed little software of its own, but certain programs have assumed a starring role, and their fame has spread beyond the scope of the project. Good examples are <command>dpkg</command>, the Debian package management program (it is, in fact, an abbreviation of Debian PacKaGe, and generally pronounced as “dee-package”), and <command>apt</command>, a tool to automatically install any Debian package, and its dependencies, guaranteeing the consistency of the system after an upgrade (its name is an acronym for Advanced Package Tool). Their teams are, however, much smaller, since a rather high level of programming skill is required to gain an overall understanding of the operations of these types of programs.
				</para>
				 <para>
					The most important team is probably that for the Debian installation program, <command>debian-installer</command>, which has accomplished a work of momentous proportions since its conception in 2001. Numerous contributors were needed, since it is difficult to write a single program able to install Debian on a dozen different architectures. Each one has its own mechanism for booting and its own bootloader. All of this work is coordinated on the <email>debian-boot@lists.debian.org</email> mailing list, under the direction of Cyril Brulebois. <ulink type="block" url="http://www.debian.org/devel/debian-installer/" /> <ulink type="block" url="http://joeyh.name/blog/entry/d-i_retrospective/" />
				</para>
				 <para>
					The (very small) <command>debian-cd</command> program team has an even more modest objective. Many “small” contributors are responsible for their architecture, since the main developer can not know all the subtleties, nor the exact way to start the installer from the CD-ROM.
				</para>
				 <para>
					Many teams must collaborate with others in the activity of packaging: <email>debian-qa@lists.debian.org</email> tries, for example, to ensure quality at all levels of the Debian project. The <email>debian-policy@lists.debian.org</email> list develops Debian Policy according to proposals from all over the place. The teams in charge of each architecture (<email>debian-<replaceable>architecture</replaceable>@lists.debian.org</email>) compile all packages, adapting them to their particular architecture, if needed.
				</para>
				 <para>
					Other teams manage the most important packages in order to ensure maintenance without placing too heavy a load on a single pair of shoulders; this is the case with the C library and <email>debian-glibc@lists.debian.org</email>, the C compiler on the <email>debian-gcc@lists.debian.org</email> list, or Xorg on the <email>debian-x@lists.debian.org</email> (this group is also known as the X Strike Force).
				</para>

			</section>

		</section>

	</section>
	 <section id="sect.follow-debian-news">
		<title>Follow Debian News</title>
		 <para>
			As already mentioned, the Debian project evolves in a very distributed, very organic way. As a consequence, it may be difficult at times to stay in touch with what happens within the project without being overwhelmed with a never-ending flood of notifications.
		</para>
		 <para>
			If you only want the most important news about Debian, you probably should subscribe to the <email>debian-announce@lists.debian.org</email> list. This is a very low-traffic list (around a dozen messages a year), and only gives the most important announcements, such as the availability of a new stable release, the election of a new Project Leader, or the yearly Debian Conference. <ulink type="block" url="https://lists.debian.org/debian-announce/" />
		</para>
		 <indexterm>
			<primary>Debian Project News</primary>
		</indexterm>
		 <para>
			More general (and regular) news about Debian are sent to the <email>debian-news@lists.debian.org</email> list. The traffic on this list is quite reasonable too (usually around a handful of messages a month), and it includes the semi-regular “Debian Project News”, which is a compilation of various small bits of information about what happens in the project. <ulink type="block" url="https://lists.debian.org/debian-news/" />
		</para>
		 <sidebar> <title><emphasis>COMMUNITY</emphasis> The publicity team</title>
		 <para>
			Debian's official communication channels are managed by volunteers of the Debian publicity team. They are delegates of the Debian Project Leader and moderate news and announcements posted there. Many other volunteers contribute to the team, for example by writing articles for “Debian Project News” or by animating the microblogging service (<ulink url="https://micronews.debian.org/">micronews.debian.org</ulink>). <ulink type="block" url="https://wiki.debian.org/Teams/Publicity" />
		</para>
		 </sidebar> <para>
			For more information about the evolution of Debian and what is happening at some point in time in various teams, there's also the <email>debian-devel-announce@lists.debian.org</email> list. As its name implies, the announcements it carries will probably be more interesting to developers, but it also allows interested parties to keep an eye on what happens in more concrete terms than just when a stable version is released. While <email>debian-announce@lists.debian.org</email> gives news about the user-visible results, <email>debian-devel-announce@lists.debian.org</email> gives news about how these results are produced. As a side note, “d-d-a” (as it is sometimes referred to) is the only list that Debian developers must be subscribed to. <ulink type="block" url="https://lists.debian.org/debian-devel-announce/" />
		</para>
		 <para>
			Debian's official blog (<ulink url="https://bits.debian.org">bits.debian.org</ulink>) is also a good source of information. It conveys most of the interesting news that are published on the various mailing lists that we already covered and other important news contributed by community members. Since all Debian developers can contribute these news when they think they have something noteworthy to make public, Debian's blog gives a valuable insight while staying rather focused on the project as a whole.
		</para>
		 <indexterm>
			<primary>Planet Debian</primary>
		</indexterm>
		 <para>
			A more informal source of information can also be found on Planet Debian, which aggregates articles posted by Debian contributors on their respective blogs. While the contents do not deal exclusively with Debian development, they provide a view into what is happening in the community and what its members are up to. <ulink type="block" url="https://planet.debian.org/" />
		</para>
		 <indexterm>
			<primary>microblog</primary>
		</indexterm>
		 <indexterm>
			<primary>Identi.ca</primary>
		</indexterm>
		 <indexterm>
			<primary>Twitter</primary>
		</indexterm>
		 <indexterm>
			<primary>Facebook</primary>
		</indexterm>
		 <indexterm>
			<primary>Google+</primary>
		</indexterm>
		 <indexterm>
			<primary>social networks</primary>
		</indexterm>
		 <indexterm>
			<primary>network</primary>
			<secondary>social networks</secondary>
		</indexterm>
		 <para>
			The project is also well represented on social networks. While Debian only has an official presence on platforms built with free software (like the Identi.ca microblogging platform, powered by <emphasis>pump.io</emphasis>), there are many Debian contributors who are animating Twitter accounts, Facebook pages, Google+ pages, and more. <ulink type="block" url="https://identi.ca/debian" /> <ulink type="block" url="https://twitter.com/debian" /> <ulink type="block" url="https://www.facebook.com/debian" /> <ulink type="block" url="https://plus.google.com/111711190057359692089" />
		</para>

	</section>
	 <section id="sect.role-of-distributions">
		<title>The Role of Distributions</title>
		 <indexterm>
			<primary>Linux distribution</primary>
			<secondary>role</secondary>
		</indexterm>
		 <para>
			A GNU/Linux distribution has two main objectives: install a free operating system on a computer (either with or without an existing system or systems), and provide a range of software covering all of the users' needs.
		</para>
		 <section>
			<title>The Installer: <command>debian-installer</command></title>
			 <para>
				The <command>debian-installer</command>, designed to be extremely modular in order to be as generic as possible, targets the first objective. It covers a broad range of installation situations and in general, greatly facilitates the creation of a derivative installer corresponding to a particular case.
			</para>
			 <para>
				This modularity, which also makes it very complex, may be daunting for the developers discovering this tool; but whether used in graphical or text mode, the user's experience is still similar. Great efforts have been made to reduce the number of questions asked at installation time, in particular thanks to the inclusion of automatic hardware detection software.
			</para>
			 <para>
				It is interesting to note that distributions derived from Debian differ greatly on this aspect, and provide a more limited installer (often confined to the i386 or amd64 architectures), but more user-friendly for the uninitiated. On the other hand, they usually refrain from straying too far from package contents in order to benefit as much as possible from the vast range of software offered without causing compatibility problems.
			</para>

		</section>
		 <section>
			<title>The Software Library</title>
			 <para>
				Quantitatively, Debian is undeniably the leader in this respect, with over 25,000 source packages. Qualitatively, Debian’s policy and long testing period prior to releasing a new stable version justify its reputation for stability and consistency. As far as availability, everything is available on-line through many mirrors worldwide, with updates pushed out every six hours.
			</para>
			 <para>
				Many retailers sell DVD-ROMs on the Internet at a very low price (often at cost), the “images” for which are freely available for download. There is only one drawback: the low frequency of releases of new stable versions (their development sometimes takes more than two years), which delays the inclusion of new software.
			</para>
			 <para>
				Most new free software programs quickly find their way into the development version which allows them to be installed. If this requires too many updates due to their dependencies, the program can also be recompiled for the stable version of Debian (see <xref linkend="debian-packaging" /> for more information on this topic).
			</para>

		</section>

	</section>
	 <section id="sect.release-lifecycle">
		<title>Lifecycle of a Release</title>
		 <indexterm>
			<primary>lifecycle</primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Unstable</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Testing</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Stable</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Experimental</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Oldstable</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="distribution">Oldoldstable</emphasis></primary>
		</indexterm>
		 <para>
			The project will simultaneously have three to six different versions of each program, named <emphasis role="distribution">Experimental</emphasis>, <emphasis role="distribution">Unstable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Oldstable</emphasis>, and even <emphasis role="distribution">Oldoldstable</emphasis>. Each one corresponds to a different phase in development. For a good understanding, let us take a look at a program's journey, from its initial packaging to inclusion in a stable version of Debian.
		</para>
		 <sidebar> <title><emphasis>VOCABULARY</emphasis> Release</title>
		 <indexterm>
			<primary>release</primary>
		</indexterm>
		 <para>
			The term “release”, in the Debian project, indicates a particular version of a distribution (e.g., “unstable release” means “the unstable version”). It also indicates the public announcement of the launch of any new version (stable).
		</para>
		 </sidebar> <section>
			<title>The <emphasis role="distribution">Experimental</emphasis> Status</title>
			 <para>
				First let us take a look at the particular case of the <emphasis role="distribution">Experimental</emphasis> distribution: this is a group of Debian packages corresponding to the software currently in development, and not necessarily completed, explaining its name. Not everything passes through this step; some developers add packages here in order to get feedback from more experienced (or braver) users.
			</para>
			 <para>
				Otherwise, this distribution frequently houses important modifications to base packages, whose integration into <emphasis role="distribution">Unstable</emphasis> with serious bugs would have critical repercussions. It is, thus, a completely isolated distribution, its packages never migrate to another version (except by direct, express intervention of the maintainer or the ftpmasters). It is also not self-contained: only a subset of the existing packages are present in <emphasis role="distribution">Experimental</emphasis>, and it generally does not include the base system. This distribution is therefore mostly useful in combination with another, self-contained, distribution such as <emphasis role="distribution">Unstable</emphasis>.
			</para>

		</section>
		 <section>
			<title>The <emphasis role="distribution">Unstable</emphasis> Status</title>
			 <para>
				Let us turn back to the case of a typical package. The maintainer creates an initial package, which they compile for the <emphasis role="distribution">Unstable</emphasis> version and place on the <literal>ftp-master.debian.org</literal> server. This first event involves inspection and validation from the ftpmasters. The software is then available in the <emphasis role="distribution">Unstable</emphasis> distribution, which is the “cutting edge” distribution chosen by users who are more concerned with having up to date packages than worried about serious bugs. They discover the program and then test it.
			</para>
			 <para>
				If they encounter bugs, they report them to the package's maintainer. The maintainer then regularly prepares corrected versions, which they upload to the server.
			</para>
			 <para>
				Every newly updated package is updated on all Debian mirrors around the world within six hours. The users then test the corrections and search for other problems resulting from the modifications. Several updates may then occur rapidly. During these times, autobuilder robots come into action. Most frequently, the maintainer has only one traditional PC and has compiled their package on the amd64 (or i386) architecture (or they opted for a source-only upload, thus without any precompiled package); the autobuilders take over and automatically compile versions for all the other architectures. Some compilations may fail; the maintainer will then receive a bug report indicating the problem, which is then to be corrected in the next versions. When the bug is discovered by a specialist for the architecture in question, the bug report may come with a patch ready to use.
			</para>
			 <indexterm>
				<primary>autobuilder</primary>
			</indexterm>
			 <figure>
				<title>Compilation of a package by the autobuilders</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/autobuilder.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <sidebar> <title><emphasis>QUICK LOOK</emphasis> <command>buildd</command>, the Debian package recompiler</title>
			 <indexterm>
				<primary><command>buildd</command></primary>
			</indexterm>
			 <indexterm>
				<primary>build daemon</primary>
			</indexterm>
			 <para>
				<emphasis>buildd</emphasis> is the abbreviation of “build daemon”. This program automatically recompiles new versions of Debian packages on the architectures on which it is hosted (cross-compilation is avoided as much as possible).
			</para>
			 <para>
				Thus, to produce binaries for the <literal>arm64</literal> architecture, the project has <literal>arm64</literal> machines available. The <emphasis>buildd</emphasis> program runs on them continuously and creates binary packages for <literal>arm64</literal> from source packages sent by Debian developers.
			</para>
			 <para>
				This software is used on all the computers serving as autobuilders for Debian. By extension, the term <emphasis>buildd</emphasis> frequently is used to refer to these machines, which are generally reserved solely for this purpose.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Migration to <emphasis role="distribution">Testing</emphasis></title>
			 <para>
				A bit later, the package will have matured; compiled on all the architectures, it will not have undergone recent modifications. It is then a candidate for inclusion in the <emphasis role="distribution">Testing</emphasis> distribution — a group of <emphasis role="distribution">Unstable</emphasis> packages chosen according to some quantifiable criteria. Every day a program automatically selects the packages to include in <emphasis role="distribution">Testing</emphasis>, according to elements guaranteeing a certain level of quality:
			</para>
			 <orderedlist>
				<listitem>
					<para>
						lack of critical bugs, or, at least fewer than the version currently included in <emphasis role="distribution">Testing</emphasis>;
					</para>

				</listitem>
				 <listitem>
					<para>
						at least 10 days spent in <emphasis role="distribution">Unstable</emphasis>, which is sufficient time to find and report any serious problems;
					</para>

				</listitem>
				 <listitem>
					<para>
						successful compilation on all officially supported architectures;
					</para>

				</listitem>
				 <listitem>
					<para>
						dependencies that can be satisfied in <emphasis role="distribution">Testing</emphasis>, or that can at least be moved there together with the package in question.
					</para>

				</listitem>

			</orderedlist>
			 <para>
				This system is clearly not infallible; critical bugs are regularly found in packages included in <emphasis role="distribution">Testing</emphasis>. Still, it is generally effective, and <emphasis role="distribution">Testing</emphasis> poses far fewer problems than <emphasis role="distribution">Unstable</emphasis>, being for many, a good compromise between stability and novelty.
			</para>
			 <sidebar> <title><emphasis>NOTE</emphasis> Limitations of <emphasis role="distribution">Testing</emphasis></title>
			 <para>
				While very interesting in principle, <emphasis role="distribution">Testing</emphasis> does have some practical problems: the tangle of cross-dependencies between packages is such that a package can rarely move there completely on its own. With packages all depending upon each other, it is sometimes necessary to migrate a large number of packages simultaneously, which is impossible when some are uploading updates regularly. On the other hand, the script identifying the families of related packages works hard to create them (this would be an NP-complete problem, for which, fortunately, we know some good heuristics). This is why we can manually interact with and guide this script by suggesting groups of packages, or imposing the inclusion of certain packages in a group, even if this temporarily breaks some dependencies. This functionality is accessible to the Release Managers and their assistants.
			</para>
			 <para>
				Recall that an NP-complete problem is of an exponential algorithmic complexity according to the size of the data, here being the length of the code (the number of figures) and the elements involved. The only way to resolve it is frequently to examine all possible configurations, which could require enormous means. A heuristic is an approximate, but satisfying, solution.
			</para>
			 </sidebar> <sidebar> <title><emphasis>COMMUNITY</emphasis> The Release Manager</title>
			 <indexterm>
				<primary>Release Manager</primary>
			</indexterm>
			 <indexterm>
				<primary>Stable Release Manager</primary>
			</indexterm>
			 <para>
				Release Manager is an important title, associated with heavy responsibilities. The bearer of this title must, in effect, manage the release of a new, stable version of Debian, and define the process for development of <emphasis role="distribution">Testing</emphasis> until it meets the quality criteria for <emphasis role="distribution">Stable</emphasis>. They also define a tentative schedule (not always followed).
			</para>
			 <para>
				We also have Stable Release Managers, often abbreviated SRM, who manage and select updates for the current stable version of Debian. They systematically include security patches and examine all other proposals for inclusion, on a case by case basis, sent by Debian developers eager to update their package in the stable version.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>The Promotion from <emphasis role="distribution">Testing</emphasis> to <emphasis role="distribution">Stable</emphasis></title>
			 <para>
				Let us suppose that our package is now included in <emphasis role="distribution">Testing</emphasis>. As long as it has room for improvement, its maintainer must continue to improve it and restart the process from <emphasis role="distribution">Unstable</emphasis> (but its later inclusion in <emphasis role="distribution">Testing</emphasis> is generally faster: unless it changed significantly, all of its dependencies are already available). When it reaches perfection, the maintainer has completed their work. The next step is the inclusion in the <emphasis role="distribution">Stable</emphasis> distribution, which is, in reality, a simple copy of <emphasis role="distribution">Testing</emphasis> at a moment chosen by the Release Manager. Ideally this decision is made when the installer is ready, and when no program in <emphasis role="distribution">Testing</emphasis> has any known critical bugs.
			</para>
			 <para>
				Since this moment never truly arrives, in practice, Debian must compromise: remove packages whose maintainer has failed to correct bugs on time, or agree to release a distribution with some bugs in the thousands of programs. The Release Manager will have previously announced a freeze period, during which each update to <emphasis role="distribution">Testing</emphasis> must be approved. The goal here is to prevent any new version (and its new bugs), and to only approve updates fixing bugs.
			</para>
			 <figure>
				<title>A package's path through the various Debian versions</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/release-cycle.png" format="PNG" width="60%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <sidebar> <title><emphasis>VOCABULARY</emphasis> Freeze: the home straight</title>
			 <indexterm>
				<primary>freeze</primary>
			</indexterm>
			 <para>
				During the freeze period, development of the <emphasis role="distribution">Testing</emphasis> distribution is blocked; no more automatic updates are allowed. Only the Release Managers are then authorized to change packages, according to their own criteria. The purpose is to prevent the appearance of new bugs by introducing new versions; only thoroughly examined updates are authorized when they correct significant bugs.
			</para>
			 </sidebar> <para>
				After the release of a new stable version, the Stable Release Managers manage all further development (called “revisions”, ex: 7.1, 7.2, 7.3 for version 7). These updates systematically include all security patches. They will also include the most important corrections (the maintainer of a package must prove the gravity of the problem that they wish to correct in order to have their updates included).
			</para>
			 <para>
				At the end of the journey, our hypothetical package is now included in the stable distribution. This journey, not without its difficulties, explains the significant delays separating the Debian Stable releases. This contributes, over all, to its reputation for quality. Furthermore, the majority of users are satisfied using one of the three distributions simultaneously available. The system administrators, concerned above all about the stability of their servers, don't need the latest and greatest version of GNOME; they can choose Debian <emphasis role="distribution">Stable</emphasis>, and they will be satisfied. End users, more interested in the latest versions of GNOME or KDE Plasma than in rock-solid stability, will find Debian <emphasis role="distribution">Testing</emphasis> to be a good compromise between a lack of serious problems and relatively up to date software. Finally, developers and more experienced users may blaze the trail, testing all the latest developments in Debian <emphasis role="distribution">Unstable</emphasis> right out of the gate, at the risk of suffering the headaches and bugs inherent in any new version of a program. To each their own Debian!
			</para>
			 <sidebar> <title><emphasis>CULTURE</emphasis> GNOME and KDE Plasma, graphical desktop environments</title>
			 <para>
				GNOME (GNU Network Object Model Environment) and Plasma by KDE are the two most popular graphical desktop environments in the free software world. A desktop environment is a set of programs grouped together to allow easy management of the most common operations through a graphical interface. They generally include a file manager, office suite, web browser, e-mail program, multimedia accessories, etc. The most visible difference resides in the choice of the graphical library used: GNOME has chosen GTK+ (free software licensed under the LGPL), and the KDE community has selected Qt (a company-backed project, available nowadays both under the GPL and a commercial license). <ulink type="block" url="https://www.gnome.org/" /> <ulink type="block" url="https://www.kde.org/" />
			</para>
			 </sidebar> <figure>
				<title>Chronological path of a program packaged by Debian</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/package-lifecycle.png" format="PNG" scalefit="1" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>
		 <section>
			<title>The <emphasis role="distribution">Oldstable</emphasis> and <emphasis role="distribution">Oldoldstable</emphasis> Status</title>
			 <indexterm>
				<primary>Long Term Support (LTS)</primary>
			</indexterm>
			 <indexterm>
				<primary>support</primary>
				<secondary>Long Term Support (LTS)</secondary>
			</indexterm>
			 <para>
				Each <emphasis role="distribution">Stable</emphasis> release has an expected lifetime of about 5 years and given that releases tend to happen every 2 years, there can be up to 3 supported releases at a given point of time. When a new stable release happens, the former release becomes <emphasis role="distribution">Oldstable</emphasis> and the one even before becomes <emphasis role="distribution">Oldoldstable</emphasis>.
			</para>
			 <para>
				This Long Term Support (LTS) of Debian releases is a recent initiative: individual contributors and companies joined forces to create the Debian LTS team. Older releases which are no longer supported by the Debian security team fall under the responsibility of this new team.
			</para>
			 <para>
				The Debian security team handles security support in the current <emphasis role="distribution">Stable</emphasis> release and also in the <emphasis role="distribution">Oldstable</emphasis> release (but only for as long as is needed to ensure one year of overlap with the current stable release). This amounts roughly to three years of support for each release. The Debian LTS team handles the last (two) years of security support so that each releases benefits from at least 5 years of support and so that users can upgrade from version N to N+2. <ulink type="block" url="https://wiki.debian.org/LTS" />
			</para>
			 <sidebar> <title><emphasis>COMMUNITY</emphasis> Companies sponsoring the LTS effort</title>
			 <para>
				Long Term Support is a difficult commitment to make in Debian because volunteers tend to avoid the work that is not very fun. And providing security support for 5 years old software is — for many contributors — a lot less fun than packaging new upstream versions or developing new features.
			</para>
			 <para>
				To bring this project to life, the project counted on the fact that long term support was particularly relevant for companies and that they would be willing to mutualize the cost of this security support.
			</para>
			 <para>
				The project started in June 2014: some organizations allowed their employees to contribute part-time to Debian LTS while others preferred to sponsor the project with money so that Debian contributors get paid to do the work that they would not do for free. Most Debian contributors willing to be paid to work on LTS got together to create a clear sponsorship offer managed by Freexian (Raphaël Hertzog's company): <ulink type="block" url="https://www.freexian.com/services/debian-lts.html" />
			</para>
			 <para>
				In the Debian LTS team, the volunteers work on packages they care about while the paid contributors prioritize packages used by their sponsors.
			</para>
			 <para>
				The project is always looking for new sponsors: What about your company? Can you let an employee work part-time on long term support? Can you allocate a small budget for security support? <ulink type="block" url="https://wiki.debian.org/LTS/Funding" />
			</para>
			 </sidebar>
		</section>

	</section>
</chapter>

