<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="network-services" lang="nb-NO">
	<chapterinfo>
		 <keywordset>
			<keyword>Postfix</keyword>
			 <keyword>Apache</keyword>
			 <keyword>NFS</keyword>
			 <keyword>Samba</keyword>
			 <keyword>Squid</keyword>
			 <keyword>OpenLDAP</keyword>
			 <keyword>SIP</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Nettverkstjenester: Postfix, Apache, NFS, Samba, Squid, LDAP, SIP, XMPP, TURN</title>
	 <highlights> <para>
		Nettjenester er de programmene som brukerne direkte samhandler med i sitt daglige arbeid. De er toppen av informasjonssystemets isfjell, og dette kapittelet fokuserer på dem - de skjulte delene de er avhengige av er den infrastrukturen vi allerede har beskrevet.
	</para>
	 <para>
		Mange moderne nettverkstjenester krever krypteringsteknologi for å fungere på en pålitelig og sikker måte, spesielt når de brukes på det offentlige Internettet. X.509 sertifikater (som også kan refereres til som SSLCertificates eller TLS-sertifikater) brukes ofte til dette formålet. Et sertifikat for et bestemt domene, kan ofte deles mellom mer enn en av tjenestene som er omtalt i dette kapittelet.
	</para>
	 <indexterm>
		<primary>TLS</primary>
	</indexterm>
	 <indexterm>
		<primary>X.509</primary>
	</indexterm>
	 <indexterm>
		<primary>Certificates</primary>
	</indexterm>
	 </highlights> <section id="sect.smtp-mail-server">
		<title>Posttjener</title>
		 <para>
			Falcot Corp administratorer valgte ut Postfix som elektronisk post-tjener, på grunn av påliteligheten og en enkel konfigurasjon. Faktisk, designet sikrer at hver oppgave blir gjennomført i en prosess med et minimumsett av nødvendige tillatelser, noe som gir en stor minsking i sikkerhetsproblemer.
		</para>
		 <indexterm>
			<primary>email</primary>
			<secondary>server</secondary>
		</indexterm>
		 <indexterm>
			<primary>mail server</primary>
		</indexterm>
		 <indexterm>
			<primary>Postfix</primary>
		</indexterm>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Exim4 tjeneren</title>
		 <indexterm>
			<primary>Exim</primary>
		</indexterm>
		 <para>
			Debian bruker Exim4 som standard e-posttjener (som er grunnen til at den første installasjonen inkluderer Exim4). Konfigurasjonen er levert av en egen pakke, <emphasis role="pkg">exim4-config</emphasis>, og tilpasses automatisk basert på svar på et sett med Debconf-spørsmål svært lik spørsmålene fra <emphasis role="pkg">postfix</emphasis>-pakken.
		</para>
		 <para>
			Konfigurasjonen kan enten være i en enkelt fil (<filename>/etc/exim4/exim4.conf.template</filename>) eller delt på tvers av en rekke konfigurasjonssnutter lagret under <filename>/etc/exim4/conf.d/</filename>. I begge tilfelle, brukes filene av <command>update-exim4.conf</command> som maler for å generere <filename>/var/lib/exim4/config.autogenerated</filename>. Den sistnevnte er filen som brukes av Exim4. Takket være denne mekanismen, kan verdier som fås gjennom Exims debconf-konfigurasjon - som er lagret i <filename>/etc/exim4/update-exim4.conf.conf</filename> - legges inn i Exims konfigurasjonsfil, selv når administratoren eller en annen pakke har endret Exims standardoppsett.
		</para>
		 <para>
			Exim4s konfigurasjonsfil-syntaks har sine særegenheter og sin læringskurve; Men når disse særegenheter blir forstått, er Exim4 en svært komplett og kraftig e-posttjener, noe som gjenspeiles av de titalls sidene med dokumentation. <ulink type="block" url="http://www.exim.org/docs.html" />
		</para>
		 </sidebar> <section>
			<title>Å installere Postfix</title>
			 <para>
				<emphasis role="pkg">postfix</emphasis>-pakken omfatter den viktigste SMTP-nissen. Andre pakker (slik som <emphasis role="pkg">postfix-ldap</emphasis> og <emphasis role="pkg">postfix-pgsql</emphasis>) legger til ekstra funksjonalitet til Postfix, medregnet tilgang til kartdatabaser. Du bør bare installere dem hvis du vet at du trenger dem.
			</para>
			 <sidebar id="sidebar.smtp"> <title><emphasis>BACK TO BASICS</emphasis> SMTP</title>
			 <indexterm>
				<primary>SMTP</primary>
			</indexterm>
			 <indexterm>
				<primary>Simple Mail Transfer Protocol</primary>
			</indexterm>
			 <indexterm>
				<primary>server</primary>
				<secondary>SMTP</secondary>
			</indexterm>
			 <para>
				SMTP (<emphasis>Simple Mail Transfer Protocol</emphasis>) er protokollen som brukes av e-posttjenere for å utveksle og rute e-poster.
			</para>
			 </sidebar> <para>
				Flere Debconf-spørsmål stilles under installasjonen av pakken. Svarene tillater å generere en første versjon av <filename>/etc/postfix/main.cf</filename>-konfigureringsfil.
			</para>
			 <para>
				Det første spørsmålet håndterer typen oppsett. Bare to av de foreslåtte svarene passer for en Internett-tilkoblet tjener, "Internet site" og "Internet with smartvert". Førstnevnte passer for en tjener som mottar innkommende e-post og sender utgående e-post direkte til sine mottakere, og er derfor godt tilpasset i Falcot Corps tilfelle. Sistnevnte passer for en tjener som å mottar innkommende e-post som normalt, men som sender utgående e-post via en mellomliggende SMTP-tjener - en "smartvert" - i stedet for direkte til mottakerens tjener. Dette er mest nyttig for personer med en dynamisk IP-adresse, siden mange e-posttjenere avviser meldinger som kommer rett fra en slik IP-adresse. I dette tilfellet vil en smartvert vanligvis være ISPs SMTP-tjener, som alltid er konfigurert til å godta e-post som kommer fra ISPs brukere og videresende den på riktig måte. Dette oppsettet (med smartvert) passer også for tjenere som ikke er permanent koblet til Internett, da det unngår å måtte håndtere en kø med ikke-leverbare meldinger som ikke kan leveres og som må prøves igjen senere.
			</para>
			 <sidebar> <title><emphasis>VOCABULARY</emphasis> ISP</title>
			 <indexterm>
				<primary>ISP, Internet Service Provider</primary>
			</indexterm>
			 <para>
				ISP er en forkortelse for "Internet Service Provider". Den dekker en enhet, ofte et kommersielt selskap, som leverer Internett-tilkoblinger og tilhørende basistjenester (e-post, nyheter og så videre).
			</para>
			 <para>
			</para>
			 </sidebar> <para>
				Det andre spørsmålet omfatter det fulle navnet på maskinen, som brukes til å generere e-postadresser fra en lokal brukernavn; hele navnet på maskinen kommer opp som en del etter at-skiltet ("@"). For Falcots del, bør svaret være <literal>mail.falcot.com</literal>. Dette er det eneste spørsmålet ved oppstart, men oppsettet den fører til er ikke komplett nok for behovene til Falcot, noe som er grunnen til at administratorene kjører <command>dpkg-reconfigure postfix</command> slik at man er i stand til å tilpasse flere parametre.
			</para>
			 <para>
				Ett av de ekstra spørsmålene gjelder å få alle domenenavn knyttet til denne maskinen. Stanardlisten inneholder dets fulle navn, samt noen få synonymer for <literal>localhost</literal>, men hoved-domenet <literal>falcot.com</literal> må legges for hånd. Mer generelt bør dette spørsmålet vanligvis besvares med alle domene-navnene som denne maskinen skal tjene som MX-tjener for; med andre ord, alle domene-navnene for hvem DNS sier at denne maskinen vil akseptere e-post. Denne informasjonen ender opp i <literal>mydestination</literal>-variabelen i Postfixs hovedoppsettsfil - <filename>/etc/postfix/main.cf</filename>.
			</para>
			 <indexterm>
				<primary>server</primary>
				<secondary>MX</secondary>
			</indexterm>
			 <indexterm>
				<primary>MX</primary>
				<secondary>server</secondary>
			</indexterm>
			 <figure>
				<title>Rollen til DNS <emphasis>MX</emphasis>-registering ved sending av en e-post</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/mail-server.png" format="PNG" scalefit="1" width="60%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <sidebar> <title><emphasis>EXTRA</emphasis> Å spørre MX-registreringene</title>
			 <para>
				Når DNS ikke har en MX-registrering for et domene, vil e-posttjeneren prøve å sende meldingene til verten selv ved hjelp av matchende A-posten (eller AAAA i IPv6).
			</para>
			 </sidebar> <para>
				I noen tilfeller kan installasjonen også spørre hvilke nettverk som skal få lov til å sende e-post via maskinen. I standardkonfigurasjonen, aksepterer Postfix kun e-postmeldinger som kommer fra selve maskinen; det lokale nettverket vil vanligvis bli lagt til. Falcot Corp-administratorene la til <literal>192.168.0.0/16</literal> til standardsvaret. Hvis spørsmålet ikke er spurt, er den relevant variabel i konfigurasjonsfilen <literal>mynetworks</literal>, slik som i eksemplet nedenfor.
			</para>
			 <para>
				Lokal e-post kan også leveres via <command>procmail</command>. Dette verktøyet tillater brukere å sortere sin innkommende e-post etter regler som er lagret i deres <filename>~/.procmailrc</filename>-fil.
			</para>
			 <indexterm>
				<primary><command>procmail</command></primary>
			</indexterm>
			 <indexterm>
				<primary>email</primary>
				<secondary>filtering</secondary>
			</indexterm>
			 <indexterm>
				<primary>filtering email</primary>
			</indexterm>
			 <para>
				Etter dette første trinnet, får administratorene den etterfølgende konfigurasjonsfil; den vil bli brukt som et utgangspunkt for å legge til noe ekstra funksjonalitet i de neste seksjonene.
			</para>
			 <example>
				<title>Innledende <filename>/etc/postfix/main.cf</filename>-fil</title>
				 
<programlisting>
# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = mail.falcot.com
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
myorigin = /etc/mailname
mydestination = mail.falcot.com, falcot.com, localhost.localdomain, localhost
relayhost = 
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.168.0.0/16
mailbox_command = procmail -a "$EXTENSION"
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
inet_protocols = all
</programlisting>

			</example>
			 <sidebar> <title><emphasis>SECURITY</emphasis> <emphasis>Snake oil</emphasis> SSL certificates</title>
			 <para>
				<emphasis>snake oil</emphasis>-sertifikatene, som ble solgt som <emphasis>snake oil</emphasis>-“medisin” av skruppelløse kvakksalvere i gamle dager, har absolutt ingen verdi Du kan ikke stole på dem til å godkjenne tjeneren, for de automatisk blir generert med selvsignerte sertifikater. Men de er nyttige for å bedre personvernet ved utvekslingene.
			</para>
			 <para>
				Generelt bør de bare brukes til testformål, og i vanlig drift må en bruke ekte sertifikater., Disse kan genereres med fremgangsmåten beskrevet i <xref linkend="sect.easy-rsa" />.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.configuring-virtual-domains">
			<title>Å sette opp virtuelle domener</title>
			 <indexterm>
				<primary>domain</primary>
				<secondary>virtual</secondary>
			</indexterm>
			 <indexterm>
				<primary>virtual domain</primary>
			</indexterm>
			 <para>
				E-posttjeneren kan motta e-post adressert til andre domener i tillegg til hoveddomenet. Disse er da kjent som virtuelle domener. I de fleste tilfeller der dette skjer, blir e-postene i siste instans ikke destinert til lokale brukere. Postfix gir to interessante funksjoner for håndtering av virtuelle domener.
			</para>
			 <sidebar> <title><emphasis>CAUTION</emphasis> Virtuelle domener og "kanoniske" domener</title>
			 <para>
				Ingen av de virtuelle domener må være referert i <literal>mydestination</literal>-variabelen. Denne variabelen inneholder kun navnene på "kanoniske" domener direkte knyttet til maskinen og dens lokale brukere.
			</para>
			 </sidebar> <section>
				<title>Vituelle alias-domener</title>
				 <indexterm>
					<primary>alias</primary>
					<secondary>virtual alias domain</secondary>
				</indexterm>
				 <indexterm>
					<primary>virtual domain</primary>
					<secondary>virtual alias domain</secondary>
				</indexterm>
				 <para>
					Et virtuell alias-domene inneholder kun aliaser, dvs. adresser som bare videresender e-post til andre adresser.
				</para>
				 <para>
					Et slikt domene aktiveres ved å legge navnet sitt til <literal>virtual_alias_domains</literal>-variabelen, og vise til en adressekartleggingsfil i <literal>virtual_alias_maps</literal>-variabelen.
				</para>
				 <example>
					<title>Direktiver til å legge i <filename>/etc/postfix/main.cf</filename>-filen</title>
					 
<programlisting>
virtual_alias_domains = falcotsbrand.com
virtual_alias_maps = hash:/etc/postfix/virtual
</programlisting>

				</example>
				 <para>
					<filename>/etc/postfix/virtual</filename>-filen beskriver en kartlegging med en ganske grei syntaks: Hver linje inneholder to felt adskilt med mellomrom; Det første feltet er alias-navnet, det andre feltet er en liste over e-postadresser der det omdirigeres. Den spesielle <literal>@domain.com</literal>-syntaksen dekker alle gjenstående aliaser i et domene.
				</para>
				 <example>
					<title>Eksempel <filename>/etc/postfix/virtual</filename>-fil</title>
					 
<programlisting>
webmaster@falcotsbrand.com  jean@falcot.com
contact@falcotsbrand.com    laure@falcot.com, sophie@falcot.com
# The alias below is generic and covers all addresses within 
# the falcotsbrand.com domain not otherwise covered by this file.
# These addresses forward email to the same user name in the
# falcot.com domain.
@falcotsbrand.com           @falcot.com
</programlisting>

				</example>

			</section>
			 <section>
				<title>Virtuelle postboksdomener</title>
				 <sidebar> <title><emphasis>CAUTION</emphasis> Kombinert virtuelt domene?</title>
				 <para>
					Postfix tillater ikke bruk av det samme domenet i både <literal>virtual_alias_domains</literal> og <literal>virtual_mailbox_domains</literal>. Imidlertid, alle domener hos <literal>virtual_mailbox_domains</literal> er implisitt inkludert i <literal>virtual_alias_domains</literal>, som gjør det mulig å blande aliaser og postkasser i et virtuelt domene.
				</para>
				 </sidebar> <indexterm>
					<primary>mailbox, virtual domain</primary>
				</indexterm>
				 <indexterm>
					<primary>virtual domain</primary>
					<secondary>virtual mailbox domain</secondary>
				</indexterm>
				 <para>
					Meldinger adressert til et virtuell postboksdomene er lagret i postkasser som ikke er lagt til en lokal systembruker.
				</para>
				 <para>
					Aktivering av et virtuell postboks domene krever navngiving av dette domenet i <literal>virtual_mailbox_domains</literal>-variabelen, og refererer til en postkassekartleggingsfil i <literal>virtual_mailbox_maps</literal>. <literal>virtual_mailbox_base</literal>-parameteren inneholder katalogen der postkasser vil bli lagret.
				</para>
				 <para>
					<literal>virtual_uid_maps</literal>-parameteret (respektivt <literal>virtual_gid_maps</literal>) refererer til filen som inneholder kartleggingen mellom e-postadressen og system-brukeren (henholdsvis -gruppen) som "eier" den tilsvarende postkassen. For å få alle postkasser som eies av samme eier/gruppe, tilordner <literal>static:5000</literal> syntaksen en fast UID/GID (med verdien 5000 her).
				</para>
				 <example>
					<title>Direktiver til å legge i <filename>/etc/postfix/main.cf</filename>-filen</title>
					 
<programlisting>
virtual_mailbox_domains = falcot.org
virtual_mailbox_maps = hash:/etc/postfix/vmailbox
virtual_mailbox_base = /var/mail/vhosts
</programlisting>

				</example>
				 <para>
					Igjen, syntaksen til <filename>/etc/postfix/vmailbox</filename>-filen er ganske enkel: To felt adskilt med mellomrom. Det første feltet er en e-postadresse i et av de virtuelle domene, og det andre feltet er plasseringen av den tilhørende postkasse (relativt til katalogen spesifisert i <emphasis>virtual_mailbox_base</emphasis>). Hvis postboksen ender med en skråstrek (<literal>/</literal>), blir e-postene lagret i <emphasis>maildir</emphasis>-formatet; ellers blir det tradisjonelle <emphasis>mbox</emphasis>-formatet brukt. <emphasis>maildir</emphasis>-formatet bruker en hel katalog for å lagre en postkasse, hver enkelt melding blir lagret i en egen fil. I <emphasis>mbox</emphasis>-formatet, på den andre siden, er hele postboksen lagret i en fil, og hver linje som starter med “<literal>From </literal>” (<literal>From</literal> fulgt av et mellomrom) signaliserer starten på en ny e-post.
				</para>
				 <example>
					<title><filename>/etc/postfix/vmailbox</filename>-filen</title>
					 
<programlisting>
# Jean's email is stored as maildir, with
# one file per email in a dedicated directory
jean@falcot.org falcot.org/jean/
# Sophie's email is stored in a traditional "mbox" file,
# with all mails concatenated into one single file
sophie@falcot.org falcot.org/sophie
</programlisting>

				</example>

			</section>

		</section>
		 <section id="sect.restrictions-for-receiving-and-sending">
			<title>Restriksjoner for å motta og sende</title>
			 <para>
				Det økende antall uønsket e-post (<emphasis>spam</emphasis>) krever større strenghet når man bestemmer hvilke e-postmeldinger en tjener bør akseptere. Denne seksjonen presenterer noen av de strategiene som inngår i Postfix.
			</para>
			 <sidebar> <title><emphasis>CULTURE</emphasis> Spamproblemet</title>
			 <indexterm>
				<primary>spam</primary>
			</indexterm>
			 <para>
				"Spam" er et generelt begrep som brukes for å betegne alle uønskede kommersielle e-poster (også kjent som UCES) som oversvømmer våre elektroniske postkasser. De skruppelløse individer, som sender dem, er kjent som spammere. De bryr seg lite om de ordensforstyrrelser de forårsaker, siden det å sende en e-post koster svært lite, og bare en svært liten andel av mottakerne må være tiltrukket av tilbudene for at spamming-operasjon tjener mer penger enn det koster. Prosessen er for det meste automatisert, og en offentliggjort e-postadresse (for eksempel på et nettforum, registrert på en adresseliste, eller på en blogg, og så videre) vil bli oppdaget av spammeroboter, og utssatt for en endeløs strøm av uønskede meldinger.
			</para>
			 <para>
				Alle systemadministratorer prøver å møte denne ordensforstyrrelser med spam-filtre, men selvfølgelig vil spammere holde seg oppdatert for å prøve å omgå disse filtrene. Noen leier til og med nettverk av maskiner kompromittert med en orm fra ulike kriminelle organisasjoner. Nyere statistikk anslår at opptil 95% av all e-post som sirkulerer på Internett er spam!
			</para>
			 </sidebar> <section>
				<title>IP-baserte adgangsrestriksjoner</title>
				 <para>
					<literal>smtpd_client_restrictions</literal>-direktivet styrer hvilke maskiner som får lov til å kommunisere med e-posttjeneren.
				</para>
				 <example>
					<title>Restriksjoner basert på klientadresse</title>
					 
<programlisting>
smtpd_client_restrictions = permit_mynetworks,
    warn_if_reject reject_unknown_client,
    check_client_access hash:/etc/postfix/access_clientip,
    reject_rbl_client sbl-xbl.spamhaus.org,
    reject_rbl_client list.dsbl.org
</programlisting>

				</example>
				 <para>
					Når en variabel inneholder en liste med regler, som i eksempelet ovenfor, er disse reglene evaluert i rekkefølge fra den første til den siste. Hver regel kan akseptere meldingen, avvise den, eller overlate avgjørelsen til en følgende regel. Som en konsekvens, relkefølge betyr noe, og ganske enkelt å bytte om på to regler kan føre til et vidt forskjellig resultat.
				</para>
				 <para>
					<literal>permit_mynetworks</literal>-direktivet, brukt som den første regelen, godtar alle e-poster som kommer fra en maskin i det lokale nettverket (som definert av konfigureringsvariabelen <emphasis>mynetworks</emphasis>).
				</para>
				 <para>
					Den andre direktivet vil normalt avvise e-post fra maskiner uten en helt gyldig DNS-konfigurasjon. En slik gyldig konfigurasjon betyr at IP-adressen kan løses til et navn, og at dette navnet i sin tur løser til IP-adressen. Denne begrensningen er ofte altfor streng, siden mange e-posttjenere vil ikke ha en omvendt DNS for deres IP-adresse. Dette forklarer hvorfor Falcot administratorer forvalgte <literal>warn_if_reject</literal>modifikatoren til <literal>reject_unknown_client</literal>-direktivet: Denne modifikatoren gjør om avvisningen til en enkel varsling registrert i loggene. Administratorene kan deretter holde et øye med antall meldinger som ville bli avvist hvis regelen ble faktisk ble håndhevet, og ta en avgjørelse senere hvis de ønsker å muliggjøre slik håndheving.
				</para>
				 <sidebar> <title><emphasis>TIP</emphasis> <emphasis>access</emphasis> tabeller</title>
				 <para>
					Restriksjonskriteriet omfatter administrator-modifiserbare tabeller som lister kombinasjoner av avsendere, IP-adresser, og tillatte eller forbudte vertsnavn. Disse tabellene kan opprettes fra en ukomprimert kopi av <filename>/usr/share/doc/postfix-doc/examples/access.gz</filename>-filen. Denne modellen er selv dokumentert i sine kommentarer, noe som betyr hver tabell beskriver sin egen syntaks.
				</para>
				 <para>
					<filename>/etc/postfix/access_clientip</filename>-tabellen viser IP-adresser og nettverk; <filename>/etc/postfix/access_helo</filename> lister domenenavn; <filename>/etc/postfix/access_sender</filename> inneholder avsender e-postadresser. Alle disse filene må bli omgjort til nøkkel-tabeller (et format som er optimalisert for rask tilgang) etter hver endring med <command>postmap /etc/postfix/<replaceable>file</replaceable></command>-kommandoen.
				</para>
				 </sidebar> <para>
					Den tredje direktivet lar administratoren å sette opp en svarteliste og en hviteliste med e-postservere, lagret i <filename>/etc/postfix/access_clientip</filename>-filen. Tjenere i hvitelisten anses som klarert, og e-poster som kommer fra det derfor ikke gå gjennom følgende filtreringsregler.
				</para>
				 <para>
					De to siste regler avviser enhver melding som kommer fra en tjener oppført i en av de angitte i svartelisten. RBL er en forkortelse for <emphasis>Remote Black List</emphasis>. Det er flere slike lister, men alle lister dårlig konfigurerte tjenere som spammere bruker for å videresende sin e-post, samt uventede post-formidlere, for eksempel maskiner infisert med ormer eller virus.
				</para>
				 <indexterm>
					<primary>RBL</primary>
				</indexterm>
				 <indexterm>
					<primary>Remote Black List</primary>
				</indexterm>
				 <sidebar> <title><emphasis>TIP</emphasis> Hvitliste og RBL-er</title>
				 <para>
					Svartelister omfatter noen ganger en legitim tjener som har vært offer en hendelse. I slike situasjoner vil alle e-poster som kommer fra en av disse tjenerne bli avvist dersom tjeneren er oppført i en hviteliste definert av <filename>/etc/postfix/access_clientip</filename>.
				</para>
				 <para>
					Ut fra forsiktighetshensyn anbefales derfor å hviteliste alle klarerte tjenere som mange e-poster vanligvis kommer fra.
				</para>
				 </sidebar>
			</section>
			 <section>
				<title>Sjekke validiteten til <literal>EHLO</literal> eller <literal>HELO</literal>-kommandoer</title>
				 <para>
					Hver SMTP-utveksling starter med en <literal>HELO</literal> (eller <literal>EHLO</literal>)-kommando, etterfulgt av navnet på e-posttjeneren som sender; Det kan være interessant å kontrollere gyldigheten av dette navnet.
				</para>
				 <indexterm>
					<primary><literal>HELO</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>EHLO</literal></primary>
				</indexterm>
				 <example>
					<title>Restriksjoner på navnet som er meldt i <literal>EHLO</literal></title>
					 
<programlisting>
smtpd_helo_restrictions = permit_mynetworks,
    reject_invalid_hostname,
    check_helo_access hash:/etc/postfix/access_helo,
    reject_non_fqdn_hostname,
    warn_if_reject reject_unknown_hostname
</programlisting>

				</example>
				 <para>
					Det første <literal>permit_mynetworks</literal>-direktivet tillater at alle maskiner på det lokale nettverket fritt å legge seg til. Dette er viktig, fordi noen e-postprogrammer ikke respekterer denne delen av SMTP-protokollen godt nok, og de kan legge seg til med meningsløse navn.
				</para>
				 <para>
					<literal>reject_invalid_hostname</literal>-regelen avviser e-poster når <literal>EHLO</literal>-visningen lister et vertsnavn med feilaktig syntaks. <literal>reject_non_fqdn_hostname</literal>-regelen avviser meldinger når annonserte vertsnavn er ikke et fullt kvalifisert domenenavn (inkludert et domenenavn så vel som et vertsnavn). <literal>reject_unknown_hostname</literal> regelen avviser meldinger hvis det annonserte navnet ikke finnes i DNS. Siden denne siste regelen dessverre fører til altfor mange avslag, snudde administratorene denne virkningen med en enkel advarsel ved hjelp av <literal>warn_if_reject</literal>-modifikatoren som et første skritt; de kan fjerne denne modifikatoren på et senere tidspunkt, etter å ha gjennomgått resultatene av å bruke av regelen.
				</para>
				 <para>
					Å bruke <literal>permit_mynetworks</literal> som den første regelen har en interessant bieffekt: De følgende regler gjelder kun verter utenfor det lokale nettverket. Dette tillater svartelisting av alle verter som varsler seg selv som en del av <literal>falcot.com</literal>, for eksempel for å legge til en <literal>falcot.com REJECT You are not in our network!</literal>-linje til <filename>/etc/postfix/access_helo</filename>-filen.
				</para>

			</section>
			 <section>
				<title>Godta eller nekte basert på annonsert avsender</title>
				 <para>
					Hver melding har en avsender, annonsert av <literal>MAIL FROM</literal>-kommandoen fra SMTP-protokollen; Igjen, kan denne informasjonen bli validert på flere forskjellige måter.
				</para>
				 <indexterm>
					<primary><literal>MAIL FROM</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>email</primary>
					<secondary>filtering on the sender</secondary>
				</indexterm>
				 <example>
					<title>Sjekking av sender</title>
					 
<programlisting>
smtpd_sender_restrictions = 
    check_sender_access hash:/etc/postfix/access_sender,
    reject_unknown_sender_domain, reject_unlisted_sender,
    reject_non_fqdn_sender
</programlisting>

				</example>
				 <para>
					<filename>/etc/postfix/access_sender</filename>-tabellen gir en noe spesiell behandling for noen avsendere. Dette betyr vanligvis å liste noen av avsendere i en hvitliste eller en svartliste.
				</para>
				 <para>
					<literal>reject_unknown_sender_domain</literal>-regelen krever et gyldig avsenderdomene, siden det er nødvendig for en gyldig adresse. <literal>reject_unlisted_sender</literal>-regel avviser lokale sendere hvis adressen ikke eksisterer; Dette forhindrer e-poster å blir sendt fra en ugyldig adresse i <literal>falcot.com</literal>-domenet, og meldinger som skriver seg fra <literal>joe.bloggs@falcot.com</literal> aksepteres kun dersom en slik adresse virkelig eksisterer.
				</para>
				 <para>
					Til slutt, avviser <literal>reject_non_fqdn_sender</literal>-regelen e-post som angivelig kommer fra adresser uten et fullt kvalifisert domenenavn. I praksis betyr dette å avvise e-postmeldinger som kommer fra <literal>user@machine</literal>: Adressen må bli annonsert som enten <literal>user@machine.example.com</literal> eller <literal>user@example.com</literal>.
				</para>

			</section>
			 <section>
				<title>Akesept eller avvising basert på mottaker</title>
				 <para>
					Hver e-post har minst én mottaker, kunngjort med <literal>RCPT TO</literal>-kommandoen i SMTP-protokollen. Disse adressene garanterer også validering, selv om det kan være mindre relevant enn sjekkene av avsenderadressen.
				</para>
				 <indexterm>
					<primary>RCPT TO</primary>
				</indexterm>
				 <indexterm>
					<primary>email</primary>
					<secondary>filtering on the recipient</secondary>
				</indexterm>
				 <example>
					<title>Sjekk av mottaker</title>
					 
<programlisting>
smtpd_recipient_restrictions = permit_mynetworks, 
    reject_unauth_destination, reject_unlisted_recipient, 
    reject_non_fqdn_recipient
</programlisting>

				</example>
				 <para>
					<literal>reject_unauth_destination</literal> er den grunnleggende regelen som krever at meldinger utenfra som adresseres til oss; men til en adresse som ikke er betjent med denne tjeneren, blir avvist. Uten denne regelen, blir tjeneren et åpent relé som tillater spammere å sende uønsket e-post. Denne regelen er derfor obligatorisk, og den er tas best inn nær begynnelsen av listen, slik at ingen andre regler kan autorisere meldingen før destinasjonen er kontrollert.
				</para>
				 <para>
					<literal>reject_unlisted_recipient</literal>-regelen avviser meldinger som sendes til ikke-eksisterende lokale brukere, noe som gir mening. Endelig avslår <literal>reject_non_fqdn_recipient</literal>-regelen ikke-fullt-kvalifiserte adresser; Dette gjør det umulig å sende en e-post til <literal>jean</literal> eller <literal>jean@machine</literal>, og kreve bruk av hele adressen i stedet, som for eksempel <literal>jean@machine.falcot.com</literal> eller <literal>jean@falcot.com</literal>.
				</para>

			</section>
			 <section>
				<title>Restriksjoner knyttet til <literal>DATA</literal>-kommandoen</title>
				 <para>
					<literal>DATA</literal>-kommandoen til SMTP avgis før innholdet i meldingen. Den gir ikke noen informasjon per se, bortsett fra annonsere hva som kommer etterpå. Det kan fortsatt være underlagt sjekk.
				</para>
				 <indexterm>
					<primary><literal>DATA</literal></primary>
				</indexterm>
				 <example>
					<title><literal>DATA</literal>-sjekk</title>
					 
<programlisting>
smtpd_data_restrictions = reject_unauth_pipelining
</programlisting>

				</example>
				 <para>
					<literal>reject_unauth_pipelining</literal>-direktivene fører til at meldingen blir avvist hvis avsender sender en kommando før svaret på den forrige kommando er blitt sendt. Dette beskytter mot en vanlig optimalisering som brukes av spammeroboter, siden de vanligvis ikke bryr seg det grann om svar og bare fokuserer på å sende så mange e-poster som mulig på så kort tid som mulig.
				</para>

			</section>
			 <section>
				<title>Å bruke restriksjoner</title>
				 <para>
					Selv om de ovennevnte kommandoene validerer informasjon på ulike stadier av SMTP-utvekslingen, sender Postfix bare selve avslaget som et svar på <literal>RCPT TO</literal>-kommandoen.
				</para>
				 <para>
					Dette betyr at selv om meldingen blir avvist på grunn av en ugyldig <literal>EHLO</literal>-kommando. Postfix kjenner avsenderen og mottakeren da avvisningen ble varslet. Den kan da logge et mer eksplisitt budskap enn om transaksjonen hadde blitt avbrutt fra starten. I tillegg, en rekke SMTP-klienter trenger ikke forvente feil med de tidlige SMTP-kommandoene, og disse klientene blir mindre forstyrret av dette ved denne senere avvisningen.
				</para>
				 <para>
					En siste fordel ved dette valget er at reglene kan akkumulere informasjon fra de ulike stadier i SMTP-utvekslingen. Dette tillater å definere mer finkornede tillatelser, som for eksempel avvise en ikke-lokal tilkobling hvis den melder seg med en lokal avsender.
				</para>

			</section>
			 <section>
				<title>Filtrering basert på meldingsinneholdet</title>
				 <para>
					Validerings- og begrensningsystemet ville ikke være komplett uten å kunne sjekke meldingsinnholdet. Postfix skiller mellom sjekking av topptekster i e-postene - fra den som gjelder selve meldingskroppen.
				</para>
				 <example>
					<title>Å aktivere innholdsbaserte filtre</title>
					 
<programlisting>
header_checks = regexp:/etc/postfix/header_checks
body_checks = regexp:/etc/postfix/body_checks
</programlisting>

				</example>
				 <indexterm>
					<primary>email</primary>
					<secondary>filtering on contents</secondary>
				</indexterm>
				 <para>
					Begge filer inneholder en liste med vanlige uttrykk (kjent som <emphasis>regexps</emphasis> eller <emphasis>regexes</emphasis>) og tilhørende tiltak som skal utløses når e-posthoder (eller kroppen) samsvarer med uttrykket.
				</para>
				 <sidebar> <title><emphasis>QUICK LOOK</emphasis> Regexp tabeller</title>
				 <para>
					<filename>/usr/share/doc/postfix-doc/examples/header_checks.gz</filename>-filen inneholder mange forklaringer og kan brukes som et utgangspunkt for å lage <filename>/etc/postfix/header_checks</filename> og <filename>/etc/postfix/body_checks</filename>-filer.
				</para>
				 </sidebar> <example>
					<title>Eksempelfil <filename>/etc/postfix/header_checks</filename></title>
					 
<programlisting>
/^X-Mailer: GOTO Sarbacane/ REJECT I fight spam (GOTO Sarbacane)
/^Subject: *Your email contains VIRUSES/ DISCARD virus notification
</programlisting>

				</example>
				 <sidebar id="sidebar.regexp"> <title><emphasis>BACK TO BASICS</emphasis> Regulært utrykk</title>
				 <para>
					<emphasis>regular expression</emphasis>-betegnelsen (forkortet til <emphasis>regexp</emphasis> eller <emphasis>regex</emphasis>) refererer til et felles tegnsystem for å gi en beskrivelse av innholdet og/eller strukturen til en streng med tegn. Visse spesialtegn tillater å definere alternativer (for eksempel <literal>foo|bar</literal> samsvarer med enten “foo” eller “bar”), setter tillate tegn (for eksempel betyr, <literal>[0-9]</literal> hvilket som helst tall, og <literal>.</literal> — et punktum — betyr hvilket som helst tegn), Kvantifiseringer (<literal>s?</literal> samsvarer enten med <literal>s</literal> eller den tomme strengen, med andre ord 0 eller 1 forekomsten av <literal>s</literal>; <literal>s+</literal> samsvarer med en eller flere påfølgende <literal>s</literal> tegn; og så videre). Parenteser tillater gruppering av søkeresultater.
				</para>
				 <para>
					Den presise syntaksen til disse uttrykkene varierer mellom de verktøyene som bruker dem, men de grunnleggende funksjonene er like. <ulink type="block" url="http://en.wikipedia.org/wiki/Regular_expression" />
				</para>
				 </sidebar> <para>
					Den første sjekker toppteksten som viser til programvaren for e-mail; hvis <literal>GOTO Sarbacane</literal> (en samling e-post-programvare) blir funnet, blir meldingen avvist. Det andre uttrykket styrer meldingens subjekt; hvis det nevner et virusvarsel, kan vi bestemme oss for ikke å avvise meldingen, men straks å forkaste den i stedet.
				</para>
				 <para>
					Bruk av disse filtrene er et tveegget sverd, fordi det er lett å gjøre reglene for allmenne og som resultat miste legitim e-post. I disse tilfellene vil ikke bare meldingene gå tapt, men avsenderne får uønskede (og irriterende) feilmeldinger.
				</para>

			</section>

		</section>
		 <section id="sect.setting-up-greylisting">
			<title>Å sette opp <foreignphrase>greylisting</foreignphrase></title>
			 <indexterm>
				<primary>greylisting</primary>
			</indexterm>
			 <para>
				"Grålisting" er en filtreringsteknikk der en melding som i utgangspunktet er avvist med en midlertidig feilkode, og bare aksepteres etter et ytterligere forsøk etter noen tid. Denne filtreringen er spesielt effektiv mot spam som sendes av de mange maskinene som er infisert av ormer og virus, fordi denne programvaren sjelden fungerer som en full SMTP-agent (ved å kontrollere feilkode og prøve meldinger som har feilet på nytt senere), spesielt fordi mange av de oppsamlede adressene virkelig er ugyldige og prøve dem på nytt bare bare ville bety å miste tid.
			</para>
			 <para>
				Postfix leverer ikke -pakken inneholder akkurat et slikt program, laget for å levere grensesnittet til denne delegerte adgangspolitikk-tjenesten. problemfritt, men det er en funksjon, der beslutningen om å godta eller forkaste en gitt melding, kan delegeres til et eksternt program. <emphasis role="pkg">postgrey</emphasis>-pakken inneholder akkurat et slikt program, laget for å være bindeleddet til denne delegerte adgangspolitikk-tjenesten.
			</para>
			 <para>
				Så snart <emphasis role="pkg">postgrey</emphasis> er installert, kjører den som en nisse og lytter på port 10023. Postfix kan så konfigureres til å bruke den ved å legge til <literal>check_policy_service</literal>-parameteret som en ekstra begrensning:
			</para>
			 
<programlisting>
smtpd_recipient_restrictions = permit_mynetworks,
    [...]
    check_policy_service inet:127.0.0.1:10023
</programlisting>
			 <para>
				Hver gang Postfix treffer denne regelen i regelsettet, vil den koble til <command>postgrey</command>-nissen og sende den informasjon om den aktuelle meldingen. På sin side, vurderer Postgrey trillingen IP-"adresse/avsende/mottaker" og sjekker i sin database om det samme trillingen er sett i det siste. Hvis ja, svarer Postgrey at meldingen skal godtas; hvis ikke, indikerer svaret at meldingen skal avvises midlertidig, og trillingen blir registrert i databasen.
			</para>
			 <para>
				Den største ulempen med grålisting er at legitime meldinger bli forsinket, noe som ikke alltid er akseptabelt. Det øker også belastningen på tjenerne som sender mange legitime e-poster.
			</para>
			 <sidebar> <title><emphasis>IN PRACTICE</emphasis> Shortcomings of greylisting</title>
			 <para>
				Teoretisk bør grålisting bare forsinke den første posten fra en gitt sender til en gitt mottaker, og den typiske forsinkelsen er i størrelsesorden minutter. Virkeligheten kan, imidlertid, avvike noe. Noen store ISP-er bruker klynger av SMTP-tjenere, og når en melding innledningsvis er avslått, er kanskje den tjeneren som prøver å gjenoppta overføringen, ikke den samme som den opprinnelige. Når det skjer, får den andre tjeneren også en midlertidig feilmelding på grunn av grålisting, og så videre. Det kan ta flere timer før overføringen er forsøkt av en tjener som allerede har vært involvert, ettersom SMTP-tjenere ved hver feil vanligvis øke forsinkelsen.
			</para>
			 <para>
				Som en konsekvens kan den innkommende IP-adressen variere i tid, selv for en enkelt sender. Men det går videre: Selv avsenderadressen kan endres. For eksempel, mange postliste-tjenere koder inn ekstra informasjon i avsenderadressen, for å være i stand til å håndtere feilmeldinger (kjent som <emphasis>bounces</emphasis>). Hver ny melding sendt til en adresseliste kan så trenge å gå gjennom grålisting, noe som betyr at den må lagres (midlertidig) på senderens tjener. For svært store e-postlister (med titusenvis av abonnenter), kan dette fort bli et problem.
			</para>
			 <para>
				For å redusere disse ulempene, administrerer Postgrey en hviteliste med slike steder, og meldinger som kommer fra dem, blir umiddelbart akseptert uten å gå gjennom grålisting. Denne listen kan lett tilpasses de lokale behov, ettersom det er lagret i <filename>/etc/postgrey/whitelist_clients</filename>-filen.
			</para>
			 </sidebar> <sidebar> <title><emphasis>GOING FURTHER</emphasis> Selektiv grålisting med <emphasis role="pkg">milter-greylist</emphasis></title>
			 <para>
				Ulempene med grålisting kan reduseres ved å bruke grålisting bare på undergruppen av klienter som allerede regnes som sannsynlige kilder til spam (fordi de er oppført i en DNS svarteliste). Dette er ikke mulig med <emphasis role="pkg">postgrey</emphasis> men <emphasis role="pkg">milter-greylist</emphasis> kan anvendes på en slik måte.
			</para>
			 <para>
				I dette scenariet, ettersom DNS svartelister aldri utløser en endelig avvisning, blir det naturlig å bruke aggressive svartelister, medregnet de som viser alle dynamiske IP-adresser fra ISP klienter (for eksempel<literal>pbl.spamhaus.org</literal> eller <literal>dul.dnsbl.sorbs.net</literal>).
			</para>
			 <para>
				Siden milter-grålisting bruker Sendmails milter grensesnitt, er postfix siden av konfigurasjonen begrenset til “<literal>smtpd_milters = unix:/var/run/milter-greylist/milter-greylist.sock</literal>”. <citerefentry><refentrytitle>greylist.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>-manualside dokumenterer <filename>/etc/milter-greylist/greylist.conf</filename> og de utallige måter å konfigurere milter-grålisting på. Du vil også måtte redigere <filename>/etc/default/milter-greylist</filename> for faktisk å aktivere tjenesten.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Å tilpasse filtre basert på mottakeren</title>
			 <para>
				<xref linkend="sect.restrictions-for-receiving-and-sending" /> og <xref linkend="sect.setting-up-greylisting" /> gjennomgikk mange av de mulige restriksjonene. De har alle sin nytte ved å begrense mengden mottatt spam, men har alle også sine ulemper. Det er derfor mer og mer vanlig å tilpasse filtrene til mottakeren. På Falcot Corp, er grålisting interessant for de fleste brukere, men det hindrer arbeidet til noen brukere som har behov for korte forsinkelser på sine e-poster (som for eksempel teknisk support-tjenesten). Tilsvarende, den kommersielle tjenesten har noen ganger problemer med å motta e-post fra noen asiatiske leverandører som kan være oppført i svartelister; trenger denne tjenesten en ikke-filtrert adresse for å kunne utveksle e-poster.
			</para>
			 <para>
				Postfix gir en slik filter-tilpasning med "restriction class"-konseptet. Klassene er deklarert i <literal>smtpd_restriction_classes</literal>-parameteret, og definert på den samme måten som <literal>smtpd_recipient_restrictions</literal>. <literal>check_recipient_access</literal>-direktivet definerer deretter en tabell som legger en gitt mottaker til det riktige settet med restriksjoner.
			</para>
			 <example>
				<title>Definere begrensningsklasser i <filename>main.cf</filename></title>
				 
<programlisting>smtpd_restriction_classes = greylisting, aggressive, permissive

greylisting = check_policy_service inet:127.0.0.1:10023
aggressive = reject_rbl_client sbl-xbl.spamhaus.org,
        check_policy_service inet:127.0.0.1:10023
permissive = permit

smtpd_recipient_restrictions = permit_mynetworks,
        reject_unauth_destination,
        check_recipient_access hash:/etc/postfix/recipient_access
</programlisting>

			</example>
			 <example>
				<title><filename>/etc/postfix/recipient_access</filename>-filen</title>
				 
<programlisting>
# Unfiltered addresses
postmaster@falcot.com  permissive
support@falcot.com     permissive
sales-asia@falcot.com  permissive

# Aggressive filtering for some privileged users
joe@falcot.com         aggressive

# Special rule for the mailing-list manager
sympa@falcot.com       reject_unverified_sender

# Greylisting by default
falcot.com             greylisting
</programlisting>

			</example>

		</section>
		 <section id="sect.postfix-antivirus">
			<title>Å integrere en antivirus</title>
			 <indexterm>
				<primary>antivirus</primary>
			</indexterm>
			 <para>
				Med mange virus som sirkulerer som e-post-vedlegg, blir det viktig å sette opp et antivirus på inngangspunktet til bedriftens nettverk, da, til tross for en holdningskampanje, vil noen brukere fortsatt åpne vedlegg i åpenbart frynsete meldinger.
			</para>
			 <para>
				Falcot administrators valgte <command>clamav</command> som sin frie antivirus. Hovedpakken er <emphasis role="pkg">clamav</emphasis>, men de installerte også noen få ekstra pakker, som <emphasis role="pkg">arj</emphasis>, <emphasis role="pkg">unzoo</emphasis>, <emphasis role="pkg">unrar</emphasis> og <emphasis role="pkg">lha</emphasis>, siden de er nødvendige for at antiviruset skal analysere vedlegg arkiveres i ett av disse formatene.
			</para>
			 <indexterm>
				<primary><command>clamav</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>clamav-milter</command></primary>
			</indexterm>
			 <para>
				Oppgaven med å koble sammen antivirus og e-postserveren legges til <command>clamav-milter</command>. <emphasis>milter</emphasis> (kort for <emphasis>mail filter</emphasis>) er et filterprogram spesielt utviklet for å kommunisere med e-posttjenere. Et milter bruker et standard programmeringsgrensesnitt (API) som gir mye bedre ytelse enn eksterne e-posttjener-filtre. Milters ble først introdusert av <emphasis>Sendmail</emphasis>, men <emphasis>Postfix</emphasis> kom snart etter.
			</para>
			 <sidebar> <title><emphasis>QUICK LOOK</emphasis> Et milter for Spamassassin</title>
			 <indexterm>
				<primary><emphasis role="pkg">spamass-milter</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">spamass-milter</emphasis>-pakken gir et milter basert på <emphasis> Spamassassin </emphasis>, den berømte detektoren for uønsket e-post. Den kan brukes til å flagge meldinger som er mulige spam (ved å legge til en ekstra topptekst) og/eller for helt å avvise meldinger hvis spam-poengene går utover en gitt terskel.
			</para>
			 </sidebar> <para>
				Så snart <emphasis role="pkg">clamav-milter</emphasis>-pakken er installert, skal milter konfigureres til å kjøre på en TCP-port i stedet for på standarden som heter socket. Dette kan oppnås med <command>dpkg-reconfigure clamav-milter</command>. Når du blir bedt om “Communication interface with Sendmail”, svar “<literal>inet:10002@127.0.0.1</literal>”.
			</para>
			 <sidebar> <title><emphasis>NOTE</emphasis> Real TCP port vs named socket</title>
			 <para>
				Grunnen til at vi bruker en ekte TCP-port i stedet for den navngitte socket-en er at postfix-nisser ofte kjører chroot-et og ikke har tilgang til katalogen som er vertskap for den navngitte socket-en. Du kan også velge å fortsette å bruke en navngitt socket og velge et sted i chroot-et (<filename>/var/spool/postfix/</filename>).
			</para>
			 </sidebar> <para>
				Standard ClamAV-konfigurasjon passer til de fleste situasjoner, men noen viktige parametere kan fortsatt tilpasses med <command>dpkg-reconfigure clamav-base</command>.
			</para>
			 <para>
				Det siste trinnet er å be Postfix å bruke det nettopp konfigurerte filteret. Det er en enkel sak å legge følgende direktiv til <filename>/etc/postfix/main.cf</filename>:
			</para>
			 
<programlisting>
# Virus check with clamav-milter
smtpd_milters = inet:[127.0.0.1]:10002
</programlisting>
			 <para>
				Hvis antivirus skaper problemer, kan denne linjen kommenteres ut, og <command>service postfix reload</command> skal kjøres slik at denne endringen er tatt hensyn til.
			</para>
			 <sidebar> <title><emphasis>IN PRACTICE</emphasis> Testing antivirus</title>
			 <para>
				Når antivirus er satt opp, skal det testes om oppførselen er korrekt. Den enkleste måten å gjøre det på, er å sende en test e-post med et vedlegg som inneholder <filename>eicar.com</filename> (eller <filename>eicar.com.zip</filename>)-filen, som kan lastes ned fra nettet: <ulink type="block" url="http://www.eicar.org/86-0-Intended-use.html" />
			</para>
			 <para>
				Denne filen er ikke en ekte virus, men en test-fil som all antivirusprogramvare på markedet diagnostiserer som et virus, for å tillate sjekking av installasjoner.
			</para>
			 </sidebar> <para>
				Alle meldinger som Postfix håndterer, går nå igjennom antivirusfilteret.
			</para>

		</section>
		 <section id="sect.authenticated-smtp">
			<title>Godkjent SMTP</title>
			 <para>
				Å kunne sende e-poster krever tilgang på en SMTP-tjener; Det krever også nevnte SMTP-tjener for å sende e-post igjennom den. For flyttbare enheter, kan det trenges jevnlig endring av konfigurasjonen til SMTP-klienten, ettersom Falcots SMTP-tjener avviser meldinger som kommer fra IP-adresser som tilsynelatende ikke tilhører selskapet. To løsninger finnes: Enten installerer brukeren en SMTP-tjener på datamaskinen sin, eller de fortsetter å bruke selskapets tjener med noen metoder for å autentisere seg som en ansatt. Den første løsningen er ikke anbefalt siden maskinen ikke vil være permanent tilkoblet, og ikke være i stand til igjen å prøve å sende meldinger i tilfelle problemer. Vi vil fokusere på sistnevnte løsning.
			</para>
			 <para>
				SMTP-autentisering i Postfix hviler på SASL (<emphasis>Simple Authentication and Security Layer</emphasis>). Det krever installasjon av <emphasis role="pkg">libsasl2-modules</emphasis> og <emphasis role="pkg">sasl2-bin</emphasis>-pakker, deretter å registrere et passord i SASL-databasen for hver bruker som trenger autentisering på SMTP-tjeneren. Dette gjøres med <command>saslpasswd2</command>-kommandoen, som krever flere parametre. <literal>-u</literal>-valget definerer godkjenningsdomenet, som må samsvare med <literal>smtpd_sasl_local_domain</literal>-parameteret i Postfix-oppsettet. <literal>-c</literal>-valget tillater å lage en bruker, og <literal>-f</literal> kan spesifisere filen som skal brukes hvis SASL-databasen må lagres på et annet sted enn opprinnelig (<filename>/etc/sasldb2</filename>).
			</para>
			 
<screen role="scale">
<computeroutput># </computeroutput><userinput>saslpasswd2 -u `postconf -h myhostname` -f /var/spool/postfix/etc/sasldb2 -c jean</userinput>
<computeroutput>[... type jean's password twice ...]</computeroutput></screen>
			 <para>
				Merk at SASL-databasen ble opprettet i Postfix katalogen. For å sikre sammenhengen, omgjør vi også <filename>/etc/sasldb2</filename> til en symbolsk lenke som peker på databasen som brukes av Postfix, med <command>ln -sf /var/spool/postfix/etc/sasldb2 /etc/sasldb2</command>-kommandoen.
			</para>
			 <para>
				Nå trenger vi å sette opp Postfix til å bruke SASL. Flrst, må <literal>postfix</literal>-brukeren legges til <literal>sasl</literal>-gruppen, slik at den kan få tilgang til SASL-kontoens database. Et par nye parametere må også til for å aktivere SASL, og <literal>smtpd_recipient_restrictions</literal>-parameteret må konfigureres til å tillate at SASL-godkjente klienter fritt kan sende e-post.
			</para>
			 <example>
				<title>Å sette opp SASL i <filename>/etc/postfix/main.cf</filename></title>
				 
<programlisting>
# Enable SASL authentication
smtpd_sasl_auth_enable = yes
# Define the SASL authentication domain to use
smtpd_sasl_local_domain = $myhostname
[...]
# Adding permit_sasl_authenticated before reject_unauth_destination
# allows relaying mail sent by SASL-authenticated users
smtpd_recipient_restrictions = permit_mynetworks,
    permit_sasl_authenticated,
    reject_unauth_destination,
[...]
</programlisting>

			</example>
			 <sidebar> <title><emphasis>EXTRA</emphasis> Autentisert SMTP-klient</title>
			 <para>
				De fleste e-postklienter er i stand til å autentisere til en SMTP-tjener før den sender utgående meldinger, og ved hjelp av denne funksjonen er en enkel sak å konfigurere de riktige parameterne. Dersom klienten som brukes ikke leverer den funksjonen, er den midlertidige løsningen å bruke en lokal Postfix-tjener og konfigurere den til å videresende e-post via den eksterne SMTP-tjeneren. I dette tilfelle, vil den lokale Postfixen selv være klienten som autentiserer med SASL. Her er de nødvendige parameterne:
			</para>
			 
<programlisting>
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
relay_host = [mail.falcot.com]
</programlisting>
			 <para>
				<filename>/etc/postfix/sasl_passwd</filename>-filen må inneholde brukernavnet og passordet for å autentiseres på <literal>mail.falcot.com</literal>-tjeneren. Her er et eksempel:
			</para>
			 
<programlisting>
[mail.falcot.com]   joe:LyinIsji
</programlisting>
			 <para>
				Som for alle Postfix funksjoner, må denne filen bli omgjort til <filename>/etc/postfix/sasl_passwd.db</filename> med <command>postmap</command>-kommandoen.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.http-web-server">
		<title>Nett-tjener (HTTP)</title>
		 <para>
			Falcot Corp-administrtatorene besluttet å bruke Apache HTTP-tjeneren, inkludert i Debian <emphasis role="distribution">Jessie</emphasis> med versjon 2.4.10.
		</para>
		 <indexterm>
			<primary><command>apache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>server</primary>
			<secondary>web</secondary>
		</indexterm>
		 <indexterm>
			<primary>web server</primary>
		</indexterm>
		 <indexterm>
			<primary>server</primary>
			<secondary>HTTP</secondary>
		</indexterm>
		 <indexterm>
			<primary>HTTP</primary>
			<secondary>server</secondary>
		</indexterm>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Andre nett-tjenere</title>
		 <para>
			Apache er rett og slett den mest kjente (og mye brukt) nett-tjeneren, men det finnes andre. De kan tilby bedre ytelse under visse arbeidsbelastninger, men dette har sitt motstykke i færre, tilgjengelige funksjoner og moduler. Men når den potensielle nett-tjeneren bygges for å betjene statiske filer eller å fungere som mellomtjener, er alternativene, for eksempel <emphasis role="pkg">nginx</emphasis> og <emphasis role="pkg">lighttpd</emphasis>, verdt å se nærmere på.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">nginx</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">lighttpd</emphasis></primary>
		</indexterm>
		 </sidebar> <section>
			<title>Å installere Apache</title>
			 <para>
				Å installere <emphasis role="pkg">apache2</emphasis>-pakken er alt som trenges. Den inneholder alle modulene, inkludert <emphasis>Multi-Processing Modules</emphasis> (MPM-er) som påvirker hvordan Apache håndterer parallell behandling av mange forespørsler (de som bruker å bli levert i separate <emphasis role="pkg">apache2-mpm-*</emphasis>-pakker). Den vil også trekke på <emphasis role="pkg">apache2-utils</emphasis> som inneholder kommandolinje-verktøy som vi vil oppdage senere.
			</para>
			 <para>
				Når MPM brukes påvirkes måten Apache vil håndtere samtidige forespørsler på betydelig. Med <emphasis>worker</emphasis>-MPM, bruker den <emphasis>threads</emphasis> (lettvektprosesser), mens med <emphasis>prefork</emphasis>-MPM bruker den en samling prosesser som er laget på forhånd. Med <emphasis>event</emphasis>-MPM vil den også bruke tråder, men de inaktive tilkoblingene (spesielt de som holdes åpne av HTTP <emphasis>keep-alive</emphasis>-funksjonen) blir levert tilbake til en øremerket management-tråd.
			</para>
			 <para>
				Falcot administratorene installerer også <emphasis role="pkg">libapache2-mod-php5</emphasis> for å inkludere PHP-støtte i Apache. Dette fører til at standard <emphasis>event</emphasis>-MPM-en blir deaktivert, og at <emphasis>prefork</emphasis> blir brukt istedet, ettersom PHP bare virker under denne bestemte MPM-en.
			</para>
			 <sidebar> <title><emphasis>SECURITY</emphasis> Kjøring under <literal>www-data</literal>-brukeren</title>
			 <indexterm>
				<primary><literal>www-data</literal></primary>
			</indexterm>
			 <indexterm>
				<primary>suexec</primary>
			</indexterm>
			 <para>
				Som standard håndterer Apache innkommende forespørsler under identiteten til <literal>www-data</literal>-brukeren. Dette betyr at en sikkerhetssårbarhet i et CGI-skript, utført av Apache (for en dynamisk side), ikke vil kompromittere hele systemet, men bare de filer som eies av denne bestemte brukeren.
			</para>
			 <para>
				Ved å bruke <emphasis>suexec</emphasis>-moduler kan en omgå denne regelen slik at noen CGI-skript kjøres med identiteten til en annen bruker. Dette konfigureres med et <literal>SuexecUserGroup <replaceable>user</replaceable><replaceable>group</replaceable></literal>-direktiv i Apache-oppsettet.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">libapache2-mpm-itk</emphasis></primary>
			</indexterm>
			 <para>
				En annen mulighet er å bruke en dedikert MPM, slik som den som tilbys i <emphasis role="pkg">libapache2-mpm-itk</emphasis>. Akkurat denne har en litt annen oppførsel: Den tillater å "isolere" virtuelle verter (faktisk, sett med sider), slik at de hver av dem kjører som en ulik bruker. En sårbarhet i en nettside kan derfor ikke kompromittere filer som tilhører eieren av et annet nettsted.
			</para>
			 </sidebar> <sidebar> <title><emphasis>QUICK LOOK</emphasis> List of modules</title>
			 <para>
				Den fullstendige listen med Apache standardmoduler finnes på nettet. <ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/index.html" />
			</para>
			 </sidebar> <para>
				Apache er en modulbasert tjener, og mange funksjoner legges inn av eksterne moduler som hovedprogrammet laster inn under under sin initialisering. Standard konfigurasjonen kan bare aktivere de mest vanlige moduler, men å tillate nye moduler skjer ved ganske enkelt å kjøre <command>a2enmod <replaceable>module</replaceable></command>; For å koble fra en modul, er kommandoen <command>a2dismod <replaceable>module</replaceable></command>. Disse programmene oppretter (eller sletter) bare symbolske lenker i <filename>/etc/apache2/mods-enabled/</filename>, som peker på de aktuelle filene (lagret i <filename>/etc/apache2/mods-available/</filename>).
			</para>
			 <para>
				Med sin standardkonfigurasjon, lytter nettjeneren på port 80 (som konfigurert i <filename>/etc/apache2/ports.conf</filename>), og betjener sider fra <filename>/var/www/html/</filename>-mappen (som konfigurert i <filename>/etc/apache2/sites-enabled/000-default.conf</filename>).
			</para>
			 <sidebar> <title><emphasis>GOING FURTHER</emphasis> Å legge til støtte for SSL</title>
			 <indexterm>
				<primary>HTTPS</primary>
			</indexterm>
			 <indexterm>
				<primary>HTTP</primary>
				<secondary>secure</secondary>
			</indexterm>
			 <para>
				Apache 2.4 inkluderer SSL-modulen som kreves for sikker HTTP (HTTPS) ut av boksen. Den må bare være aktivert med <command>a2enmod ssl</command>, deretter må de nødvendige direktiver legges til konfigurasjonsfilene. En konfigurasjonseksempel er gitt i <filename>/etc/apache2/sites-available/default-ssl.conf</filename>. <ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/mod_ssl.html" />
			</para>
			 <para>
				Det kreves noe ekstra forsiktighet hvis du ønsker å favorisere SSL-tilkoblinger med <emphasis>Perfect Forward Secrecy</emphasis> (disse tilkoblingene bruker flyktige øktnøkler som sikrer at kompromittering av tjenerens hemmelige nøkkelen ikke resulterer i kompromittering av gammel kryptert trafikk som kan ha blitt lagret under sniffing på nettverket). Se på Mozillas anbefalinger, spesielt: <ulink type="block" url="https://wiki.mozilla.org/Security/Server_Side_TLS#Apache" />
			</para>
			 <indexterm>
				<primary><emphasis>Perfect Forward Secrecy</emphasis></primary>
			</indexterm>
			 </sidebar>
		</section>
		 <section>
			<title>Å konfigurere virtuelle verter</title>
			 <para>
				En virtuell vert er en ekstra identitet for nettjeneren.
			</para>
			 <indexterm>
				<primary>virtual host</primary>
			</indexterm>
			 <para>
				Apache vurderer to forskjellige typer virtuelle verter: De som er basert på IP-adressen (eller porten), og de som er avhengige av domenenavnet til nettjeneren. Den første metoden krever tildeling av en annen IP-adresse (eller port) for hvert område, mens den andre kan arbeide på en enkelt IP-adresse (og port), og nettstedene er differensiert etter vertsnavnet sendt av HTTP-klienten (som bare fungerer i versjon 1.1 av HTTP-protokollen - heldigvis at versjonen er gammel nok til at alle kunder bruker den allerede).
			</para>
			 <para>
				Den (økende) knapphet på IPv4-adresser favoriserer vanligvis den andre metoden; Imidlertid er det gjort mer komplisert om de virtuelle verter må levere HTTPS også, ettersom SSL-protokollen ikke alltid har levert navn-basert virtuell hosting; Ikke alle nettlesere håndterer SNI-forlengelsen (<emphasis>Server Name Indication</emphasis>). Når flere HTTPS-nettsteder må kjøre på samme tjener, vil de vanligvis bli differensiert enten ved å kjøre på en annen port eller på en annen IP-adresse (IPv6 kan hjelpe til der).
			</para>
			 <para>
				Standardkonfigurasjonen for Apache 2 gir navn-baserte virtuelle verter. I tillegg er en standard virtuell vert definert i <literal>/etc/apache2/sites-enabled/000-default.conf</literal>-filen; Denne virtuelle verten vil bli brukt hvis det ikke finnes en vert som matcher anmodningen fra klienten.
			</para>
			 <sidebar> <title><emphasis>CAUTION</emphasis> Første virtuelle vert</title>
			 <para>
				Forespørsler om ukjente virtuelle verter vil alltid bli betjent med den først definerte virtuelle verten. Det er derfor vi her har definert <literal>www.falcot.com</literal> først.
			</para>
			 </sidebar> <sidebar> <title><emphasis>QUICK LOOK</emphasis> Apache støtter SNI</title>
			 <indexterm>
				<primary>Server Name Indication</primary>
			</indexterm>
			 <para>
				Apache-tjeneren støtter en SSL-protokoll-forlengelse kalt <emphasis>Server Name Indication</emphasis> (SNI). Denne utvidelsen lar nettleseren sende vertsnavnet til nettjeneren, ved etableringen av SSL-tilkoblingen, mye tidligere enn HTTP-forespørselen selv, som tidligere ble brukt til å identifisere den forespurte virtuelle verten blant dem som ligger på samme tjener (med samme IP-adresse og port). Dette gjør Apache ved å velge det mest passende SSL-sertifikatet slik at transaksjonen kan fortsette.
			</para>
			 <para>
				Før SNI, ville Apache alltid bruke sertifikatet i den virtuelle standard-verten. Klienter som prøver å få tilgang til en annen virtuell vert vil da vise advarsler, siden sertifikatet de mottok ikke samsvarte med nettstedet de prøvde å få tilgang til. Heldigvis jobber de fleste nettlesere sammen med SNI. Dette inkluderer Microsoft Internet Explorer fra og med versjon 7.0 (som starter med Vista), Mozilla Firefox fra og med versjon 2.0, Apple Safari fra versjon 3.2.1, og alle versjoner av Google Chrome.
			</para>
			 <para>
				Apache pakken, levert med Debian, er bygget med støtte for SNI. Ingen spesiell konfigurasjon er derfor nødvendig.
			</para>
			 <para>
				En bør også utvise forsiktighet for å sikre at konfigurasjonen for den første virtuelle verten (den som brukes som standard) aktiverer TLSv1, ettersom Apache bruker parametrene fra denne første virtuelle verten til å etablere sikre forbindelser, og de hadde bare å tillate dem!
			</para>
			 </sidebar> <para>
				Hver ekstra virtuelle vert er deretter beskrevet av en fil lagret i <filename>/etc/apache2/sites-available/</filename>. Å sette opp et nettsted for <literal>falcot.org</literal>-domenet blir derfor en enkel sak ved å lage den følgende filen, og så aktivere den virtuelle verten med <command>a2ensite www.falcot.org</command>.
			</para>
			 <example>
				<title><filename>/etc/apache2/sites-available/www.falcot.org.conf</filename>-filen</title>
				 
<programlisting>
&lt;VirtualHost *:80&gt;
ServerName www.falcot.org
ServerAlias falcot.org
DocumentRoot /srv/www/www.falcot.org
&lt;/VirtualHost&gt;
</programlisting>

			</example>
			 <para>
				Apache-tjeneren, konfigurert så langt, bruker de samme loggfiler for alle virtuelle verter (selv om dette kan endres ved å legge til <literal>CustomLog</literal>-direktiver i definisjonene til de virtuelle vertene). Det er derfor klokt å tilpasse formatet på denne loggfilen slik at den inneholder navnet på den virtuelle verten. Dette kan gjøres ved å opprette en <filename>/etc/apache2/conf-available/customlog.conf</filename>-fil som fastsetter et nytt format for alle loggfiler (med <literal>LogFormat</literal>-direktivet) og ved å aktivere den med <command>a2enconf customlog</command>. <literal>CustomLog</literal>-linjen må også fjernes (eller kommenteres ut) fra <filename>/etc/apache2/sites-available/000-default.conf</filename>-filen.
			</para>
			 <example>
				<title><filename>/etc/apache2/conf.d/customlog.conf</filename>-filen</title>
				 
<programlisting role="scale">
# New log format including (virtual) host name
LogFormat "%v %h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" vhost

# Now let's use this "vhost" format by default
CustomLog /var/log/apache2/access.log vhost
</programlisting>

			</example>

		</section>
		 <section>
			<title>Vanlige direktiver</title>
			 <para>
				Dette avsnittet gir en kort gjennomgang av noen av de oftest brukte Apache-konfigurasjonsdirektivene.
			</para>
			 <indexterm>
				<primary>Apache directives</primary>
			</indexterm>
			 <indexterm>
				<primary>directives, Apache</primary>
			</indexterm>
			 <para>
				Den viktigste konfigurasjonsfilen inneholder vanligvis flere <literal>Directory</literal>-blokker. De åpner for å spesifisere ulike virkemåter for tjeneren, avhengig av plasseringen av filen som blir betjent. En slik blokk omfatter vanligvis <literal>Options</literal> og <literal>AllowOverride</literal>-direktiver.
			</para>
			 <indexterm>
				<primary><literal>Options</literal>, Apache directive</primary>
			</indexterm>
			 <indexterm>
				<primary><literal>AllowOverride</literal>, Apache directive</primary>
			</indexterm>
			 <example>
				<title>Katalogblokk</title>
				 
<programlisting>
&lt;Directory /var/www&gt;
Options Includes FollowSymlinks
AllowOverride All
DirectoryIndex index.php index.html index.htm
&lt;/Directory&gt;
</programlisting>

			</example>
			 <para>
				<literal>DirectoryIndex</literal>-direktivet inneholder en liste over filer som kan prøves når klientens forespørsel matcher en katalog. Den første filen som forekommer i listen brukes og er sendt som en respons.
			</para>
			 <indexterm>
				<primary><literal>DirectoryIndex</literal>, Apache directive</primary>
			</indexterm>
			 <para>
				<literal>Options</literal>-direktivet er etterfulgt av en liste av alternativer som kan aktiveres. <literal>None</literal>-verdien slår av alle valg; tilsvarende, aktiverer <literal>All</literal> alle sammen for uten <literal>MultiViews</literal>. Tilgjengelige valg inkluderer:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						<literal>ExecCGI</literal> indikerer at CGI-skript kan utføres. <indexterm><primary><literal>ExecCGI</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>FollowSymlinks</literal> forteller tjeneren at symbolske lenker kan bli fulgt, og at responsen skal inneholde mål-innholdet for slike koblinger. <indexterm><primary><literal>FollowSymlinks</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>SymlinksIfOwnerMatch</literal> forteller også at tjeneren skal følge symbolske lenker, men bare når koblingen og målet har samme eier.<indexterm><primary><literal>SymlinksIfOwnerMatch</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>Includes</literal> aktiverer <emphasis>Server Side Includes</emphasis> (<emphasis>SSI</emphasis> i korthet). Dette er direktiver som er innebygd i HTML-sider og utført underveis for hver forespørsel. <indexterm><primary><literal>Includes</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>Indexes</literal> forteller at tjeneren skal vise innholdet i en katalog hvis HTTP-forespørselen sendt av klienten peker på en katalog uten en indeksfil (dvs. når ingen filer nevnt av <literal>DirectoryIndex</literal>-direktivet finnes i denne mappen). <indexterm><primary><literal>Indexes</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>
				 <listitem>
					<para>
						<literal>MultiViews</literal> muliggjør forhandlinger om innholdet. Denne kan brukes av tjeneren for å returnere en nettside som matcher det foretrukne språket som er konfigurert i nettleseren. <indexterm><primary><literal>MultiViews</literal>, Apache directive</primary></indexterm>
					</para>

				</listitem>

			</itemizedlist>
			 <para>
			</para>
			 <sidebar> <title><emphasis>BACK TO BASICS</emphasis> <filename>.htaccess</filename> file</title>
			 <para>
				<filename>.htaccess</filename>-filen inneholder konfigurasjonsdirektiver for Apache som utføres hver gang en forespørsel om et element i katalogen der den er lagret. Definisisjonsområdet for disse direktivene gjentas også for alle underkatalogene.
			</para>
			 <indexterm>
				<primary><filename>.htaccess</filename></primary>
			</indexterm>
			 <para>
				De fleste direktiver som kan forekomme i en <literal>Directory</literal>-blokk gjelder også for en <filename>.htaccess</filename>-file.
			</para>
			 </sidebar> <para>
				<literal>AllowOverride</literal>-direktivet lister opp alle alternativer som kan aktiveres eller deaktiveres ved hjelp av en <filename>.htaccess</filename>-fil. En vanlig bruk av dette valget er til å begrense <literal>ExecCGI</literal>, slik at administratoren velger hvilke brukere som har lov til å kjøre programmer under nettjenerens identitet (<literal>www-data</literal>-brukeren).
			</para>
			 <indexterm>
				<primary><literal>AllowOverride</literal>, Apache directive</primary>
			</indexterm>
			 <section>
				<title>Å rekvirere autentisering</title>
				 <indexterm>
					<primary>web authentication</primary>
				</indexterm>
				 <para>
					I noen tilfeller trenges det begrenset tilgang til en del av et nettsted, slik at bare legitime brukere som gir et brukernavn og et passord får tilgang til innholdet.
				</para>
				 <example>
					<title><filename>.htaccess</filename>-fil som krever autentisering</title>
					 
<programlisting>
Require valid-user
AuthName "Private directory"
AuthType Basic
AuthUserFile /etc/apache2/authfiles/htpasswd-private
</programlisting>

				</example>
				 <sidebar> <title><emphasis>SECURITY</emphasis> Ingen sikkerhet</title>
				 <para>
					Autentiseringssystemet som brukes i eksempelet ovenfor (<literal>Basic</literal>) har minimal sikkerhet når passordet sendes i klartekst (det er bare kodet som <emphasis>base64</emphasis>, som er en enkel innkoding snarere enn en krypteringsmetode). Det bør også bemerkes at de dokumenter som "beskyttet" av denne mekanismen også går over nettverket i klartekst. Hvis sikkerhet er viktig, bør hele HTTP-tilkobling krypteres med SSL.
				</para>
				 </sidebar> <para>
					The <filename>/etc/apache2/authfiles/htpasswd-private</filename>-filen inneholder en liste over brukere og passord. Den er ofte håndtert med <command>htpasswd</command>-kommandoen. For eksempel brukes følgende kommando til å legge til en bruker eller endre passordet deres: <indexterm><primary><command>htpasswd</command></primary></indexterm>
				</para>
				 
<screen>
<computeroutput># </computeroutput><userinput>htpasswd /etc/apache2/authfiles/htpasswd-private <replaceable>user</replaceable>
</userinput><computeroutput>New password:
Re-type new password:
Adding password for user <replaceable>user</replaceable>
</computeroutput></screen>

			</section>
			 <section>
				<title>Adgangsbegrensning</title>
				 <indexterm>
					<primary>web access restriction</primary>
				</indexterm>
				 <para>
					<literal>Require</literal>-direktivet regulerer adgangsbegrensninger for en katalog (og gjentatt for katalogens undermapper).
				</para>
				 <indexterm>
					<primary>Apache directives</primary>
				</indexterm>
				 <indexterm>
					<primary>directives, Apache</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Require</literal>, Apache directive</primary>
				</indexterm>
				 <para>
					Den kan brukes til å begrense adgangen basert på flere kriterier: Vi vil stoppe med å beskrive adgangsbegrensning basert på klientens IP-adresse, men det kan gjøres mye kraftigere enn det, særlig når flere <literal>Require</literal>-direktiver kombineres i en <literal>RequireAll</literal>-blokk.
				</para>
				 <example>
					<title>Tillat bare fra det lokale nettverket</title>
					 
<programlisting>Require ip 192.168.0.0/16
</programlisting>

				</example>
				 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> Gammel syntaks</title>
				 <para>
					<literal>Require</literal>-syntaksen er bare tilgjengelig i Apache 2.4 (versjonen i <emphasis role="distribution">Jessie</emphasis>). For brukere av <emphasis role="distribution">Wheezy</emphasis> er Apache 2,2-syntaksen forskjellig, og her beskriver vi den hovedsakelig som referanse, selv om den også kan gjøres tilgjengelig i Apache 2,4 ved hjelp av <literal>mod_access_compat</literal>-modulen.
				</para>
				 <para>
					<literal>Allow from</literal> og <literal>Deny from</literal>-direktivene kontrollerer adgangsbegrensninger for en katalog (og gjentatt for katalogens undermapper).
				</para>
				 <indexterm>
					<primary><literal>Allow from</literal>, Apache directive</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Deny from</literal>, Apache directive</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Order</literal>, Apache directive</primary>
				</indexterm>
				 <para>
					<literal>Order</literal>-direktivet forteller tjeneren om rekkefølgen på <literal>Allow from</literal> og <literal>Deny from</literal>-direktivene: den siste som matcher har forrang. Konkret tillater <literal>Order deny,allow</literal> adgang hvis ingen <literal>Deny from</literal> passer, eller hvis et <literal>Allow from</literal>-direktiv gjør det. Omvendt, stanser <literal>Order allow,deny</literal> adgang hvis intet <literal>Allow from</literal>-direktiv matcher (eller hvis et <literal>Deny from</literal>-direktiv tillater).
				</para>
				 <para>
					<literal>Allow from</literal> og <literal>Deny from</literal>-direktivene kan etterfølges av en IP-adresse, et nettverk (slik som <literal>192.168.0.0/255.255.255.0</literal>, <literal>192.168.0.0/24</literal> eller til og med <literal>192.168.0</literal>), et vertsnavn eller domenenavn, eller <literal>all</literal>-nøkkelen som peker ut alle.
				</para>
				 <para>
					For eksempel, for å avvise forbindelser som standard, men tillate dem fra det lokale nettverket, kan du bruke denne:
				</para>
				 
<programlisting>
Order deny,allow
Allow from 192.168.0.0/16
Deny from all
</programlisting>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title>Logg-analysatorer</title>
			 <para>
				En logg-analysator er ofte installert på en nettjener; siden det første gir administratorer en presis idé om bruksmønstre på sistnevnte.
			</para>
			 <para>
				Falcot Corp-administratorene valgte <emphasis>AWStats</emphasis> (<emphasis>Advanced Web Statistics</emphasis>) til å analysere sine Apache loggfiler.
			</para>
			 <indexterm>
				<primary><emphasis>AWStats</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>web logs analyzer</primary>
			</indexterm>
			 <indexterm>
				<primary>logs</primary>
				<secondary>web logs analyzer</secondary>
			</indexterm>
			 <indexterm>
				<primary>analyzer of web logs</primary>
			</indexterm>
			 <para>
				Det første konfigurasjonstrinnet er å tilpasse <filename>/etc/awstats/awstats.conf</filename>-filen. Falcot-administratorene holdt den uendret, bortsett fra følgende parametre:
			</para>
			 
<programlisting>
LogFile="/var/log/apache2/access.log"
LogFormat = "%virtualname %host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot"
SiteDomain="www.falcot.com"
HostAliases="falcot.com REGEX[^.*\.falcot\.com$]"
DNSLookup=1
LoadPlugin="tooltips"
</programlisting>
			 <para>
				Alle disse parametrene er dokumentert av kommentarer i male-filen. Spesielt beskriver <varname>LogFile</varname> og <varname>LogFormat</varname>-parameterene plasseringen og formatet på loggfilen og informasjonen den inneholder;<varname>SiteDomain</varname> og <varname>HostAliases</varname> lister de ulike navnene som hoved-nettstedet er kjent under.
			</para>
			 <para>
				For områder med stor trafikk, skal <varname>DNSLookup</varname> vanligvis ikke settes til <literal>1</literal>. For mindre nettsteder, som for eksempel Falcot-eksemplet beskrevet ovenfor, tillater denne innstillingen mer lesbare rapporter med komplette maskinnavn i stedet for rå IP-adresser.
			</para>
			 <sidebar> <title><emphasis>SECURITY</emphasis> Access to statistics</title>
			 <para>
				AWStats gjør statistikk tilgjengelig på nettstedet uten restriksjoner som standard. Men restriksjoner kan settes opp slik at bare noen få (sannsynligvis interne) IP-adresser kan få tilgang til dem. Listen over tillatte IP-adresser må være definert i <varname>AllowAccessFromWebToFollowingIPAddresses</varname> parameteret
			</para>
			 </sidebar> <para>
				AWStats er også aktivert for andre virtuelle verter; hver virtuell vert må ha en egen konfigurasjonsfil, som for eksempel <filename>/etc/awstats/awstats.www.falcot.org.conf</filename>.
			</para>
			 <example>
				<title>AWStats konfigurasjonsfil for en virtuell vert</title>
				 
<programlisting>
Include "/etc/awstats/awstats.conf"
SiteDomain="www.falcot.org"
HostAliases="falcot.org"
</programlisting>

			</example>
			 <para>
				AWStats bruker mange ikoner lagret i <filename>/usr/share/awstats/icon/</filename>-mappen. For at disse ikonene skal være tilgjengelige på nettsiden, må Apache-konfigurasjonen tilpasses ved å inkludere følgende direktiv:
			</para>
			 
<programlisting>
Alias /awstats-icon/ /usr/share/awstats/icon/
</programlisting>
			 <para>
				Etter noen minutter (og så snart skriptet er kjørt et par ganger), er resultatene tilgjengelig på nettet: <ulink type="block" url="http://www.falcot.com/cgi-bin/awstats.pl" /><ulink type="block" url="http://www.falcot.org/cgi-bin/awstats.pl" />
			</para>
			 <sidebar> <title><emphasis>CAUTION</emphasis> Loggfil-rotasjon</title>
			 <para>
				For at statistikken skal ta alle loggene med i betraktningen, trenger <emphasis>AWStats</emphasis> å kjøres rett før Apache loggfilene blir rotert. Se på <literal>prerotate</literal>-direktivet til <filename>/etc/logrotate.d/apache2</filename>-filen. Dette kan løses ved å sette en symlink til <filename>/usr/share/awstats/tools/update.sh</filename> i <filename>/etc/logrotate.d/httpd-prerotate</filename>:
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>cat /etc/logrotate.d/apache2
</userinput><computeroutput>/var/log/apache2/*.log {
  daily
  missingok
  rotate 14
  compress
  delaycompress
  notifempty
  create 644 root adm
  sharedscripts
  postrotate
    if /etc/init.d/apache2 status &gt; /dev/null ; then \
      /etc/init.d/apache2 reload &gt; /dev/null; \
    fi;
  endscript
  prerotate
    if [ -d /etc/logrotate.d/httpd-prerotate ]; then \
      run-parts /etc/logrotate.d/httpd-prerotate; \
    fi; \
  endscript
}
$ </computeroutput><userinput>sudo mkdir -p /etc/logrotate.d/httpd-prerotate
</userinput><computeroutput>$ </computeroutput><userinput>sudo ln -sf /usr/share/awstats/tools/update.sh \
  /etc/logrotate.d/httpd-prerotate/awstats
</userinput></screen>
			 <para>
				Merk også at loggfilene som ble opprettet av <command>logrotate</command> må kunne leses av alle, spesielt AWStats. I eksempelet ovenfor, er dette sikret av <literal>create 644 root adm</literal>-linjen (i stedet for de standard <literal>640</literal>- tillatelsene).
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.ftp-file-server">
		<title>FTP Filtjener</title>
		 <indexterm>
			<primary>FTP (<emphasis>File Transfer Protocol</emphasis>)</primary>
		</indexterm>
		 <para>
			FTP (<emphasis>File Transfer Protocol</emphasis>) er en av de første protokollene for Internett (RFC 959 ble utstedt i 1985!). Den ble brukt til å distribuere filer før nettet til og mer var født (HTTP-protokollen ble laget i 1990, og formelt definert i sin 1.0-versjon av RFC 1945, utgitt i 1996).
		</para>
		 <para>
			Denne protokollen tillater både filopplasting og -nedlasting av filer. Derfor er den fortsatt mye brukt til å distribuere oppdateringer et nettsted som drives av en internettleverandør (eller andre som er vert for nettsteder). I disse tilfellene håndheves sikker adgang med en brukeridentifikasjon og passord. Ved vellykket autentisering, gir FTP-tjeneren lese-og skrivetilgang til brukerens hjemmekatalog.
		</para>
		 <para>
			Andre FTP-tjenere brukes i hovedsak til å distribuere filer for offentlig nedlasting; Debian-pakker er et godt eksempel. Innholdet i disse tjenerne er hentet fra andre, geografisk fjerntliggende tjenere, og gjøres da tilgjengelige for mindre fjerntliggende brukere. Dette betyr at klientautentisering ikke er nødvendig. Som et resultat er denne driftsmodus kjent som "anonymus FTP". For å være helt korrekt, autentiseres klientene med brukernavnet <literal>anonymous</literal>; passordet er ofte, i følge vanlig praksis, brukerens e-postadresse, men det ignorerer tjeneren.
		</para>
		 <para>
			Mange FTP-tjenere er tilgjengelige i Debian (<emphasis role="pkg">ftpd</emphasis>, <emphasis role="pkg">proftpd-basic</emphasis>, <emphasis role="pkg">pyftpd</emphasis> og så videre). Falcot Corp-administratorene valgte ut <emphasis role="pkg">vsftpd</emphasis> fordi de bare bruker FTP-tjeneren for å distribuere noen få filer (inkludert en Debian-pakkebrønn). Ettersom de ikke trenger avanserte funksjoner, valgte de å fokusere på de sikkerhetsmessige aspektene.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">vsftpd</emphasis></primary>
		</indexterm>
		 <para>
			Å installere pakken skaper en <literal>ftp</literal> systembruker. Denne kontoen brukes alltid for anonyme FTP-tilkoblinger, og hjemmekatalogen dens (<filename>/srv/ftp/</filename>) er roten til treet som brukerne kan benytte for å knytte seg til denne tjenesten. Standardoppsettet (i <filename>/etc/vsftpd.conf</filename>) krever noen endringer for å imøtekomme enkle behov for å gjøre store filer tilgjengelig for offentlige nedlastinger: Anonym tilgang må være aktivert (<literal>anonymous_enable=YES</literal>) og lesetilgang fra lokale brukere må være deaktivert (<literal>local_enable=NO</literal>). Det siste er spesielt viktig ettersom FTP-protokollen ikke bruker noen form for kryptering og brukerpassord som kan snappes opp underveis.
		</para>

	</section>
	 <section id="sect.nfs-file-server">
		<title>NFS Filtjener</title>
		 <para>
			NFS (<emphasis>Network File System</emphasis>) er en protokoll som tillater ekstern tilgang til et filsystem gjennom nettverket. Alle Unix-systemer kan arbeide med denne protokollen, Når Windows-systemer er involvert, må Samba brukes i stedet.
		</para>
		 <indexterm>
			<primary>NFS</primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis>Network</emphasis></primary>
			<secondary><emphasis>File System</emphasis></secondary>
		</indexterm>
		 <indexterm>
			<primary>filesystem</primary>
			<secondary>network</secondary>
		</indexterm>
		 <indexterm>
			<primary>file</primary>
			<secondary>server</secondary>
		</indexterm>
		 <indexterm>
			<primary>server</primary>
			<secondary>file</secondary>
		</indexterm>
		 <para>
			NFS er et svært nyttig verktøy, men har tidligere har lidd av mange begrensninger, som det er tatt hensyn til i versjon 4 av protokollen. Ulempen er at den nyeste versjonen av NFS er at den er vanskeligere å sette opp når du ønsker å bruke grunnleggende sikkerhetsfunksjoner som autentisering og kryptering, da den trenger Kerberos for dette. Og uten disse må NFS-protokollen begrenses til et klarert lokalt nettverk når data ukryptert går over nettverket (en <emphasis>sniffer</emphasis> kan fange den opp) og adgangsrettighetene er gitt med utgangspunkt i klientens IP-adresse (som kan etterlignes).
		</para>
		 <sidebar> <title><emphasis>DOCUMENTATION</emphasis> NFS HOWTO</title>
		 <para>
			Det er ganske knapt med god dokumentasjon om å distribuere NFSv4. Her er noen tips med innhold av varierende kvalitet, men det bør i det minste gi noen hint om hva som bør gjøres. <ulink type="block" url="https://help.ubuntu.com/community/NFSv4Howto" /> <ulink type="block" url="http://wiki.linux-nfs.org/wiki/index.php/Nfsv4_configuration" />
		</para>
		 </sidebar> <section>
			<title>Å sikre NFS</title>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>security</secondary>
			</indexterm>
			 <para>
				Hvis du ikke bruker Kerberos-baserte sikkerhetsfunksjoner, er det viktig å sikre at bare de maskinene som har lov til å bruke NFS kan koble til de ulike nødvendige RPC-tjenerne, fordi den grunnleggende protokollen har tillit til data som mottas fra nettverket. Brannmuren må også blokkere <emphasis>IP spoofing</emphasis> for å hindre at en utenforstående maskin opptrer som en på innsiden, og at tilgangen til de riktige portene blir begrenset til maskinene som er ment å skulle ha tilgang til NFS delinger.
			</para>
			 <sidebar> <title><emphasis>BACK TO BASICS</emphasis> RPC</title>
			 <para>
				RPC (<emphasis>Remote Procedure Call</emphasis>) er et Unix-standard for eksterne tjenester. NFS er en slik tjeneste.
			</para>
			 <indexterm>
				<primary>RPC</primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis>Remote Procedure Call</emphasis></primary>
			</indexterm>
			 <para>
				RPC-tjenester registrerer til en katalog kjent som <emphasis>portmapper</emphasis>. En klient som ønsker NFS forespørsel, adresserer først til <emphasis>portmapper</emphasis> (på port 111, enten TCP eller UDP), og ber om NFS-tjeneren; svaret nevner vanligvis port 2049 (standard for NFS). Ikke alle RPC-tjenester bruker nødvendigvis en fast port.
			</para>
			 </sidebar> <para>
				Eldre versjoner av protokollen krevde andre RPC-tjenester som brukte dynamisk tildelte porter. Heldigvis, med NFS versjon 4, er bare port 2049 (for NFS) og 111 (for portmapper) nødvendig, og de er dermed lette å sikre med brannmur.
			</para>
			 <indexterm>
				<primary><command>portmapper</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>NFS-tjener</title>
			 <para>
				NFS er en del av Linux-kjernen; i kjerner som leveres av Debian er den med som en kjernemodul. Hvis NFS-tjeneren skal kjøres automatisk ved oppstart, skal <emphasis role="pkg">nfs-kernel-server</emphasis>-pakken installeres; Den inneholder de relevante oppstartskriptene.
			</para>
			 <para>
				NFS-tjenerens konfigurasjonsfil, <filename>/etc/exports</filename>, viser kataloger som er gjort tilgjengelig via nettverket (<emphasis>exported</emphasis>). For hver NFS deling, er det bare den gitte listen over maskiner som får tilgang. Mer finkornet adgangskontroll kan oppnås med et par alternativer. Syntaksen for denne filen er ganske enkel:
			</para>
			 <indexterm>
				<primary><filename>exports</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/exports</filename></primary>
			</indexterm>
			 
<programlisting>
/directory/to/share machine1(option1,option2,...) machine2(...) ...
</programlisting>
			 <para>
				Merk at med NFSv4 må alle eksporterte kataloger være del av et enkelt hierarki og at rotkatalogen i dette hierarkiet må eksporteres og identifiseres med alternativet <literal>fsid=0</literal> eller <literal>fsid=root</literal>.
			</para>
			 <para>
				Hver maskin kan identifiseres enten ved sitt DNS-navn eller sin IP-adresse. Hele sett med maskiner kan også angis ved hjelp av enten en syntaks som <literal>*.falcot.com</literal> eller et IP-adresseområde som <literal>192.168.0.0/255.255.255.0</literal> eller <literal>192.168.0.0/24</literal>.
			</para>
			 <para>
				Kataloger er som standard gjort tilgjengelig som skrivebeskyttet (eller med <literal>rw</literal>-valget). <literal>rw</literal>-valget tillater lese- og skriveadgang. NFS-klienten kobler vanligvis til fra en port forbeholdt rot (med andre ord, under 1024). Denne begrensningen kan oppheves av <literal>insecure</literal>-valget, (<literal>secure</literal>-alternativet er implisitt, men kan gjøres eksplisitt hvis det er nødvendig for klarhetens skyld).
			</para>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>options</secondary>
			</indexterm>
			 <para>
				Som standard svarer tjeneren bare på en NFS-spørring når den igangværende disk-operasjonen er fullført (<literal>sync</literal>-valget); Dette kan oppheves med <literal>async</literal>-valget. Asynchronous innskriving øker ytelsen litt, men de reduserer påliteligheten siden det er en risiko for tap av data i tilfelle tjeneren krasjer mellom godkjenningen av innskrivingen og den faktiske innskrivingen på disken. Siden standardverdien nettopp ble endret (i forhold til den historiske verdien av NFS), er en eksplisitt innstilling å anbefale.
			</para>
			 <para>
				For å ikke gi rot-tilgang til filsystemet til noen NFS-klient, er alle spørsmål som tilsynelatende kommer fra en rotbruker vurdert av tjeneren som å komme fra <literal>nobody</literal>-brukeren. Dette samsvarer med <literal>root_squash</literal>-alternativet, og er aktivert som standard. <literal>no_root_squash</literal>-alternativet, som deaktiverer denne atferden, er risikabel og bør bare brukes i kontrollerte omgivelser. <literal>anonuid=<replaceable>uid</replaceable></literal> og <literal>anongid=<replaceable>gid</replaceable></literal>-alternativene tillater å spesifisere en annen falsk bruker til å bli brukt i stedet for UID/GID 65534 (som tilsvarer bruker <literal>nobody</literal> and group <literal>nogroup</literal>).
			</para>
			 <para>
				Med NFSv4, kan du legge til et <literal>sec</literal>-valg for å indikere det sikkerhetsnivået du ønsker: <literal>sec=sys</literal> er som standard uten noen sikkerhetsegenskaper, <literal>sec=krb5</literal> aktiverer bare autentisering, <literal>sec=krb5i</literal> legger til integritetsbeskyttelse, og <literal>sec=krb5p</literal> er det mest komplette nivået, og inkluderer personvern (med datakryptering). For at dette skal virke, trenger du et Kerberos oppsett som virker (den tjenesten er ikke dekket i denne boken).
			</para>
			 <para>
				Det er også andre valgmuligheter. De er dokumentert i manualsiden <citerefentry><refentrytitle>exports</refentrytitle>
				 <manvolnum>5</manvolnum></citerefentry>.
			</para>
			 <sidebar> <title><emphasis>CAUTION</emphasis> Første innstallasjon</title>
			 <para>
				<filename>/etc/init.d/nfs-kernel-server</filename>-oppstart-skriptet starter bare tjeneren hvis <filename>/etc/exports</filename> lister en eller flere gyldige NFS-deler. Ved første gangs konfigurering, når denne filen er redigert for å inneholde gyldige oppføringer, må NFS-tjeneren derfor sstartes med følgende kommando:
			</para>
			 
<screen>
<computeroutput># </computeroutput><userinput>service nfs-kernel-server start</userinput></screen>
			 </sidebar>
		</section>
		 <section>
			<title>NFS-klient</title>
			 <indexterm>
				<primary>client</primary>
				<secondary>NFS</secondary>
			</indexterm>
			 <indexterm>
				<primary>NFS</primary>
				<secondary>client</secondary>
			</indexterm>
			 <para>
				Som med andre filsystemer, å integrere en NFS-del inn i systemhierarkiet krever montering. Siden dette filsystemet har sine særegenheter, kreves noen justeringer i syntaksen til <command>mount</command>-kommandoen og i <filename>/etc/fstab</filename>-filen.
			</para>
			 <example>
				<title>Å montore manuelt med <command>mount</command>-kommandoen</title>
				 
<screen>
          <computeroutput># </computeroutput><userinput>mount -t nfs4 -o rw,nosuid arrakis.internal.falcot.com:/shared /srv/shared</userinput></screen>

			</example>
			 <example>
				<title>NFS inngang i <filename>/etc/fstab</filename>-filen</title>
				 
<programlisting>
arrakis.internal.falcot.com:/shared /srv/shared nfs4 rw,nosuid 0 0
</programlisting>

			</example>
			 <para>
				Inngangen ovenfor monterer, ved systemoppstart, <filename>/shared/</filename> NFS-mappen fra <literal>arrakis</literal>-tjeneren til den lokale <filename>/srv/shared/</filename>-mappen. Lese-skriveadgang kreves (derav <literal>rw</literal>parameteret). <literal>nosuid</literal>-valget er et beskyttelsestiltak som sletter alle <literal>setuid</literal> eller <literal>setgid</literal>-bit fra programmer lagret i delingen. Hvis NFS-delingen kun er ment til å lagre dokumenter, er et annet anbefalt alternativ <literal>noexec</literal>, som hindrer kjøring av programmer som er lagret i delingen. Legg merke til at på tjeneren, er ikke <filename>shared</filename>-mappen under NFSv4 root export (for eksempel <filename>/export/shared</filename>), en toppnivå-mappe.
			</para>
			 <para>
				Manualsiden <citerefentry><refentrytitle>nfs</refentrytitle>
				 <manvolnum>5</manvolnum></citerefentry> beskriver alle valgmulighetene noe mer detaljert.
			</para>

		</section>

	</section>
	 <section id="sect.windows-file-server-with-samba">
		<title>Å sette opp Windows Shares med Samba</title>
		 <para>
			Samba er en pakke med verktøy som håndterer SMB-protokollen (også kjent som "CIFS") på Linux. Denne protokollen brukes av Windows for nettverksressurser og delte skrivere.
		</para>
		 <indexterm>
			<primary>Windows share</primary>
		</indexterm>
		 <indexterm>
			<primary>Samba</primary>
		</indexterm>
		 <indexterm>
			<primary>SMB</primary>
		</indexterm>
		 <indexterm>
			<primary>CIFS</primary>
		</indexterm>
		 <indexterm>
			<primary>server</primary>
			<secondary>file</secondary>
		</indexterm>
		 <para>
			Samba kan også virke som en Windows domenekontrollør Denne er et enestående verktøy for å sikre sømløs integrasjon av Linux-tjenere og stasjonære kontormaskiner som fortsatt kjører Windows.
		</para>
		 <section>
			<title>Samba tjener</title>
			 <para>
				<emphasis role="pkg">samba</emphasis>-pakken inneholder Samba 4s to hovedtjenere, <command>smbd</command> og <command>nmbd</command>.
			</para>
			 <indexterm>
				<primary><command>smbd</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>nmbd</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>DOCUMENTATION</emphasis> Å gå videre</title>
			 <para>
				Samba-tjeneren er ekstremt konfigurerbar og allsidig, og kan håndtere svært mange forskjellige bruksmåter som imøtekommer svært ulike krav og nettverks-arkitekturer. Denne boken fokuserer bare på bruken der Samba brukes som en frittstående tjener, men det kan også være en NT4 Domain Controller, en full Active Directory Domain Controller, eller et enkel medlem av et eksisterende domene (som kan være en styrt av en Windows tjener).
			</para>
			 <indexterm>
				<primary>domain controller</primary>
			</indexterm>
			 <indexterm>
				<primary>Windows domain</primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">samba-doc</emphasis>-pakken inneholder et stort utvalg av kommenterte eksempelfiler i <filename>/usr/share/doc/samba-doc/examples/</filename>.
			</para>
			 </sidebar> <sidebar> <title><emphasis>TOOL</emphasis> Autentisering med en Windows-tjener</title>
			 <para>
				Winbind gir systemadministratorer muligheten til å bruke en Windows-server som en godkjenningstjener. Winbind integrerer også rent med PAM og NSS. Dette gjør det mulig å sette opp Linux-maskiner der alle brukere av et Windows-domene automatisk få en konto.
			</para>
			 <indexterm>
				<primary>Winbind</primary>
			</indexterm>
			 <para>
				Mer informasjon kan finnes i <filename>/usr/share/doc/samba-doc/examples/pam_winbind/</filename>-mappen.
			</para>
			 </sidebar> <section>
				<title>Å konfigurere med <command>debconf</command></title>
				 <para>
					Pakken setter opp en minimal konfigurasjon under den første installasjonen, men du skulle virkelig kjøre <command>dpkg-reconfigure samba-common</command> for tilpasning til:
				</para>
				 <para>
					Den første delen med nødvendig informasjon er navnet på arbeidsgruppen som Samba-tjeneren vil tilhøre (svaret er <literal>FALCOTNET</literal> i vårt tilfelle).
				</para>
				 <para>
					Pakken foreslår også å identifisere WINS-tjeneren ut fra opplysninger gitt av DHCP-nissen. Falcot Corp administratorene forkastet dette alternativet, siden de har tenkt å bruke Samba-tjeneren som WINS-tjener.
				</para>
				 <indexterm>
					<primary>WINS</primary>
				</indexterm>

			</section>
			 <section>
				<title>Å konfigurere manuelt</title>
				 <section>
					<title>Forandringer i <filename>smb.conf</filename></title>
					 <para>
						Kravene hos Falcot forutsetter også endringer i andre valg i <filename>/etc/samba/smb.conf</filename>. Følgende utdrag oppsummerer de endringene som ble berørt i <literal>[global]</literal>-seksjonen.
					</para>
					 
<programlisting>
[global]

## Browsing/Identification ###

# Change this to the workgroup/NT-domain name your Samba server will part of
   workgroup = FALCOTNET

# Windows Internet Name Serving Support Section:
# WINS Support - Tells the NMBD component of Samba to enable its WINS Server
   wins support = yes <co id="smb.conf.wins"></co>

[...]

####### Authentication #######

# Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller". 
#
# Most people will want "standalone sever" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
   server role = standalone server

# "security = user" is always a good idea. This will require a Unix account
# in this server for every user accessing the server.
   security = user <co id="smb.conf.security"></co>

[...]
</programlisting>
					 <calloutlist>
						<callout arearefs="smb.conf.wins">
							<para>
								Viser at Samba skal fungere som en NetBIOS-navneserver (WINS) for det lokale nettverket.
							</para>

						</callout>
						 <callout arearefs="smb.conf.security">
							<para>
								Dette er standardverdien for denne parameteren; men siden den er sentral i Samba-konfigurasjon, anbefales det å fylle den inn eksplisitt. Hver bruker må godkjennes før noen deling.
							</para>

						</callout>

					</calloutlist>

				</section>
				 <section>
					<title>Å legge til brukere</title>
					 <para>
						Hver Samba-bruker trenger en konto på tjeneren, Unix-kontoer må opprettes først, deretter må brukeren bli registrert i Sambas database. Unix-trinnet utføres ganske vanlig (ved hjelp <command>adduser</command> for eksempel).
					</para>
					 <para>
						Å legge til en eksisterende bruker til Samba-databasen er et spørsmål om å kjøre <command>smbpasswd -a <replaceable>user</replaceable></command>-kommandoen; denne kommandoen ber interaktivt om passordet.
					</para>
					 <para>
						En bruker kan bli slettet med <command>smbpasswd -x <replaceable>user</replaceable></command>-lkommandoen. En Samba-konto kan også midlertidig bli deaktivert (med <command>smbpasswd -d <replaceable>user</replaceable></command>) og reaktivert senere (med <command>smbpasswd -e <replaceable>user</replaceable></command>).
					</para>

				</section>

			</section>

		</section>
		 <section>
			<title>Samba-klient</title>
			 <para>
				Klient-funksjonene i Sambas tillater en Linux-maskin å få tilgang til Windows-delinger og delte skrivere. De nødvendige programmene er tilgjengelig i <emphasis role="pkg">cifs-utils</emphasis> and <emphasis role="pkg">smbclient</emphasis>-pakkene.
			</para>
			 <indexterm>
				<primary><emphasis>smbclient</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis>cifs-utils</emphasis></primary>
			</indexterm>
			 <section>
				<title><command>smbclient</command>-programmet</title>
				 <para>
					<command>smbclient</command>-programmet forespørr SMB-tjenere. Det aksepterer et <literal>-U <replaceable>user</replaceable></literal>-alternativ. for å koble til tjeneren med en bestemt identitet. <command>smbclient //<replaceable>server</replaceable>/<replaceable>share</replaceable></command> åpner for delingen interaktivt på en måte lik kommandolinje FTP-klienten. <command>smbclient -L <replaceable>server</replaceable></command> lister opp alle tilgjengelige (og synlige) delinger på en tjener.
				</para>

			</section>
			 <section>
				<title>Montere Windows-delinger</title>
				 <para>
					The <command>mount</command> kommandoen tillater montering av en Windows-deling inn i Linux filsystem-hierarki (ved hjelp av <command>mount.cifs</command> levert av <emphasis role="pkg">cifs-utils</emphasis>).
				</para>
				 <indexterm>
					<primary><command>mount.cifs</command></primary>
				</indexterm>
				 <indexterm>
					<primary>Windows share, mounting</primary>
				</indexterm>
				 <example>
					<title>Å montere en Windows deling</title>
					 
<programlisting>
mount -t cifs //arrakis/shared /shared \
      -o credentials=/etc/smb-credentials
</programlisting>

				</example>
				 <para>
					<filename>/etc/smb-credentials</filename>-fil (som ikke må være lesbar av brukere) har følgende format:
				</para>
				 
<programlisting>
username = <replaceable>user</replaceable>
password = <replaceable>password</replaceable></programlisting>
				 <para>
					Andre alternativer kan spesifiseres på kommandolinjen; den fullstendige listen er tilgjengelig i <citerefentry><refentrytitle>mount.cifs</refentrytitle>
					 <manvolnum>1</manvolnum></citerefentry>-manulaside. Spesielt to alternativer kan være interessante: <literal>uid</literal> og <literal>gid</literal> som tillater å tvinge eieren og gruppen filer som er tilgjengelig i monteringen, for ikke å begrense adgangen til rot.
				</para>
				 <para>
					En montering av en Windows-deling kan også konfigureres i <filename>/etc/fstab</filename>:
				</para>
				 
<programlisting>
//<replaceable>server</replaceable>/shared /shared cifs credentials=/etc/smb-credentials
</programlisting>
				 <para>
					Å avmontere en SMB/CIFS-deling er gjort med den standard <command>umount</command>-kommandoen.
				</para>

			</section>
			 <section>
				<title>Å skrive ut på en delt skriver</title>
				 <para>
					CUPS er en elegant løsning for utskrift fra en Linux arbeidsstasjon til en skriver som deles av en Windows-maskin. Når <emphasis role="pkg">smbclient</emphasis> er installert, tillater CUPS automatisk installasjon av Windows-delte skrivere.
				</para>
				 <indexterm>
					<primary>printing</primary>
					<secondary>network</secondary>
				</indexterm>
				 <para>
					Her er skrittene som kreves:
				</para>
				 <itemizedlist>
					<listitem>
						<para>
							Bruk CUPS konfigurasjonsgrensesnittet:<literal>http://localhost:631/admin</literal>
						</para>

					</listitem>
					 <listitem>
						<para>
							Kllipp på "Add Printer".
						</para>

					</listitem>
					 <listitem>
						<para>
							Velg skriverenheten, plukk ut "Windows Printer via SAMBA".
						</para>

					</listitem>
					 <listitem>
						<para>
							Bruk tilkoblings-URI-en for nettverksskriveren . Den skal se ut som følger:
						</para>
						 <para>
							<literal>smb://<replaceable>user</replaceable>:<replaceable>password</replaceable>@<replaceable>server</replaceable>/<replaceable>printer</replaceable></literal>.
						</para>

					</listitem>
					 <listitem>
						<para>
							Skriv inn navnet som unikt identifiserer denne skriveren. Deretter skriver du inn beskrivelsen og plasseringen av skriveren. De er strengene som skal vises til sluttbrukere for å hjelpe dem med å identifisere skriverne.
						</para>

					</listitem>
					 <listitem>
						<para>
							Indiker produsenten/skrivermodellen, eller lever direkte en skriverbeskrivelsesfil(PPD) som virker.
						</para>

					</listitem>

				</itemizedlist>
				 <para>
					Voilà, printeren er operativ!
				</para>

			</section>

		</section>

	</section>
	 <section id="sect.http-ftp-proxy">
		<title>HTTP/FTP mellomtjener</title>
		 <para>
			En HTTP/FTP mellomtjener fungerer som et mellomledd for HTTP- og/eller FTP-tilkoblinger. Dens rolle er todelt:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					Hurtiglager: Nylig nedlastede dokumenter kopieres lokalt, noe som hindrer multiple nedlastinger.
				</para>

			</listitem>
			 <listitem>
				<para>
					Filtreringstjener: Kreves bruk av mellomtjeneren (og utgående tilkoblinger blokkeres med mindre de går gjennom mellomtjeneren), da kan mellomtjeneren avgjøre om forespørselen skal imøtekommes.
				</para>

			</listitem>

		</itemizedlist>
		 <indexterm>
			<primary>HTTP/FTP proxy</primary>
		</indexterm>
		 <indexterm>
			<primary>mellomtjener lager</primary>
		</indexterm>
		 <para>
			Falcot Corp valgte Squid som sin mellomtjener.
		</para>
		 <indexterm>
			<primary>Squid</primary>
		</indexterm>
		 <section>
			<title>Installasjon</title>
			 <para>
				The <emphasis role="pkg">squid3</emphasis> Debian-pakken inneholder bare den modulære (mellomlagrings-) tjener. Å snu den til en filtreringstjener krever installering av tilleggspakken <emphasis role="pkg">squidguard</emphasis>. I tillegg gir , <emphasis role="pkg">squid-cgi</emphasis> et forespørsels- og administrasjonsgrensesnitt for en Squid mellomtjener.
			</para>
			 <para>
				Før du installerer, er det viktig å ta hensyn til at systemet kan identifisere sitt eget fullstendige navn: <command>hostname -f</command> må returnere et fullt kvalifisert navn (inkludert et domene). Hvis den ikke gjør det, så skal <filename>/etc/hosts</filename>-filen redigeres til å inneholde fullt navn på systemet (for eksempel <literal>arrakis.falcot.com</literal>). Det offisielle navnet på datamaskinen skal godkjennes av nettverksadministratoren for å unngå potensielle navnekonflikter .
			</para>

		</section>
		 <section>
			<title>Å konfigurere et hurtiglager</title>
			 <para>
				Å aktivere funksjonen til hurtiglags-tjener er så enkelt som å redigere <filename>/etc/squid3/squid.conf</filename>-konfigurasjonsfilen og la maskinene fra det lokale nettverket kjøre forespørsler gjennom mellomtjeneren. Det følgende eksemplet viser modifikasjonene Falcot Corp administratorene har gjort:
			</para>
			 <example>
				<title><filename>/etc/squid3/squid.conf</filename>-filen (utdrag)</title>
				 
<programlisting>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS

# Example rule allowing access from your local networks. Adapt
# to list your (internal) IP networks from where browsing should
# be allowed
acl our_networks src 192.168.1.0/24 192.168.2.0/24
http_access allow our_networks
http_access allow localhost
# And finally deny all other access to this proxy
http_access deny all
</programlisting>

			</example>

		</section>
		 <section>
			<title>Å sette opp et filter</title>
			 <para>
				<command>squid</command> utfører ikke filtreringen selv; Den er delegert til <command>squidGuard</command>. Den førstnevnte må da være konfigurert til å samvirke med den sistnevnte. Dette innebærer å legge følgende direktiv til <filename>/etc/squid3/squid.conf</filename>-filen:
			</para>
			 <indexterm>
				<primary><command>squidGuard</command></primary>
			</indexterm>
			 
<programlisting>
url_rewrite_program /usr/bin/squidGuard -c /etc/squid3/squidGuard.conf
</programlisting>
			 <para>
				CGI-programmet <filename>/usr/lib/cgi-bin/squidGuard.cgi</filename> trenger også å bli installert, ved å bruke <filename>/usr/share/doc/squidguard/examples/squidGuard.cgi.gz</filename> som startpunkt. Nødvendige endringer i dette skriptet er <varname>$proxy</varname> og <varname>$proxymaster</varname>-variablene (navnet på henholdsvis mellomtjener og administratorens kontakt-e-post.)<varname>$image</varname> og <varname>$redirect</varname>-variablene skal peke til eksisterende bilder som viser avvisning av en forespørsel.
			</para>
			 <para>
				Filteret er aktivert med <command>service squid3 reload</command>-kommandoen. Imidertid, ettersom <emphasis role="pkg">squidguard</emphasis>-pakken utfører ikke filtrering som standard; Det er administratorens oppgave å definere oppgaven. Dette kan gjøres ved å lage <filename>/etc/squid3/squidGuard.conf</filename>-filen (som bruker <filename>/etc/squidguard/squidGuard.conf.default</filename> som mal hvis det kreves).
			</para>
			 <para>
				Den gjeldende databasen må regenereres med <command>update-squidguard</command> etter hver forandring i <command>squidGuard</command>-konfigurasjonsfilen (eller en av de lister over domener eller nettadresser den nevner). Konfigurasjonsfil-syntaksen er dokumentert på den følgende nettsiden: <ulink type="block" url="http://www.squidguard.org/Doc/configure.html" />
			</para>
			 <indexterm>
				<primary><command>update-squidguard</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> DansGuardian</title>
			 <indexterm>
				<primary><emphasis role="pkg">dansguardian</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>PICS</primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">dansguardian</emphasis>-pakken er et alternativ til <emphasis>squidguard</emphasis>. Denne programvaren håndterer ikke bare en svarteliste med forbudte URL-er, men den kan nyttiggjøre seg PICS-systemet (<emphasis>Platform for Internet Content Selection</emphasis>) for å avgjøre om en side er akseptabel ved en dynamisk analyse av innholdet.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.ldap-directory">
		<title>LDAP-mappe</title>
		 <indexterm>
			<primary>LDAP</primary>
		</indexterm>
		 <indexterm>
			<primary>OpenLDAP</primary>
		</indexterm>
		 <indexterm>
			<primary>directory, LDAP</primary>
		</indexterm>
		 <para>
			OpenLDAP er en implementering av LDAP-protokollen; med andre ord, den er en database med spesialformål å lagre kataloger. I det mest vanlige brukertilfellet, tillater bruk av en LDAP-tjener sentral forvaltning av brukerkontoer og de tilhørende rettighetene. Dessuten er det lett å kopiere LDAP-databasen, som tillater oppsett av flere synkroniserte LDAP-tjenere. Når nettverket og brukerbasen vokser raskt, kan lasten så bli balansert over flere tjenere.
		</para>
		 <para>
			LDAP-data er strukturert og hierarkisk. Strukturen er definert av "skjemaer", som beskriver den type objekter at databasen kan lagre, med en liste over alle de mulige egenskapene deres. Syntaksen brukes for å referere til et bestemt objekt i databasen basert på denne strukturen, noe som forklarer kompleksiten.
		</para>
		 <section>
			<title>Installasjon</title>
			 <para>
				<emphasis role="pkg">slapd</emphasis>-pakken inneholder den åpne OpenLDAP-tjeneren. <emphasis role="pkg">ldap-utils</emphasis>-pakken inneholder kommandolinje-verktøy for samhandling med LDAP-tjenere.
			</para>
			 <indexterm>
				<primary><emphasis>slapd</emphasis></primary>
			</indexterm>
			 <para>
				Å installere <emphasis role="pkg">slapd</emphasis> stiller vanligvis få spørsmål og det er usannsynlig at den resulterende databasen dekker dine behov. Heldigvis, en enkel <command>dpkg-reconfigure slapd</command> vil la deg konfigurere LDAP-databasen med flere detaljer:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						Utelate OpenLDAP-tjeneroppsettet? Nei, selvfølgelig ønsker vi å konfigurere denne tjenesten.
					</para>

				</listitem>
				 <listitem>
					<para>
						DNS-domenenavn: “<literal>falcot.com</literal>”.
					</para>

				</listitem>
				 <listitem>
					<para>
						Organisasjonsnavn: “Falcot Corp”.
					</para>

				</listitem>
				 <listitem>
					<para>
						Et administrativt passord må skrives inn.
					</para>

				</listitem>
				 <listitem>
					<para>
						Database-bakstykke å bruke: “MDB”.
					</para>

				</listitem>
				 <listitem>
					<para>
						Ønsker du at databasen skal fjernes når <emphasis role="pkg">slapd</emphasis> tvinges? Nei. Det er ingen vits i å risikere å miste databasen på grunn av en feil.
					</para>

				</listitem>
				 <listitem>
					<para>
						Flytte den gamle databasen? Dette spørsmålet blir bare spurt når konfigurasjonen er forsøkt log en database allerede eksisterer. Bare svar "ja" hvis du faktisk ønsker å starte på nytt med en ren database; For eksempel hvis du kjører <command>dpkg-reconfigure slapd</command> rett etter den første installasjonen.
					</para>

				</listitem>
				 <listitem>
					<para>
						Tillate LDAPv2 protokoll? Nei, det er ingen vits i det. Alle verktøyene vi skal bruke forstår LDAPv3-protokollen.
					</para>

				</listitem>

			</itemizedlist>
			 <sidebar> <title><emphasis>BACK TO BASICS</emphasis> LDIF format</title>
			 <para>
				En LDIF-file (<emphasis>LDAP Data Interchange Format</emphasis>) er en flyttbar tekstfil som beskriver innholdet i en LDAP-database (eller en del av den); Denne kan så brukes til å injisere data inn i en hvilken som helst annen LDAP-tjener.
			</para>
			 <indexterm>
				<primary>LDIF</primary>
			</indexterm>
			 </sidebar> <para>
				Nå er en minimal database konfigurert, som demonstrert fra følgende spørring:
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>ldapsearch -x -b dc=falcot,dc=com</userinput>
<computeroutput># extended LDIF
#
# LDAPv3
# base &lt;dc=falcot,dc=com&gt; with scope sub
# filter: (objectclass=*)
# requesting: ALL
#

# falcot.com
dn: dc=falcot,dc=com
objectClass: top
objectClass: dcObject
objectClass: organization
o: Falcot Corp
dc: falcot

# admin, falcot.com
dn: cn=admin,dc=falcot,dc=com
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
description: LDAP administrator

# search result
search: 2
result: 0 Success

# numResponses: 3
# numEntries: 2
</computeroutput></screen>
			 <para>
				Spørringen returnerte to objekter: Organisasjonen selv, og den administrative brukeren.
			</para>

		</section>
		 <section>
			<title>Å fylle ut mappen</title>
			 <para>
				Ettersom en tom database er ikke spesielt nyttig, har vi tenkt å injisere i den i alle de eksisterende katalogene; Dette inkluderer brukerne, gruppene, tjenestene og vert-databasene.
			</para>
			 <para>
				<emphasis role="pkg">migrationtools</emphasis>-pakken inneholder et sett skript øremerket til å hente ut data fra standard Unix kataloger (<filename>/etc/passwd</filename>, <filename>/etc/group</filename>, <filename>/etc/services</filename>, <filename>/etc/hosts</filename> og så videre), konvertere disse dataene, og sette den inn i LDAP-databasen.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">migrationtools</emphasis></primary>
			</indexterm>
			 <para>
				Så snart pakken er installert. må <filename>/etc/migrationtools/migrate_common.ph</filename> redigeres; <varname>IGNORE_UID_BELOW</varname> og <varname>IGNORE_GID_BELOW</varname>-valgene må aktiveres (å avkommentere dem er nok), og <varname>DEFAULT_MAIL_DOMAIN</varname>/<varname>DEFAULT_BASE</varname> trenger oppdatering.
			</para>
			 <para>
				Selve overføringsoperasjonen håndteres av <command>migrate_all_online.sh</command>-kommandoen, som følger:
			</para>
			 
<screen>
<computeroutput># </computeroutput><userinput>cd /usr/share/migrationtools</userinput>
<computeroutput># </computeroutput><userinput>LDAPADD="/usr/bin/ldapadd -c" ETC_ALIASES=/dev/null ./migrate_all_online.sh</userinput></screen>
			 <para>
				<command>migrate_all_online.sh</command> stiller noen få spørsmål om LDAP-databasen som dataene skal overføres til. <xref linkend="tab-migrate-all" xrefstyle="select: label nopage" /> oppsummerer svarene fra Falcots brukereksempel.
			</para>
			 <table colsep="1" id="tab-migrate-all">
				<title>Svar på spørsmål forespurt av <command>migrate_all_online.sh</command>-skriptet</title>
				 <tgroup cols="2">
					<colspec align="justify"></colspec>
					<colspec align="justify"></colspec>
					 <thead>
						<row>
							<entry>Spørsmål</entry>
							<entry>Svar</entry>
						</row>

					</thead>
					 <tbody>
						<row>
							<entry>X.500 navnekontekst</entry>
							 <entry><literal>dc=falcot,dc=com</literal></entry>

						</row>
						 <row>
							<entry>LDAP tjener-vertsnavn</entry>
							 <entry><literal>localhost</literal></entry>

						</row>
						 <row>
							<entry>Manager DN</entry>
							 <entry><literal>cn=admin,dc=falcot,dc=com</literal></entry>

						</row>
						 <row>
							<entry>Tiilknyttingsreferanser</entry>
							 <entry>det administrative passordet</entry>

						</row>
						 <row>
							<entry>Å lage DUAConfigProfile</entry>
							 <entry>no</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <para>
				Vi lar bevisst være å flytte <filename>/etc/aliases</filename>-filen, siden standard-skjemaet som leveres av Debian ikke inkluderer strukturer som dette skriptet bruker til å beskrive e-post-aliaser. Skulle vi ønske å integrere disse dataene i katalogen, skal <filename>/etc/ldap/schema/misc.schema</filename>-filen legges til standard-skjemaet .
			</para>
			 <sidebar> <title><emphasis>TOOL</emphasis> Søke i en LDAP-mappe</title>
			 <para>
				<command>jxplorer</command>-kommandoen (i pakken med samme navn) er et grafisk verktøy som tillater å bla gjennom og redigere en LDAP-database. Dette er et interessant verktøy som gir en administrator en god oversikt over den hierarkiske strukturen i LDAP-dataene.
			</para>
			 <indexterm>
				<primary><command>jxplorer</command></primary>
			</indexterm>
			 </sidebar> <para>
				Legg også merke til bruken av <literal>-c</literal>-valget til <command>ldapadd</command>-kommandoen; Dette alternativet ber om at prosessen ikke stopper i tilfelle feil. Å bruke dette alternativet kreves fordi å konvertere <filename>/etc/services</filename> ofte generer noen få feil som trygt kan ignoreres.
			</para>

		</section>
		 <section>
			<title>Å håndtere kontoer med LDAP</title>
			 <para>
				Nå når LDAP-databasen inneholder en del nyttig informasjon, er tiden kommet for å gjøre bruk av disse dataene. I denne seksjonen skal vi se på hvordan du konfigurerer et Linux-system, slik at de ulike system-mappene bruker LDAP-databasen.
			</para>
			 <section id="sect.config-nss">
				<title>Å sette opp NSS</title>
				 <para>
					NSS-systemet (Name Service Switch, se sidestolpe <xref linkend="sidebar.intro-nss" />) <xref linkend="sidebar.intro-NSS" />) er et modulært system utformet for å definere eller hente informasjon for system-mapper. Med LDAP som datakilde krever NSS installasjon av <emphasis role="pkg">libnss-ldap</emphasis>-pakken. Installasjonen av den stiller noen få spørsmål; svarene er oppsummert i <xref linkend="tab-libnss-ldap" xrefstyle="select: label nopage" />.
				</para>
				 <indexterm>
					<primary><emphasis>libnss-ldap</emphasis></primary>
				</indexterm>
				 <table colsep="1" id="tab-libnss-ldap">
					<title>Å sette opp <emphasis role="pkg">libnss-ldap</emphasis>-pakken</title>
					 <tgroup cols="2">
						<colspec align="justify"></colspec>
						 <colspec align="justify"></colspec>
						 <thead>
							<row>
								<entry>Spørsmål</entry>
								 <entry>Svar</entry>

							</row>

						</thead>
						 <tbody>
							<row>
								<entry>LDAP-tjener Uniform Resource Identifier</entry>
								 <entry> <literal>ldap://ldap.falcot.com</literal> </entry>

							</row>
							 <row>
								<entry>Øremerket navn for søkerbasen</entry>
								 <entry> <literal>dc=falcot,dc=com</literal> </entry>

							</row>
							 <row>
								<entry>LDAP-versjon som skal brukes</entry>
								 <entry> <literal>3</literal> </entry>

							</row>
							 <row>
								<entry>Krever LDAP-databasen innlogging?</entry>
								 <entry>no</entry>

							</row>
							 <row>
								<entry>Spesielle LDAP rotprivilegier</entry>
								 <entry>ja</entry>

							</row>
							 <row>
								<entry>Gjør konfigurasjonsfilen lesbar/skrivbar bare for sin eier</entry>
								 <entry>no</entry>

							</row>
							 <row>
								<entry>LDAP-konto for rot</entry>
								 <entry> <literal>cn=admin,dc=falcot,dc=com</literal> </entry>

							</row>
							 <row>
								<entry>LDAP passord for rotkonto</entry>
								 <entry>det administrative passordet</entry>

							</row>

						</tbody>

					</tgroup>

				</table>
				 <para>
					<filename>/etc/nsswitch.conf</filename>-filen må deretter endres, for å konfigurere NSS til å bruke den nettopp installerte <command>ldap</command>-modulen.
				</para>
				 <example>
					<title><filename>/etc/nsswitch.conf</filename>-filen</title>
					 
<programlisting>
# /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc' and `info' packages installed, try:
# `info libc "Name Service Switch"' for information about this file.

passwd: ldap compat
group: ldap compat
shadow: ldap compat

hosts: files dns ldap
networks: ldap files

protocols: ldap db files
services: ldap db files
ethers: ldap db files
rpc: ldap db files

netgroup: ldap files
</programlisting>

				</example>
				 <para>
					<command>ldap</command>-modulen er vanligvis satt inn før de andre, og den vil derfor spørres først. Unntaket å merke seg er <literal>hosts</literal>-tjenesten siden å kontakte LDAP-tjeneren krever å kontakte DNS først (for å løse <literal>ldap.falcot.com</literal>). Uten dette unntaket, ville en forespørsel om vertsnavn prøve å spørre LDAP-tjeneren; dette ville utløse et navneoppslag for LDAP-tjeneren, og så videre i en uendelig sløyfe.
				</para>
				 <para>
					Hvis LDAP-tjeneren skal vurderes som autoritative (og de lokale filene som brukes av <command>filer</command>-modulen ignoreres), kan tjenester konfigureres med følgende syntaks:
				</para>
				 <para>
					<literal><replaceable>service</replaceable>: ldap [NOTFOUND=return] files</literal>.
				</para>
				 <para>
					Hvis den forespurte oppføringen ikke finnes i LDAP-databasen, vil søket returnere et "ikke eksisterende" svar, selv om ressursen eksisterer i en av de lokale filene. Disse lokale filene vil bare bli brukt når LDAP-tjenesten er nede.
				</para>

			</section>
			 <section id="sect.config-pam">
				<title>Å sette opp PAM</title>
				 <para>
					Denne delen beskriver en PAM-konfigurasjon (se sidestolpe <xref linkend="sidebar.intro-pam" />) som vil tillate programmer å utføre de nødvendige godkjenninger mot LDAP-databasen.
				</para>
				 <sidebar> <title><emphasis>CAUTION</emphasis> Brutt godkjenning</title>
				 <para>
					Det er en følsom operasjon å endre den standard PAM-konfigurasjonen som brukes av ulike programmer. En feil kan føre til ødelagt godkjenning, noe som kan hindre innlogging. Holde et rotskall åpent, er derfor en god forholdsregel. Hvis konfigurasjonsfeil oppstår, kan de fikses og tjenesten startes igjen med minimal innsats.
				</para>
				 </sidebar> <para>
					LDAP-modulen for PAM leveres av <emphasis role="pkg">libpam-ldap</emphasis>-pakken. Å installere denne pakken stiller noen spørsmål som er svært lik dem i <emphasis role="pkg">libnss-ldap</emphasis>. Noen konfigurasjonsparametere (for eksempel URI for LDAP-tjeneren) er faktisk delt med <emphasis role="pkg">libnss-ldap</emphasis>-pakken. Svarene er er oppsummert i <xref linkend="tab-libpam-ldap" xrefstyle="select: label nopage" />.
				</para>
				 <indexterm>
					<primary><emphasis>libpam-ldap</emphasis></primary>
				</indexterm>
				 <table colsep="1" id="tab-libpam-ldap">
					<title>Å sette opp <emphasis>libpam-ldap</emphasis></title>
					 <tgroup cols="2">
						<colspec align="justify"></colspec>
						 <colspec align="justify"></colspec>
						 <thead>
							<row>
								<entry>Spørsmål</entry>
								 <entry>Svar</entry>

							</row>

						</thead>
						 <tbody>
							<row>
								<entry>Tillate LDAP admin-kontoen å oppføre seg som lokal rot?</entry>
								 <entry>Ja. Dette tilllater å bruke den vanlige <command>passwd</command>-kommandoen for å endre passord lagret i LDAP-databasen.</entry>

							</row>
							 <row>
								<entry>Krever lDAP-databasen innlogging?</entry>
								 <entry>no</entry>

							</row>
							 <row>
								<entry>LDAP-konto for rot</entry>
								 <entry> <literal>cn=admin,dc=falcot,dc=com</literal> </entry>

							</row>
							 <row>
								<entry>LDAP passord for rotkonto</entry>
								 <entry>LDAP-databasens administrative passord</entry>

							</row>
							 <row>
								<entry>Å bruke lokal krypteringsalgoritme for passord</entry>
								 <entry>crypt</entry>

							</row>

						</tbody>

					</tgroup>

				</table>
				 <para>
					Installering av <emphasis role="pkg">libpam-ldap</emphasis> tilpasser automatisk standard POAM-konfigurasjonen som er definert i <filename>/etc/pam.d/common-auth</filename>, <filename>/etc/pam.d/common-password</filename> og <filename>/etc/pam.d/common-account</filename>-filene. Denne mekanisme bruker det øremerkede <command>pam-auth-update</command>-verktøyet (levert av <emphasis role="pkg">libpam-runtime</emphasis> pakken). Dette verktøyet kan også kjøres av administratoren dersom de ønsker å aktivere eller deaktivere PAM moduler.
				</para>
				 <indexterm>
					<primary><filename>common-auth</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-auth</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>common-password</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-password</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>common-account</filename></primary>
				</indexterm>
				 <indexterm>
					<primary><filename>/etc/pam.d/common-account</filename></primary>
				</indexterm>

			</section>
			 <section>
				<title>Å sikre LDAP datautveksling</title>
				 <indexterm>
					<primary>LDAP</primary>
					<secondary>secure</secondary>
				</indexterm>
				 <para>
					Som standard transporterer LDAP-protokollen på nettverket i klartekst. Dette inkluderer (krypterte) passord. Ettersom de krypterte passordene kan være hentet fra nettverket, kan de være sårbare for ordbok-type angrep. Dette kan unngås ved hjelp av et ekstra krypteringslag; Å aktivere dette laget er tema for denne seksjonen.
				</para>
				 <section>
					<title>Å sette opp tjeneren</title>
					 <indexterm>
						<primary><foreignphrase>OpenSSL</foreignphrase></primary>
						<secondary>creating keys</secondary>
					</indexterm>
					 <indexterm>
						<primary>key pair</primary>
					</indexterm>
					 <para>
						Det første trinnet er å opprette et nøkkelpar (bestående av en offentlig nøkkel og en privat nøkkel) for LDAP-serveren. Falcot-administratorene gjenbruker <emphasis>easy-rsa</emphasis> for å genere det (se <xref linkend="sect.easy-rsa" />). Kjøring av <command>./build-server-key ldap.falcot.com</command> medfører noen dagligdagse spørsmål (plassering, organisasjonsnavn og så videre). Svaret på deet "vanlig navn"-spørsmålet <emphasis>must</emphasis> er det fullstendige vertsnavnet for LDAP-tjeneren; i vårt tilfelle, <literal>ldap.falcot.com</literal>.
					</para>
					 <para>
						Denne kommandoen oppretter et sertifikat i <filename>keys/ldap.falcot.com.crt</filename>-filen; den samsvarende private nøkkelen er lagret i <filename>keys/ldap.falcot.com.key</filename>.
					</para>
					 <para>
						Nå må disse nøklene være installert med sin standard plassering, og vi må sørge for at den private filen er lesbar av LDAP-tjeneren, som kjører med <literal>openldap</literal>-brukerindentiteten:
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>adduser openldap ssl-cert
</userinput><computeroutput>Adding user `openldap' to group `ssl-cert' ...
Adding user openldap to group ssl-cert
Done.
# </computeroutput><userinput>mv keys/ldap.falcot.com.key /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chown root:ssl-cert /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chmod 0640 /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>mv newcert.pem /etc/ssl/certs/ldap.falcot.com.pem
</userinput></screen>
					 <para>
						<command>slapd</command>-nissen må også få beskjed om å bruke disse nøklene tastene til kryptering. LDAP-tjenerkonfigurasjon styres dynamisk: konfigurasjonen kan oppdateres med normale LDAP operasjoner på <literal>cn=config</literal>-objekthierarki, og tjeneroppdateringer på <filename>/etc/ldap/slapd.d</filename> i sann tid for å gjøre konfigurasjonen persistent. <command>ldapmodify</command> er dermed det riktige verktøyet for å oppdatere konfigurasjonen:
					</para>
					 <example>
						<title>Konfigurering <command>slapd</command> for kryptifisering.</title>
						 
<screen><computeroutput># </computeroutput><userinput>cat &gt;ssl.ldif &lt;&lt;END
dn: cn=config
changetype: modify
add: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/certs/ldap.falcot.com.pem
-
add: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/private/ldap.falcot.com.key
-
END
</userinput><computeroutput># </computeroutput><userinput>ldapmodify -Y EXTERNAL -H ldapi:/// -f ssl.ldif
</userinput><computeroutput>SASL/EXTERNAL authentication started
SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
SASL SSF: 0
modifying entry "cn=config"
</computeroutput></screen>

					</example>
					 <sidebar> <title><emphasis>TOOL</emphasis> <command>ldapvi</command> for å redigere en LDAP-mappe</title>
					 <indexterm>
						<primary><command>ldapvi</command></primary>
					</indexterm>
					 <para>
						Med <command>ldapvi</command>, kan du vise en LDIF-utskrift for enhver del av LDAP-katalogen, gjøre endringer i tekstredigereren, og la verktøyet gjøre de overensstemmende LDAP-operasjoner for deg.
					</para>
					 <para>
						Dette er derfor en praktisk måte å oppdatere LDAP-tjenerens oppsett, ganske enkelt ved å redigere <literal>cn=config</literal>-hierarkiet.
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>ldapvi -Y EXTERNAL -h ldapi:/// -b cn=config
</userinput></screen>
					 </sidebar> <para>
						Det siste trinnet for å aktivere kryptering innebærer å endre <varname>SLAPD_SERVICES</varname>-variabelen i <filename>/etc/default/slapd</filename>-filen. Vi skal gjøre det trygt og helt deaktivere usikret LDAP.
					</para>
					 <example>
						<title><filename>/etc/default/slapd</filename>-filen</title>
						 
<programlisting>
# Default location of the slapd.conf file or slapd.d cn=config directory. If
# empty, use the compiled-in default (/etc/ldap/slapd.d with a fallback to
# /etc/ldap/slapd.conf).
SLAPD_CONF=

# System account to run the slapd server under. If empty the server
# will run as root.
SLAPD_USER="openldap"

# System group to run the slapd server under. If empty the server will
# run in the primary group of its user.
SLAPD_GROUP="openldap"

# Path to the pid file of the slapd server. If not set the init.d script
# will try to figure it out from $SLAPD_CONF (/etc/ldap/slapd.conf by
# default)
SLAPD_PIDFILE=

# slapd normally serves ldap only on all TCP-ports 389. slapd can also
# service requests on TCP-port 636 (ldaps) and requests via unix
# sockets.
# Example usage:
# SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"
SLAPD_SERVICES="ldaps:/// ldapi:///"

# If SLAPD_NO_START is set, the init script will not start or restart
# slapd (but stop will still work).  Uncomment this if you are
# starting slapd via some other means or if you don't want slapd normally
# started at boot.
#SLAPD_NO_START=1

# If SLAPD_SENTINEL_FILE is set to path to a file and that file exists,
# the init script will not start or restart slapd (but stop will still
# work).  Use this for temporarily disabling startup of slapd (when doing
# maintenance, for example, or through a configuration management system)
# when you don't want to edit a configuration file.
SLAPD_SENTINEL_FILE=/etc/ldap/noslapd

# For Kerberos authentication (via SASL), slapd by default uses the system
# keytab file (/etc/krb5.keytab).  To use a different keytab file,
# uncomment this line and change the path.
#export KRB5_KTNAME=/etc/krb5.keytab

# Additional options to pass to slapd
SLAPD_OPTIONS=""
</programlisting>

					</example>

				</section>
				 <section>
					<title>Å sette opp klienten</title>
					 <para>
						På klientsiden, trenger oppsettet for <emphasis>libpam-ldap</emphasis> og <emphasis>libnss-ldap</emphasis>-modulene å bli modifisert til å bruke en <literal>ldaps://</literal>-URI.
					</para>
					 <para>
						LDAP clients also need to be able to authenticate the server. In a X.509 public key infrastructure, public certificates are signed by the key of a certificate authority (CA). With <emphasis>easy-rsa</emphasis>, the Falcot administrators have created their own CA and they now need to configure the system to trust the signatures of Falcot's CA. This can be done by putting the CA certificate in <filename>/usr/local/share/ca-certificates</filename> and running <command>update-ca-certificates</command>.
					</para>
					 
<screen><computeroutput># </computeroutput><userinput>cp keys/ca.crt /usr/local/share/ca-certificates/falcot.crt
</userinput><computeroutput># </computeroutput><userinput>update-ca-certificates
</userinput><computeroutput>Updating certificates in /etc/ssl/certs... 1 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d....
Adding debian:falcot.pem
done.
done.
</computeroutput></screen>
					 <para>
						Last but not least, the default LDAP URI and default base DN used by the various command line tools can be modified in <filename>/etc/ldap/ldap.conf</filename>. This will save quite some typing.
					</para>
					 <example>
						<title>The <filename>/etc/ldap/ldap.conf</filename> file</title>
						 
<programlisting>#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

BASE   dc=falcot,dc=com
URI    ldaps://ldap.falcot.com

#SIZELIMIT      12
#TIMELIMIT      15
#DEREF          never

# TLS certificates (needed for GnuTLS)
TLS_CACERT      /etc/ssl/certs/ca-certificates.crt
</programlisting>

					</example>

				</section>

			</section>

		</section>

	</section>
	 <section id="sect.rtc-services">
		<title>Real-Time Communication Services</title>
		 <para>
			Real-Time Communication (RTC) services include voice, video/webcam, instant messaging (IM) and desktop sharing. This chapter gives a brief introduction to three of the services required to operate RTC, including a TURN server, SIP server and XMPP server. Comprehensive details of how to plan, install and manage these services are available in the Real-Time Communications Quick Start Guide which includes examples specific to Debian. <ulink type="block" url="http://rtcquickstart.org" />
		</para>
		 <indexterm>
			<primary>VoIP</primary>
			<secondary>server</secondary>
		</indexterm>
		 <indexterm>
			<primary>RTC</primary>
			<secondary>server</secondary>
		</indexterm>
		 <indexterm>
			<primary>Instant Messaging</primary>
			<secondary>server</secondary>
		</indexterm>
		 <indexterm>
			<primary>Chat</primary>
			<secondary>server</secondary>
		</indexterm>
		 <para>
			Both SIP and XMPP can provide the same functionality. SIP is slightly more well known for voice and video while XMPP is traditionally regarded as an IM protocol. In fact, they can both be used for any of these purposes. To maximize connectivity options, it is recommended to run both in parallel.
		</para>
		 <indexterm>
			<primary>SIP</primary>
		</indexterm>
		 <indexterm>
			<primary>XMPP</primary>
		</indexterm>
		 <para>
			These services rely on X.509 certificates both for authentication and confidentiality purposes. See <xref linkend="sect.easy-rsa" /> for details on how to create them. Alternatively the <emphasis>Real-Time Communications Quick Start Guide</emphasis> also has some useful explanations: <ulink type="block" url="http://rtcquickstart.org/guide/multi/tls.html" />
		</para>
		 <section id="sect.rtc-dns-settings">
			<title>DNS settings for RTC services</title>
			 <para>
				RTC services require DNS SRV and NAPTR records. A sample configuration that can be placed in the zone file for <literal>falcot.com</literal>:
			</para>
			 <indexterm>
				<primary>DNS</primary>
				<secondary>SRV record</secondary>
			</indexterm>
			 <indexterm>
				<primary>DNS</primary>
				<secondary>NAPTR record</secondary>
			</indexterm>
			 
<programlisting>
; the server where everything will run
server1            IN     A      198.51.100.19
server1            IN     AAAA   2001:DB8:1000:2000::19

; IPv4 only for TURN for now, some clients are buggy with IPv6
turn-server        IN     A      198.51.100.19

; IPv4 and IPv6 addresses for SIP
sip-proxy          IN     A      198.51.100.19
sip-proxy          IN     AAAA   2001:DB8:1000:2000::19

; IPv4 and IPv6 addresses for XMPP
xmpp-gw            IN     A      198.51.100.19
xmpp-gw            IN     AAAA   2001:DB8:1000:2000::19

; DNS SRV and NAPTR for STUN / TURN
_stun._udp  IN SRV    0 1 3467 turn-server.falcot.com.
_turn._udp  IN SRV    0 1 3467 turn-server.falcot.com.
@           IN NAPTR  10 0 "s" "RELAY:turn.udp" "" _turn._udp.falcot.com.

; DNS SRV and NAPTR records for SIP
_sips._tcp  IN SRV    0 1 5061 sip-proxy.falcot.com.
@           IN NAPTR  10 0 "s" "SIPS+D2T" "" _sips._tcp.falcot.com.

; DNS SRV records for XMPP Server and Client modes:
_xmpp-client._tcp  IN     SRV    5 0 5222 xmpp-gw.falcot.com.
_xmpp-server._tcp  IN     SRV    5 0 5269 xmpp-gw.falcot.com.
</programlisting>

		</section>
		 <section id="sect.turn-server">
			<title>TURN Server</title>
			 <para>
				TURN is a service that helps clients behind NAT routers and firewalls to discover the most efficient way to communicate with other clients and to relay the media streams if no direct media path can be found. It is highly recommended that the TURN server is installed before any of the other RTC services are offered to end users.
			</para>
			 <indexterm>
				<primary>TURN</primary>
				<secondary>server</secondary>
			</indexterm>
			 <para>
				TURN and the related ICE protocol are open standards. To benefit from these protocols, maximizing connectivity and minimizing user frustration, it is important to ensure that all client software supports ICE and TURN.
			</para>
			 <indexterm>
				<primary>ICE</primary>
			</indexterm>
			 <para>
				For the ICE algorithm to work effectively, the server must have two public IPv4 addresses.
			</para>
			 <section id="sect.turn-server-install">
				<title>Install the TURN server</title>
				 <para>
					Install the <emphasis role="pkg">resiprocate-turn-server</emphasis> package.
				</para>
				 <para>
					Edit the <filename>/etc/reTurn/reTurnServer.config</filename> configuration file. The most important thing to do is insert the IP addresses of the server.
				</para>
				 
<programlisting>
# your IP addresses go here:
TurnAddress = 198.51.100.19
TurnV6Address = 2001:DB8:1000:2000::19
AltStunAddress = 198.51.100.20
# your domain goes here, it must match the value used
# to hash your passwords if they are already hashed
# using the HA1 algorithm:
AuthenticationRealm = myrealm

UserDatabaseFile = /etc/reTurn/users.txt
UserDatabaseHashedPasswords = true
</programlisting>
				 <para>
					Restart the service.
				</para>

			</section>
			 <section id="sect.turn-server-management">
				<title>Managing the TURN users</title>
				 <para>
					Use the htdigest utility to manage the TURN server user list.
				</para>
				
<screen><computeroutput># </computeroutput><userinput>htdigest /etc/reTurn/users.txt myrealm joe</userinput></screen>
				 <para>
					Use the HUP signal to make the server reload the <filename>/etc/reTurn/users.txt</filename> file after changing it or enable the automatic reload feature in <filename>/etc/reTurn/reTurnServer.config</filename>.
				</para>

			</section>

		</section>
		 <section id="sect.sip-server">
			<title>SIP Proxy Server</title>
			 <para>
				A SIP proxy server manages the incoming and outgoing SIP connections between other organizations, SIP trunking providers, SIP PBXes such as Asterisk, SIP phones, SIP-based softphones and WebRTC applications.
			</para>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>server</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>proxy</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>PBX</secondary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>trunk</secondary>
			</indexterm>
			 <para>
				It is strongly recommended to install and configure the SIP proxy before attempting a SIP PBX setup. The SIP proxy normalizes a lot of the traffic reaching the PBX and provides greater connectivity and resilience.
			</para>
			 <section id="sect.sip-server-install">
				<title>Install the SIP proxy</title>
				 <para>
					Install the <emphasis role="pkg">repro</emphasis> package. Using the package from <emphasis role="distribution">jessie-backports</emphasis> is highly recommended, as it has the latest improvements for maximizing connectivity and resilience.
				</para>
				 <indexterm>
					<primary>repro</primary>
				</indexterm>
				 <para>
					Edit the <filename>/etc/repro/repro.config</filename> configuration file. The most important thing to do is insert the IP addresses of the server. The example below demonstrates how to setup both regular SIP and WebSockets/WebRTC, using TLS, IPv4 and IPv6:
				</para>
				 
<programlisting>
# Transport1 will be for SIP over TLS connections
# We use port 5061 here but if you have clients connecting from
# locations with firewalls you could change this to listen on port 443
Transport1Interface = 198.51.100.19:5061
Transport1Type = TLS
Transport1TlsDomain = falcot.com
Transport1TlsClientVerification = Optional
Transport1RecordRouteUri = sip:falcot.com;transport=TLS
Transport1TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport1TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport2 is the IPv6 version of Transport1
Transport2Interface = 2001:DB8:1000:2000::19:5061
Transport2Type = TLS
Transport2TlsDomain = falcot.com
Transport2TlsClientVerification = Optional
Transport2RecordRouteUri = sip:falcot.com;transport=TLS
Transport2TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport2TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport3 will be for SIP over WebSocket (WebRTC) connections
# We use port 8443 here but you could use 443 instead
Transport3Interface = 198.51.100.19:8443
Transport3Type = WSS
Transport3TlsDomain = falcot.com
# This would require the browser to send a certificate, but browsers
# don't currently appear to be able to, so leave it as None:
Transport3TlsClientVerification = None
Transport3RecordRouteUri = sip:falcot.com;transport=WSS
Transport3TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport3TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport4 is the IPv6 version of Transport3
Transport4Interface = 2001:DB8:1000:2000::19:8443
Transport4Type = WSS
Transport4TlsDomain = falcot.com
Transport4TlsClientVerification = None
Transport4RecordRouteUri = sip:falcot.com;transport=WSS
Transport4TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport4TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport5: this could be for TCP connections to an Asterisk server
# in your internal network.  Don't allow port 5060 through the external
# firewall.
Transport5Interface = 198.51.100.19:5060
Transport5Type = TCP
Transport5RecordRouteUri = sip:198.51.100.19:5060;transport=TCP

HttpBindAddress = 198.51.100.19, 2001:DB8:1000:2000::19
HttpAdminUserFile = /etc/repro/users.txt

RecordRouteUri = sip:falcot.com;transport=tls
ForceRecordRouting = true
EnumSuffixes = e164.arpa, sip5060.net, e164.org
DisableOutbound = false
EnableFlowTokens = true
EnableCertificateAuthenticator = True
</programlisting>
				 <para>
					Use the <command>htdigest</command> utility to manage the admin password for the web interface. The username must be <emphasis>admin</emphasis> and the realm name must match the value specified in <filename>repro.config</filename>.
				</para>
				 
<screen><computeroutput># </computeroutput><userinput>htdigest /etc/repro/users.txt repro admin</userinput></screen>
				 <para>
					Restart the service to use the new configuration.
				</para>

			</section>
			 <section id="sect.sip-server-management">
				<title>Managing the SIP proxy</title>
				 <para>
					Go to the web interface at <literal>http://sip-proxy.falcot.com:5080</literal> to complete the configuration by adding domains, local users and static routes.
				</para>
				 <para>
					The first step is to add the local domain. The process must be restarted after adding or removing domains from the list.
				</para>
				 <para>
					The proxy knows how to route calls between local users and full SIP address, the routing configuration is only necessary for overriding default behavior, for example, to recognize phone numbers, add a prefix and route them to a SIP provider.
				</para>

			</section>

		</section>
		 <section id="sect.xmpp-server">
			<title>XMPP Server</title>
			 <para>
				An XMPP server manages connectivity between local XMPP users and XMPP users in other domains on the public Internet.
			</para>
			 <indexterm>
				<primary>XMPP</primary>
				<secondary>server</secondary>
			</indexterm>
			 <sidebar> <title><emphasis>VOCABULARY</emphasis> XMPP or Jabber?</title>
			 <indexterm>
				<primary>Jabber</primary>
			</indexterm>
			 <para>
				XMPP is sometimes referred to as Jabber. In fact, Jabber is a trademark and XMPP is the official name of the standard.
			</para>
			 <indexterm>
				<primary>Jabber</primary>
			</indexterm>
			 </sidebar> <para>
				Prosody is a popular XMPP server that operates reliably on Debian servers.
			</para>
			 <indexterm>
				<primary>Prosody</primary>
			</indexterm>
			 <section id="sect.xmpp-server-install">
				<title>Install the XMPP server</title>
				 <para>
					Install the <emphasis role="pkg">prosody</emphasis> package. Using the package from <emphasis role="distribution">jessie-backports</emphasis> is highly recommended, as it has the latest improvements for maximizing connectivity and resilience.
				</para>
				 <indexterm>
					<primary>Prosody</primary>
				</indexterm>
				 <para>
					Review the <filename>/etc/prosody/prosody.cfg.lua</filename> configuration file. The most important thing to do is insert JIDs of the users who are permitted to manage the server.
				</para>
				 
<programlisting>
admins = { "joe@falcot.com" }
</programlisting>
				 <para>
					An individual configuration file is also needed for each domain. Copy the sample from <filename>/etc/prosody/conf.avail/example.com.cfg.lua</filename> and use it as a starting point. Here is <literal>falcot.com.cfg.lua</literal>:
				</para>
				 
<programlisting>
VirtualHost "falcot.com"
        enabled = true
        ssl = {
                key = "/etc/ssl/private/falcot.com-key.pem";
                certificate = "/etc/ssl/public/falcot.com.pem";
                }
</programlisting>
				 <para>
					To enable the domain, there must be a symlink from <filename>/etc/prosody/conf.d/</filename>. Create it that way:
				</para>
				 
<screen><computeroutput># </computeroutput><userinput>ln -s /etc/prosody/conf.avail/falcot.com.cfg.lua /etc/prosody/conf.d/</userinput></screen>
				 <para>
					Restart the service to use the new configuration.
				</para>

			</section>
			 <section id="sect.xmpp-server-management">
				<title>Managing the XMPP server</title>
				 <para>
					Some management operations can be performed using the <literal>prosodyctl</literal> command line utility. For example, to add the administrator account specified in <filename>/etc/prosody/prosody.cfg.lua</filename>:
				</para>
				
<programlisting>
# prosodyctl adduser joe@falcot.com
</programlisting>
				 <para>
					See the <ulink url="http://prosody.im/doc/configure"> Prosody online documentation</ulink> for more details about how to customize the configuration.
				</para>

			</section>

		</section>
		 <section id="sect.rtc-port-443">
			<title>Running services on port 443</title>
			 <para>
				Some administrators prefer to run all of their RTC services on port 443. This helps users to connect from remote locations such as hotels and airports where other ports may be blocked or Internet traffic is routed through HTTP proxy servers.
			</para>
			 <para>
				To use this strategy, each service (SIP, XMPP and TURN) needs a different IP address. All the services can still be on the same host as Linux supports multiple IP addresses on a single host. The port number, 443, must be specified in the configuration files for each process and also in the DNS SRV records.
			</para>

		</section>
		 <section id="sect.rtc-webrtc">
			<title>Adding WebRTC</title>
			 <para>
				Falcot wants to let customers make phone calls directly from the web site. The Falcot administrators also want to use WebRTC as part of their disaster recovery plan, so staff can use web browsers at home to log in to the company phone system and work normally in an emergency.
			</para>
			 <indexterm>
				<primary>WebRTC</primary>
			</indexterm>
			 <indexterm>
				<primary>SIP</primary>
				<secondary>WebSockets</secondary>
			</indexterm>
			 <sidebar> <title><emphasis>IN PRACTICE</emphasis> Try WebRTC</title>
			 <indexterm>
				<primary>WebRTC</primary>
				<secondary>demonstration</secondary>
			</indexterm>
			 <para>
				If you have not tried WebRTC before, there are various sites that give an online demonstration and test facilities. <ulink type="block" url="http://www.sip5060.net/test-calls" />
			</para>
			 </sidebar> <para>
				WebRTC is a rapidly evolving technology and it is essential to use packages from the <emphasis role="distribution">jessie-backports</emphasis> or <emphasis role="distribution">Testing</emphasis> distributions.
			</para>
			 <para>
				JSCommunicator is a generic, unbranded WebRTC phone that does not require any server-side scripting such as PHP. It is built exclusively with HTML, CSS and JavaScript. It is the basis for many other WebRTC services and modules for more advanced web publishing frameworks. <ulink type="block" url="http://jscommunicator.org" />
			</para>
			 <indexterm>
				<primary>JSCommunicator</primary>
			</indexterm>
			 <para>
				The package <emphasis role="pkg">jscommunicator-web-phone</emphasis> is the quickest way to install a WebRTC phone into a web site. It requires a SIP proxy with a WebSocket transport. The instructions in <xref linkend="sect.sip-server-install" /> include the necessary details to enable the WebSocket transport in the <emphasis role="pkg">repro</emphasis> SIP proxy.
			</para>
			 <para>
				After installing <emphasis role="pkg">jscommunicator-web-phone</emphasis>, there are various ways to use it. A simple strategy is to include or copy the configuration from <filename>/etc/jscommunicator-web-phone/apache.conf</filename> into an Apache virtual host configuration.
			</para>
			 <para>
				Once the web-phone files are available in the web server, customize the <filename>/etc/jscommunicator-web-phone/config.js</filename> to point at the TURN server and SIP proxy. For example:
			</para>
			 
<programlisting>
JSCommSettings = {

  // Web server environment
  webserver: {
    url_prefix: null            // If set, prefix used to construct sound/ URLs
  },

  // STUN/TURN media relays
  stun_servers: [],
  turn_servers: [
    { server:"turn:turn-server.falcot.com?transport=udp", username:"joe", password:"j0Ep455d" }
  ],

  // WebSocket connection
  websocket: {
      // Notice we use the falcot.com domain certificate and port 8443
      // This matches the Transport3 and Transport4 example in
      // the falcot.com repro.config file
    servers: 'wss://falcot.com:8443',
    connection_recovery_min_interval: 2,
    connection_recovery_max_interval: 30
  },

  ...
</programlisting>
			 <para>
				More advanced click-to-call web sites typically use server-side scripting to generate the <literal>config.js</literal> file dynamically. The <ulink url="http://drucall.org">DruCall</ulink> source code demonstrates how to do this with PHP.
			</para>
			 <indexterm>
				<primary>DruCall</primary>
			</indexterm>
			 <para>
				This chapter sampled only a fraction of the available server software; however, most of the common network services were described. Now it is time for an even more technical chapter: we'll go into deeper detail for some concepts, describe massive deployments and virtualization.
			</para>

		</section>

	</section>
</chapter>

