<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="network-services">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-network-services.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>Postfix</keyword>
      <keyword>Apache</keyword>
      <keyword>NFS</keyword>
      <keyword>Samba</keyword>
      <keyword>Squid</keyword>
      <keyword>OpenLDAP</keyword>
      <keyword>SIP</keyword>
    </keywordset>
  </chapterinfo>
  <title>Nettverkstjenester: Postfix, Apache, NFS, Samba, Squid, LDAP, SIP, XMPP, TURN</title>
  <highlights>
    <para>Nettjenester er de programmene som brukerne direkte samhandler med i sitt daglige arbeid. De er toppen av informasjonssystemets isfjell, og dette kapittelet fokuserer på dem - de skjulte delene de er avhengige av er den infrastrukturen vi allerede har beskrevet.</para>

    
    <para>Mange moderne nettverkstjenester krever krypteringsteknologi for å fungere på en pålitelig og sikker måte, spesielt når de brukes på det offentlige Internettet. X.509 sertifikater (som også kan refereres til som SSLCertificates eller TLS-sertifikater) brukes ofte til dette formålet. Et sertifikat for et bestemt domene, kan ofte deles mellom mer enn en av tjenestene som er omtalt i dette kapittelet.</para>
    <indexterm><primary>TLS</primary></indexterm>
    <indexterm><primary>X.509</primary></indexterm>
    <indexterm><primary>Certificates</primary></indexterm>
  </highlights>
  <section id="sect.smtp-mail-server">
    <title>Posttjener</title>

    <para>Falcot Corp administratorer valgte ut Postfix som elektronisk post-tjener, på grunn av påliteligheten og en enkel konfigurasjon. Faktisk, designet sikrer at hver oppgave blir gjennomført i en prosess med et minimumsett av nødvendige tillatelser, noe som gir en stor minsking i sikkerhetsproblemer.</para>
    <indexterm><primary>email</primary><secondary>server</secondary></indexterm>
    <indexterm><primary>mail server</primary></indexterm>
    <indexterm><primary>Postfix</primary></indexterm>

    <sidebar>
      <title><emphasis>ALTERNATIVE</emphasis> Exim4 tjeneren</title>
      <indexterm><primary>Exim</primary></indexterm>

      <para>Debian bruker Exim4 som standard e-posttjener (som er grunnen til at den første installasjonen inkluderer Exim4). Konfigurasjonen er levert av en egen pakke, <emphasis role="pkg">exim4-config</emphasis>, og tilpasses automatisk basert på svar på et sett med Debconf-spørsmål svært lik spørsmålene fra <emphasis role="pkg">postfix</emphasis>-pakken.</para>

      <para>Konfigurasjonen kan enten være i en enkelt fil (<filename>/etc/exim4/exim4.conf.template</filename>) eller delt på tvers av en rekke konfigurasjonssnutter lagret under <filename>/etc/exim4/conf.d/</filename>. I begge tilfelle, brukes filene av <command>update-exim4.conf</command> som maler for å generere <filename>/var/lib/exim4/config.autogenerated</filename>. Den sistnevnte er filen som brukes av Exim4. Takket være denne mekanismen, kan verdier som fås gjennom Exims debconf-konfigurasjon - som er lagret i <filename>/etc/exim4/update-exim4.conf.conf</filename> - legges inn  i Exims konfigurasjonsfil, selv når administratoren eller en annen pakke har endret Exims standardoppsett.</para>

      <para>Exim4s konfigurasjonsfil-syntaks har sine særegenheter og sin læringskurve; Men når disse særegenheter blir forstått, er Exim4 en svært komplett og kraftig e-posttjener, noe som gjenspeiles av de titalls sidene  med dokumentation. <ulink type="block" url="http://www.exim.org/docs.html" /></para>
    </sidebar>

    
    <section>
      <title>Å installere Postfix</title>

      <para><emphasis role="pkg">postfix</emphasis>-pakken omfatter den viktigste SMTP-nissen. Andre pakker (slik som <emphasis role="pkg">postfix-ldap</emphasis> og <emphasis role="pkg">postfix-pgsql</emphasis>) 
legger til ekstra funksjonalitet til Postfix, medregnet tilgang til kartdatabaser. Du bør bare installere dem hvis du vet at du trenger dem.</para>

      <sidebar id="sidebar.smtp">
        <title><emphasis>BACK TO BASICS</emphasis> SMTP</title>
        <indexterm><primary>SMTP</primary></indexterm>
        <indexterm><primary>Simple Mail Transfer Protocol</primary></indexterm>
        <indexterm><primary>server</primary><secondary>SMTP</secondary></indexterm>

	<para>SMTP (<emphasis>Simple Mail Transfer Protocol</emphasis>) er protokollen som brukes av e-posttjenere for å utveksle og rute e-poster.</para>
      </sidebar>

      <para>Flere Debconf-spørsmål stilles under installasjonen av pakken. Svarene tillater å generere en første versjon av <filename>/etc/postfix/main.cf</filename>-konfigureringsfil.</para>

      <para>Det første spørsmålet håndterer typen oppsett. Bare to av de foreslåtte svarene passer for en Internett-tilkoblet tjener, "Internet site" og "Internet with smartvert". Førstnevnte passer for en tjener som mottar innkommende e-post og sender utgående e-post direkte til sine mottakere, og er derfor godt tilpasset i Falcot Corps tilfelle. Sistnevnte passer for en tjener som å mottar innkommende e-post som normalt, men som sender utgående e-post via en mellomliggende SMTP-tjener - en "smartvert" - i stedet for direkte til mottakerens tjener. Dette er mest nyttig for personer med en dynamisk IP-adresse, siden mange e-posttjenere avviser meldinger som kommer rett fra en slik IP-adresse. I dette tilfellet vil en smartvert vanligvis være ISPs SMTP-tjener, som alltid er konfigurert til å godta e-post som kommer fra ISPs brukere og videresende den på riktig måte. Dette oppsettet (med smartvert) passer også for tjenere som ikke er permanent koblet til Internett, da det unngår å måtte håndtere en kø med ikke-leverbare meldinger som ikke kan leveres og som må prøves igjen senere.</para>

      <sidebar>
        <title><emphasis>VOCABULARY</emphasis> ISP</title>
        <indexterm><primary>ISP, Internet Service Provider</primary></indexterm>

	<para>ISP er en forkortelse for "Internet Service Provider". Den dekker en enhet, ofte et kommersielt selskap, som leverer Internett-tilkoblinger og tilhørende basistjenester (e-post, nyheter og så videre).</para>

        <para></para>
      </sidebar>

      <para>Det andre spørsmålet omfatter det fulle navnet på maskinen, som brukes til å generere e-postadresser fra en lokal brukernavn; hele navnet på maskinen kommer opp som en del etter at-skiltet ("@"). For Falcots del, bør svaret være <literal>mail.falcot.com</literal>. Dette er det eneste spørsmålet ved oppstart, men oppsettet den fører til er ikke komplett nok for behovene til Falcot, noe som er grunnen til at administratorene kjører <command>dpkg-reconfigure postfix</command> slik at man er i stand til å tilpasse flere parametre.</para>

      <para>Ett av de ekstra spørsmålene gjelder å få alle domenenavn knyttet til denne maskinen. Stanardlisten inneholder dets fulle navn, samt noen få synonymer for <literal>localhost</literal>, men hoved-domenet <literal>falcot.com</literal> må legges for hånd. Mer generelt bør dette spørsmålet vanligvis besvares med alle domene-navnene som denne maskinen skal tjene som MX-tjener for; med andre ord, alle domene-navnene for hvem DNS sier at denne maskinen vil akseptere e-post. Denne informasjonen ender opp i <literal>mydestination</literal>-variabelen i Postfixs hovedoppsettsfil - <filename>/etc/postfix/main.cf</filename>.</para>
      <indexterm><primary>server</primary><secondary>MX</secondary></indexterm>
      <indexterm><primary>MX</primary><secondary>server</secondary></indexterm>

      <figure>
        <title>Rollen til DNS <emphasis>MX</emphasis>-registering ved sending av en e-post</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/mail-server.png" scalefit="1" width="60%" />
          </imageobject>
        </mediaobject>
      </figure>

      <sidebar>
        <title><emphasis>EXTRA</emphasis> Å spørre MX-registreringene</title>

	<para>Når DNS ikke har en MX-registrering for et domene, vil e-posttjeneren prøve å sende meldingene til verten selv ved hjelp av matchende A-posten (eller AAAA i IPv6).</para>
      </sidebar>

      <para>I noen tilfeller kan installasjonen også spørre hvilke nettverk som skal få lov til å sende e-post via maskinen. I standardkonfigurasjonen, aksepterer Postfix kun e-postmeldinger som kommer fra selve maskinen; det lokale nettverket vil vanligvis bli lagt til. Falcot Corp-administratorene la til <literal>192.168.0.0/16</literal> til standardsvaret. Hvis spørsmålet ikke er spurt, er den relevant variabel i konfigurasjonsfilen <literal>mynetworks</literal>, slik som i eksemplet nedenfor.</para>

      <para>Lokal e-post kan også leveres via <command>procmail</command>. Dette verktøyet tillater brukere å sortere sin innkommende e-post etter regler som er lagret i deres <filename>~/.procmailrc</filename>-fil.</para>
      <indexterm><primary><command>procmail</command></primary></indexterm>
      <indexterm><primary>email</primary><secondary>filtering</secondary></indexterm>
      <indexterm><primary>filtering email</primary></indexterm>

      <para>Etter dette første trinnet, får administratorene den etterfølgende konfigurasjonsfil; den vil bli brukt som et utgangspunkt for å legge til noe ekstra funksjonalitet i de neste seksjonene.</para>

      <example>
        <title>Innledende <filename>/etc/postfix/main.cf</filename>-fil</title>

        <programlisting>
# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = mail.falcot.com
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
myorigin = /etc/mailname
mydestination = mail.falcot.com, falcot.com, localhost.localdomain, localhost
relayhost = 
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.168.0.0/16
mailbox_command = procmail -a "$EXTENSION"
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
inet_protocols = all
</programlisting>
      </example>
      <sidebar>
        <title><emphasis>SECURITY</emphasis> <emphasis>Snake oil</emphasis> SSL certificates</title>

	<para><emphasis>snake oil</emphasis>-sertifikatene, som ble solgt som <emphasis>snake oil</emphasis>-“medisin” av skruppelløse kvakksalvere i gamle dager, har absolutt ingen verdi Du kan ikke stole på dem til å godkjenne tjeneren, for de automatisk blir generert med selvsignerte sertifikater. Men de er nyttige for å bedre personvernet ved utvekslingene.</para>
        <para>Generelt bør de bare brukes til testformål, og i vanlig drift må en bruke ekte sertifikater., Disse kan genereres med fremgangsmåten beskrevet i <xref linkend="sect.easy-rsa" />.</para>
      </sidebar>
    </section>
    <section id="sect.configuring-virtual-domains">
      <title>Å sette opp virtuelle domener</title>
      <indexterm><primary>domain</primary><secondary>virtual</secondary></indexterm>
      <indexterm><primary>virtual domain</primary></indexterm>

      <para>E-posttjeneren kan motta e-post adressert til andre domener i tillegg til hoveddomenet. Disse er da kjent som virtuelle domener. I de fleste tilfeller der dette skjer, blir e-postene i siste instans ikke destinert til lokale brukere. Postfix gir to interessante funksjoner for håndtering av virtuelle domener.</para>

      <sidebar>
        <title><emphasis>CAUTION</emphasis> Virtuelle domener og "kanoniske" domener</title>

	<para>Ingen av de virtuelle domener må være referert i <literal>mydestination</literal>-variabelen. Denne variabelen inneholder kun navnene på "kanoniske" domener direkte knyttet til maskinen og dens lokale brukere.</para>
      </sidebar>
      <section>
        <title>Vituelle alias-domener</title>
        <indexterm><primary>alias</primary><secondary>virtual alias domain</secondary></indexterm>
        <indexterm><primary>virtual domain</primary><secondary>virtual alias domain</secondary></indexterm>

	<para>Et virtuell alias-domene inneholder kun aliaser, dvs. adresser som bare videresender e-post til andre adresser.</para>

	<para>Et slikt domene aktiveres ved å legge navnet sitt til <literal>virtual_alias_domains</literal>-variabelen, og vise til en adressekartleggingsfil i <literal>virtual_alias_maps</literal>-variabelen.</para>

        <example>
          <title>Direktiver til å legge i <filename>/etc/postfix/main.cf</filename>-filen</title>

          <programlisting>
virtual_alias_domains = falcotsbrand.com
virtual_alias_maps = hash:/etc/postfix/virtual
</programlisting>
        </example>

	<para><filename>/etc/postfix/virtual</filename>-filen beskriver en kartlegging med en ganske grei syntaks: Hver linje inneholder to felt adskilt med mellomrom; Det første feltet er alias-navnet, det andre feltet er en liste over e-postadresser der det omdirigeres. Den spesielle <literal>@domain.com</literal>-syntaksen dekker alle gjenstående aliaser i et domene.</para>

        <example>
          <title>Eksempel <filename>/etc/postfix/virtual</filename>-fil</title>

          <programlisting>
webmaster@falcotsbrand.com  jean@falcot.com
contact@falcotsbrand.com    laure@falcot.com, sophie@falcot.com
# The alias below is generic and covers all addresses within 
# the falcotsbrand.com domain not otherwise covered by this file.
# These addresses forward email to the same user name in the
# falcot.com domain.
@falcotsbrand.com           @falcot.com
</programlisting>
        </example>
      </section>
      <section>
        <title>Virtuelle postboksdomener</title>

        <sidebar>
          <title><emphasis>CAUTION</emphasis> Kombinert virtuelt domene?</title>

	  <para>Postfix tillater ikke bruk av det samme domenet i både <literal>virtual_alias_domains</literal> og <literal>virtual_mailbox_domains</literal>. Imidlertid, alle domener hos  <literal>virtual_mailbox_domains</literal> er implisitt inkludert i  <literal>virtual_alias_domains</literal>, som gjør det mulig å blande aliaser og postkasser i et virtuelt domene.</para>
        </sidebar>

        <indexterm><primary>mailbox, virtual domain</primary></indexterm>
	<indexterm><primary>virtual domain</primary><secondary>virtual mailbox domain</secondary></indexterm>

	<para>Meldinger adressert til et virtuell postboksdomene er lagret i postkasser som ikke er lagt til en lokal systembruker.</para>

	<para>Aktivering av et virtuell postboks domene krever navngiving av dette domenet i <literal>virtual_mailbox_domains</literal>-variabelen, og refererer til en postkassekartleggingsfil i <literal>virtual_mailbox_maps</literal>.  <literal>virtual_mailbox_base</literal>-parameteren inneholder katalogen der postkasser vil bli lagret.</para>

	<para><literal>virtual_uid_maps</literal>-parameteret (respektivt <literal>virtual_gid_maps</literal>) refererer til filen som inneholder kartleggingen mellom e-postadressen og system-brukeren (henholdsvis -gruppen) som "eier" den tilsvarende postkassen. For å få alle postkasser som eies av samme eier/gruppe, tilordner <literal>static:5000</literal> syntaksen en fast UID/GID (med verdien 5000 her).</para>

        <example>
          <title>Direktiver til å legge i <filename>/etc/postfix/main.cf</filename>-filen</title>

          <programlisting>
virtual_mailbox_domains = falcot.org
virtual_mailbox_maps = hash:/etc/postfix/vmailbox
virtual_mailbox_base = /var/mail/vhosts
</programlisting>
        </example>

	<para>Igjen, syntaksen til <filename>/etc/postfix/vmailbox</filename>-filen er ganske enkel: To felt adskilt med mellomrom. Det første feltet er en e-postadresse i et av de virtuelle domene, og det andre feltet er plasseringen av den tilhørende postkasse (relativt til katalogen spesifisert i <emphasis>virtual_mailbox_base</emphasis>). Hvis postboksen ender med en skråstrek (<literal>/</literal>), blir e-postene lagret i  <emphasis>maildir</emphasis>-formatet; ellers blir det tradisjonelle <emphasis>mbox</emphasis>-formatet brukt.  <emphasis>maildir</emphasis>-formatet bruker en hel katalog for å lagre en postkasse, hver enkelt melding blir lagret i en egen fil. I <emphasis>mbox</emphasis>-formatet, på den andre siden, er hele postboksen lagret i en fil, og hver linje som starter med “<literal>From </literal>” (<literal>From</literal> fulgt av et mellomrom) signaliserer starten på en ny e-post.</para>

        <example>
          <title><filename>/etc/postfix/vmailbox</filename>-filen</title>

          <programlisting>
# Jean's email is stored as maildir, with
# one file per email in a dedicated directory
jean@falcot.org falcot.org/jean/
# Sophie's email is stored in a traditional "mbox" file,
# with all mails concatenated into one single file
sophie@falcot.org falcot.org/sophie
</programlisting>
        </example>
      </section>
    </section>
    <section id="sect.restrictions-for-receiving-and-sending">
      <title>Restriksjoner for å motta og sende</title>

      <para>Det økende antall uønsket e-post (<emphasis>spam</emphasis>) krever større strenghet når man bestemmer hvilke e-postmeldinger en tjener bør akseptere. Denne seksjonen presenterer noen av de strategiene som inngår i Postfix.</para>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> Spamproblemet</title>
        <indexterm><primary>spam</primary></indexterm>

	<para>"Spam" er et generelt begrep som brukes for å betegne alle uønskede kommersielle e-poster (også kjent som UCES) som oversvømmer våre elektroniske postkasser. De skruppelløse individer, som sender dem, er kjent som spammere. De bryr seg lite om de ordensforstyrrelser de forårsaker, siden det å sende en e-post koster svært lite, og bare en svært liten andel av mottakerne må være tiltrukket av tilbudene for at spamming-operasjon tjener mer penger enn det koster. Prosessen er for det meste automatisert, og en offentliggjort e-postadresse (for eksempel på et nettforum, registrert på en adresseliste, eller på en blogg, og så videre) vil bli oppdaget av spammeroboter, og utssatt for en endeløs strøm av uønskede meldinger.</para>

	<para>Alle systemadministratorer prøver å møte denne ordensforstyrrelser med spam-filtre, men selvfølgelig vil spammere holde seg oppdatert for å prøve å omgå disse filtrene. Noen leier til og med nettverk av maskiner kompromittert med en orm fra ulike kriminelle organisasjoner. Nyere statistikk anslår at opptil 95% av all e-post som sirkulerer på Internett er spam!</para>
      </sidebar>
      <section>
        <title>IP-baserte adgangsrestriksjoner</title>

	<para><literal>smtpd_client_restrictions</literal>-direktivet styrer hvilke maskiner som får lov til å kommunisere med e-posttjeneren.</para>

        <example>
          <title>Restriksjoner basert på klientadresse</title>

          <programlisting>
smtpd_client_restrictions = permit_mynetworks,
    warn_if_reject reject_unknown_client,
    check_client_access hash:/etc/postfix/access_clientip,
    reject_rbl_client sbl-xbl.spamhaus.org,
    reject_rbl_client list.dsbl.org
</programlisting>
        </example>

	<para>Når en variabel inneholder en liste med regler, som i eksempelet ovenfor, er disse reglene evaluert i rekkefølge fra den første til den siste. Hver regel kan akseptere meldingen, avvise den, eller overlate avgjørelsen til en følgende regel. Som en konsekvens, relkefølge betyr noe, og ganske enkelt å bytte om på to regler kan føre til et vidt forskjellig resultat.</para>

	<para><literal>permit_mynetworks</literal>-direktivet, brukt som den første regelen, godtar alle e-poster som kommer fra en maskin i det lokale nettverket (som definert av konfigureringsvariabelen <emphasis>mynetworks</emphasis>).</para>

	<para>Den andre direktivet vil normalt avvise e-post fra maskiner uten en helt gyldig DNS-konfigurasjon. En slik gyldig konfigurasjon betyr at IP-adressen kan løses til et navn, og at dette navnet i sin tur løser til IP-adressen. Denne begrensningen er ofte altfor streng, siden mange e-posttjenere vil ikke ha en omvendt DNS for deres IP-adresse. Dette forklarer hvorfor Falcot administratorer forvalgte <literal>warn_if_reject</literal>modifikatoren til <literal>reject_unknown_client</literal>-direktivet: Denne modifikatoren gjør om avvisningen til en enkel varsling registrert i loggene. Administratorene kan deretter holde et øye med antall meldinger som ville bli avvist hvis regelen ble faktisk ble håndhevet, og ta en avgjørelse senere hvis de ønsker å muliggjøre slik håndheving.</para>

        <sidebar>
          <title><emphasis>TIP</emphasis> <emphasis>access</emphasis> tabeller</title>

	  <para>Restriksjonskriteriet omfatter administrator-modifiserbare tabeller som lister  kombinasjoner av avsendere, IP-adresser, og tillatte eller forbudte vertsnavn. Disse tabellene kan opprettes fra en ukomprimert kopi av <filename>/usr/share/doc/postfix-doc/examples/access.gz</filename>-filen. Denne modellen er selv dokumentert i sine kommentarer, noe som betyr hver tabell beskriver sin egen syntaks.</para>

	  <para><filename>/etc/postfix/access_clientip</filename>-tabellen viser IP-adresser og nettverk; <filename>/etc/postfix/access_helo</filename> lister domenenavn; <filename>/etc/postfix/access_sender</filename> inneholder avsender e-postadresser. Alle disse filene må bli omgjort til nøkkel-tabeller (et format som er optimalisert for rask tilgang) etter hver endring med <command>postmap /etc/postfix/<replaceable>file</replaceable></command>-kommandoen.</para>
        </sidebar>

	<para>Den tredje direktivet lar administratoren å sette opp en svarteliste og en hviteliste med e-postservere, lagret i <filename>/etc/postfix/access_clientip</filename>-filen. Tjenere i hvitelisten anses som klarert, og e-poster som kommer fra det derfor ikke gå gjennom følgende filtreringsregler.</para>

	<para>De to siste regler avviser enhver melding som kommer fra en tjener oppført i en av de angitte i svartelisten. RBL er en forkortelse for <emphasis>Remote Black List</emphasis>. Det er flere slike lister, men alle lister dårlig konfigurerte tjenere som spammere bruker for å videresende sin e-post, samt uventede post-formidlere, for eksempel maskiner infisert med ormer eller virus.</para>
        <indexterm><primary>RBL</primary></indexterm>
        <indexterm><primary>Remote Black List</primary></indexterm>

        <sidebar>
          <title><emphasis>TIP</emphasis> Hvitliste og RBL-er</title>

	  <para>Svartelister omfatter noen ganger en legitim tjener som har vært offer en hendelse. I slike situasjoner vil alle e-poster som kommer fra en av disse tjenerne bli avvist dersom tjeneren er oppført i en hviteliste definert av <filename>/etc/postfix/access_clientip</filename>.</para>

	  <para>Ut fra forsiktighetshensyn anbefales derfor å hviteliste alle klarerte tjenere som mange e-poster vanligvis kommer fra.</para>
        </sidebar>
      </section>
      <section>
        <title>Sjekke validiteten til <literal>EHLO</literal> eller <literal>HELO</literal>-kommandoer</title>

	<para>Hver SMTP-utveksling starter med en <literal>HELO</literal> (eller <literal>EHLO</literal>)-kommando, etterfulgt av navnet på e-posttjeneren som sender; Det kan være interessant å kontrollere gyldigheten av dette navnet.</para>
        <indexterm><primary><literal>HELO</literal></primary></indexterm>
        <indexterm><primary><literal>EHLO</literal></primary></indexterm>

        <example>
          <title>Restriksjoner på navnet som er meldt i <literal>EHLO</literal></title>
          
          <programlisting>
smtpd_helo_restrictions = permit_mynetworks,
    reject_invalid_hostname,
    check_helo_access hash:/etc/postfix/access_helo,
    reject_non_fqdn_hostname,
    warn_if_reject reject_unknown_hostname
</programlisting>
        </example>

	<para>Det første <literal>permit_mynetworks</literal>-direktivet tillater at alle maskiner på det lokale nettverket fritt å legge seg til. Dette er viktig, fordi noen e-postprogrammer ikke respekterer denne delen av SMTP-protokollen godt nok, og de kan legge seg til med meningsløse navn.</para>

	<para><literal>reject_invalid_hostname</literal>-regelen avviser e-poster når  <literal>EHLO</literal>-visningen lister et vertsnavn med feilaktig syntaks.  <literal>reject_non_fqdn_hostname</literal>-regelen avviser meldinger når annonserte vertsnavn er ikke et fullt kvalifisert domenenavn (inkludert et domenenavn så vel som et vertsnavn). <literal>reject_unknown_hostname</literal> regelen avviser meldinger hvis det annonserte navnet ikke finnes i DNS. Siden denne siste regelen dessverre fører til altfor mange avslag, snudde administratorene denne virkningen med en enkel advarsel ved hjelp av <literal>warn_if_reject</literal>-modifikatoren som et første skritt; de kan fjerne denne modifikatoren på et senere tidspunkt, etter å ha gjennomgått resultatene av å bruke av regelen.</para>

	<para>Å bruke <literal>permit_mynetworks</literal> som den første regelen har en interessant bieffekt: De følgende regler gjelder kun verter utenfor det lokale nettverket. Dette tillater svartelisting av alle verter som varsler seg selv som en del av <literal>falcot.com</literal>, for eksempel for å legge til en <literal>falcot.com REJECT You are not in our network!</literal>-linje til <filename>/etc/postfix/access_helo</filename>-filen.</para>
      </section>
      <section>
        <title>Godta eller nekte basert på annonsert avsender</title>

	<para>Hver melding har en avsender, annonsert av <literal>MAIL FROM</literal>-kommandoen fra SMTP-protokollen; Igjen, kan denne informasjonen bli validert på flere forskjellige måter.</para>
        <indexterm><primary><literal>MAIL FROM</literal></primary></indexterm>
        <indexterm><primary>email</primary><secondary>filtering on the sender</secondary></indexterm>

        <example>
          <title>Sjekking av sender</title>

          <programlisting>
smtpd_sender_restrictions = 
    check_sender_access hash:/etc/postfix/access_sender,
    reject_unknown_sender_domain, reject_unlisted_sender,
    reject_non_fqdn_sender
</programlisting>
        </example>

	<para><filename>/etc/postfix/access_sender</filename>-tabellen gir en noe spesiell behandling for noen avsendere. Dette betyr vanligvis å liste noen av avsendere i en hvitliste eller en svartliste.</para>

	<para><literal>reject_unknown_sender_domain</literal>-regelen krever et gyldig avsenderdomene, siden det er nødvendig for en gyldig adresse. <literal>reject_unlisted_sender</literal>-regel avviser lokale sendere hvis adressen ikke eksisterer; Dette forhindrer e-poster å blir sendt fra en ugyldig adresse i <literal>falcot.com</literal>-domenet, og meldinger som skriver seg fra <literal>joe.bloggs@falcot.com</literal> aksepteres kun dersom en slik adresse virkelig eksisterer.</para>

	<para>Til slutt, avviser <literal>reject_non_fqdn_sender</literal>-regelen e-post som angivelig kommer fra adresser uten et fullt kvalifisert domenenavn. I praksis betyr dette å avvise e-postmeldinger som kommer fra <literal>user@machine</literal>: Adressen må bli annonsert som enten <literal>user@machine.example.com</literal> eller <literal>user@example.com</literal>.</para>
      </section>
      <section>
        <title>Akesept eller avvising basert på mottaker</title>

	<para>Hver e-post har minst én mottaker, kunngjort med <literal>RCPT TO</literal>-kommandoen i SMTP-protokollen. Disse adressene garanterer også validering, selv om det kan være mindre relevant enn sjekkene av avsenderadressen.</para>
        <indexterm><primary>RCPT TO</primary></indexterm>
        <indexterm><primary>email</primary><secondary>filtering on the recipient</secondary></indexterm>

        <example>
          <title>Sjekk av mottaker</title>

          <programlisting>
smtpd_recipient_restrictions = permit_mynetworks, 
    reject_unauth_destination, reject_unlisted_recipient, 
    reject_non_fqdn_recipient
</programlisting>
        </example>

	<para><literal>reject_unauth_destination</literal> er den grunnleggende regelen som krever at meldinger utenfra som adresseres til oss; men til en adresse som ikke er betjent med denne tjeneren, blir avvist. Uten denne regelen, blir tjeneren et åpent relé som tillater spammere å sende uønsket e-post. Denne regelen er derfor obligatorisk, og den er tas best inn nær begynnelsen av listen, slik at ingen andre regler kan autorisere meldingen før destinasjonen er kontrollert.</para>

	<para><literal>reject_unlisted_recipient</literal>-regelen avviser meldinger som sendes til ikke-eksisterende lokale brukere, noe som gir mening. Endelig avslår <literal>reject_non_fqdn_recipient</literal>-regelen ikke-fullt-kvalifiserte adresser; Dette gjør det umulig å sende en e-post til <literal>jean</literal> eller <literal>jean@machine</literal>, og kreve bruk av hele adressen i stedet, som for eksempel <literal>jean@machine.falcot.com</literal> eller <literal>jean@falcot.com</literal>.</para>
      </section>
      <section>
        <title>Restriksjoner knyttet til <literal>DATA</literal>-kommandoen</title>

	<para><literal>DATA</literal>-kommandoen til SMTP avgis før innholdet i meldingen. Den gir ikke noen informasjon per se, bortsett fra annonsere hva som kommer etterpå. Det kan fortsatt være underlagt sjekk.</para>
        <indexterm><primary><literal>DATA</literal></primary></indexterm>

        <example>
          <title><literal>DATA</literal>-sjekk</title>

          <programlisting>
smtpd_data_restrictions = reject_unauth_pipelining
</programlisting>
        </example>

	<para><literal>reject_unauth_pipelining</literal>-direktivene fører til at meldingen blir avvist hvis avsender sender en kommando før svaret på den forrige kommando er blitt sendt. Dette beskytter mot en vanlig optimalisering som brukes av spammeroboter, siden de vanligvis ikke bryr seg det grann om svar og bare fokuserer på å sende så mange e-poster som mulig på så kort tid som mulig.</para>
      </section>
      <section>
        <title>Å bruke restriksjoner</title>

	<para>Selv om de ovennevnte kommandoene validerer informasjon på ulike stadier av SMTP-utvekslingen, sender Postfix bare selve avslaget som et svar på <literal>RCPT TO</literal>-kommandoen.</para>

	<para>Dette betyr at selv om meldingen blir avvist på grunn av en ugyldig <literal>EHLO</literal>-kommando. Postfix kjenner avsenderen og mottakeren da avvisningen ble varslet. Den kan da logge et mer eksplisitt budskap enn om transaksjonen hadde blitt avbrutt fra starten. I tillegg, en rekke SMTP-klienter trenger ikke forvente feil med de tidlige SMTP-kommandoene, og disse klientene blir mindre forstyrret av dette ved denne senere avvisningen.</para>

	<para>En siste fordel ved dette valget er at reglene kan akkumulere informasjon fra de ulike stadier i SMTP-utvekslingen. Dette tillater å definere mer finkornede tillatelser, som for eksempel avvise en ikke-lokal tilkobling hvis den melder seg med en lokal avsender.</para>
      </section>
      <section>
        <title>Filtrering basert på meldingsinneholdet</title>

	<para>Validerings- og begrensningsystemet ville ikke være komplett uten å kunne sjekke meldingsinnholdet. Postfix skiller mellom sjekking av topptekster i e-postene - fra den som gjelder selve meldingskroppen.</para>

        <example>
          <title>Å aktivere innholdsbaserte filtre</title>

          <programlisting>
header_checks = regexp:/etc/postfix/header_checks
body_checks = regexp:/etc/postfix/body_checks
</programlisting>
        </example>
        <indexterm><primary>email</primary><secondary>filtering on contents</secondary></indexterm>

	<para>Begge filer inneholder en liste med vanlige uttrykk (kjent som <emphasis>regexps</emphasis> eller <emphasis>regexes</emphasis>) og tilhørende tiltak som skal utløses når e-posthoder (eller kroppen) samsvarer med uttrykket.</para>

        <sidebar>
          <title><emphasis>QUICK LOOK</emphasis> Regexp tabeller</title>

	  <para><filename>/usr/share/doc/postfix-doc/examples/header_checks.gz</filename>-filen inneholder mange forklaringer og kan brukes som et utgangspunkt for å lage <filename>/etc/postfix/header_checks</filename> og <filename>/etc/postfix/body_checks</filename>-filer.</para>
        </sidebar>

        <example>
          <title>Eksempelfil <filename>/etc/postfix/header_checks</filename></title>

          <programlisting>
/^X-Mailer: GOTO Sarbacane/ REJECT I fight spam (GOTO Sarbacane)
/^Subject: *Your email contains VIRUSES/ DISCARD virus notification
</programlisting>
        </example>

        <sidebar id="sidebar.regexp">
          <title><emphasis>BACK TO BASICS</emphasis> Regulært utrykk</title>

	  <para><emphasis>regular expression</emphasis>-betegnelsen (forkortet til  <emphasis>regexp</emphasis> eller <emphasis>regex</emphasis>) refererer til et felles tegnsystem for å gi en beskrivelse av innholdet og/eller strukturen til en streng med tegn. Visse spesialtegn tillater å definere alternativer (for eksempel  <literal>foo|bar</literal> samsvarer med enten “foo” eller “bar”), setter tillate tegn (for eksempel betyr, <literal>[0-9]</literal> hvilket som helst tall, og <literal>.</literal> — et punktum — betyr hvilket som helst tegn), Kvantifiseringer (<literal>s?</literal> samsvarer enten med <literal>s</literal> eller den tomme strengen, med andre ord 0 eller 1 forekomsten av  <literal>s</literal>; <literal>s+</literal> samsvarer med en eller flere påfølgende <literal>s</literal> tegn; og så videre). Parenteser tillater gruppering av søkeresultater.</para>

	  <para>Den presise syntaksen til disse uttrykkene varierer mellom de verktøyene som bruker dem, men de grunnleggende funksjonene er like. <ulink type="block" url="http://en.wikipedia.org/wiki/Regular_expression" /></para>
        </sidebar>

	<para>Den første sjekker toppteksten som viser til programvaren for e-mail;  hvis <literal>GOTO Sarbacane</literal> (en samling e-post-programvare) blir funnet, blir meldingen avvist. Det andre uttrykket styrer meldingens subjekt; hvis det nevner et virusvarsel, kan vi bestemme oss for ikke å avvise meldingen, men straks å forkaste den i stedet.</para>

	<para>Bruk av disse filtrene er et tveegget sverd, fordi det er lett å gjøre reglene for allmenne og som resultat miste legitim e-post. I disse tilfellene vil ikke bare meldingene gå tapt, men avsenderne får uønskede (og irriterende) feilmeldinger.</para>
      </section>
    </section>
    <section id="sect.setting-up-greylisting">
      <title>Å sette opp <foreignphrase>greylisting</foreignphrase></title>
      <indexterm><primary>greylisting</primary></indexterm>

      <para>"Grålisting" er en filtreringsteknikk der en melding som i utgangspunktet er avvist med en midlertidig feilkode, og bare aksepteres etter et ytterligere forsøk etter noen tid. Denne filtreringen er spesielt effektiv mot spam som sendes av de mange maskinene som er infisert av ormer og virus, fordi denne programvaren sjelden fungerer som en full SMTP-agent (ved å kontrollere feilkode og prøve meldinger som har feilet på nytt senere), spesielt fordi mange av de oppsamlede adressene virkelig er ugyldige og prøve dem på nytt bare bare ville bety å miste tid.</para>

      <para>Postfix leverer ikke -pakken inneholder akkurat et slikt program, laget for å levere grensesnittet til denne delegerte adgangspolitikk-tjenesten. problemfritt, men det er en funksjon, der beslutningen om å godta eller forkaste en gitt melding, kan delegeres til et eksternt program. <emphasis role="pkg">postgrey</emphasis>-pakken inneholder akkurat et slikt program, laget for å være bindeleddet til denne delegerte adgangspolitikk-tjenesten.</para>

      <para>Så snart <emphasis role="pkg">postgrey</emphasis> er installert, kjører den som en nisse og lytter på port 10023. Postfix kan så konfigureres til å bruke den ved å legge til <literal>check_policy_service</literal>-parameteret som en ekstra begrensning:</para>

      <programlisting>
smtpd_recipient_restrictions = permit_mynetworks,
    [...]
    check_policy_service inet:127.0.0.1:10023
</programlisting>

      <para>Hver gang Postfix treffer denne regelen i regelsettet, vil den koble til <command>postgrey</command>-nissen og sende den informasjon om den aktuelle meldingen. På sin side, vurderer Postgrey trillingen IP-"adresse/avsende/mottaker" og sjekker i sin database om det samme trillingen er sett i det siste. Hvis ja, svarer Postgrey at meldingen skal godtas; hvis ikke, indikerer svaret at meldingen skal avvises midlertidig, og trillingen blir registrert i databasen.</para>

      <para>Den største ulempen med grålisting er at legitime meldinger bli forsinket, noe som ikke alltid er akseptabelt. Det øker også belastningen på tjenerne som sender mange legitime e-poster.</para>

      <sidebar>
        <title><emphasis>IN PRACTICE</emphasis> Shortcomings of greylisting</title>

	<para>Teoretisk bør grålisting bare forsinke den første posten fra en gitt sender til en gitt mottaker, og den typiske forsinkelsen er i størrelsesorden minutter. Virkeligheten kan, imidlertid, avvike noe. Noen store ISP-er bruker klynger av SMTP-tjenere, og når en melding innledningsvis er avslått, er kanskje den tjeneren som prøver å gjenoppta overføringen, ikke den samme som den opprinnelige. Når det skjer, får den andre tjeneren også en midlertidig feilmelding på grunn av grålisting, og så videre. Det kan ta flere timer før overføringen er forsøkt av en tjener som allerede har vært involvert, ettersom SMTP-tjenere ved hver feil vanligvis øke forsinkelsen.</para>

	<para>Som en konsekvens kan den innkommende IP-adressen variere i tid, selv for en enkelt sender. Men det går videre: Selv avsenderadressen kan endres. For eksempel, mange postliste-tjenere koder inn ekstra informasjon i avsenderadressen, for å være i stand til å håndtere feilmeldinger (kjent som <emphasis>bounces</emphasis>). Hver ny melding sendt til en adresseliste kan så trenge å gå gjennom grålisting, noe som betyr at den må lagres (midlertidig) på senderens tjener. For svært store e-postlister (med titusenvis av abonnenter), kan dette fort bli et problem.</para>

	<para>For å redusere disse ulempene, administrerer Postgrey en hviteliste med slike steder, og meldinger som kommer fra dem, blir umiddelbart akseptert uten å gå gjennom grålisting. Denne listen kan lett tilpasses de lokale behov, ettersom det er lagret i <filename>/etc/postgrey/whitelist_clients</filename>-filen.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>GOING FURTHER</emphasis> Selektiv grålisting med <emphasis role="pkg">milter-greylist</emphasis></title>

	<para>Ulempene med grålisting kan reduseres ved å bruke grålisting bare på undergruppen av klienter som allerede regnes som sannsynlige kilder til spam (fordi de er oppført i en DNS svarteliste). Dette er ikke mulig med <emphasis role="pkg">postgrey</emphasis> men <emphasis role="pkg">milter-greylist</emphasis> kan anvendes på en slik måte.</para>

	<para>I dette scenariet, ettersom DNS svartelister aldri utløser en endelig avvisning, blir det naturlig å bruke aggressive svartelister, medregnet de som viser alle dynamiske IP-adresser fra ISP klienter (for eksempel<literal>pbl.spamhaus.org</literal> eller <literal>dul.dnsbl.sorbs.net</literal>).</para>

	<para>Siden milter-grålisting bruker Sendmails milter grensesnitt, er postfix siden av konfigurasjonen begrenset til “<literal>smtpd_milters = unix:/var/run/milter-greylist/milter-greylist.sock</literal>”. <citerefentry><refentrytitle>greylist.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>-manualside dokumenterer <filename>/etc/milter-greylist/greylist.conf</filename> og de utallige måter å konfigurere milter-grålisting på. Du vil også måtte redigere <filename>/etc/default/milter-greylist</filename> for faktisk å aktivere tjenesten.</para>
      </sidebar>
    </section>
    <section>
      <title>Å tilpasse filtre basert på mottakeren</title>

      <para><xref linkend="sect.restrictions-for-receiving-and-sending" /> og <xref linkend="sect.setting-up-greylisting" /> gjennomgikk mange av de mulige restriksjonene. De har alle sin nytte ved å begrense mengden mottatt spam, men har alle også sine ulemper. Det er derfor mer og mer vanlig å tilpasse filtrene til mottakeren. På Falcot Corp, er grålisting interessant for de fleste brukere, men det hindrer arbeidet til noen brukere som har behov for korte forsinkelser på sine e-poster (som for eksempel teknisk support-tjenesten). Tilsvarende, den kommersielle tjenesten har noen ganger problemer med å motta e-post fra noen asiatiske leverandører som kan være oppført i svartelister; trenger denne tjenesten en ikke-filtrert adresse for å kunne utveksle e-poster.</para>

      <para>Postfix gir en slik filter-tilpasning med "restriction class"-konseptet. Klassene er deklarert i <literal>smtpd_restriction_classes</literal>-parameteret, og definert på den samme måten som <literal>smtpd_recipient_restrictions</literal>.  <literal>check_recipient_access</literal>-direktivet definerer deretter en tabell som legger en gitt mottaker til det riktige settet med restriksjoner.</para>

      <example>
        <title>Definere begrensningsklasser i <filename>main.cf</filename></title>

        <programlisting>smtpd_restriction_classes = greylisting, aggressive, permissive

greylisting = check_policy_service inet:127.0.0.1:10023
aggressive = reject_rbl_client sbl-xbl.spamhaus.org,
        check_policy_service inet:127.0.0.1:10023
permissive = permit

smtpd_recipient_restrictions = permit_mynetworks,
        reject_unauth_destination,
        check_recipient_access hash:/etc/postfix/recipient_access
</programlisting>
      </example>

      <example>
        <title><filename>/etc/postfix/recipient_access</filename>-filen</title>

        <programlisting>
# Unfiltered addresses
postmaster@falcot.com  permissive
support@falcot.com     permissive
sales-asia@falcot.com  permissive

# Aggressive filtering for some privileged users
joe@falcot.com         aggressive

# Special rule for the mailing-list manager
sympa@falcot.com       reject_unverified_sender

# Greylisting by default
falcot.com             greylisting
</programlisting>
      </example>
    </section>
    <section id="sect.postfix-antivirus">
      <title>Å integrere en antivirus</title>
      <indexterm><primary>antivirus</primary></indexterm>

      <para>Med mange virus som sirkulerer som e-post-vedlegg, blir det viktig å sette opp et antivirus på inngangspunktet til bedriftens nettverk, da, til tross for en holdningskampanje, vil noen brukere fortsatt åpne vedlegg i åpenbart frynsete meldinger.</para>

      <para>Falcot administrators valgte <command>clamav</command> som sin frie antivirus. Hovedpakken er <emphasis role="pkg">clamav</emphasis>, men de installerte også noen få ekstra pakker, som <emphasis role="pkg">arj</emphasis>, <emphasis role="pkg">unzoo</emphasis>, <emphasis role="pkg">unrar</emphasis> og <emphasis role="pkg">lha</emphasis>, siden de er nødvendige for at antiviruset skal analysere vedlegg arkiveres i ett av disse formatene.</para>
      <indexterm><primary><command>clamav</command></primary></indexterm>
      <indexterm><primary><command>clamav-milter</command></primary></indexterm>

      <para>Oppgaven med å koble sammen antivirus og e-postserveren legges til <command>clamav-milter</command>. <emphasis>milter</emphasis> (kort for <emphasis>mail filter</emphasis>) er et filterprogram spesielt utviklet for å kommunisere med e-posttjenere. Et milter bruker et standard programmeringsgrensesnitt (API) som gir mye bedre ytelse enn eksterne  e-posttjener-filtre. Milters ble først introdusert av <emphasis>Sendmail</emphasis>, men <emphasis>Postfix</emphasis> kom snart etter.</para>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> Et milter for Spamassassin</title>
        <indexterm><primary><emphasis role="pkg">spamass-milter</emphasis></primary></indexterm>

	<para><emphasis role="pkg">spamass-milter</emphasis>-pakken gir et milter basert på <emphasis> Spamassassin </emphasis>, den berømte detektoren for uønsket e-post. Den kan brukes til å flagge meldinger som er mulige spam (ved å legge til en ekstra topptekst) og/eller for helt å avvise meldinger hvis spam-poengene går utover en gitt terskel.</para>
      </sidebar>

      <para>Så snart <emphasis role="pkg">clamav-milter</emphasis>-pakken er installert, skal milter konfigureres til å kjøre på en TCP-port i stedet for på standarden som heter socket. Dette kan oppnås med <command>dpkg-reconfigure clamav-milter</command>. Når du blir bedt om “Communication interface with Sendmail”, svar “<literal>inet:10002@127.0.0.1</literal>”.</para>

      <sidebar>
        <title><emphasis>NOTE</emphasis> Real TCP port vs named socket</title>
	<para>Grunnen til at vi bruker en ekte TCP-port i stedet for den navngitte socket-en er at postfix-nisser ofte kjører chroot-et og ikke har tilgang til katalogen som er vertskap for den navngitte socket-en. Du kan også velge å fortsette å bruke en navngitt socket og velge et sted i chroot-et (<filename>/var/spool/postfix/</filename>).</para>
      </sidebar>

      <para>Standard ClamAV-konfigurasjon passer til de fleste situasjoner, men noen viktige parametere kan fortsatt tilpasses med <command>dpkg-reconfigure clamav-base</command>.</para>

      <para>Det siste trinnet er å be Postfix å bruke det nettopp konfigurerte filteret. Det er en enkel sak å legge følgende direktiv til <filename>/etc/postfix/main.cf</filename>:</para>

      <programlisting>
# Virus check with clamav-milter
smtpd_milters = inet:[127.0.0.1]:10002
</programlisting>

      <para>Hvis antivirus skaper problemer, kan denne linjen kommenteres ut, og <command>service postfix reload</command> skal kjøres slik at denne endringen er tatt hensyn til.</para>

      <sidebar>
        <title><emphasis>IN PRACTICE</emphasis> Testing antivirus</title>

	<para>Når antivirus er satt opp, skal det testes om oppførselen er korrekt. Den enkleste måten å gjøre det på, er å sende en test e-post med et vedlegg som inneholder <filename>eicar.com</filename> (eller <filename>eicar.com.zip</filename>)-filen, som kan lastes ned fra nettet: <ulink type="block" url="http://www.eicar.org/86-0-Intended-use.html" /></para>

	<para>Denne filen er ikke en ekte virus, men en test-fil som all antivirusprogramvare på markedet diagnostiserer som et virus, for å tillate sjekking av installasjoner.</para>
      </sidebar>

      <para>Alle meldinger som Postfix håndterer, går nå igjennom antivirusfilteret.</para>
    </section>
    <section id="sect.authenticated-smtp">
      <title>Godkjent SMTP</title>

      <para>Å kunne sende e-poster krever tilgang på en SMTP-tjener; Det krever også nevnte SMTP-tjener for å sende e-post igjennom den. For flyttbare enheter, kan det trenges jevnlig endring av konfigurasjonen til SMTP-klienten, ettersom Falcots SMTP-tjener avviser meldinger som kommer fra IP-adresser som tilsynelatende ikke tilhører selskapet. To løsninger finnes: Enten installerer brukeren en SMTP-tjener på datamaskinen sin, eller de fortsetter å bruke selskapets tjener med noen metoder for å autentisere seg som en ansatt. Den første løsningen er ikke anbefalt siden maskinen ikke vil være permanent tilkoblet, og ikke være i stand til igjen å prøve å sende meldinger i tilfelle problemer. Vi vil fokusere på sistnevnte løsning.</para>

      <para>SMTP-autentisering i Postfix hviler på SASL (<emphasis>Simple Authentication and Security Layer</emphasis>). Det krever installasjon av   <emphasis role="pkg">libsasl2-modules</emphasis> og <emphasis role="pkg">sasl2-bin</emphasis>-pakker, deretter å registrere et passord i SASL-databasen for hver bruker som trenger autentisering på SMTP-tjeneren. Dette gjøres med <command>saslpasswd2</command>-kommandoen, som krever flere parametre. <literal>-u</literal>-valget  definerer godkjenningsdomenet, som må samsvare med <literal>smtpd_sasl_local_domain</literal>-parameteret i Postfix-oppsettet. <literal>-c</literal>-valget tillater å lage en bruker, og <literal>-f</literal> kan spesifisere filen som skal brukes hvis SASL-databasen må lagres på et annet sted enn opprinnelig (<filename>/etc/sasldb2</filename>).</para>

      <screen role="scale">
<computeroutput># </computeroutput><userinput>saslpasswd2 -u `postconf -h myhostname` -f /var/spool/postfix/etc/sasldb2 -c jean</userinput>
<computeroutput>[... type jean's password twice ...]</computeroutput></screen>

      <para>Merk at SASL-databasen ble opprettet i Postfix katalogen. For å sikre sammenhengen, omgjør vi også <filename>/etc/sasldb2</filename> til en  symbolsk lenke som peker på databasen som brukes av Postfix, med <command>ln -sf /var/spool/postfix/etc/sasldb2 /etc/sasldb2</command>-kommandoen.</para>

      <para>Nå trenger vi å sette opp Postfix til å bruke SASL. Flrst, må  <literal>postfix</literal>-brukeren legges til <literal>sasl</literal>-gruppen, slik at den kan få tilgang til SASL-kontoens database. Et par nye parametere må også til for å aktivere SASL, og <literal>smtpd_recipient_restrictions</literal>-parameteret må konfigureres til å tillate at SASL-godkjente klienter fritt kan sende e-post.</para>

      <example>
        <title>Å sette opp SASL i <filename>/etc/postfix/main.cf</filename></title>

        <programlisting>
# Enable SASL authentication
smtpd_sasl_auth_enable = yes
# Define the SASL authentication domain to use
smtpd_sasl_local_domain = $myhostname
[...]
# Adding permit_sasl_authenticated before reject_unauth_destination
# allows relaying mail sent by SASL-authenticated users
smtpd_recipient_restrictions = permit_mynetworks,
    permit_sasl_authenticated,
    reject_unauth_destination,
[...]
</programlisting>
      </example>

      <sidebar>
        <title><emphasis>EXTRA</emphasis> Autentisert SMTP-klient</title>

	<para>De fleste e-postklienter er i stand til å autentisere til en SMTP-tjener før den sender utgående meldinger, og ved hjelp av denne funksjonen er en enkel sak å konfigurere de riktige parameterne. Dersom klienten som brukes ikke leverer den funksjonen, er den midlertidige løsningen å bruke en lokal Postfix-tjener og konfigurere den til å videresende e-post via den eksterne SMTP-tjeneren. I dette tilfelle, vil den lokale Postfixen selv være klienten som autentiserer med SASL. Her er de nødvendige parameterne:</para>

        <programlisting>
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
relay_host = [mail.falcot.com]
</programlisting>

	<para><filename>/etc/postfix/sasl_passwd</filename>-filen må inneholde brukernavnet og passordet  for å autentiseres på <literal>mail.falcot.com</literal>-tjeneren. Her er et eksempel:</para>

        <programlisting>
[mail.falcot.com]   joe:LyinIsji
</programlisting>

	<para>Som for alle Postfix funksjoner, må denne filen bli omgjort til <filename>/etc/postfix/sasl_passwd.db</filename> med <command>postmap</command>-kommandoen.</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.http-web-server">
    <title>Nett-tjener (HTTP)</title>

    <para>Falcot Corp-administrtatorene besluttet å bruke Apache HTTP-tjeneren, inkludert i Debian <emphasis role="distribution">Jessie</emphasis> med versjon 2.4.10.</para>
    <indexterm><primary><command>apache</command></primary></indexterm>
    <indexterm><primary>server</primary><secondary>web</secondary></indexterm>
    <indexterm><primary>web server</primary></indexterm>
    <indexterm><primary>server</primary><secondary>HTTP</secondary></indexterm>
    <indexterm><primary>HTTP</primary><secondary>server</secondary></indexterm>

    <sidebar>
      <title><emphasis>ALTERNATIVE</emphasis> Andre nett-tjenere</title>

      <para>Apache er rett og slett den mest kjente (og mye brukt) nett-tjeneren, men det finnes andre. De kan tilby bedre ytelse under visse arbeidsbelastninger, men dette har sitt motstykke i færre, tilgjengelige funksjoner og moduler. Men når den potensielle nett-tjeneren bygges for å betjene statiske filer eller å fungere som mellomtjener, er alternativene, for eksempel <emphasis role="pkg">nginx</emphasis> og <emphasis role="pkg">lighttpd</emphasis>, verdt å se nærmere på.</para>
      <indexterm><primary><emphasis role="pkg">nginx</emphasis></primary></indexterm>
      <indexterm><primary><emphasis role="pkg">lighttpd</emphasis></primary></indexterm>
    </sidebar>
    <section>
      <title>Å installere Apache</title>

      <para>Å installere <emphasis role="pkg">apache2</emphasis>-pakken er alt som trenges. Den inneholder alle modulene, inkludert <emphasis>Multi-Processing Modules</emphasis> (MPM-er) som påvirker hvordan Apache håndterer parallell behandling av mange forespørsler (de som bruker å bli levert i separate <emphasis role="pkg">apache2-mpm-*</emphasis>-pakker). Den vil også trekke på <emphasis role="pkg">apache2-utils</emphasis> som inneholder kommandolinje-verktøy som vi vil oppdage senere.</para>

      <para>Når MPM brukes påvirkes måten Apache vil håndtere samtidige forespørsler på betydelig. Med <emphasis>worker</emphasis>-MPM, bruker den <emphasis>threads</emphasis> (lettvektprosesser), mens med <emphasis>prefork</emphasis>-MPM bruker den en samling prosesser som er laget på forhånd. Med <emphasis>event</emphasis>-MPM vil den også bruke tråder, men de inaktive tilkoblingene (spesielt de som holdes åpne av HTTP <emphasis>keep-alive</emphasis>-funksjonen) blir levert tilbake til en øremerket management-tråd.</para>

      <para>Falcot administratorene installerer også <emphasis role="pkg">libapache2-mod-php5</emphasis> for å inkludere PHP-støtte i Apache. Dette fører til at standard <emphasis>event</emphasis>-MPM-en blir deaktivert, og at <emphasis>prefork</emphasis> blir brukt istedet, ettersom PHP bare virker under denne bestemte MPM-en.</para>

      <sidebar>
        <title><emphasis>SECURITY</emphasis> Kjøring under <literal>www-data</literal>-brukeren</title>
        <indexterm><primary><literal>www-data</literal></primary></indexterm>
        <indexterm><primary>suexec</primary></indexterm>

	<para>Som standard håndterer Apache innkommende forespørsler under identiteten til <literal>www-data</literal>-brukeren. Dette betyr at en sikkerhetssårbarhet i et CGI-skript, utført av Apache (for en dynamisk side), ikke vil kompromittere hele systemet, men bare de filer som eies av denne bestemte brukeren.</para>

	<para>Using the <emphasis>suexec</emphasis> modules allows
	bypassing this rule so that some CGI scripts are executed under the
	identity of another user. This is configured with a
	<literal>SuexecUserGroup
	<replaceable>user</replaceable><replaceable>group</replaceable></literal>
	directive in the Apache configuration.</para>
        <indexterm><primary><emphasis role="pkg">libapache2-mpm-itk</emphasis></primary></indexterm>

	<para>Another possibility is to use a dedicated MPM, such as
	the one provided by <emphasis role="pkg">libapache2-mpm-itk</emphasis>.  This particular one
	has a slightly different behavior: it allows “isolating”
	virtual hosts (actually, sets of pages) so that they each run
	as a different user. A vulnerability in one website therefore
	cannot compromise files belonging to the owner of another
	website.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> List of modules</title>

	<para>The full list of Apache standard modules can be found online.
	<ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/index.html" /></para>
      </sidebar>

      <para>Apache is a modular server, and many features are implemented
      by external modules that the main program loads during its
      initialization. The default configuration only enables the most
      common modules, but enabling new modules is a simple matter of
      running <command>a2enmod <replaceable>module</replaceable></command>;
      to disable a module, the command is <command>a2dismod
      <replaceable>module</replaceable></command>. These programs actually
      only create (or delete) symbolic links in
      <filename>/etc/apache2/mods-enabled/</filename>, pointing at the
      actual files (stored in
      <filename>/etc/apache2/mods-available/</filename>).</para>

      <para>With its default configuration, the web server listens on port
      80 (as configured in <filename>/etc/apache2/ports.conf</filename>),
      and serves pages from the <filename>/var/www/html/</filename> directory
      (as configured in
      <filename>/etc/apache2/sites-enabled/000-default.conf</filename>).</para>

      <sidebar>
        <title><emphasis>GOING FURTHER</emphasis> Adding support for SSL</title>
        <indexterm><primary>HTTPS</primary></indexterm>
        <indexterm><primary>HTTP</primary><secondary>secure</secondary></indexterm>

	<para>Apache 2.4 includes the SSL module required for secure HTTP
	(HTTPS) out of the box. It just needs to be enabled with
	<command>a2enmod ssl</command>, then the required directives have
	to be added to the configuration files. A configuration example is
	provided in
	<filename>/etc/apache2/sites-available/default-ssl.conf</filename>.
	<ulink type="block" url="http://httpd.apache.org/docs/2.4/mod/mod_ssl.html" /></para>

	<para>Some extra care must be taken if you want to favor
	SSL connections with <emphasis>Perfect Forward Secrecy</emphasis>
	(those connections use ephemeral session keys ensuring that
	a compromission of the server's secret key does not result
	in the compromission of old encrypted traffic that could have
	been stored while sniffing on the network). Have a look at
	Mozilla's recommandations in particular:
	<ulink type="block" url="https://wiki.mozilla.org/Security/Server_Side_TLS#Apache" />
	</para>
	<indexterm><primary><emphasis>Perfect Forward Secrecy</emphasis></primary></indexterm>
      </sidebar>
    </section>
    <section>
      <title>Configuring Virtual Hosts</title>

      <para>A virtual host is an extra identity for the web server.</para>
      <indexterm><primary>virtual host</primary></indexterm>

      <para>Apache considers two different kinds of virtual hosts: those
      that are based on the IP address (or the port), and those that rely
      on the domain name of the web server. The first method requires
      allocating a different IP address (or port) for each site, whereas
      the second one can work on a single IP address (and port), and the
      sites are differentiated by the hostname sent by the HTTP client
      (which only works in version 1.1 of the HTTP protocol — fortunately
      that version is old enough that all clients use it already).</para>

      <para>The (increasing) scarcity of IPv4 addresses usually favors the
      second method; however, it is made more complex if the virtual hosts
      need to provide HTTPS too, since the SSL protocol hasn't always
      provided for name-based virtual hosting; the SNI extension
      (<emphasis>Server Name Indication</emphasis>) that allows such a
      combination is not handled by all browsers. When several HTTPS sites
      need to run on the same server, they will usually be differentiated
      either by running on a different port or on a different IP address
      (IPv6 can help there).</para>

      <para>The default configuration for Apache 2 enables name-based
      virtual hosts.  In addition, a default virtual host is defined
      in the <literal>/etc/apache2/sites-enabled/000-default.conf</literal>
      file; this virtual host will be used if no host matching the
      request sent by the client is found.</para>

      <sidebar>
        <title><emphasis>CAUTION</emphasis> First virtual host</title>

	<para>Requests concerning unknown virtual hosts will always be
	served by the first defined virtual host, which is why we defined
	<literal>www.falcot.com</literal> first here.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> Apache supports SNI</title>
        <indexterm><primary>Server Name Indication</primary></indexterm>

	<para>The Apache server supports
	an SSL protocol extension called <emphasis>Server Name
	Indication</emphasis> (SNI). This extension allows the browser to
	send the hostname of the web server during the establishment of the
	SSL connection, much earlier than the HTTP request itself, which
	was previously used to identify the requested virtual host among
	those hosted on the same server (with the same IP address and
	port). This allows Apache to select the most appropriate SSL
	certificate for the transaction to proceed.</para>

	<para>Before SNI, Apache would always use the certificate defined
	in the default virtual host. Clients trying to access another
	virtual host would then display warnings, since the certificate
	they received didn't match the website they were trying to access.
	Fortunately, most browsers now work with SNI; this includes
	Microsoft Internet Explorer starting with version 7.0 (starting on
	Vista), Mozilla Firefox starting with version 2.0, Apple Safari
	since version 3.2.1, and all versions of Google Chrome.</para>

	<para>The Apache package provided in Debian is built with support
	for SNI; no particular configuration is therefore needed.</para>

	<para>Care should also be taken to ensure that the configuration
	for the first virtual host (the one used by default) does enable
	TLSv1, since Apache uses the parameters of this first virtual host
	to establish secure connections, and they had better allow
	them!</para>
      </sidebar>

      <para>Each extra virtual host is then described by a file stored in
      <filename>/etc/apache2/sites-available/</filename>. Setting up a
      website for the <literal>falcot.org</literal> domain is therefore a
      simple matter of creating the following file, then enabling the
      virtual host with <command>a2ensite www.falcot.org</command>.</para>

      <example>
        <title>The <filename>/etc/apache2/sites-available/www.falcot.org.conf</filename> file</title>

        <programlisting>
&lt;VirtualHost *:80&gt;
ServerName www.falcot.org
ServerAlias falcot.org
DocumentRoot /srv/www/www.falcot.org
&lt;/VirtualHost&gt;
</programlisting>
      </example>

      <para>The Apache server, as configured so far, uses the same log
      files for all virtual hosts (although this could be changed by adding
      <literal>CustomLog</literal> directives in the definitions of the
      virtual hosts). It therefore makes good sense to customize the format
      of this log file to have it include the name of the virtual host.
      This can be done by creating a
      <filename>/etc/apache2/conf-available/customlog.conf</filename> file that defines
      a new format for all log files (with the <literal>LogFormat</literal>
      directive) and by enabling it with <command>a2enconf customlog</command>.
      The <literal>CustomLog</literal> line must also be
      removed (or commented out) from the
      <filename>/etc/apache2/sites-available/000-default.conf</filename>
      file.</para>

      <example>
        <title>The <filename>/etc/apache2/conf.d/customlog.conf</filename> file</title>

        <programlisting role="scale">
# New log format including (virtual) host name
LogFormat "%v %h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" vhost

# Now let's use this "vhost" format by default
CustomLog /var/log/apache2/access.log vhost
</programlisting>
      </example>
    </section>
    <section>
      <title>Common Directives</title>

      <para>This section briefly reviews some of the commonly-used Apache
      configuration directives.</para>
      <indexterm><primary>Apache directives</primary></indexterm>
      <indexterm><primary>directives, Apache</primary></indexterm>

      <para>The main configuration file usually includes several
      <literal>Directory</literal> blocks; they allow specifying different
      behaviors for the server depending on the location of the file being
      served. Such a block commonly includes <literal>Options</literal> and
      <literal>AllowOverride</literal> directives.
      </para>
      <indexterm><primary><literal>Options</literal>, Apache directive</primary></indexterm>
      <indexterm><primary><literal>AllowOverride</literal>, Apache directive</primary></indexterm>

      <example>
        <title>Directory block</title>

        <programlisting>
&lt;Directory /var/www&gt;
Options Includes FollowSymlinks
AllowOverride All
DirectoryIndex index.php index.html index.htm
&lt;/Directory&gt;
</programlisting>
      </example>

      <para>The <literal>DirectoryIndex</literal> directive contains a list
      of files to try when the client request matches a directory. The
      first existing file in the list is used and sent as a response.
      </para>
      <indexterm><primary><literal>DirectoryIndex</literal>, Apache directive</primary></indexterm>

      <para>The <literal>Options</literal>
      directive is followed by a list of options to enable. The
      <literal>None</literal> value disables all options; correspondingly,
      <literal>All</literal> enables them all except
      <literal>MultiViews</literal>. Available options include:</para>
      <itemizedlist>
        <listitem>
	  <para><literal>ExecCGI</literal> indicates that CGI scripts can
	  be executed. <indexterm><primary><literal>ExecCGI</literal>,
	  Apache directive</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>FollowSymlinks</literal> tells the server that
	  symbolic links can be followed, and that the response should
	  contain the contents of the target of such links.
	  <indexterm><primary><literal>FollowSymlinks</literal>, Apache
	  directive</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>SymlinksIfOwnerMatch</literal> also tells the
	  server to follow symbolic links, but only when the link and the
	  its target have the same owner.
	  <indexterm><primary><literal>SymlinksIfOwnerMatch</literal>,
	  Apache directive</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>Includes</literal> enables <emphasis>Server Side
	  Includes</emphasis> (<emphasis>SSI</emphasis> for short). These
	  are directives embedded in HTML pages and executed on the fly for
	  each request. <indexterm><primary><literal>Includes</literal>,
	  Apache directive</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>Indexes</literal> tells the server to list the
	  contents of a directory if the HTTP request sent by the client
	  points at a directory without an index file (ie, when no files
	  mentioned by the <literal>DirectoryIndex</literal> directive
	  exists in this directory).
	  <indexterm><primary><literal>Indexes</literal>, Apache
	  directive</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>MultiViews</literal> enables content negotiation;
	  this can be used by the server to return a web page matching the
	  preferred language as configured in the browser.
	  <indexterm><primary><literal>MultiViews</literal>, Apache
	  directive</primary></indexterm></para>
        </listitem>
      </itemizedlist>

      <para></para>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> <filename>.htaccess</filename> file</title>

	<para>The <filename>.htaccess</filename> file contains Apache
	configuration directives enforced each time a request concerns an
	element of the directory where it is stored. The scope of these
	directives also recurses to all the subdirectories within.</para>
        <indexterm><primary><filename>.htaccess</filename></primary></indexterm>

	<para>Most of the directives that can occur in a
	<literal>Directory</literal> block are also legal in a
	<filename>.htaccess</filename> file.</para>
      </sidebar>

      <para>The <literal>AllowOverride</literal> directive lists all the
      options that can be enabled or disabled by way of a
      <filename>.htaccess</filename> file. A common use of this option is
      to restrict <literal>ExecCGI</literal>, so that the administrator
      chooses which users are allowed to run programs under the web
      server's identity (the <literal>www-data</literal> user).</para>
      <indexterm><primary><literal>AllowOverride</literal>, Apache directive</primary></indexterm>
      <section>
        <title>Requiring Authentication</title>
        <indexterm><primary>web authentication</primary></indexterm>

	<para>In some circumstances, access to part of a website needs to
	be restricted, so only legitimate users who provide a username and
	a password are granted access to the contents.</para>

        <example>
          <title><filename>.htaccess</filename> file requiring authentication</title>

          <programlisting>
Require valid-user
AuthName "Private directory"
AuthType Basic
AuthUserFile /etc/apache2/authfiles/htpasswd-private
</programlisting>
        </example>

        <sidebar>
          <title><emphasis>SECURITY</emphasis> No security</title>

	  <para>The authentication system used in the above example
	  (<literal>Basic</literal>) has minimal security as the password
	  is sent in clear text (it is only encoded as
	  <emphasis>base64</emphasis>, which is a simple encoding rather
	  than an encryption method). It should also be noted that the
	  documents “protected” by this mechanism also go over the
	  network in the clear. If security is important, the whole HTTP
	  connection should be encrypted with SSL.</para>
        </sidebar>

	<para>The
	<filename>/etc/apache2/authfiles/htpasswd-private</filename> file
	contains a list of users and passwords; it is commonly manipulated
	with the <command>htpasswd</command> command. For example, the
	following command is used to add a user or change their password:
	<indexterm><primary><command>htpasswd</command></primary></indexterm></para>

        <screen>
<computeroutput># </computeroutput><userinput>htpasswd /etc/apache2/authfiles/htpasswd-private <replaceable>user</replaceable>
</userinput><computeroutput>New password:
Re-type new password:
Adding password for user <replaceable>user</replaceable>
</computeroutput></screen>
      </section>
      <section>
        <title>Restricting Access</title>
        <indexterm><primary>web access restriction</primary></indexterm>

	<para>The <literal>Require</literal> directive controls access
	restrictions for a directory (and its subdirectories,
	recursively).</para>

	<indexterm><primary>Apache directives</primary></indexterm>
	<indexterm><primary>directives, Apache</primary></indexterm>
	<indexterm><primary><literal>Require</literal>, Apache directive</primary></indexterm>

	<para>It can be used to restrict access based on many
	criteria; we will stop at describing access restriction based
	on the IP address of the client, but it can be made much more
	powerful than that, especially when several
	<literal>Require</literal> directives are combined within a
	<literal>RequireAll</literal> block.</para>

        <example>
          <title>Only allow from the local network</title>

          <programlisting>Require ip 192.168.0.0/16
</programlisting>
        </example>

      <sidebar>
        <title><emphasis>ALTERNATIVE</emphasis> Old syntax</title>

        <para>The <literal>Require</literal> syntax is only available
        in Apache 2.4 (the version in <emphasis role="distribution">Jessie</emphasis>).  For users of
        <emphasis role="distribution">Wheezy</emphasis>, the
        Apache 2.2 syntax is different, and we describe it here mainly
        for reference, although it can also be made available in
        Apache 2.4 using the <literal>mod_access_compat</literal>
        module.</para>

	<para>The <literal>Allow from</literal> and <literal>Deny
	from</literal> directives control access restrictions for a
	directory (and its subdirectories, recursively).</para>

	<indexterm><primary><literal>Allow from</literal>, Apache directive</primary></indexterm>
	<indexterm><primary><literal>Deny from</literal>, Apache directive</primary></indexterm>
	<indexterm><primary><literal>Order</literal>, Apache directive</primary></indexterm>

	<para>The <literal>Order</literal> directive tells the server of
	the order in which the <literal>Allow from</literal> and
	<literal>Deny from</literal> directives are applied; the last one
	that matches takes precedence. In concrete terms, <literal>Order
	deny,allow</literal> allows access if no <literal>Deny
	from</literal> applies, or if an <literal>Allow from</literal>
	directive does. Conversely, <literal>Order allow,deny</literal>
	rejects access if no <literal>Allow from</literal> directive
	matches (or if a <literal>Deny from</literal> directive
	applies).</para>

	<para>The <literal>Allow from</literal> and <literal>Deny
	from</literal> directives can be followed by an IP address, a
	network (such as <literal>192.168.0.0/255.255.255.0</literal>,
	<literal>192.168.0.0/24</literal> or even
	<literal>192.168.0</literal>), a hostname or a domain name, or the
	<literal>all</literal> keyword, designating everyone.</para>

        <para>For instance, to reject connections by default but allow them
        from the local network, you could use this:</para>
        <programlisting>
Order deny,allow
Allow from 192.168.0.0/16
Deny from all
</programlisting>
        </sidebar>
      </section>
    </section>
    <section>
      <title>Log Analyzers</title>

      <para>A log analyzer is frequently installed on a web server; since
      the former provides the administrators with a precise idea of the
      usage patterns of the latter.</para>

      <para>The Falcot Corp administrators selected
      <emphasis>AWStats</emphasis> (<emphasis>Advanced Web
      Statistics</emphasis>) to analyze their Apache log files.</para>
      <indexterm><primary><emphasis>AWStats</emphasis></primary></indexterm>
      <indexterm><primary>web logs analyzer</primary></indexterm>
      <indexterm><primary>logs</primary><secondary>web logs analyzer</secondary></indexterm>
      <indexterm><primary>analyzer of web logs</primary></indexterm>

      <para>The first configuration step is the customization of the
      <filename>/etc/awstats/awstats.conf</filename> file.
      The Falcot administrators keep it unchanged apart from the following
      parameters:</para>

      <programlisting>
LogFile="/var/log/apache2/access.log"
LogFormat = "%virtualname %host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot"
SiteDomain="www.falcot.com"
HostAliases="falcot.com REGEX[^.*\.falcot\.com$]"
DNSLookup=1
LoadPlugin="tooltips"
</programlisting>

      <para>All these parameters are documented by comments in the template
      file. In particular, the <varname>LogFile</varname> and
      <varname>LogFormat</varname> parameters describe the location and
      format of the log file and the information it contains;
      <varname>SiteDomain</varname> and <varname>HostAliases</varname> list
      the various names under which the main web site is known.</para>

      <para>For high traffic sites, <varname>DNSLookup</varname> should
      usually not be set to <literal>1</literal>; for smaller sites, such
      as the Falcot one described above, this setting allows getting more
      readable reports that include full machine names instead of raw IP
      addresses.</para>

      <sidebar>
        <title><emphasis>SECURITY</emphasis> Access to statistics</title>

	<para>AWStats makes its statistics available on the website with no
	restrictions by default, but restrictions can be set up so that
	only a few (probably internal) IP addresses can access them; the
	list of allowed IP addresses needs to be defined in the
	<varname>AllowAccessFromWebToFollowingIPAddresses</varname>
	parameter</para>
      </sidebar>

      <para>AWStats will also be enabled for other virtual hosts; each
      virtual host needs its own configuration file, such as
      <filename>/etc/awstats/awstats.www.falcot.org.conf</filename>.</para>

      <example>
        <title>AWStats configuration file for a virtual host</title>

        <programlisting>
Include "/etc/awstats/awstats.conf"
SiteDomain="www.falcot.org"
HostAliases="falcot.org"
</programlisting>
      </example>

      <para>AWStats uses many icons stored in the
      <filename>/usr/share/awstats/icon/</filename> directory. In order for
      these icons to be available on the web site, the Apache configuration
      needs to be adapted to include the following directive:</para>

      <programlisting>
Alias /awstats-icon/ /usr/share/awstats/icon/
</programlisting>

      <para>After a few minutes (and once the script has been run a few
      times), the results are available online: <ulink type="block" url="http://www.falcot.com/cgi-bin/awstats.pl" /><ulink type="block" url="http://www.falcot.org/cgi-bin/awstats.pl" /></para>

      <sidebar>
        <title><emphasis>CAUTION</emphasis> Log file rotation</title>

	<para>In order for the statistics to take all the logs into
	account, <emphasis>AWStats</emphasis> needs to be run right before
	the Apache log files are rotated. Looking at the <literal>prerotate</literal>
        directive of <filename>/etc/logrotate.d/apache2</filename> file,
	this can be solved by putting a symlink to
	<filename>/usr/share/awstats/tools/update.sh</filename> in
	<filename>/etc/logrotate.d/httpd-prerotate</filename>:</para>

        <screen><computeroutput>$ </computeroutput><userinput>cat /etc/logrotate.d/apache2
</userinput><computeroutput>/var/log/apache2/*.log {
  daily
  missingok
  rotate 14
  compress
  delaycompress
  notifempty
  create 644 root adm
  sharedscripts
  postrotate
    if /etc/init.d/apache2 status &gt; /dev/null ; then \
      /etc/init.d/apache2 reload &gt; /dev/null; \
    fi;
  endscript
  prerotate
    if [ -d /etc/logrotate.d/httpd-prerotate ]; then \
      run-parts /etc/logrotate.d/httpd-prerotate; \
    fi; \
  endscript
}
$ </computeroutput><userinput>sudo mkdir -p /etc/logrotate.d/httpd-prerotate
</userinput><computeroutput>$ </computeroutput><userinput>sudo ln -sf /usr/share/awstats/tools/update.sh \
  /etc/logrotate.d/httpd-prerotate/awstats
</userinput></screen>

	<para>Note also that the log files created by
	<command>logrotate</command> need to be readable by everyone,
	especially AWStats. In the above example, this is ensured by the
	<literal>create 644 root adm</literal> line (instead of the default
	<literal>640</literal> permissions).</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.ftp-file-server">
    <title>FTP File Server</title>
    <indexterm><primary>FTP (<emphasis>File Transfer Protocol</emphasis>)</primary></indexterm>

    <para>FTP (<emphasis>File Transfer Protocol</emphasis>) is one of the
    first protocols of the Internet (RFC 959 was issued in 1985!). It was
    used to distribute files before the Web was even born (the HTTP
    protocol was created in 1990, and formally defined in its 1.0 version
    by RFC 1945, issued in 1996).</para>

    <para>This protocol allows both file uploads and file downloads; for
    this reason, it is still widely used to deploy updates to a website
    hosted by one's Internet service provider (or any other entity hosting
    websites). In these cases, secure access is enforced with a user
    identifier and password; on successful authentication, the FTP server
    grants read-write access to that user's home directory.</para>

    <para>Other FTP servers are mainly used to distribute files for public
    downloading; Debian packages are a good example. The contents of these
    servers is fetched from other, geographically remote, servers; it is
    then made available to less distant users. This means that client
    authentication is not required; as a consequence, this operating mode
    is known as “anonymous FTP”. To be perfectly correct, the clients
    do authenticate with the <literal>anonymous</literal> username; the
    password is often, by convention, the user's email address, but the
    server ignores it.</para>

    <para>Many FTP servers are available in Debian (<emphasis role="pkg">ftpd</emphasis>, <emphasis role="pkg">proftpd-basic</emphasis>,
    <emphasis role="pkg">pyftpd</emphasis> and so on). The Falcot Corp
    administrators picked <emphasis role="pkg">vsftpd</emphasis> because
    they only use the FTP server to distribute a few files (including a
    Debian package repository); since they don't need advanced features,
    they chose to focus on the security aspects.</para>
    <indexterm><primary><emphasis role="pkg">vsftpd</emphasis></primary></indexterm>

    <para>Installing the package creates an <literal>ftp</literal> system
    user. This account is always used for anonymous FTP connections, and
    its home directory (<filename>/srv/ftp/</filename>) is the root of the
    tree made available to users connecting to this service. The default
    configuration (in <filename>/etc/vsftpd.conf</filename>) requires some
    changes to cater to the simple need of making big files available
    for public downloads: anonymous access needs to be enabled
    (<literal>anonymous_enable=YES</literal>) and read-only access of
    local users needs to be disabled (<literal>local_enable=NO</literal>).
    The latter is particularly important since the FTP protocol doesn't
    use any form of encryption and the user password could be intercepted
    over the wire.
    </para>
  </section>
  <section id="sect.nfs-file-server">
    <title>NFS File Server</title>

    <para>NFS (<emphasis>Network File System</emphasis>) is a protocol
    allowing remote access to a filesystem through the network. All Unix
    systems can work with this protocol; when Windows systems are involved,
    Samba must be used instead.</para>
    <indexterm><primary>NFS</primary></indexterm>
    <indexterm><primary><emphasis>Network</emphasis></primary><secondary><emphasis>File System</emphasis></secondary></indexterm>
    <indexterm><primary>filesystem</primary><secondary>network</secondary></indexterm>
    <indexterm><primary>file</primary><secondary>server</secondary></indexterm>
    <indexterm><primary>server</primary><secondary>file</secondary></indexterm>

    <para>NFS is a very useful tool but, historically, it has suffered from
    many limitations, most of which have been addressed with version 4 of
    the protocol. The downside is that the latest version of NFS is
    harder to configure when you want to make use of basic security
    features such as authentication and encryption since it relies on
    Kerberos for those parts. And without those, the NFS protocol must
    be restricted to a trusted local network since data goes over the
    network unencrypted (a <emphasis>sniffer</emphasis> can intercept it) and
    access rights are granted based on the client's IP address (which can be
    spoofed).</para>

    <sidebar>
      <title><emphasis>DOCUMENTATION</emphasis> NFS HOWTO</title>

      <para>Good documentation to deploy NFSv4 is rather scarce. Here
        are some pointers with content of varying quality but that
        should at least give some hints on what should be done.
        <ulink type="block" url="https://help.ubuntu.com/community/NFSv4Howto" /> 
        <ulink type="block" url="http://wiki.linux-nfs.org/wiki/index.php/Nfsv4_configuration" /> 
      </para>
    </sidebar>
    <section>
      <title>Securing NFS</title>
      <indexterm><primary>NFS</primary><secondary>security</secondary></indexterm>

      <para>If you don't use the Kerberos-based security features, 
      it is vital to ensure that only the machines allowed to use NFS can
      connect to the various required RPC servers, because the basic
      protocol trusts the data received from the network. The firewall
      must also block <emphasis>IP spoofing</emphasis> so as to prevent an
      outside machine from acting as an inside one, and access to the
      appropriate ports must be restricted to the machines meant to access
      the NFS shares.</para>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> RPC</title>

	<para>RPC (<emphasis>Remote Procedure Call</emphasis>) is a Unix
	standard for remote services. NFS is one such service.</para>
        <indexterm><primary>RPC</primary></indexterm>
        <indexterm><primary><emphasis>Remote Procedure Call</emphasis></primary></indexterm>

	<para>RPC services register to a directory known as the
	<emphasis>portmapper</emphasis>. A client wishing to perform an NFS
	query first addresses the <emphasis>portmapper</emphasis> (on port
	111, either TCP or UDP), and asks for the NFS server; the reply
	usually mentions port 2049 (the default for NFS). Not all RPC
	services necessarily use a fixed port.</para>
      </sidebar>

      <para>Older versions of the protocol required other RPC services which
      used dynamically assigned ports. Fortunately, with NFS version 4,
      only port 2049 (for NFS) and 111 (for the portmapper) are needed and
      they are thus easy to firewall.
      </para>
      <indexterm><primary><command>portmapper</command></primary></indexterm>

    </section>
    <section>
      <title>NFS Server</title>

      <para>The NFS server is part of the Linux kernel; in kernels provided
      by Debian it is built as a kernel module. If the NFS server is to be
      run automatically on boot, the <emphasis role="pkg">nfs-kernel-server</emphasis> package should be installed;
      it contains the relevant start-up scripts.</para>

      <para>The NFS server configuration file,
      <filename>/etc/exports</filename>, lists the directories that are
      made available over the network (<emphasis>exported</emphasis>). For
      each NFS share, only the given list of machines is granted access.
      More fine-grained access control can be obtained with a few options.
      The syntax for this file is quite simple:</para>
      <indexterm><primary><filename>exports</filename></primary></indexterm>
      <indexterm><primary><filename>/etc/exports</filename></primary></indexterm>

      <programlisting>
/directory/to/share machine1(option1,option2,...) machine2(...) ...
</programlisting>

      <para>Note that with NFSv4, all exported directories must be part of
        a single hierarchy and that the root directory of that hierarchy
        must be exported and identified with the option <literal>fsid=0</literal>
        or <literal>fsid=root</literal>.
      </para>

      <para>Each machine can be identified either by its DNS name or its IP
      address. Whole sets of machines can also be specified using either a
      syntax such as <literal>*.falcot.com</literal> or an IP address range
      such as <literal>192.168.0.0/255.255.255.0</literal> or
      <literal>192.168.0.0/24</literal>.</para>

      <para>Directories are made available as read-only by default (or with
      the <literal>ro</literal> option). The <literal>rw</literal> option
      allows read-write access. NFS clients typically connect from a port
      restricted to root (in other words, below 1024); this restriction can
      be lifted by the <literal>insecure</literal> option (the
      <literal>secure</literal> option is implicit, but it can be made
      explicit if needed for clarity).</para>
      <indexterm><primary>NFS</primary><secondary>options</secondary></indexterm>

      <para>By default, the server only answers an NFS query when the
      current disk operation is complete (<literal>sync</literal> option);
      this can be disabled with the <literal>async</literal> option.
      Asynchronous writes increase performance a bit, but they decrease
      reliability since there is a data loss risk in case of the server
      crashing between the acknowledgment of the write and the actual
      write on disk. Since the default value changed recently (as compared
      to the historical value of NFS), an explicit setting is
      recommended.</para>

      <para>In order to not give root access to the filesystem to any NFS
      client, all queries appearing to come from a root user are considered
      by the server as coming from the <literal>nobody</literal> user.
      This behavior corresponds to the <literal>root_squash</literal>
      option, and is enabled by default. The
      <literal>no_root_squash</literal> option, which disables this
      behavior, is risky and should only be used in controlled
      environments. The
      <literal>anonuid=<replaceable>uid</replaceable></literal> and
      <literal>anongid=<replaceable>gid</replaceable></literal> options
      allow specifying another fake user to be used instead of
      UID/GID 65534 (which corresponds to user <literal>nobody</literal> and group
      <literal>nogroup</literal>).</para>

      <para>With NFSv4, you can add a <literal>sec</literal> option to
        indicate the security level that you want:
        <literal>sec=sys</literal> is the default with no special security
        features, <literal>sec=krb5</literal> enables authentication only,
        <literal>sec=krb5i</literal> adds integrity protection, and
        <literal>sec=krb5p</literal> is the most complete level which
        includes privacy protection (with data encryption). For this
        to work you need a working Kerberos setup (that service is not
        covered by this book).
      </para>

      <para>Other options are available; they are documented in the
      <citerefentry><refentrytitle>exports</refentrytitle>
      <manvolnum>5</manvolnum></citerefentry> manual page.</para>

      <sidebar>
        <title><emphasis>CAUTION</emphasis> First installation</title>

	<para>The <filename>/etc/init.d/nfs-kernel-server</filename> boot
	script only starts the server if the
	<filename>/etc/exports</filename> lists one or more valid NFS
	shares. On initial configuration, once this file has been edited to
	contain valid entries, the NFS server must therefore be started
	with the following command:</para>

        <screen>
<computeroutput># </computeroutput><userinput>service nfs-kernel-server start</userinput>
</screen>
      </sidebar>
    </section>
    <section>
      <title>NFS Client</title>
      <indexterm><primary>client</primary><secondary>NFS</secondary></indexterm>
      <indexterm><primary>NFS</primary><secondary>client</secondary></indexterm>

      <para>As with other filesystems, integrating an NFS share into the
      system hierarchy requires mounting. Since this filesystem has its
      peculiarities, a few adjustments were required in the syntaxes of the
      <command>mount</command> command and the
      <filename>/etc/fstab</filename> file.</para>

      <example>
        <title>Manually mounting with the <command>mount</command> command</title>

        <screen>
          <computeroutput># </computeroutput><userinput>mount -t nfs4 -o rw,nosuid arrakis.internal.falcot.com:/shared /srv/shared</userinput></screen>
      </example>

      <example>
        <title>NFS entry in the <filename>/etc/fstab</filename> file</title>

        <programlisting>
arrakis.internal.falcot.com:/shared /srv/shared nfs4 rw,nosuid 0 0
</programlisting>
      </example>

      <para>The entry described above mounts, at system startup, the
      <filename>/shared/</filename> NFS directory from the
      <literal>arrakis</literal> server into the local
      <filename>/srv/shared/</filename> directory. Read-write access is
      requested (hence the <literal>rw</literal> parameter). The
      <literal>nosuid</literal> option is a protection measure that wipes
      any <literal>setuid</literal> or <literal>setgid</literal> bit from
      programs stored on the share. If the NFS share is only meant to store
      documents, another recommended option is <literal>noexec</literal>,
      which prevents executing programs stored on the share. Note that
      on the server, the <filename>shared</filename> directory is below
      the NFSv4 root export (for example
      <filename>/export/shared</filename>), it is not a top-level
      directory.</para>

      <para>The <citerefentry><refentrytitle>nfs</refentrytitle>
      <manvolnum>5</manvolnum></citerefentry> manual page describes all the
      options in some detail.</para>
    </section>
  </section>
  <section id="sect.windows-file-server-with-samba">
    <title>Setting Up Windows Shares with Samba</title>

    <para>Samba is a suite of tools handling the SMB protocol (also known as
    “CIFS”) on Linux. This protocol is used by Windows for network
    shares and shared printers.</para>
    <indexterm><primary>Windows share</primary></indexterm>
    <indexterm><primary>Samba</primary></indexterm>
    <indexterm><primary>SMB</primary></indexterm>
    <indexterm><primary>CIFS</primary></indexterm>
    <indexterm><primary>server</primary><secondary>file</secondary></indexterm>

    <para>Samba can also act as an Windows domain controller. This is an
    outstanding tool for ensuring seamless integration of Linux servers and
    the office desktop machines still running Windows.</para>
    <section>
      <title>Samba Server</title>

      <para>The <emphasis role="pkg">samba</emphasis> package contains the
      main two servers of Samba 4, <command>smbd</command> and
      <command>nmbd</command>.</para>
      <indexterm><primary><command>smbd</command></primary></indexterm>
      <indexterm><primary><command>nmbd</command></primary></indexterm>

      

      <sidebar>
        <title><emphasis>DOCUMENTATION</emphasis> Going further</title>

	<para>The Samba server is extremely configurable and versatile, and
	can address a great many different use cases matching very
	different requirements and network architectures. This book only
        focuses on the use case where Samba is used as a standalone server,
        but it can also be a NT4 Domain Controller or a full Active
        Directory Domain Controller, or a simple member of an existing
        domain (which could be a managed by a Windows server).</para>
        <indexterm><primary>domain controller</primary></indexterm>
        <indexterm><primary>Windows domain</primary></indexterm>

	<para>The <emphasis role="pkg">samba-doc</emphasis> package
	contains a wealth of commented example files in
	<filename>/usr/share/doc/samba-doc/examples/</filename>.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>TOOL</emphasis> Authenticating with a Windows Server</title>

	<para>Winbind gives system administrators the option of using a
	Windows server as an authentication server. Winbind also
	integrates cleanly with PAM and NSS. This allows setting up Linux
	machines where all users of a Windows domain automatically get an
	account.</para>
        <indexterm><primary>Winbind</primary></indexterm>

	<para>More information can be found in the
	<filename>/usr/share/doc/samba-doc/examples/pam_winbind/</filename>
	directory.</para>
      </sidebar>
      <section>
        <title>Configuring with <command>debconf</command></title>

	<para>The package sets up a minimal configuration during the initial
        installation but you should really run <command>dpkg-reconfigure
        samba-common</command> to adapt it:</para>

	<para>The first piece of required information is the name of the
	workgroup where the Samba server will belong (the answer is
	<literal>FALCOTNET</literal> in our case).</para>

	<para>The package also proposes identifying the WINS server from
	the information provided by the DHCP daemon. The Falcot Corp
	administrators rejected this option, since they intend to use the
	Samba server itself as the WINS server.</para>
        <indexterm><primary>WINS</primary></indexterm>
      </section>
      <section>
        <title>Configuring Manually</title>
        <section>
          <title>Changes to <filename>smb.conf</filename></title>

	  <para>The requirements at Falcot require other options to be
	  modified in the <filename>/etc/samba/smb.conf</filename>
	  configuration file. The following excerpts summarize the changes
	  that were effected in the <literal>[global]</literal>
	  section.</para>

          <programlisting>
[global]

## Browsing/Identification ###

# Change this to the workgroup/NT-domain name your Samba server will part of
   workgroup = FALCOTNET

# Windows Internet Name Serving Support Section:
# WINS Support - Tells the NMBD component of Samba to enable its WINS Server
   wins support = yes <co id="smb.conf.wins"></co>

[...]

####### Authentication #######

# Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller". 
#
# Most people will want "standalone sever" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
   server role = standalone server

# "security = user" is always a good idea. This will require a Unix account
# in this server for every user accessing the server.
   security = user <co id="smb.conf.security"></co>

[...]
</programlisting>
          <calloutlist>
            <callout arearefs="smb.conf.wins">
	      <para>Indicates that Samba should act as a Netbios name
	      server (WINS) for the local network.</para>
            </callout>
            <callout arearefs="smb.conf.security">
	      <para>This is the default value for this parameter; however,
	      since it is central to the Samba configuration, filling it
	      explicitly is recommended. Each user must authenticate before
	      accessing any share.</para>
            </callout>
          </calloutlist>
        </section>
        <section>
          <title>Adding Users</title>

	  <para>Each Samba user needs an account on the server; the Unix
	  accounts must be created first, then the user needs to be
	  registered in Samba's database. The Unix step is done quite
	  normally (using <command>adduser</command> for instance).</para>

	  <para>Adding an existing user to the Samba database is a matter
	  of running the <command>smbpasswd -a
	  <replaceable>user</replaceable></command> command; this command
	  asks for the password interactively.</para>

	  <para>A user can be deleted with the <command>smbpasswd -x
	  <replaceable>user</replaceable></command> command. A Samba
	  account can also be temporarily disabled (with <command>smbpasswd
	  -d <replaceable>user</replaceable></command>) and re-enabled
	  later (with <command>smbpasswd -e
	  <replaceable>user</replaceable></command>).</para>
        </section>
      </section>
    </section>
    <section>
      <title>Samba Client</title>

      <para>The client features in Samba allow a Linux machine to access
      Windows shares and shared printers. The required programs are
      available in the <emphasis role="pkg">cifs-utils</emphasis> and <emphasis role="pkg">smbclient</emphasis> packages.</para>
      <indexterm><primary><emphasis>smbclient</emphasis></primary></indexterm>
      <indexterm><primary><emphasis>cifs-utils</emphasis></primary></indexterm>
      <section>
        <title>The <command>smbclient</command> Program</title>

	<para>The <command>smbclient</command> program queries SMB servers.
	It accepts a <literal>-U <replaceable>user</replaceable></literal>
	option, for connecting to the server under a specific identity.
	<command>smbclient
	//<replaceable>server</replaceable>/<replaceable>share</replaceable></command>
	accesses the share in an interactive way similar to the
	command-line FTP client. <command>smbclient -L
	<replaceable>server</replaceable></command> lists all available
	(and visible) shares on a server.</para>
      </section>
      <section>
        <title>Mounting Windows Shares</title>

	<para>The <command>mount</command> command allows mounting a
	Windows share into the Linux filesystem hierarchy (with the
	help of <command>mount.cifs</command> provided by
	<emphasis role="pkg">cifs-utils</emphasis>).</para>
        <indexterm><primary><command>mount.cifs</command></primary></indexterm>
	<indexterm><primary>Windows share, mounting</primary></indexterm>

        <example>
          <title>Mounting a Windows share</title>

          <programlisting>
mount -t cifs //arrakis/shared /shared \
      -o credentials=/etc/smb-credentials
</programlisting>
        </example>

	<para>The <filename>/etc/smb-credentials</filename> file
	(which must not be readable by users) has the following
	format:</para>

        <programlisting>
username = <replaceable>user</replaceable>
password = <replaceable>password</replaceable></programlisting>

	<para>Other options can be specified on the command-line; their
	full list is available in the
	<citerefentry><refentrytitle>mount.cifs</refentrytitle>
	<manvolnum>1</manvolnum></citerefentry> manual page. Two options in
	particular can be interesting: <literal>uid</literal> and
	<literal>gid</literal> allow forcing the owner and group of files
	available on the mount, so as not to restrict access to
	root.</para>

	<para>A mount of a Windows share can also be configured
	in <filename>/etc/fstab</filename>:</para>

        <programlisting>
//<replaceable>server</replaceable>/shared /shared cifs credentials=/etc/smb-credentials
</programlisting>

	<para>Unmounting a SMB/CIFS share is done with the standard
	<command>umount</command> command.</para>
      </section>
      <section>
        <title>Printing on a Shared Printer</title>

	<para>CUPS is an elegant solution for printing from a Linux
	workstation to a printer shared by a Windows machine. When the
	<emphasis role="pkg">smbclient</emphasis> is installed, CUPS allows
	installing Windows shared printers automatically.</para>
        <indexterm><primary>printing</primary><secondary>network</secondary></indexterm>

	<para>Here are the required steps:</para>
        <itemizedlist>
          <listitem>
	    <para>Enter the CUPS configuration interface:
	    <literal>http://localhost:631/admin</literal></para>
          </listitem>
          <listitem>
	    <para>Click on “Add Printer”.</para>
          </listitem>
          <listitem>
	    <para>Choose the printer device, pick “Windows Printer
	    via SAMBA”.</para>
          </listitem>
          <listitem>
	    <para>Enter the connection URI for the network printer. It should look like the
	    following:</para>
	   
	    <para><literal>smb://<replaceable>user</replaceable>:<replaceable>password</replaceable>@<replaceable>server</replaceable>/<replaceable>printer</replaceable></literal>.</para>
          </listitem>
	  <listitem>
	    <para>Enter the name that will uniquely identify this printer.
	    Then enter the description and location of the printer. Those are the
	    strings that will be shown to end users to help them identify the
	    printers.</para>
	  </listitem>
	  <listitem>
	    <para>Indicate the manufacturer/model of the printer, or directly provide
	    a working printer description file (PPD).</para>
	  </listitem>
        </itemizedlist>

	<para>Voilà, the printer is operational!</para>
      </section>
    </section>
  </section>
  <section id="sect.http-ftp-proxy">
    <title>HTTP/FTP Proxy</title>

    <para>An HTTP/FTP proxy acts as an intermediary for HTTP and/or FTP
    connections. Its role is twofold:</para>
    <itemizedlist>
      <listitem>
	<para>Caching: recently downloaded documents are copied locally,
	which avoids multiple downloads.</para>
      </listitem>
      <listitem>
	<para>Filtering server: if use of the proxy is mandated (and
	outgoing connections are blocked unless they go through the proxy),
	then the proxy can determine whether or not the request is to be
	granted.</para>
      </listitem>
    </itemizedlist>
    <indexterm><primary>HTTP/FTP proxy</primary></indexterm>
    <indexterm><primary>mellomtjener lager</primary></indexterm>

    <para>Falcot Corp selected Squid as their proxy server.</para>
    <indexterm><primary>Squid</primary></indexterm>
    <section>
      <title>Installing</title>

      <para>The <emphasis role="pkg">squid3</emphasis> Debian package only
      contains the modular (caching) proxy. Turning it into a filtering
      server requires installing the additional <emphasis role="pkg">squidguard</emphasis> package. In addition, <emphasis role="pkg">squid-cgi</emphasis> provides a querying and
      administration interface for a Squid proxy.</para>

      <para>Prior to installing, care should be taken to check that the
      system can identify its own complete name: the <command>hostname
      -f</command> must return a fully-qualified name (including a domain).
      If it does not, then the <filename>/etc/hosts</filename> file should
      be edited to contain the full name of the system (for instance,
      <literal>arrakis.falcot.com</literal>). The official computer name
      should be validated with the network administrator in order to avoid
      potential name conflicts.</para>
    </section>
    <section>
      <title>Configuring a Cache</title>

      <para>Enabling the caching server feature is a simple matter of
      editing the <filename>/etc/squid3/squid.conf</filename> configuration
      file and allowing machines from the local network to run queries
      through the proxy. The following example shows the modifications made
      by the Falcot Corp administrators:</para>

      <example>
        <title>The <filename>/etc/squid3/squid.conf</filename> file (excerpts)</title>

        <programlisting>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS

# Example rule allowing access from your local networks. Adapt
# to list your (internal) IP networks from where browsing should
# be allowed
acl our_networks src 192.168.1.0/24 192.168.2.0/24
http_access allow our_networks
http_access allow localhost
# And finally deny all other access to this proxy
http_access deny all
</programlisting>
      </example>
    </section>
    <section>
      <title>Configuring a Filter</title>

      <para><command>squid</command> itself does not perform the filtering;
      this action is delegated to <command>squidGuard</command>. The former
      must then be configured to interact with the latter. This involves
      adding the following directive to the
      <filename>/etc/squid3/squid.conf</filename> file:</para>
      <indexterm><primary><command>squidGuard</command></primary></indexterm>

      <programlisting>
url_rewrite_program /usr/bin/squidGuard -c /etc/squid3/squidGuard.conf 
</programlisting>

      <para>The <filename>/usr/lib/cgi-bin/squidGuard.cgi</filename> CGI
      program also needs to be installed, using
      <filename>/usr/share/doc/squidguard/examples/squidGuard.cgi.gz</filename>
      as a starting point. Required modifications to this script are the
      <varname>$proxy</varname> and <varname>$proxymaster</varname>
      variables (the name of the proxy and the administrator's contact
      e-mail, respectively). The <varname>$image</varname> and
      <varname>$redirect</varname> variables should point to existing
      images representing the rejection of a query.</para>

      <para>The filter is enabled with the <command>service squid3
      reload</command> command. However, since the <emphasis role="pkg">squidguard</emphasis> package does no filtering by
      default, it is the administrator's task to define the policy. This
      can be done by creating the
      <filename>/etc/squid3/squidGuard.conf</filename> file (using
      <filename>/etc/squidguard/squidGuard.conf.default</filename> as
      template if required).</para>

      <para>The working database must be regenerated with
      <command>update-squidguard</command> after each change of the
      <command>squidGuard</command> configuration file (or one of the lists
      of domains or URLs it mentions). The configuration file syntax is
      documented on the following website: <ulink type="block" url="http://www.squidguard.org/Doc/configure.html" /></para>
      <indexterm><primary><command>update-squidguard</command></primary></indexterm>

      <sidebar>
        <title><emphasis>ALTERNATIVE</emphasis> DansGuardian</title>
        <indexterm><primary><emphasis role="pkg">dansguardian</emphasis></primary></indexterm>
        <indexterm><primary>PICS</primary></indexterm>

	<para>The <emphasis role="pkg">dansguardian</emphasis> package is
	an alternative to <emphasis>squidguard</emphasis>. This software
	does not simply handle a blacklist of forbidden URLs, but it can
	take advantage of the PICS system (<emphasis>Platform for Internet
	Content Selection</emphasis>) to decide whether a page is
	acceptable by dynamic analysis of its contents.</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.ldap-directory">
    <title>LDAP Directory</title>
    <indexterm><primary>LDAP</primary></indexterm>
    <indexterm><primary>OpenLDAP</primary></indexterm>
    <indexterm><primary>directory, LDAP</primary></indexterm>

    <para>OpenLDAP is an implementation of the LDAP protocol; in other
    words, it is a special-purpose database designed for storing
    directories. In the most common use case, using an LDAP server allows
    centralizing management of user accounts and the related permissions.
    Moreover, an LDAP database is easily replicated, which allows setting
    up multiple synchronized LDAP servers. When the network and the user
    base grows quickly, the load can then be balanced across several
    servers.</para>

    <para>LDAP data is structured and hierarchical. The structure is
    defined by “schemas” which describe the kind of objects that the
    database can store, with a list of all their possible attributes. The
    syntax used to refer to a particular object in the database is based on
    this structure, which explains its complexity.</para>
    <section>
      <title>Installing</title>

      <para>The <emphasis role="pkg">slapd</emphasis> package contains the
      OpenLDAP server. The <emphasis role="pkg">ldap-utils</emphasis>
      package includes command-line tools for interacting with LDAP
      servers.</para>
      <indexterm><primary><emphasis>slapd</emphasis></primary></indexterm>

      <para>
        Installing <emphasis role="pkg">slapd</emphasis> usually
        asks very few questions and the resulting database is unlikely
        to suit your needs. Fortunately a simple <command>dpkg-reconfigure
        slapd</command> will let you reconfigure the LDAP database with
        more details:
      </para>
      <itemizedlist>
        <listitem>
	  <para>Omit OpenLDAP server configuration? No, of course, we want
	  to configure this service.</para>
        </listitem>
        <listitem>
	  <para>DNS domain name:
	  “<literal>falcot.com</literal>”.</para>
        </listitem>
        <listitem>
	  <para>Organization name: “Falcot Corp”.</para>
        </listitem>
        <listitem>
	  <para>An administrative passwords needs to be typed in.</para>
        </listitem>
        <listitem>
	  <para>Database backend to use: “MDB”.</para>
        </listitem>
        <listitem>
	  <para>Do you want the database to be removed when <emphasis role="pkg">slapd</emphasis> is purged? No. No point in risking
	  losing the database in case of a mistake.</para>
        </listitem>
        <listitem>
	  <para>Move old database? This question is only asked when the
	  configuration is attempted while a database already exists. Only
	  answer “yes” if you actually want to start again from a clean
	  database, for instance if you run <command>dpkg-reconfigure
	  slapd</command> right after the initial installation.</para>
        </listitem>
        <listitem>
	  <para>Allow LDAPv2 protocol? No, there is no point in that. All
	  the tools we are going to use understand the LDAPv3
	  protocol.</para>
        </listitem>
      </itemizedlist>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> LDIF format</title>

	<para>An LDIF file (<emphasis>LDAP Data Interchange
	Format</emphasis>) is a portable text file describing the contents
	of an LDAP database (or a portion thereof); this can then be used
	to inject the data into any other LDAP server.</para>
        <indexterm><primary>LDIF</primary></indexterm>
      </sidebar>

      <para>A minimal database is now configured, as demonstrated by the
      following query:</para>

      <screen>
<computeroutput>$ </computeroutput><userinput>ldapsearch -x -b dc=falcot,dc=com</userinput>
<computeroutput># extended LDIF
#
# LDAPv3
# base &lt;dc=falcot,dc=com&gt; with scope sub
# filter: (objectclass=*)
# requesting: ALL
#

# falcot.com
dn: dc=falcot,dc=com
objectClass: top
objectClass: dcObject
objectClass: organization
o: Falcot Corp
dc: falcot

# admin, falcot.com
dn: cn=admin,dc=falcot,dc=com
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
description: LDAP administrator

# search result
search: 2
result: 0 Success

# numResponses: 3
# numEntries: 2
</computeroutput>
</screen>

      <para>The query returned two objects: the organization itself, and
      the administrative user.</para>
    </section>
    <section>
      <title>Filling in the Directory</title>

      <para>Since an empty database is not particularly useful, we are going
      to inject into it all the existing directories; this includes the
      users, groups, services and hosts databases.</para>

      <para>The <emphasis role="pkg">migrationtools</emphasis> package
      provides a set of scripts dedicated to extract data from the standard
      Unix directories (<filename>/etc/passwd</filename>,
      <filename>/etc/group</filename>, <filename>/etc/services</filename>,
      <filename>/etc/hosts</filename> and so on), convert this data, and
      inject it into the LDAP database.</para>
      <indexterm><primary><emphasis role="pkg">migrationtools</emphasis></primary></indexterm>

      <para>Once the package is installed, the
      <filename>/etc/migrationtools/migrate_common.ph</filename> must be
      edited; the <varname>IGNORE_UID_BELOW</varname> and
      <varname>IGNORE_GID_BELOW</varname> options need to be enabled
      (uncommenting them is enough), and
      <varname>DEFAULT_MAIL_DOMAIN</varname>/<varname>DEFAULT_BASE</varname>
      need to be updated.
      </para>

      <para>The actual migration operation is handled by the
      <command>migrate_all_online.sh</command> command, as follows:</para>

      <screen>
<computeroutput># </computeroutput><userinput>cd /usr/share/migrationtools</userinput>
<computeroutput># </computeroutput><userinput>LDAPADD="/usr/bin/ldapadd -c" ETC_ALIASES=/dev/null ./migrate_all_online.sh</userinput>
</screen>

      <para>The <command>migrate_all_online.sh</command> asks a few
      questions about the LDAP database into which the data is to be
      migrated. <xref linkend="tab-migrate-all" xrefstyle="select: label       nopage" /> summarizes the answers given in the Falcot use-case.</para>
 
      <table colsep="1" id="tab-migrate-all">
        <title>Answers to questions asked by the <command>migrate_all_online.sh</command> script</title>
	<tgroup cols="2"><colspec align="justify"></colspec><colspec align="justify"></colspec>
	<thead>
	  <row><entry>Question</entry><entry>Answer</entry></row>
	</thead>
	<tbody>
	  <row>
	    <entry>X.500 naming context</entry>
	    <entry><literal>dc=falcot,dc=com</literal></entry>
	  </row>
	  <row>
	    <entry>LDAP server hostname</entry>
	    <entry><literal>localhost</literal></entry>
	  </row>
	  <row>
	    <entry>Manager DN</entry>
	    <entry><literal>cn=admin,dc=falcot,dc=com</literal></entry>
	  </row>
	  <row>
	    <entry>Bind credentials</entry>
	    <entry>the administrative password</entry>
	  </row>
	  <row>
	    <entry>Create DUAConfigProfile</entry>
	    <entry>no</entry>
	  </row>
	</tbody>
	</tgroup>
      </table>

      <para>We deliberately ignore migration of the
      <filename>/etc/aliases</filename> file, since the standard schema as
      provided by Debian does not include the structures that this script
      uses to describe email aliases. Should we want to integrate this data
      into the directory, the
      <filename>/etc/ldap/schema/misc.schema</filename> file should be
      added to the standard schema.</para>

      <sidebar>
        <title><emphasis>TOOL</emphasis> Browsing an LDAP directory</title>

	<para>The <command>jxplorer</command> command (in the package of the
	same name) is a graphical tool allowing to browse and edit an LDAP
	database. It is an interesting tool that provides an administrator
	with a good overview of the hierarchical structure of the LDAP
	data.</para>
        <indexterm><primary><command>jxplorer</command></primary></indexterm>
      </sidebar>

      <para>Also note the use of the <literal>-c</literal> option to the
      <command>ldapadd</command> command; this option requests that
      processing doesn't stop in case of error. Using this option is
      required because converting the <filename>/etc/services</filename>
      often generates a few errors that can safely be ignored.</para>
    </section>
    <section>
      <title>Managing Accounts with LDAP</title>

      <para>Now the LDAP database contains some useful information, the
      time has come to make use of this data. This section focuses on how
      to configure a Linux system so that the various system directories
      use the LDAP database.</para>
      <section id="sect.config-nss">
        <title>Configuring NSS</title>

	<para>The NSS system (Name Service Switch, see sidebar <xref linkend="sidebar.intro-nss" />) is a modular system designed to define
	or fetch information for system directories. Using LDAP as a source
	of data for NSS requires installing the <emphasis role="pkg">libnss-ldap</emphasis> package. Its installation asks a
	few questions; the answers are summarized in <xref linkend="tab-libnss-ldap" xrefstyle="select: label  nopage" />.</para>
        <indexterm><primary><emphasis>libnss-ldap</emphasis></primary></indexterm>

        <table colsep="1" id="tab-libnss-ldap">
          <title>Configuring the <emphasis role="pkg">libnss-ldap</emphasis> package</title>
          <tgroup cols="2">
            <colspec align="justify"></colspec>
            <colspec align="justify"></colspec>
            <thead>
              <row>
                <entry>Question</entry>
                <entry>Answer</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>LDAP server Uniform Resource Identifier</entry>
                <entry>
                  <literal>ldap://ldap.falcot.com</literal>
                </entry>
              </row>
              <row>
                <entry>Distinguished name of the search base</entry>
                <entry>
                  <literal>dc=falcot,dc=com</literal>
                </entry>
              </row>
              <row>
                <entry>LDAP version to use</entry>
                <entry>
                  <literal>3</literal>
                </entry>
              </row>
              <row>
                <entry>Does the LDAP database require login?</entry>
                <entry>no</entry>
              </row>
	      <row>
	        <entry>Special LDAP privileges for root</entry>
		<entry>yes</entry>
	      </row>
	      <row>
	        <entry>Make the configuration file readable/writeable by its owner only</entry>
		<entry>no</entry>
	      </row>
              <row>
                <entry>LDAP account for root</entry>
                <entry>
                  <literal>cn=admin,dc=falcot,dc=com</literal>
                </entry>
              </row>
              <row>
                <entry>LDAP root account password</entry>
                <entry>the administrative password</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

	<para>The <filename>/etc/nsswitch.conf</filename> file then needs
	to be modified, so as to configure NSS to use the freshly-installed
	<command>ldap</command> module.</para>

        <example>
          <title>The <filename>/etc/nsswitch.conf</filename> file</title>

          <programlisting>
# /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc' and `info' packages installed, try:
# `info libc "Name Service Switch"' for information about this file.

passwd: ldap compat
group: ldap compat
shadow: ldap compat

hosts: files dns ldap
networks: ldap files

protocols: ldap db files
services: ldap db files
ethers: ldap db files
rpc: ldap db files

netgroup: ldap files
</programlisting>
        </example>

	<para>The <command>ldap</command> module is usually inserted before
	others, and it will therefore be queried first. The notable
	exception is the <literal>hosts</literal> service since contacting
	the LDAP server requires consulting DNS first (to resolve
	<literal>ldap.falcot.com</literal>). Without this exception, a
	hostname query would try to ask the LDAP server; this would trigger
	a name resolution for the LDAP server, and so on in an infinite
	loop.</para>

	<para>If the LDAP server should be considered authoritative (and
	the local files used by the <command>files</command> module
	disregarded), services can be configured with the following
	syntax:</para>

	<para><literal><replaceable>service</replaceable>: ldap
	[NOTFOUND=return] files</literal>.</para>

	<para>If the requested entry does not exist in the LDAP database,
	the query will return a “not existing” reply even if the
	resource does exist in one of the local files; these local files
	will only be used when the LDAP service is down.</para>
      </section>
      <section id="sect.config-pam">
        <title>Configuring PAM</title>

	<para>This section describes a PAM configuration (see sidebar <xref linkend="sidebar.intro-pam" />) that will allow applications to
	perform the required authentications against the LDAP
	database.</para>

        <sidebar>
          <title><emphasis>CAUTION</emphasis> Broken authentication</title>

	  <para>Changing the standard PAM configuration used by various
	  programs is a sensitive operation. A mistake can lead to broken
	  authentication, which could prevent logging in. Keeping a root
	  shell open is therefore a good precaution. If configuration
	  errors occur, they can be then fixed and the services restarted
	  with minimal effort.</para>
        </sidebar>

	<para>The LDAP module for PAM is provided by the <emphasis role="pkg">libpam-ldap</emphasis> package. Installing this package
	asks a few questions very similar to those in <emphasis role="pkg">libnss-ldap</emphasis>; some configuration parameters
	(such as the URI for the LDAP server) are even actually shared with
	the <emphasis role="pkg">libnss-ldap</emphasis> package. Answers
	are summarized in <xref linkend="tab-libpam-ldap" xrefstyle="select: label nopage" />.</para>
        <indexterm><primary><emphasis>libpam-ldap</emphasis></primary></indexterm>

        <table colsep="1" id="tab-libpam-ldap">
          <title>Configuration of <emphasis>libpam-ldap</emphasis></title>
          <tgroup cols="2">
            <colspec align="justify"></colspec>
            <colspec align="justify"></colspec>
            <thead>
              <row>
                <entry>Question</entry>
                <entry>Answer</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Allow LDAP admin account to behave like local root?</entry>
                <entry>Yes. This allows using the usual <command>passwd</command> command for changing passwords stored in the LDAP database.</entry>
              </row>
              <row>
                <entry>Does the LDAP database require logging in?</entry>
                <entry>no</entry>
              </row>
              <row>
                <entry>LDAP account for root</entry>
                <entry>
                  <literal>cn=admin,dc=falcot,dc=com</literal>
                </entry>
              </row>
              <row>
                <entry>LDAP root account password</entry>
                <entry>the LDAP database administrative password</entry>
              </row>
	      <row>
	        <entry>Local encryption algorithm to use for passwords</entry>
		<entry>crypt</entry>
	      </row>
            </tbody>
          </tgroup>
        </table>

	<para>Installing <emphasis role="pkg">libpam-ldap</emphasis>
	automatically adapts the default PAM configuration defined in the
	<filename>/etc/pam.d/common-auth</filename>,
	<filename>/etc/pam.d/common-password</filename> and
	<filename>/etc/pam.d/common-account</filename> files. This
	mechanism uses the dedicated <command>pam-auth-update</command>
	tool (provided by the <emphasis role="pkg">libpam-runtime</emphasis> package). This tool can also
	be run by the administrator should they wish to enable or disable
	PAM modules.</para>
        <indexterm><primary><filename>common-auth</filename></primary></indexterm>
        <indexterm><primary><filename>/etc/pam.d/common-auth</filename></primary></indexterm>
        <indexterm><primary><filename>common-password</filename></primary></indexterm>
        <indexterm><primary><filename>/etc/pam.d/common-password</filename></primary></indexterm>
        <indexterm><primary><filename>common-account</filename></primary></indexterm>
        <indexterm><primary><filename>/etc/pam.d/common-account</filename></primary></indexterm>
      </section>
      <section>
        <title>Securing LDAP Data Exchanges</title>
        <indexterm><primary>LDAP</primary><secondary>secure</secondary></indexterm>

	<para>By default, the LDAP protocol transits on the network as
	cleartext; this includes the (encrypted) passwords. Since the
	encrypted passwords can be extracted from the network, they can be
	vulnerable to dictionary-type attacks. This can be avoided by using
	an extra encryption layer; enabling this layer is the topic of this
	section.</para>
        <section>
          <title>Å sette opp tjeneren</title>
          <indexterm><primary><foreignphrase>OpenSSL</foreignphrase></primary><secondary>creating keys</secondary></indexterm>
          <indexterm><primary>key pair</primary></indexterm>

	  <para>The first step is to create a key pair (comprising a public
	  key and a private key) for the LDAP server. The Falcot administrators
	  reuse <emphasis>easy-rsa</emphasis> to generate it (see
	  <xref linkend="sect.easy-rsa" />).
	  Running <command>./build-server-key ldap.falcot.com</command> asks
	  a few mundane questions (location, organization name and so on).
	  The answer to the “common name” question
	  <emphasis>must</emphasis> be the fully-qualified hostname for the
	  LDAP server; in our case,
	  <literal>ldap.falcot.com</literal>.</para>

	  <para>This command creates a certificate in the
	  <filename>keys/ldap.falcot.com.crt</filename> file; the corresponding private
	  key is stored in <filename>keys/ldap.falcot.com.key</filename>.</para>

	  <para>Now these keys have to be installed in their standard
	  location, and we must make sure that the private file is readable
	  by the LDAP server which runs under the <literal>openldap</literal>
	  user identity:</para>

          <screen><computeroutput># </computeroutput><userinput>adduser openldap ssl-cert
</userinput><computeroutput>Adding user `openldap' to group `ssl-cert' ...
Adding user openldap to group ssl-cert
Done.
# </computeroutput><userinput>mv keys/ldap.falcot.com.key /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chown root:ssl-cert /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>chmod 0640 /etc/ssl/private/ldap.falcot.com.key
</userinput><computeroutput># </computeroutput><userinput>mv newcert.pem /etc/ssl/certs/ldap.falcot.com.pem
</userinput></screen>

	  <para>The <command>slapd</command> daemon also needs to be told
	  to use these keys for encryption. The LDAP server configuration
	  is managed dynamically: the configuration can be updated with
	  normal LDAP operations on the <literal>cn=config</literal> object
	  hierarchy, and the server updates <filename>/etc/ldap/slapd.d</filename>
	  in real time to make the configuration persistent.
	  <command>ldapmodify</command> is thus the right tool to update
	  the configuration:</para>

          <example>
            <title>Configuring <command>slapd</command> for encryption</title>

            <screen><computeroutput># </computeroutput><userinput>cat &gt;ssl.ldif &lt;&lt;END
dn: cn=config
changetype: modify
add: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/certs/ldap.falcot.com.pem
-
add: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/private/ldap.falcot.com.key
-
END
</userinput><computeroutput># </computeroutput><userinput>ldapmodify -Y EXTERNAL -H ldapi:/// -f ssl.ldif
</userinput><computeroutput>SASL/EXTERNAL authentication started
SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
SASL SSF: 0
modifying entry "cn=config"
</computeroutput></screen>
          </example>

	  <sidebar>
	    <title><emphasis>TOOL</emphasis> <command>ldapvi</command> to edit an LDAP directory</title>
	    <indexterm><primary><command>ldapvi</command></primary></indexterm>
	    <para>With <command>ldapvi</command>, you can display an LDIF
	    output of any part of the LDAP directory, make some changes in
	    the text editor, and let the tool do the corresponding LDAP
	    operations for you.
	    </para>
	    <para>It is thus a convenient way to update the configuration
	    of the LDAP server, simply by editing the <literal>cn=config</literal>
	    hierarchy.</para>
	    <screen><computeroutput># </computeroutput><userinput>ldapvi -Y EXTERNAL -h ldapi:/// -b cn=config
</userinput></screen>
	  </sidebar>

	  <para>The last step for enabling encryption involves changing the
	  <varname>SLAPD_SERVICES</varname> variable in the
	  <filename>/etc/default/slapd</filename> file. We'll play it safe
	  and disable unsecured LDAP altogether.</para>

          <example>
            <title>The <filename>/etc/default/slapd</filename> file</title>

            <programlisting>
# Default location of the slapd.conf file or slapd.d cn=config directory. If
# empty, use the compiled-in default (/etc/ldap/slapd.d with a fallback to
# /etc/ldap/slapd.conf).
SLAPD_CONF=

# System account to run the slapd server under. If empty the server
# will run as root.
SLAPD_USER="openldap"

# System group to run the slapd server under. If empty the server will
# run in the primary group of its user.
SLAPD_GROUP="openldap"

# Path to the pid file of the slapd server. If not set the init.d script
# will try to figure it out from $SLAPD_CONF (/etc/ldap/slapd.conf by
# default)
SLAPD_PIDFILE=

# slapd normally serves ldap only on all TCP-ports 389. slapd can also
# service requests on TCP-port 636 (ldaps) and requests via unix
# sockets.
# Example usage:
# SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"
SLAPD_SERVICES="ldaps:/// ldapi:///"

# If SLAPD_NO_START is set, the init script will not start or restart
# slapd (but stop will still work).  Uncomment this if you are
# starting slapd via some other means or if you don't want slapd normally
# started at boot.
#SLAPD_NO_START=1

# If SLAPD_SENTINEL_FILE is set to path to a file and that file exists,
# the init script will not start or restart slapd (but stop will still
# work).  Use this for temporarily disabling startup of slapd (when doing
# maintenance, for example, or through a configuration management system)
# when you don't want to edit a configuration file.
SLAPD_SENTINEL_FILE=/etc/ldap/noslapd

# For Kerberos authentication (via SASL), slapd by default uses the system
# keytab file (/etc/krb5.keytab).  To use a different keytab file,
# uncomment this line and change the path.
#export KRB5_KTNAME=/etc/krb5.keytab

# Additional options to pass to slapd
SLAPD_OPTIONS=""
</programlisting>
          </example>
        </section>
        <section>
          <title>Å sette opp klienten</title>

	  <para>On the client side, the configuration for the
	  <emphasis>libpam-ldap</emphasis> and
	  <emphasis>libnss-ldap</emphasis> modules needs to be modified
	  to use an <literal>ldaps://</literal> URI.</para>

	  <para>LDAP clients also need to be able to authenticate the
	  server. In a X.509 public key infrastructure, public certificates
	  are signed by the key of a certificate authority (CA). With
	  <emphasis>easy-rsa</emphasis>, the Falcot administrators
	  have created their own CA and they now need to configure
	  the system to trust the signatures of Falcot's CA. This can
	  be done by putting the CA certificate in
	  <filename>/usr/local/share/ca-certificates</filename> and
	  running <command>update-ca-certificates</command>.</para>
	  
	  <screen><computeroutput># </computeroutput><userinput>cp keys/ca.crt /usr/local/share/ca-certificates/falcot.crt
</userinput><computeroutput># </computeroutput><userinput>update-ca-certificates
</userinput><computeroutput>Updating certificates in /etc/ssl/certs... 1 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d....
Adding debian:falcot.pem
done.
done.
</computeroutput></screen>

	  <para>Last but not least, the default LDAP URI and default base
	  DN used by the various command line tools can be modified
	  in <filename>/etc/ldap/ldap.conf</filename>. This will save
	  quite some typing.</para>

          <example>
            <title>The <filename>/etc/ldap/ldap.conf</filename> file</title>

            <programlisting>#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

BASE   dc=falcot,dc=com
URI    ldaps://ldap.falcot.com

#SIZELIMIT      12
#TIMELIMIT      15
#DEREF          never

# TLS certificates (needed for GnuTLS)
TLS_CACERT      /etc/ssl/certs/ca-certificates.crt
</programlisting>
          </example>

        </section>
      </section>
    </section>
  </section>
  <section id="sect.rtc-services">
    <title>Real-Time Communication Services</title>

    <para>Real-Time Communication (RTC) services include voice,
    video/webcam, instant messaging (IM) and desktop sharing.
    This chapter gives a brief introduction to three of the
    services required to operate RTC, including a TURN server,
    SIP server and XMPP server. Comprehensive details of how to plan, install
    and manage these services are available in the Real-Time Communications
    Quick Start Guide which includes examples specific to Debian.
    <ulink type="block" url="http://rtcquickstart.org" />
    </para>
    <indexterm><primary>VoIP</primary><secondary>server</secondary></indexterm>
    <indexterm><primary>RTC</primary><secondary>server</secondary></indexterm>
    <indexterm><primary>Instant Messaging</primary><secondary>server</secondary></indexterm>
    <indexterm><primary>Chat</primary><secondary>server</secondary></indexterm>

    <para>Both SIP and XMPP can provide the same functionality.  SIP
    is slightly more well known for voice and video while XMPP is
    traditionally regarded as an IM protocol. In fact, they can both
    be used for any of these purposes.  To maximize connectivity options,
    it is recommended to run both in parallel.</para>
    <indexterm><primary>SIP</primary></indexterm>
    <indexterm><primary>XMPP</primary></indexterm>

    
    <para>These services rely on X.509 certificates both for authentication
    and confidentiality purposes. See <xref linkend="sect.easy-rsa" /> for
    details on how to create them. Alternatively the <emphasis>Real-Time
    Communications Quick Start Guide</emphasis> also has some useful
    explanations:
    <ulink type="block" url="http://rtcquickstart.org/guide/multi/tls.html" />
    </para>

    <section id="sect.rtc-dns-settings">
      <title>DNS settings for RTC services</title>

      <para>RTC services require DNS SRV and NAPTR records.  A sample
      configuration that can be placed in the zone file for
      <literal>falcot.com</literal>:</para>
      <indexterm><primary>DNS</primary><secondary>SRV record</secondary></indexterm>
      <indexterm><primary>DNS</primary><secondary>NAPTR record</secondary></indexterm>

<programlisting>
; the server where everything will run
server1            IN     A      198.51.100.19
server1            IN     AAAA   2001:DB8:1000:2000::19

; IPv4 only for TURN for now, some clients are buggy with IPv6
turn-server        IN     A      198.51.100.19

; IPv4 and IPv6 addresses for SIP
sip-proxy          IN     A      198.51.100.19
sip-proxy          IN     AAAA   2001:DB8:1000:2000::19

; IPv4 and IPv6 addresses for XMPP
xmpp-gw            IN     A      198.51.100.19
xmpp-gw            IN     AAAA   2001:DB8:1000:2000::19

; DNS SRV and NAPTR for STUN / TURN
_stun._udp  IN SRV    0 1 3467 turn-server.falcot.com.
_turn._udp  IN SRV    0 1 3467 turn-server.falcot.com.
@           IN NAPTR  10 0 "s" "RELAY:turn.udp" "" _turn._udp.falcot.com.

; DNS SRV and NAPTR records for SIP
_sips._tcp  IN SRV    0 1 5061 sip-proxy.falcot.com.
@           IN NAPTR  10 0 "s" "SIPS+D2T" "" _sips._tcp.falcot.com.

; DNS SRV records for XMPP Server and Client modes:
_xmpp-client._tcp  IN     SRV    5 0 5222 xmpp-gw.falcot.com.
_xmpp-server._tcp  IN     SRV    5 0 5269 xmpp-gw.falcot.com.
</programlisting>
    </section>

    <section id="sect.turn-server">
      <title>TURN Server</title>

      <para>TURN is a service that helps clients behind NAT routers and
      firewalls to discover the most efficient way to communicate with other
      clients and to relay the media streams if no direct media path can be
      found. It is highly recommended that the TURN server is installed
      before any of the other RTC services are offered to end users.</para>
      <indexterm><primary>TURN</primary><secondary>server</secondary></indexterm>

      <para>TURN and the related ICE protocol are open standards.
      To benefit from these protocols, maximizing connectivity and
      minimizing user frustration, it is important to ensure that all
      client software supports ICE and TURN.</para>
      <indexterm><primary>ICE</primary></indexterm>

      <para>For the ICE algorithm to work effectively, the server must
      have two public IPv4 addresses.</para>
      <section id="sect.turn-server-install">
        <title>Install the TURN server</title>
        <para>Install the <emphasis role="pkg">resiprocate-turn-server</emphasis> package.</para>

        <para>Edit the
        <filename>/etc/reTurn/reTurnServer.config</filename>
        configuration file. The most important thing to do is insert
        the IP addresses of the server.</para>

<programlisting>
# your IP addresses go here:
TurnAddress = 198.51.100.19
TurnV6Address = 2001:DB8:1000:2000::19
AltStunAddress = 198.51.100.20
# your domain goes here, it must match the value used
# to hash your passwords if they are already hashed
# using the HA1 algorithm:
AuthenticationRealm = myrealm

UserDatabaseFile = /etc/reTurn/users.txt
UserDatabaseHashedPasswords = true
</programlisting>

        <para>Restart the service.</para>
      </section>
      <section id="sect.turn-server-management">
        <title>Managing the TURN users</title>
        <para>Use the htdigest utility to manage the TURN server user list.
        </para>
<screen><computeroutput># </computeroutput><userinput>htdigest /etc/reTurn/users.txt myrealm joe</userinput>
</screen>
        <para>Use the HUP signal to make the server reload the
        <filename>/etc/reTurn/users.txt</filename> file after changing it
        or enable the automatic reload feature in
        <filename>/etc/reTurn/reTurnServer.config</filename>.</para>
      </section>
    </section>

    <section id="sect.sip-server">
      <title>SIP Proxy Server</title>

      <para>A SIP proxy server manages the incoming and outgoing SIP
      connections between other organizations, SIP trunking providers,
      SIP PBXes such as Asterisk, SIP phones, SIP-based softphones
      and WebRTC applications.</para>
      <indexterm><primary>SIP</primary><secondary>server</secondary></indexterm>
      <indexterm><primary>SIP</primary><secondary>proxy</secondary></indexterm>
      <indexterm><primary>SIP</primary><secondary>PBX</secondary></indexterm>
      <indexterm><primary>SIP</primary><secondary>trunk</secondary></indexterm>

      <para>It is strongly recommended to install and configure the SIP
      proxy before attempting a SIP PBX setup. The SIP proxy normalizes
      a lot of the traffic reaching the PBX and provides greater
      connectivity and resilience.</para>

      <section id="sect.sip-server-install">
        <title>Install the SIP proxy</title>
        <para>Install the <emphasis role="pkg">repro</emphasis> package.
          Using the package from <emphasis role="distribution">jessie-backports</emphasis> is highly
          recommended, as it has the latest improvements for maximizing
          connectivity and resilience.
        </para>
        <indexterm><primary>repro</primary></indexterm>

        <para>
          Edit the <filename>/etc/repro/repro.config</filename>
          configuration file. The most important thing to do is insert the
          IP addresses of the server.  The example below demonstrates how
          to setup both regular SIP and WebSockets/WebRTC, using TLS, IPv4
          and IPv6:
        </para>

<programlisting>
# Transport1 will be for SIP over TLS connections
# We use port 5061 here but if you have clients connecting from
# locations with firewalls you could change this to listen on port 443
Transport1Interface = 198.51.100.19:5061
Transport1Type = TLS
Transport1TlsDomain = falcot.com
Transport1TlsClientVerification = Optional
Transport1RecordRouteUri = sip:falcot.com;transport=TLS
Transport1TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport1TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport2 is the IPv6 version of Transport1
Transport2Interface = 2001:DB8:1000:2000::19:5061
Transport2Type = TLS
Transport2TlsDomain = falcot.com
Transport2TlsClientVerification = Optional
Transport2RecordRouteUri = sip:falcot.com;transport=TLS
Transport2TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport2TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport3 will be for SIP over WebSocket (WebRTC) connections
# We use port 8443 here but you could use 443 instead
Transport3Interface = 198.51.100.19:8443
Transport3Type = WSS
Transport3TlsDomain = falcot.com
# This would require the browser to send a certificate, but browsers
# don't currently appear to be able to, so leave it as None:
Transport3TlsClientVerification = None
Transport3RecordRouteUri = sip:falcot.com;transport=WSS
Transport3TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport3TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport4 is the IPv6 version of Transport3
Transport4Interface = 2001:DB8:1000:2000::19:8443
Transport4Type = WSS
Transport4TlsDomain = falcot.com
Transport4TlsClientVerification = None
Transport4RecordRouteUri = sip:falcot.com;transport=WSS
Transport4TlsPrivateKey = /etc/ssl/private/falcot.com-key.pem
Transport4TlsCertificate = /etc/ssl/public/falcot.com.pem

# Transport5: this could be for TCP connections to an Asterisk server
# in your internal network.  Don't allow port 5060 through the external
# firewall.
Transport5Interface = 198.51.100.19:5060
Transport5Type = TCP
Transport5RecordRouteUri = sip:198.51.100.19:5060;transport=TCP

HttpBindAddress = 198.51.100.19, 2001:DB8:1000:2000::19
HttpAdminUserFile = /etc/repro/users.txt

RecordRouteUri = sip:falcot.com;transport=tls
ForceRecordRouting = true
EnumSuffixes = e164.arpa, sip5060.net, e164.org
DisableOutbound = false
EnableFlowTokens = true
EnableCertificateAuthenticator = True
</programlisting>

        <para>
          Use the <command>htdigest</command> utility to manage the
          admin password for the web interface.  The username must be
          <emphasis>admin</emphasis> and the realm name must match the
          value specified in <filename>repro.config</filename>.
        </para>

<screen><computeroutput># </computeroutput><userinput>htdigest /etc/repro/users.txt repro admin</userinput>
</screen>

        <para>Restart the service to use the new configuration.</para>
      </section>
      <section id="sect.sip-server-management">
        <title>Managing the SIP proxy</title>
        <para>Go to the web interface at
        <literal>http://sip-proxy.falcot.com:5080</literal> to
        complete the configuration by adding domains, local users
        and static routes.</para>

        <para>The first step is to add the local domain.  The
        process must be restarted after adding or removing domains
        from the list.</para>

        <para>The proxy knows how to route calls between local users
        and full SIP address, the routing configuration is only necessary
        for overriding default behavior, for example, to recognize phone
        numbers, add a prefix and route them to a SIP provider.</para>
      </section>
    </section>

    <section id="sect.xmpp-server">
      <title>XMPP Server</title>

      <para>An XMPP server manages connectivity between local XMPP users
      and XMPP users in other domains on the public Internet.</para>
      <indexterm><primary>XMPP</primary><secondary>server</secondary></indexterm>

      <sidebar>
        <title><emphasis>VOCABULARY</emphasis> XMPP or Jabber?</title>
        <indexterm><primary>Jabber</primary></indexterm>

        <para>XMPP is sometimes referred to as Jabber.  In fact,
        Jabber is a trademark and XMPP is the official name of the standard.
        </para>
        <indexterm><primary>Jabber</primary></indexterm>
      </sidebar>

      <para>Prosody is a popular XMPP server that operates reliably
      on Debian servers.</para>
      <indexterm><primary>Prosody</primary></indexterm>
      <section id="sect.xmpp-server-install">
        <title>Install the XMPP server</title>
        <para>
          Install the <emphasis role="pkg">prosody</emphasis> package.
          Using the package from <emphasis role="distribution">jessie-backports</emphasis> is highly
          recommended, as it has the latest improvements for maximizing
          connectivity and resilience.
        </para>
        <indexterm><primary>Prosody</primary></indexterm>

        <para>Review the <filename>/etc/prosody/prosody.cfg.lua</filename>
        configuration file. The most important thing to do is insert JIDs
        of the users who are permitted to manage the server.</para>

<programlisting>
admins = { "joe@falcot.com" }
</programlisting>

        <para>An individual configuration file is also needed for
        each domain. Copy the sample from
        <filename>/etc/prosody/conf.avail/example.com.cfg.lua</filename>
        and use it as a starting point. Here is
        <literal>falcot.com.cfg.lua</literal>:</para>

<programlisting>
VirtualHost "falcot.com"
        enabled = true
        ssl = {
                key = "/etc/ssl/private/falcot.com-key.pem";
                certificate = "/etc/ssl/public/falcot.com.pem";
                }
</programlisting>

        <para>To enable the domain, there must be a symlink from
          <filename>/etc/prosody/conf.d/</filename>. Create it that way:</para>

<screen><computeroutput># </computeroutput><userinput>ln -s /etc/prosody/conf.avail/falcot.com.cfg.lua /etc/prosody/conf.d/</userinput>
</screen>

        <para>Restart the service to use the new configuration.</para>
      </section>
      <section id="sect.xmpp-server-management">
        <title>Managing the XMPP server</title>
        <para>Some management operations can be performed using the
        <literal>prosodyctl</literal> command line utility. For example, to
        add the administrator account specified in
        <filename>/etc/prosody/prosody.cfg.lua</filename>:</para>
<programlisting>
# prosodyctl adduser joe@falcot.com
</programlisting>

        <para>See the <ulink url="http://prosody.im/doc/configure">
        Prosody online documentation</ulink> for more details about
        how to customize the configuration.</para>

      </section>

    </section>
    <section id="sect.rtc-port-443">
      <title>Running services on port 443</title>
      <para>Some administrators prefer to run all of their RTC services on
      port 443. This helps users to connect from remote locations such as
      hotels and airports where other ports may be blocked or
      Internet traffic is routed through HTTP proxy servers.</para>

      <para>To use this strategy, each service (SIP, XMPP and TURN)
      needs a different IP address. All the services can still be on the
      same host as Linux supports multiple IP addresses on a single host.
      The port number, 443, must be specified in the configuration
      files for each process and also in the DNS SRV records.</para>
    </section>
    <section id="sect.rtc-webrtc">
      <title>Adding WebRTC</title>

      <para>Falcot wants to let customers make phone calls directly from
      the web site. The Falcot administrators also want to use WebRTC as
      part of their disaster recovery plan, so staff can use web browsers
      at home to log in to the company phone system and work normally in
      an emergency.</para>
      <indexterm><primary>WebRTC</primary></indexterm>
      <indexterm><primary>SIP</primary><secondary>WebSockets</secondary></indexterm>

      <sidebar>
        <title><emphasis>IN PRACTICE</emphasis> Try WebRTC</title>
        <indexterm><primary>WebRTC</primary><secondary>demonstration</secondary></indexterm>

        <para>If you have not tried WebRTC before, there are various
        sites that give an online demonstration and test facilities.
        <ulink type="block" url="http://www.sip5060.net/test-calls" /></para>        
      </sidebar>

      <para>
        WebRTC is a rapidly evolving technology and it is essential to
        use packages from the <emphasis role="distribution">jessie-backports</emphasis> or <emphasis role="distribution">Testing</emphasis> distributions.
      </para>

      <para>JSCommunicator is a generic, unbranded WebRTC phone that does
      not require any server-side scripting such as PHP. It is built
      exclusively with HTML, CSS and JavaScript. It is the basis
      for many other WebRTC services and modules for more advanced
      web publishing frameworks.
      <ulink type="block" url="http://jscommunicator.org" />
      </para>
      <indexterm><primary>JSCommunicator</primary></indexterm>

      <para>The package
      <emphasis role="pkg">jscommunicator-web-phone</emphasis> is the
      quickest way to install a WebRTC phone into a web site.
      It requires a SIP proxy with a WebSocket transport. The instructions in
      <xref linkend="sect.sip-server-install" /> include the necessary
      details to enable the WebSocket transport in the
      <emphasis role="pkg">repro</emphasis> SIP proxy.</para>

      <para>After installing
      <emphasis role="pkg">jscommunicator-web-phone</emphasis>,
      there are various ways to use it. A simple strategy is to include
      or copy the configuration from
      <filename>/etc/jscommunicator-web-phone/apache.conf</filename>
      into an Apache virtual host configuration.</para>

      <para>Once the web-phone files are available in the web server,
      customize the
      <filename>/etc/jscommunicator-web-phone/config.js</filename> to point
      at the TURN server and SIP proxy. For example:</para>

<programlisting>
JSCommSettings = {

  // Web server environment
  webserver: {
    url_prefix: null            // If set, prefix used to construct sound/ URLs
  },

  // STUN/TURN media relays
  stun_servers: [],
  turn_servers: [
    { server:"turn:turn-server.falcot.com?transport=udp", username:"joe", password:"j0Ep455d" }
  ],

  // WebSocket connection
  websocket: {
      // Notice we use the falcot.com domain certificate and port 8443
      // This matches the Transport3 and Transport4 example in
      // the falcot.com repro.config file
    servers: 'wss://falcot.com:8443',
    connection_recovery_min_interval: 2,
    connection_recovery_max_interval: 30
  },

  ...
</programlisting>

      <para>More advanced click-to-call web sites typically use server-side
      scripting to generate the <literal>config.js</literal> file dynamically.
      The <ulink url="http://drucall.org">DruCall</ulink> source code
      demonstrates how to do this with PHP.</para>
      <indexterm><primary>DruCall</primary></indexterm>

      <para>This chapter sampled only a fraction of the available
      server software; however, most of the common network services
      were described. Now it is time for an even more technical
      chapter: we'll go into deeper detail for some concepts, describe
      massive deployments and virtualization.</para>

    </section>
  </section>
</chapter>
