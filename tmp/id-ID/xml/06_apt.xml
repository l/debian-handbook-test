<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="id-ID">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Pemeliharaan dan Pembaharuan: Peralatan APT</title>
	 <highlights> <para>
		Apa yang membuat Debian populer dengan administrator ialah bagaimana perangkat lunak dengan mudah dapat diinstall dan bagai mana seluruh sistem dapat diperbaharui dengan mudah. Manfaat unik ini umumnya dikarenakan program <emphasis>APT</emphasis>, yang dipelajari oleh administrator Falcot dengan antusiasnya.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Peralatan Paket Canggih</primary></indexterm> APT merupakan singkatan dari Advanced Package Tool. Apa yang membuat program ini “canggih” adalah pendekatannya ke paket. Tidak mengevaluasinya satu per satu, namun menganggap sebagai seluruhnya dan menghasilkan kombinasi terbaik dari paket tergantung dari apa yang tersedia dan kecocokan (berdasarkan ketergantungan).
	</para>
	 <sidebar> <title><emphasis>KOSAKATA</emphasis> Paket sumber dan sumber paket</title>
	 <para>
		Kata <emphasis>sumber</emphasis> dapat menjadi ambigu. Paket sumber - sebuah paket berisi kode sumber program - tidak seharusnya dipahami dengan sebuah sumber paket - sebuah repositori (website, server FTP, CD-ROM, direktori lokal, dll.) yang berisi paket.
	</para>
	 </sidebar> <para>
		APT perlu diberi sebuah "daftar sumber paket": berkas <filename>/etc/apt/sources.list</filename> akan mendaftar repositori yang berbeda (atau "sumber") yang menerbitkan paket Debian. APT akan mengimpor daftar paket yang diterbitkan oleh setiap sumber. Operasi ini dicapai dengan mengunduh berkas <filename>Packages.xz</filename> atau suatu varian yang memakai metode kompresi berbeda (seperti <filename>Packages.gz</filename> atau <filename>.bz2</filename> (dalam hal sumber paket biner) dan <filename>Sources.xz</filename> (dalam hal sumber paket sumber) dan dengan menganalisa isinya. Ketika salinan lama berkas ini masih tersedia, APT akan memerbaruinya dengan mengunduh perbedaannya (lihat bilah tepi <xref linkend="sidebar.apt-pdiff" />).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>KEMBALI KE DASAR</emphasis> Kompresi <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> dan <command>XZ</command></title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		Ekstensi <filename>.gz</filename> mengacu pada berkas yang dikompress dengan utilitas <command>gzip</command>. <command>gzip</command> merupakan utilitas Unix yang cepat dan efisien untuk mengompress berkas. Peralatan terbaru memiliki kemampuan kompresi yang lebih baik namun memerlukan sumber daya yang lebih (waktu penghitungan dan memori) untuk mengompress dan mengekstrak berkas. Di antaranya, berdasarkan urutan kemunculannya, ada <command>bzip2</command> (menghasilkan berkas dengan ekstensi <filename>.bz2</filename>), <command>lzma</command> (menghasilkan berkas <filename>.lzma</filename>) dan <command>xz</command> (menghasilkan berkas <filename>.xz</filename>).
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>Mengisi Berkas <filename>sources.list</filename></title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>source</primary>
			<secondary>of packages</secondary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>source of</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>Sintaks</title>
			 <para>
				Setiap baris aktif di berkas <filename>/etc/apt/sources.list</filename> berisi penjelasan sebuah sumber, dibuat 3 bagian dipisahkan dengan spasi.
			</para>
			 <para>
				Field pertama menunjukkan tipe sumber:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						“<literal>deb</literal>” untuk paket biner,
					</para>

				</listitem>
				 <listitem>
					<para>
						“<literal>deb-src</literal>” untuk paket sumber.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Field kedua merupakan basis URL dari sumber (digabungkan dengan nama berkas yang tersaji di berkas <filename>Packages.gz</filename>, harus berupa URL lengkap dan valid): dapat berupa mirror Debian atau arsip paket lain yang diatur oleh pihak ketiga. URL dapat dimulai dengan <literal>file://</literal> yang menandakan sumber lokal yang terinstall pada sistem hirarki berkas, dengan <literal>http://</literal> yang menunjukkan sumber dapat diakses dari server web, atau dengan <literal>ftp://</literal> untuk sumber yang tersedia pada sebuah server FTP. URL dapat pula dimulai dengan <literal>cdrom:</literal> untuk cakram CD-ROM/DVD-ROM/Blu-ray berdasarkan instalasi, akan tetapi yang ini sangat jarang, karena metode instalasi berbasis-jaringan yang paling umum.
			</para>
			 <para>
				Sintaks field yang terakhir tergantung dari struktur repositori. Dalam kasus yang paling sederhana, Anda dapat menunjukkan sebuah subdirektori (dengan sebuah trailing slash) dari sumber yang diinginkan (seringkali sesederhana “<filename>./</filename>” yang mengacu pada subdirektori yang ada - paket kemudian secara langsung pada URL yang ditentukan). Namun kasus yang paling umum, repositori akan terstruktur seperti sebuah mirror Debian, dengan banyak distribusi masing-masing memiliki banyak komponen. Dalam kasus ini, nama distribusi yang terpilih (dengan “namakode”-nya — lihat daftar di bilah tepi <xref linkend="sidebar.bruce-perens" /> — atau dengan “suites” yang sesuai — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), kemudian komponen (atau bagian) untuk diaktifkan (pilih antara <literal>main</literal>, <literal>contrib</literal>, dan <literal>non-free</literal> di dalam sebuah mirror Debian tipikal).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>KOSAKATA</emphasis> Arsip <literal>main</literal>, <literal>contrib</literal> dan <literal>non-free</literal></title>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>main</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>contrib</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>non-free</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>komponen (dari sebuah repositori)</primary>
			</indexterm>
			 <para>
				Debian menggunakan tiga bagian untuk membedakan paket berdasarkan lisensi yang dipilih oleh penulis setiap pekerjaannya. <literal>Main</literal> mengumpulkan seluruh paket yang tunduk secara penuh dengan Panduan Perangkat Lunak Bebas Debian.
			</para>
			 <para>
				Arsip <literal>non-free</literal> berbeda karena berisi perangkat lunak yang tidak (sepenuhnya) sesuai dengan prinsip ini namun dapat didistribusikan tanpan batasan. Arsip ini, yang tidak secara resmi bagian dari Debian, merupakan layanan untuk pengguna yang mungkin memerlukan program tersebut - akan tetapi Debian selalu merekomendasikan memberikan prioritas ke perangkat lunak bebas. Kehadiran bagian ini merepresentasikan masalah yang dapat dipertimbangkan untuk Richard M. Stallman dan menjaga Yayasan Perangkat Lunak Bebas agar merekomendasikan Debian ke pengguna.
			</para>
			 <para>
				<literal>Contrib</literal> (contribusi) merupakan seperangkat perangkat lunak sumber terbuka yang tidak dapat berfungsi tanpa beberapa elemen non-free. Elemen ini dapat berupa perangkat lunak dari bagian <literal>non-free</literal>, atau berkas-berkas non-free seperti ROM game, BIOS konsol, dll. <literal>Contrib</literal> juga menyertakan perangkat lunak bebas yang kompilasinya memerlukan elemen proprietary. Ini awalnya merupakan kasus untuk aplikasi kantoran OpenOffice.org, yang memang memerlukan sebuah lingkungan proprietary Java.
			</para>
			 </sidebar> <sidebar> <title><emphasis>TIP</emphasis> berkas-berkas <filename>/etc/apt/sources.list.d/*.list</filename></title>
			 <para>
				Jika banyak sumber paket yang direferensikan, ini dapat berguna untuk memisahkannya dalam beberapa berkas. Setiap bagiannya kemudian disimpan di <filename>/etc/apt/sources.list.d/<replaceable>namaberkas</replaceable>.list</filename> (lihat bilah tepi <xref linkend="sidebar.directory.d" />).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				Entri <literal>cdrom</literal> menjelaskan CD/DVD-ROM yang Anda miliki. Berlawanan dengan entri lainnya, CD-ROM tidak selalu tersedia karena harus dimasukkan ke drive dan hanya satu cakram yang dapat dibaca pada satu waktu. Untuk alasan tersebut, sumber ini diatur dalam cara yang sangat berbeda, dan perlu ditambahkan dengan program <command>apt-cdrom</command>, biasanya dieksekusi dengan parameter <literal>add</literal>. Kemudian akan meminta agar cakram dimasukkan ke dalam drive dan akan menjelajah isinya mencari berkas <filename>Packates</filename>. Menggunakan berkas tersebut untuk memerbarui basisdatanya dari paket yang tersedia (operasi ini biasanya dilakukan dengan perintah <command>apt update</command>). Dari itu, APT dapat meminta cakram untuk dimasukkan jika memerlukan salah satu paketnya.
			</para>

		</section>
		 <section>
			<title>Repositori untuk Pengguna <emphasis role="distribution">Stable</emphasis></title>
			 <para>
				Berikut ini standar <filename>sources.list</filename> untuk sistem menjalankan versi Debian <emphasis role="distribution">Stable</emphasis>:
			</para>
			 <example id="example.stable-sources-list">
				<title>Berkas <filename>/etc/apt/sources.list</filename> untuk pengguna Debian Stable</title>
				 
<programlisting># Security updates
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

## Debian mirror

# Base repository
deb http://ftp.debian.org/debian jessie main contrib non-free
deb-src http://ftp.debian.org/debian jessie main contrib non-free

# Stable updates
deb http://ftp.debian.org/debian jessie-updates main contrib non-free
deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free

# Stable backports
deb http://ftp.debian.org/debian jessie-backports main contrib non-free
deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free</programlisting>

			</example>
			 <para>
				Berkas ini mendaftar seluruh sumber paket yang berhubungan dengan versi Debian <emphasis role="distribution">Jessie</emphasis> (<emphasis role="distribution">Stable</emphasis> terkini ketika menulis buku ini). Kita memilih nama "jessie" secara eksplisit daripada menggunakan alias "stable" yang sesuai (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) karena kita tidak ingin perubahan distribusi di luar kontrol ketika rilis stable berikutnya keluar.
			</para>
			 <para>
				Kebanyakan paket akan datang dari “base repository” yang berisi seluruh paket namun jarang diperbaharui (sekitar 2 bulan sekali untuk sebuah “point release”). Repositori lain adalah sebagian (mereka tidak berisi seluruh paket) dan dapat menghost pembaharuan (paket dengan versi terbaru) yang mungkin diinstall APT. Bagian berikut akan menjelaskan tujuan dan peraturan yang mengatur setiap repositori tersebut.
			</para>
			 <para>
				Catat bahwa ketika versi paket yang diinginkan tersedia pada beberapa repositori, yang pertama didaftarkan di <filename>sources.list</filename> akan digunakan. Untuk alasan ini, sumber tak-resmi biasanya ditambahkan di akhir berkas.
			</para>
			 <para>
				Sebagai catatan lain, kebanyakan apa yang dikatakan bagian ini tentang <emphasis role="distribution">Stable</emphasis> berlaku juga ke <emphasis role="distribution">Oldstable</emphasis> karena yang terakhir hanya merupakan yang lama <emphasis role="distribution">Stable</emphasis> yang dikelola secara paralel.
			</para>
			 <section id="sect.security-updates">
				<title>Pembaharuan Keamanan</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>pembaharuan keamanan</primary>
				</indexterm>
				 <indexterm>
					<primary>pembaharuan</primary>
					<secondary>pembaharuan keamanan</secondary>
				</indexterm>
				 <para>
					Pembaharuan keamanan biasanya tidak dihost pada jaringan mirror Debian biasa tetapi pada <literal>security.debian.org</literal> (pada seperangkat mesin kecil yang dikelola oleh <link linkend="dsa-team">Administrator Sistem Debian</link>). Arsip ini berisi pembaharuan keamanan (dipersiapkan oleh Tim Keamanan Debian dan/atau oleh maintainer paket) untuk distribusi <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Server dapat pula menghost pembaharuan keamanan untuk <emphasis role="distribution">Testing</emphasis> namun hal ini jarang terjadi karena pembaharuan tersebut dimaksudkan untuk menjangkau <emphasis role="distribution">Testing</emphasis> melalui alur pembaharuan umum dari <emphasis role="distribution">Unstable</emphasis>.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>Pembaharuan Stabil</title>
				 <indexterm>
					<primary>pembaharuan stabil</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>pembaharuan</primary>
					<secondary>pembaharuan stabil</secondary>
				</indexterm>
				 <para>
					Pembaharuan Stable bukan keamanan yang sensitif tapi dianggap cukup penting untuk dikirim ke pengguna sebelum titik rilis stable selnjutnya.
				</para>
				 <para>
					Repotisoti ini akan berisi perbaikan khusus untuk kutu kritis yang tidak akan diperbaiki sebelum rilis atau yang telah diperkenalkan oleh pembaharuan berikutnya. Tergantung pada urgesinya, dapat pula berisi pembaharuan untuk paket yang berkembang sepanjang waktu… seperti aturan pendeteksian spam <emphasis role="pkg">spamassassin</emphasis>, basisdata virus <emphasis role="pkg">clamav</emphasis>, atau aturan "daylight-saving time" untuk seluruh zonawaktu (<emphasis role="pkg">tzdata</emphasis>).
				</para>
				 <para>
					Prakteknya, repositori ini merupakan bagian dari repositori <literal>proposed-updates</literal>, dipilih oleh Manajer Rilis Stable dengan hati-hati.
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>Pengajuan Pembaharuan</title>
				 <indexterm>
					<primary><literal>proposed-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-proposed-updates</literal></primary>
				</indexterm>
				 <para>
					Sekali diterbitkan, distribusi <emphasis role="distribution">Stable</emphasis> hanya diperbaharui dua kali dalam sebulan. Repositori <literal>proposed-updates</literal> merupakan di mana pembaharuan yang diharapkan dipersiapkan (di bawah supervisi Manajer Rilis Stable).
				</para>
				 <para>
					Keamanan dan pembaharuan stable yang didokumentasikan di bagian sebelumnya selalu disertakan dalam repositori ini, tetapi ada lagi juga, karena maintainer paket juga memiliki kesempatan untuk memerbaiki kutu penting yang tidak perlu terburu-buru dirilis.
				</para>
				 <para>
					Siapapun dapat menggunakan repositori ini untuk menguji pembaharuan tersebut sebelum publikasi resminya. Ekstraksi berikut menggunakan alias <literal>jessie-proposed-updates</literal> yang lebih eksplisit dan lebih konsisten karena <literal>wheezy-proposed-updates</literal> juga ada (untuk pembaharuan <emphasis role="distribution">Oldstable</emphasis>):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free</programlisting>

			</section>
			 <section id="sect.backports">
				<title>Backport Stable</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>backports</secondary>
				</indexterm>
				 <para>
					Repositori <literal>stable-backports</literal> menghost “backport paket”. Istilah tersebut mengacu pada paket beberapa perangkat lunak terkini yang telah dokompilasi untuk distribusi lama, umumnya untuk <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Ketika distribusi menjadi sedikit tua, banyak sekali proyek perangkat lunak yang telah merilis versi baru yang tidak terintegrasi ke <emphasis role="distribution">Stable</emphasis> terakhir (yang hanya dimodifikasi untuk menunjukkan masalah kritis, seperti masalah keamanan). Karena distribusi <emphasis role="distribution">Testing</emphasis> dan <emphasis role="distribution">Unstable</emphasis> dapat lebih beresiko, maintainer paket terkadang menawarkan kompilasi ulang untuk aplikasi perangkat lunak untuk <emphasis role="distribution">Stable</emphasis>, yang bermanfaat untuk membatasi potensi ketidakstabilan pada sekelumit paket terpilih. <ulink type="block" url="http://backports.debian.org" />
				</para>
				 <para>
					Repositori <literal>stable-backports</literal> sekarang tersedia pada mirror Debian biasanya. Namun backport untuk <emphasis role="distribution">Squeeze</emphasis> masih dihost pada dedicated server (<literal>backports.debian.org</literal>), dan memerlukan entri berikut pada <filename>sources.list</filename>:
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 
<programlisting>deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free</programlisting>
				 <para>
					Backport dari <literal>stable-backports</literal> selalu dibuat dari paket yang tersedia di <emphasis role="distribution">Testing</emphasis>. Ini untuk memastikan bahwa seluruh backport terinstall akan dapat dimutakhirkan berdasarkan versi stabil sekali rilis stabil Debian berikutnya tersedia.
				</para>
				 <para>
					Meskipun repositori ini menyediakan versi terbaru paket, APT tidak akan menginstallnya kecuali Anda memberikan instruksi secara eksplisit (atau Anda telah melakukannya dengan versi sebelumnya backport yang diberikan):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/jessie-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>package</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>Repositori untuk pengguna <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
			 <para>
				Berikut ini sebuah standar <filename>sources.list</filename> untuk sistem yang menjalankan versi Debian <emphasis role="distribution">Testing</emphasis> atau <emphasis role="distribution">Unstable</emphasis>:
			</para>
			 <example id="example.testing-sources-list">
				<title>Berkas <filename>/etc/apt/sources.list</filename> untuk pengguna Debian <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
				 
<programlisting>
# Unstable
deb http://ftp.debian.org/debian unstable main contrib non-free
deb-src http://ftp.debian.org/debian unstable main contrib non-free

# Testing
deb http://ftp.debian.org/debian testing main contrib non-free
deb-src http://ftp.debian.org/debian testing main contrib non-free

# Stable
deb http://ftp.debian.org/debian stable main contrib non-free
deb-src http://ftp.debian.org/debian stable main contrib non-free

# Security updates
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free</programlisting>

			</example>
			 <para>
				Dengan berkas <filename>sources.list</filename> ini APT akan menginstall paket dari <emphasis role="distribution">Unstable</emphasis>. Jika bukan itu yang diinginkan, gunakan pengaturan <literal>APT::Default-Release</literal> (see <xref linkend="sect.apt-upgrade" />) untuk menunjuk APT untuk mengambil paket dari distribusi lain (kemungkinan besar dalam kasus ini <emphasis role="distribution">Testing</emphasis>).
			</para>
			 <para>
				Ada alasan bagus untuk menyertakan seluruh repositori tersebut, meskipun satu saja sudah cukup. Pengguna <emphasis role="distribution">Testing</emphasis> akan mengapresiasi kemungkinan untuk cherry-pick paket tertentu dari <emphasis role="distribution">Unstable</emphasis> ketika versi di <emphasis role="distribution">Testing</emphasis> terkena efek kutu yang mengganggu. Sebaliknya, pengguna <emphasis role="distribution">Unstable</emphasis> terkena kemunduran yang tidak diharapkan memiliki kemungkinan untuk mendowngrade paket ke versi (seharusnya bekerja) <emphasis role="distribution">Testing</emphasis> mereka.
			</para>
			 <para>
				Penyantuman <emphasis role="distribution">Stable</emphasis> dapat lebih diperdebatkan tetapi sering memberikan akses ke beberapa paket yang telah dihapus dari versi pengembabgan. Hal juga memastikan bahwa Anda mendapatkan pembaharuan terkini dari paket yang tidak lagi dimodifikasi sejak rilis stabil terakhir.
			</para>
			 <section>
				<title>Repositori <emphasis role="distribution">Experimental</emphasis></title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					Arsip paket <emphasis role="distribution">Experimental</emphasis> ada di seluruh mirror Debian, dan berisi paket yang belum ada di versi <emphasis role="distribution">Unstable</emphasis> karena kualitas substandar mereka - mereka sering berupa perangkat lunak versi pengembangan atau pre-versi (alpha, beta, rilis kandidat…). Sebuah paket dapat juga dikirim ke sana setelah mengalami perubahan berikutnya yang dapat menghasilkan masalah. Kemudian maintainer mencoba untuk menemukan mereka dengan bantuan dari para pengguna mahir yang dapat menangani isu=isu penting. Setelah langkah pertama ini, paket dipindah ke <emphasis role="distribution">Unstable</emphasis>, di mana akan menjangkau audiens yang lebih banyak dan akan dites lebih mendetail.
				</para>
				 <para>
					<emphasis role="distribution">Experimental</emphasis> umumnya digunakan oleh pengguna yang tidak peduli menghancurkan sistemnya dan kemudian memerbaikinya. Distribusi ini memberikan kemungkinan untuk mengimpor paket yang diinginkan pengguna untuk dicoba atau gunakan sebagaimana mereka perlukan. Inilah tentunya bagaimana pendekatan oleh Debian, karena mengambahkannya ke berkas <filename>sources.list</filename> APT tidak membawa ke penggunaan sistematis paketnya. Baris yang ditambahkan ialah:
				</para>
				 <informalexample> 
<programlisting>deb http://ftp.debian.org/debian experimental main contrib non-free</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Sumber Daya Tidak-Resmi: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				Ada banyak sumber tidak resmi paket-paket Debian yang ditetapkan oleh pengguna tingkat lanjut yang telah mengkompail ulang beberapa perangkat lunak (Ubuntu membuat ini populer dengan layanan Arsip Paket Pribadi mereka), oleh programmer yang membuat tersedia bagi semua ciptaan mereka, dan bahkan oleh para pengembang Debian yang menawarkan pra-versi paket mereka secara daring.
			</para>
			 <para>
				Situs <literal>mentors.debian.net</literal> menarik (walaupun itu hanya menyediakan paket-paket sumber), karena dia mengumpulkan sumber paket yang dibuat oleh kandidat status pengembang resmi Debian atau oleh relawan yang ingin membuat paket Debian tanpa melalui proses integrasi. Paket-paket ini disediakan tanpa jaminan terkait kualitasnya; pastikan Anda memeriksa sumber dan integritas mereka dan kemudian mencoba sebelum menggunakannya untuk produksi.
			</para>
			 <sidebar> <title><emphasis>KOMUNITAS</emphasis> Situs <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				Domain <emphasis>debian.net</emphasis> bukan merupakan sumber daya resmi proyek Debian. Setiap pengembang Debian boleh menggunakann nama domain tersebut untuk kegunaan mereka. Website ini dapat berisi layanan tak resmi (terkadang situs personal) dihost pada sebuah mesin yang tidak dimiliki proyek dan diatur oleh pengembang Debian, atau bahkan prototype yang akan dipindahkan ke <emphasis>debian.org</emphasis>. Dua alasan yang dapat menjelaskan mengapa beberapa prototype tetap berada di <emphasis>debian.net</emphasis>: antara tidak ada yang melakukan usaha yang diperlukan untuk mengubahnya ke dalam layanan resmi (dihost di domaing <emphasis>debian.org</emphasis>, dan dengan jaminan perawatan tertentu), atau layanan terlalu kontroversial untuk diresmikan.
			</para>
			 </sidebar> <para>
				Menginstall sebuah paket berarti memberikan hak root kepada pembuatnya, karena mereka menentukan pada isi skrip inisialisasi yang dijalankan dengan identitas tersebut. Paket resmi Debian dibuat oleh relawan yang telah dipilih dan ditinjau dan yang dapat menyegel paket mereka agar keaslian dan integritasnya dapat diperiksa.
			</para>
			 <para>
				Umumnya, waspadalah terhadap paket yang keasliannya tidak Anda ketahui yang tidak dihost di peladen resmi Debian: evaluasi derajatnya di mana Anda dapat memercayai pembuatnya, dan periksa integritas paket. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>LEBIH JAUH</emphasis> Paket versi lama: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				Layanan <literal>snapshot.debian.org</literal>, (diperkenalkan pada April 2010) dapat digunakan untuk "memundurkan waktu" dan menemukan versi lama dari sebuah paket. Ini dapat digunakan sebagai contoh untuk menentukan versi mana dari sebuah paket yang memunculkan regresi, dan lebih nyata, kembali ke versi sebelumnya ketika menunggu perbaikan regresi.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Caching Proxy untuk Paket Debian</title>
			 <indexterm>
				<primary>proxy cache</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				Ketika seluruh jaringan mesin dikonfigurasi untuk menggunakan remote server untuk mengunduh pembaharuan paket yang sama, beberapa administrator mengetahui bahwa mungkin lebih bermanfaat jika proxy menengah berlaku sebagai cache jaringan-lokal (lihat bilah tepi <xref linkend="sidebar.cache" />).
			</para>
			 <para>
				Anda dapat mengonfigurasi APT untuk menggunakan proxy "standard" (lihat <xref linkend="sect.apt-config" /> untuk sisi APT, dan <xref linkend="sect.http-ftp-proxy" /> untuk sisi proxy), namun ekosistem Debian menawarkan pilihan yang lebih baik untuk mengatasi masalah ini. Perangkat lunak terdedikasi disajikan pada bagian ini lebih pintar dari cache proxy murni karena mereka dapat mengandalkan struktur khusus dari repositori APT (misalnya mereka mengetahui ketika suatu berkas usang atau tidak, dan menentukan waktu selama yang mereka simpan).
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> dan <emphasis role="pkg">apt-cacher-ng</emphasis> bekerja seperti server proxy cache biasanya. Berkas <filename>sources.list</filename> milik APT tidak diubah, namun APT dikonfigurasi untuk menggunakannya sebagai proxy permintaan keluar.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">approx</emphasis>, di lain pihak, berlaku seperti server HTTP yang “me-mirror” beberapa repositori remote pada level tertinggi URL. Pemetaan antara level-tertinggi direktori tersebut dan URL remote repositori di simpan di <filename>/etc/approx/approx.conf</filename>:
			</para>
			 
<programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://ftp.debian.org/debian
security http://security.debian.org</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> bawaannya dijalankan pada port 9999 melalui inetd (lihat <xref linkend="sect.inetd" />) dan pengguna perlu mengatur berkas <filename>sources.list</filename> mengarah ke server approx:
			</para>
			 
<programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free
deb http://apt.falcot.com:9999/debian jessie main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title>Perintah <command>aptitude</command>, <command>apt-get</command>, dan <command>apt</command></title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT merupakan proyek yang luas, yang mulanya direncanakan menyertakan antarmuka grafis. Berbasis pada pustaka yang berisi aplikasi inti, dan <command>apt-get</command> adalah front end pertama — berbasis baris-perintah — yang telah dikembangkan di dalam proyek. <command>apt</command> adalah front end berbasis baris-perintah kedua yang disediakan oleh APT yang mengatasi beberapa kesalahan desain <command>apt-get</command>.
		</para>
		 <para>
			Beberapa antarmuka grafis kemudian muncul sebagai proyek eksternal: <command>synaptic</command>, <command>aptitude</command> (yang menyertakan antarmuka mode teks dan grafis - bahkan jika belum selesai), <command>wajig</command>,dll. Antarmuka yang paling direkomendasikan, <command>apt</command>, adalah yang akan kita gunakan pada contoh-contoh yang diberikan pada bagian ini. Namun perhatikan bahwa sintaks baris perintah <command>apt-get</command> dan <command>aptitude</command> sangat mirip. Ketika ada beberapa perbedaan utama antara <command>apt</command>, <command>apt-get</command>, dan <command>aptitude</command>, perbedaan ini akan dirinci.
		</para>
		 <section>
			<title>Inisialisasi</title>
			 <para>
				Untuk bekerja dengan APT, daftar paket yang tersedia perlu diperbaharui; hal ini dapat dengan mudah dilakukan dengan <command>apt update</command>. Tergantung dari kecepatan koneksi Anda, operasi ini perlu beberapa saat karena melibatkan pengunduhan beberapa berkas <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename>, yang semakin lama semakin besar sebagaimana Debian dikembangkan (setidaknya data 10 MB untuk bagian <literal>main</literal>). Tentu saja, instalasi dari CD-ROM tidak perlu mengunduh - dalam hal ini, operasinya sangat cepat.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Instalasi dan Penghapusan</title>
			 <indexterm>
				<primary>paket</primary>
				<secondary>instalasi</secondary>
			</indexterm>
			 <indexterm>
				<primary>paket</primary>
				<secondary>penghapusan</secondary>
			</indexterm>
			 <indexterm>
				<primary>instalasi</primary>
				<secondary>instalasi paket</secondary>
			</indexterm>
			 <indexterm>
				<primary>penghapusan sebuah paket</primary>
			</indexterm>
			 <para>
				Dengan APT, paket dapat ditambahkan atau dihapus dari sistem, masing-masing dengan <command>apt install <replaceable>paket</replaceable></command> dan <command>apt remove <replaceable>paket</replaceable></command>. Dalam dua kasus tersebut, APT akan menginstall ketergantungan atau menghapus paket yang bergantung pada paket yang sedang dihapus secara otomatis. Perintah <command>apt purge <replaceable>paket</replaceable></command> melibatkan penghapusan penuh — berkas konfigurasi juga dihapus.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>TIP</emphasis> Instalasi paket pilihan yang sama beberapa kali</title>
			 <para>
				Berguna untuk menginstall secara sistematis daftar paket yang sama pada beberapa komputer. Hal ini dapat dengan mudah dilakukan.
			</para>
			 <para>
				Pertama, ambil daftar paket terinstall pada komputer yang akan tersaji sebagai “model” untuk disalin.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				Berkas <filename>pkg-list</filename> kemudian berisi daftar paket terinstall. Selanjutnya, kirim berkas <filename>pkg-list</filename> ke komputer yang ingin Anda perbaharui dan gunakan perintah berikut:
			</para>
			 
<screen>## Update dpkg's database of known packages
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Update dpkg's selections
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Ask apt-get to install the selected packages
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				Perintah pertama merekam daftar paket tersedia di basisdata dpkg, kemudian <command>dpkg --set-selections</command> mengembalikan paket terpilih yang ingin Anda install, dan <command>apt-get</command> mengeksekusi operasi yang diperlukan! <command>aptitude</command> tidak memiliki perintah ini.
			</para>
			 </sidebar> <sidebar> <title><emphasis>TIP</emphasis> Penghapusan dan instalasi pada saat yang sama</title>
			 <para>
				It is possible to ask <command>apt</command> (or <command>apt-get</command>, or <command>aptitude</command>) to install certain packages and remove others on the same command line by adding a suffix. With an <command>apt install</command> command, add “<literal>-</literal>” to the names of the packages you wish to remove. With an <command>apt remove</command> command, add “<literal>+</literal>” to the names of the packages you wish to install.
			</para>
			 <para>
				Contoh berikutnya menunjukkan dua perbedaan cara untuk menginstall <replaceable>paket1</replaceable> dan menghapus <replaceable>paket2</replaceable>.
			</para>
			 
<screen># <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>
[...]
</screen>
			 <para>
				Dapat pula digunakan untuk mengecualikan paket yang mungkin akan diinstal, misalnya karena <literal>Recommends</literal>. Umumnya, pemecah ketergantungan akan menggunakan informasi tersebut sebagai petunjuk untuk melihat solusi alternatif.
			</para>
			 </sidebar> <sidebar> <title><emphasis>TIP</emphasis> <command>apt --reinstall</command> and <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>instalasi ulang</primary>
			</indexterm>
			 <para>
				The system can sometimes be damaged after the removal or modification of files in a package. The easiest way to retrieve these files is to reinstall the affected package. Unfortunately, the packaging system finds that the latter is already installed and politely refuses to reinstall it; to avoid this, use the <literal>--reinstall</literal> option of the <command>apt</command> and <command>apt-get</command> commands. The following command reinstalls <emphasis role="pkg">postfix</emphasis> even if it is already present:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				Baris perintah <command>aptitude</command> sangat berbeda, namun hasilnya akan sama dengan <command>aptitude reinstall postfix</command>.
			</para>
			 <para>
				Masalah tidak muncul dengan <command>dpkg</command>, namun administrator jarang menggunakannya secara langsung.
			</para>
			 <para>
				Be careful! Using <command>apt --reinstall</command> to restore packages modified during an attack will certainly not recover the system as it was. <xref linkend="sect.dealing-with-compromised-machine" /> details the necessary steps to take with a compromised system.
			</para>
			 </sidebar> <para>
				If the file <filename>sources.list</filename> mentions several distributions, it is possible to give the version of the package to install. A specific version number can be requested with <command>apt install <replaceable>package</replaceable>=<replaceable>version</replaceable></command>, but indicating its distribution of origin (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>) — with <command>apt install <replaceable>package</replaceable>/<replaceable>distribution</replaceable></command> — is usually preferred. With this command, it is possible to go back to an older version of a package (if for instance you know that it works well), provided that it is still available in one of the sources referenced by the <filename>sources.list</filename> file. Otherwise the <literal>snapshot.debian.org</literal> archive can come to the rescue (see sidebar <xref linkend="sidebar.snapshot.debian.org" />).
			</para>
			 <example>
				<title>Instalasi versi <emphasis role="distribution">unstable</emphasis> dari <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <sidebar> <title><emphasis>LEBIH JAUH</emphasis> Cache berkas <filename>.deb</filename></title>
			 <para>
				APT keeps a copy of each downloaded <filename>.deb</filename> file in the directory <filename>/var/cache/apt/archives/</filename>. In case of frequent updates, this directory can quickly take a lot of disk space with several versions of each package; you should regularly sort through them. Two commands can be used: <command>apt-get clean</command> entirely empties the directory; <command>apt-get autoclean</command> only removes packages which can no longer be downloaded (because they have disappeared from the Debian mirror) and are therefore clearly useless (the configuration parameter <literal>APT::Clean-Installed</literal> can prevent the removal of <filename>.deb</filename> files that are currently installed). Note that <command>apt</command> does not support those commands.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>Pembaharuan Sistem</title>
			 <indexterm>
				<primary>upgrade</primary>
				<secondary>system upgrade</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				Regular upgrades are recommended, because they include the latest security updates. To upgrade, use <command>apt upgrade</command>, <command>apt-get upgrade</command> or <command>aptitude safe-upgrade</command> (of course after <command>apt update</command>). This command looks for installed packages which can be upgraded without removing any packages. In other words, the goal is to ensure the least intrusive upgrade possible. <command>apt-get</command> is slightly more demanding than <command>aptitude</command> or <command>apt</command> because it will refuse to install packages which were not installed beforehand.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>TIP</emphasis> Peningkatan pembaharuan</title>
			 <para>
				As we explained earlier, the aim of the <command>apt update</command> command is to download for each package source the corresponding <filename>Packages</filename> (or <filename>Sources</filename>) file. However, even after a <command>bzip2</command> compression, these files can remain rather large (the <filename>Packages.xz</filename> for the <foreignphrase>main</foreignphrase> section of <emphasis role="distribution">Jessie</emphasis> takes more than 6 MB). If you wish to upgrade regularly, these downloads can take up a lot of time.
			</para>
			 <para>
				To speed up the process APT can download “diff” files containing the changes since the previous update, as opposed to the entire file. To achieve this, official Debian mirrors distribute different files which list the differences between one version of the <filename>Packages</filename> file and the following version. They are generated at each update of the archives and a history of one week is kept. Each of these “diff” files only takes a few dozen kilobytes for <emphasis role="distribution">Unstable</emphasis>, so that the amount of data downloaded by a weekly <command>apt update</command> is often divided by 10. For distributions like <emphasis role="distribution">Stable</emphasis> and <emphasis role="distribution">Testing</emphasis>, which change less, the gain is even more noticeable.
			</para>
			 <para>
				Akan tetapi, terkadang lebih menarik untuk mengunduh seluruh berkas <filename>Packages</filename>, khususnya ketika pembaharuan terakhir sangat tua dan ketika mekanisme penambahan perbedaan tidak akan lebih menyumbang. Hal ini juga dapat lebih menarik ketika akses jaringan sangat cepat namun ketika prosesor mesin untuk diupgrade sedikit lambat, karena waktu untuk mengunduh hilang ketika komputer menghitung versi baru berkas ini (dimulai dengan versi lama dan menerapkan perbedaan yang diunduh). untuk melakukan hal itu, Anda dapat menggunakan parameter konfigurasi <literal>Acquire::Pdiffs</literal> dan mengaturnya menjadi <literal>false</literal>.
			</para>
			 </sidebar> <para>
				<command>apt</command> will generally select the most recent version number (except for packages from <emphasis role="distribution">Experimental</emphasis> and <emphasis role="distribution">stable-backports</emphasis>, which are ignored by default whatever their version number). If you specified <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> in your <filename>sources.list</filename>, <command>apt upgrade</command> will switch most of your <emphasis role="distribution">Stable</emphasis> system to <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>, which might not be what you intended.
			</para>
			 <para>
				To tell <command>apt</command> to use a specific distribution when searching for upgraded packages, you need to use the <literal>-t</literal> or <literal>--target-release</literal> option, followed by the name of the distribution you want (for example: <command>apt -t stable upgrade</command>). To avoid specifying this option every time you use <command>apt</command>, you can add <literal>APT::Default-Release "stable";</literal> in the file <filename>/etc/apt/apt.conf.d/local</filename>.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				For more important upgrades, such as the change from one major Debian version to the next, you need to use <command>apt full-upgrade</command>. With this instruction, <command>apt</command> will complete the upgrade even if it has to remove some obsolete packages or install new dependencies. This is also the command used by users who work daily with the Debian <emphasis role="distribution">Unstable</emphasis> release and follow its evolution day by day. It is so simple that it hardly needs explanation: APT's reputation is based on this great functionality.
			</para>
			 <para>
				Tidak seperti <command>apt</command> dan <command>aptitude</command>, <command>apt-get</command> tidak mengenal perintah <command>full-upgrade</command>. Sebagai pengganti, Anda mesti memakai perintah <command>apt-get dist-upgrade</command> ("peningkatan distribusi"), perintah historis dan dikenal luas yang juga diterima oleh <command>apt</command> dan <command>aptitude</command> untuk kenyamanan pengguna yang terbiasa memakainya.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>Pilihan Konfigurasi</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>konfigurasi</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				Besides the configuration elements already mentioned, it is possible to configure certain aspects of APT by adding directives in a file of the <filename>/etc/apt/apt.conf.d/</filename> directory. Remember for instance that it is possible for APT to tell <command>dpkg</command> to ignore file conflict errors by specifying <literal>DPkg::options { "--force-overwrite"; }</literal>.
			</para>
			 <para>
				Jika Web hanya dapat diakses melalui proxy, tambahkan baris seperti <literal>Acquire::http::proxy "http://<replaceable>proxy-anda</replaceable>:3128"</literal>. Untuk sebuah proxy FTP, tulis <literal>Acquire::ftp::proxy "ftp://<replaceable>proxy-anda</replaceable>"</literal>. Untuk menemukan lebih banyak pilihan konfigurasi, baca laman manual <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> dengan perintah <command>man apt.conf</command> (untuk rincian pada laman manual, lihat <xref linkend="sect.manual-pages" />).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>KEMBALI KE DASAR</emphasis> Direktori berakhir dengan <filename>.d</filename></title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				Direktori dengan akhiran <filename>.d</filename> semakin sering digunakan. Setiap direktori merepresentasikan sebuah berkas konfigurasi yang dibagi ke dalam beberapa berkas. Dalam pengertian ini, seluruh berkas dalam <filename>/etc/apt/apt.conf.d/</filename> merupakan instruksi untuk konfigurasi APT. APT menyertakannya dalam urutan alfabetis, jadi yang terakhir dapat memodifikasi sebuah elemen konfigurasi salah satu yang pertama.
			</para>
			 <para>
				Struktur ini membawa beberapa fleksibilitas untuk administrator mesin dan maintainer paket. Memang, administrator dapat dengan mudah memodifikasi konfigurasi perangkat lunak dengan menambahkan berkas siap-pakai dalam direktori tersebut tanpa perlu mengubah berkas yang ada. Maintainer paket menggunakan pendekatan yang sama ketika mereka perlu menyadur konfigurasi perangkat lunak lain untuk memastikan kebersamaan dengan milik mereka. Kebijakan Debian secara eksplisit melarang modifikasi berkas konfigurasi paket lain - hanya pengguna yang diperbolehkan melakukan ini. Ingat bahwa selama pembaharuan paket, pengguna dapat memilih versiberkas konfigurasi yang harus dipertahankan ketika modifikasi telah terdeteksi. Beberapa modifikasi eksternal pada berkas akan memicu permintaan tersebut, yang akan mengganggu administrator, yang tentu tidak mengubah apapun.
			</para>
			 <para>
				Without a <filename>.d</filename> directory, it is impossible for an external package to change the settings of a program without modifying its configuration file. Instead it must invite the user to do it themselves and lists the operations to be done in the file <filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename>.
			</para>
			 <para>
				Tergantung aplikasinya, direktori <filename>.d</filename> digunakan secara langsung atau diatur oleh skrip eksternal yang akan merangkai seluruh berkas untuk membuat berkas konfigurasinya sendiri. Penting untuk mengeksekusi skrip setelah beberapa perubahan pada direktori tersebut agar modifikasi terkini diambil untuk digunakan. Dengan cara yang sama, penting untuk bekerja secara langsung dalam berkas konfigurasi yang dibuat secara langsung, karena apapun akan hilang pada eksekusi skrip berikutnya. Metode yang diambil (direktori <filename>.d</filename> digunakan secara langsung atau sebuah berkas dihasilkan dari direktori tersebut) biasanya didikte oleh kendala implementasi, namun dalam kedua kasus menguntungkan pada istilah fleksibilitas konfigurasi lebih dari membuat untuk sebuah komplikasi kecil yang dibawakannya. Exim 4 server mail merupakan sebuah contoh metode menghasilkan berkas: ini dapat dikonfigurasi melalui beberapa berkas (<filename>/etc/exim4/conf.d/*</filename>) yang dirangkai ke dalam <filename>/var/lib/exim4/config.autogenerated</filename> oleh perintah <command>update-exim4.conf</command>.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>Mengelola Prioritas Paket</title>
			 <para>
				Salah satu aspek yang paling penting dalam konfigurasi APT adalah mengelola prioritas asosiasi dengan setiap sumber paket. Misalnya, Anda mungkin ingin meluaskan satu distribusi dengan satunya atau dua paket terbaru dari <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> atau <emphasis role="distribution">Experimental</emphasis>. Ini memungkinkan untuk menetapkan prioritas setiap paket yang tersedia (paket yang sama dapat memiliki beberapa prioritas tergantung versinya atau distribusi yang menyediakannya). Prioritas ini akan memengaruhi perangai APT: untuk setiap paket, ini akan selalu memilih versi dengan prioritas tertinggi (kecuali jika versinya lebih tua dari yang terinstall dan jika prioritasnya kurang dari 1000).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>pinning, APT pinning</primary>
			</indexterm>
			 <indexterm>
				<primary>paket</primary>
				<secondary>prioritas</secondary>
			</indexterm>
			 <indexterm>
				<primary>prioritas</primary>
				<secondary>prioritas paket</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>preferensi</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>preferensi</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				APT mendefinisikan beberapa prioritas bawaan. Setiap versi paket terinstall memiliki prioritas 100. Versi tak-terinstall memiliki prioritas 500 secara bawaan, namun ini dapat melompat ke 990 jika ini merupakan rilis target (ditentukan dengan pilihan baris-perintah <literal>-t</literal> atau arahan konfigurasi <literal>APT::Default-Release</literal>.
			</para>
			 <para>
				Anda dapat memodifikasi prioritas dengan menambahkan entri pada berkas <filename>/etc/apt/preferences</filename> dengan nama paket terdampak, versi mereka, asal mereka dan prioritasnya.
			</para>
			 <para>
				APT tidak akan pernah menginstall versi lebih lama sebuah paket (itulah, sebuah paket yang nomor versinya lebih rendah dari salah satu paket yang telah terinstall) kecuali jika prioritasnya lebih besar dari 1000. APT akan selalu menginstall paket dengan prioritas tertinggi yang mengikuti batasan ini. Jika dua paket memiliki dua prioritas yang sama, APT akan menginstall yang terbaru (yang nomor versinya tertinggi). Jika dua paket versinya sama namun berbeda dalam konten mereka, APT akan menginstall versi yang tidak terinstall (aturan ini telah dibuat untuk mencakupi kasus sebuah pembaharuan paket tanpa peningkatan nomor revisinya, yang biasanya diperlukan).
			</para>
			 <para>
				Dalam istilah yang lebih konkrit, sebuah paket yang prioritasnya kurang dari 0 tidak akan pernah diinstall. Sebuah paket dengan prioritas snata 0 dan 100 hanya akan diinstall jika tidak ada versi lain dari paket yang telah terinstall. Dengan prioritas antara 100 dan 500, paket hanya akan diinstall jika tidak ada versi lebih baru terinstall atau tersedia dalam distribusi lainnya. Prioritas paket antara 501 dan 990 hanya akan diinstall jika tidak ada versi yang lebih baru terinstall atau tersedia di distribusi target. Dengan sebuah prioritas antara 990 dan 1000, paket akan diinstall kecuali jika versi terinstall lebih baru. Prioritas yang lebih besar dari 1000 akan selalu mengutamakan instalasi paket bahkan jika memaksa APT untuk menurunkan versi ke versi yang lebih tua.
			</para>
			 <para>
				When APT checks <filename>/etc/apt/preferences</filename>, it first takes into account the most specific entries (often those specifying the concerned package), then the more generic ones (including for example all the packages of a distribution). If several generic entries exist, the first match is used. The available selection criteria include the package's name and the source providing it. Every package source is identified by the information contained in a <filename>Release</filename> file that APT downloads together with the <filename>Packages</filename> files. It specifies the origin (usually “Debian” for the packages of official mirrors, but it can also be a person's or an organization's name for third-party repositories). It also gives the name of the distribution (usually <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> or <emphasis role="distribution">Experimental</emphasis> for the standard distributions provided by Debian) together with its version (for example 8 for Debian <emphasis role="distribution">Jessie</emphasis>). Let's have a look at its syntax through some realistic case studies of this mechanism.
			</para>
			 <sidebar> <title><emphasis>KASUS SPESIFIK</emphasis> Prioritas <emphasis role="distribution">experimental</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				Jika Anda mendaftarkan <emphasis role="distribution">Experimental</emphasis> dalam berkas <filename>sources.list</filename> Anda, paket yang sesuai hampir tidak akan pernah diinstall karena prioritas bawaan mereka adalah 1. Ini tentu saja sebuah kasus spesifik, didesain untuk menjaga pengguna dari kesalahan menginstall paket <emphasis role="distribution">Experimental</emphasis>. Paket hanya dapat diinstall dengan mengetikkan <command>aptitude install <replaceable>package</replaceable>/experimental</command> — pengguna yang mengetikkan perintah ini hanya dapat berhati-hati terhadap resiko yang mereka ambil. Ini masih memungkinkan (melalui <emphasis>tidak</emphasis> direkomendasikan) untuk memerlakukan paket <emphasis role="distribution">Experimental</emphasis> seperti distribusi lain tersebut dengan memberikannya prioritas 500. Hal ini dapat dilakukan dengan entri spesidik di <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar> <para>
				Mari anggap bahwa Anda hanya ingin menggunakan paket dari versi stable Debian. Yang disediakan dalam versi lain tidak boleh diinstall kecuali jika diminta secara eksplisit. Anda dapat menulis entri berikut dalam berkas <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> menentukan nama distribusi yang dipilih. <literal>o=Debian</literal> membatasi jangkauan ke paket yang berasal dari “Debian”.
			</para>
			 <para>
				Let's now assume that you have a server with several local programs depending on the version 5.14 of Perl and that you want to ensure that upgrades will not install another version of it. You could use this entry:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.14*
Pin-Priority: 1001</programlisting>
			 </informalexample> <para>
				Rujukan dokumentasi untuk berkas konfigurasi ini tersedia pada laman manual <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>, yang dapat Anda tampilkan dengan <command>man apt_preferences</command>.
			</para>
			 <sidebar> <title><emphasis>TIP</emphasis> Komentar di <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Penjelassan</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin-Prioritas</literal></primary>
			</indexterm>
			 <para>
				Tidak ada sintaks resmi untuk menaruh komentar di berkas <filename>/etc/apt/preferences</filename>, namun beberapa penjelasan tekstual dapat disediakan dengan meletakkan satu atau beberapa field “<literal>Explanation</literal>” pada permulaan setiap entri:
			</para>
			 <informalexample> 
<programlisting>Explanation: The package xserver-xorg-video-intel provided
Explanation: in experimental can be used safely
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>Bekerja dengan Beberapa Distribusi</title>
			 <para>
				<command>apt</command> being such a marvelous tool, it is tempting to pick packages coming from other distributions. For example, after having installed a <emphasis role="distribution">Stable</emphasis> system, you might want to try out a software package available in <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> without diverging too much from the system's initial state.
			</para>
			 <para>
				Even if you will occasionally encounter problems while mixing packages from different distributions, <command>apt</command> manages such coexistence very well and limits risks very effectively. The best way to proceed is to list all distributions used in <filename>/etc/apt/sources.list</filename> (some people always put the three distributions, but remember that <emphasis role="distribution">Unstable</emphasis> is reserved for experienced users) and to define your reference distribution with the <literal>APT::Default-Release</literal> parameter (see <xref linkend="sect.apt-upgrade" />).
			</para>
			 <para>
				Let's suppose that <emphasis role="distribution">Stable</emphasis> is your reference distribution but that <emphasis role="distribution">Testing</emphasis> and <emphasis role="distribution">Unstable</emphasis> are also listed in your <filename>sources.list</filename> file. In this case, you can use <command>apt install <replaceable>package</replaceable>/testing</command> to install a package from <emphasis role="distribution">Testing</emphasis>. If the installation fails due to some unsatisfiable dependencies, let it solve those dependencies within <emphasis role="distribution">Testing</emphasis> by adding the <literal>-t testing</literal> parameter. The same obviously applies to <emphasis role="distribution">Unstable</emphasis>.
			</para>
			 <para>
				In this situation, upgrades (<command>upgrade</command> and <command>full-upgrade</command>) are done within <emphasis role="distribution">Stable</emphasis> except for packages already upgraded to another distribution: those will follow updates available in the other distributions. We will explain this behavior with the help of the default priorities set by APT below. Do not hesitate to use <command>apt-cache policy</command> (see sidebar <xref linkend="sidebar.apt-cache-policy" />) to verify the given priorities.
			</para>
			 <para>
				Semuanya berpusat pada fakta bahwa APT hanya memedulikan paket yang versinya lebih tinggi atau sama dengan yang terinstall (asumsikan bahwa <filename>/etc/apt/preferences</filename> tidak digunakan untuk memaksa prioritas yang lebih tinggi dari 1000 untuk beberapa paket).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>TIP</emphasis> <command>apt-cache policy</command></title>
			 <para>
				Untuk mendapatkan pemahaman yang lebih baik dari mekanisme prioritas, jangan ragu untuk mengeksekusi <command>apt-cache policy</command> untuk menampilkan prioritas bawaan yang berasosiasi dengan setiap sumber paket. Anda dapat juga menggunakan <command>apt-cache policy <replaceable>paket</replaceable></command> untuk menampilkan prioritas seluruh versi yang tersedia dari paket yang diberikan.
			</para>
			 </sidebar> <para>
				Mari asumsikan bahwa Anda telah menginstall versi 1 dari sebuah paket dari <emphasis role="distribution">Stable</emphasis> dan versi 2 dan 3 tersedia masing-masing dalam <emphasis role="distribution">Testing</emphasis> dan <emphasis role="distribution">Unstable</emphasis>. Versi terinstall memiliki prioritas 100 tetapi versi tersedia dalam <emphasis role="distribution">Stable</emphasis> (sangat mirip) memiliki prioritas 990 (karena merupakan bagian dari rilis target). Paket dalam <emphasis role="distribution">Testing</emphasis> dan <emphasis role="distribution">Unstable</emphasis> memiliki prioritas 500 (prioritas bawaan untuk versi tak-terinstall). Pemenangnya ialah versi 1 tersebut dengan prioritas 990. Paket “tetap di <emphasis role="distribution">Stable</emphasis>”.
			</para>
			 <para>
				Mari ambil contoh paket lain yang versi 2 telah terinstall dari <emphasis role="distribution">Testing</emphasis>. Versi 1 tersedia di <emphasis role="distribution">Stable</emphasis> dan versi 3 di <emphasis role="distribution">Unstable</emphasis>. Versi 1 (prioritas 990 - kurang dari 1000) diabaikan karena kurang dari versi yang terinstall. Ini hanya meninggalkan versi 2 dan 3, keduanya prioritas 500. Berhadapan dengan alternatif ini, APT memilih versi terbaru, salah satu dari <emphasis role="distribution">Unstable</emphasis>. Jika Anda tidak ingin sebuah paket terinstall dari <emphasis role="distribution">Testing</emphasis> untuk migrasi ke <emphasis role="distribution">Unstable</emphasis>, Anda harus menerapkan sebuah prioritas kurang dari 500 (490 misalnya) ke paket yang datang dari <emphasis role="distribution">Unstable</emphasis>. Anda dapat memodifikasi <filename>/etc/apt/preferences</filename> untuk efek ini:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>Pelacakan Otomatis Paket Terinstall</title>
			 <para>
				One of the essential functionalities of <command>apt</command> is the tracking of packages installed only through dependencies. These packages are called “automatic”, and often include libraries for instance.
			</para>
			 <para>
				With this information, when packages are removed, the package managers can compute a list of automatic packages that are no longer needed (because there is no “manually installed” packages depending on them). <command>apt-get autoremove</command> will get rid of those packages. <command>aptitude</command> and <command>apt</command> do not have this command: the former because it removes them automatically as soon as they are identified, and the latter probably because the user should not have to manually run such a command. In all cases, the tools display a clear message listing the affected packages.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				Ini merupakan kebiasaan yang baik untuk menandai sebagai otomatis beberapa paket yang tidak Anda perlukan secara langsung jari mereka secara otomatis terhapus ketika mereka tak lagi diperlukan. <command>apt-mark auto <replaceable>paket</replaceable></command> akan menandai paket yang diberikan secara otomatis di mana <command>apt-mark manual <replaceable>paket</replaceable></command> melakukan sebaliknya. <command>aptitude markauto</command> dan <command>aptitude unmarkauto</command> bekerja dengan cara yang sama walaupun mereka menawarkan fitur yang lebih untuk mendandai beberapa paket pada saat yang sama (lihat <xref linkend="sect.aptitude" />). Antarmuka interaktif berbasis-konsol dari <command>aptitude</command> juga membuatnya mudah untuk meninjau “automatic flag” pada banyak paket.
			</para>
			 <indexterm>
				<primary><command>aptitude why</command></primary>
			</indexterm>
			 <para>
				People might want to know why an automatically installed package is present on the system. To get this information from the command line, you can use <command>aptitude why <replaceable>package</replaceable></command> (<command>apt</command> and <command>apt-get</command> have no similar feature):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> <command>deborphan</command> dan <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				In days where <command>apt</command>, <command>apt-get</command> and <command>aptitude</command> were not able to track automatic packages, there were two utilities producing lists of unnecessary packages: <command>deborphan</command> and <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> is the most rudimentary of both. It simply scans the <literal>libs</literal> and <literal>oldlibs</literal> sections (in the absence of supplementary instructions) looking for the packages that are currently installed and that no other package depends on. The resulting list can then serve as a basis to remove unneeded packages.
			</para>
			 <para>
				<command>debfoster</command> memiliki pendekatan yang lebih rumit, sangat mirip dengan APT: ini memelihara sebuah daftar paket yang telah terinstall secara eksplisit, dan mengingat paket apa yang benar-benar diperlukan antara setiap invokasi. Jika paket baru muncul pada sistem dan jika <command>debfoster</command> tidak mengetahuinya sebagai paket yang diperlukan, mereka akan muncul pada layar bersama dengan sebuah daftar ketergantungannya. Program ini kemudian menawarkan sebuah pilihan: hapus paket (mungkin bersama dengan paket yang bergantung dengannya), tandai sebagai diperlukan secara eksplisit, atau abaikan sementara.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>Perintah <command>apt-cache</command></title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>pencarian paket</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>tampilan header</secondary>
		</indexterm>
		 <indexterm>
			<primary>pencarian paket</primary>
		</indexterm>
		 <indexterm>
			<primary>paket</primary>
			<secondary>pencarian</secondary>
		</indexterm>
		 <para>
			The <command>apt-cache</command> command can display much of the information stored in APT's internal database. This information is a sort of cache since it is gathered from the different sources listed in the <filename>sources.list</filename> file. This happens during the <command>apt update</command> operation.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>KOSAKATA</emphasis> Cache</title>
		 <para>
			Sebuah cache adalah sistem penyimpanan sementara yang digunakan untuk memercepat akses data yang sering dilakukan ketika metode akses yang biasa mahal (kebijakan-performa). Konsep ini dapat diterapkan pada banyak situasi dan pada skala yang berbedda, dari inti mikroprosesor hingga sistem penyimpanan yang besar.
		</para>
		 <para>
			Dalam kasus APT, referensi berkas <filename>Packages</filename> yang tersimpan pada mirror Debian. Itulah, ini akan sangat tidak efektif untuk melalui jaringan pada setiap pencarian yang kita mungkin ingin lakukan dalam basisdata paket yang tersedia. Inilah alasannya mengapa APT menyimpan salinan berkas tersebut (dalam <filename>/var/lib/apt/lists/</filename>) dan pencarian dapat dilakukan dengan berkas lokal tersebut. Sama halnya, <filename>/var/cache/apt/archives/</filename> berisi sebuah cache paket yang telah diunduh untuk menghindari mengunduhnya lagi jika Anda perlu menginstall ulang lagi setelah penghapusan.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			The <command>apt-cache</command> command can do keyword-based package searches with <command>apt-cache search <replaceable>keyword</replaceable></command>. It can also display the headers of the package's available versions with <command>apt-cache show <replaceable>package</replaceable></command>. This command provides the package's description, its dependencies, the name of its maintainer, etc. Note that <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> work in the same way.
		</para>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> merupakan peralatan yang sangat mendasar, pada dasarnya mengimplementasikan <command>grep</command> pada deskripsi paket. Seringkali mengembalikan terlalu banyak hasil atau tidak satu pun ketika Anda menyertakan terlalu banyak katakunci.
		</para>
		 <para>
			<command>axi-cache search <replaceable>term</replaceable></command>, di sisi lain, menyediakan hasil yang lebih baik, diurutkan berdasarkan kesesuainnya. Ini menggunakan mesin pencari <emphasis>Xapian</emphasis> dan merupakan bagian dari paket <emphasis role="pkg">apt-xapian-index</emphasis> yang mengindex seluruh informasi paket (dan lebih, seperti berkas <filename>.desktop</filename> dari seluruh paket Debian). Dia tahu tentang tag (lihat bilah tepi <xref linkend="sidebar.debtags" />) dan menghasilkan hasil dalam hitungan milidetik.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
105 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
98% debtags - Enables support for package tags
94% debian-goodies - Small toolbox-style utilities 
93% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
93% goplay - games (and more) package browser using DebTags
[...]
87% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
[...]
More terms: search debian searching strigi debtags bsearch libbsearch
More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			Beberapa fitur lebih jarang digunakan. Misalnya, <command>apt-cache policy</command> menampilkan prioritas sumber paket sebagaimana untuk paket secara individual. Contoh lainnya adalah <command>apt-cache dumpavail</command> yang menampilkan header seluruh versi tersedia dari seluruh paket. <command>apt-cache pkgnames</command> menampilkan daftar seluruh paket yang muncul setidaknya sekali dalam cache.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>Frontends: <command>aptitude</command>, <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>antar muka</secondary>
		</indexterm>
		 <para>
			APT adalah program C++ yang kode utamanya bercokol di pustaka terbagi (shared library) <command>libapt-pkg</command>. Menggunakan pustaka terbagi memfasilitasi pembuatan antarmuka pengguna (front-end), karena kode yang ada di pustaka dapat dengan mudah digunakan kembali. Sejarahnya, <command>apt-get</command> hanya didesain sebagai test front-end untuk <command>libapt-pkg</command> namun kesuksesannya cenderung mengaburkan fakta ini.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> merupakan program interaktif yang dapat digunakan dalam mode semi-grafis di konsol. Anda dapat menjelajah daftar paket terinstall dan tersedia, mencari seluruh informasi yant tersedia, dan memilih paket untuk diinstall atau dihapus. Program ini didesain secara spesifik untuk digunakan oleh administrator, jadi perilaku bawaannya lebih cerdas dari <command>apt-get</command>, dan antarmukanya lebih mudah untuk dipahami.
			</para>
			 <figure>
				<title>Manajer paket <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Ketika dimulai, <command>aptitude</command> menampilkan daftar paket yang diurutkan berkasarkan kondisi (terinstall, tak-terinstall, atau terinstall namun tidak tersedia di mirror - bagian lain menampilkan tugas, paket virtual, dan paket baru yang baru muncul di mirror). Untuk memfasilitasi penjelajahan tematik, tampilan lain tersedia. Dalam semua kasus, <command>aptitude</command> menampilkan sebuah daftar kombinasi kategori dan paket pada layar. Kategori diatur melalui struktur pohon, yang cabangnya masing-masing dapat dibuka atau ditutup dengan tombol <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> dan <keycombo><keycap>]</keycap></keycombo>. <keycombo><keycap>+</keycap></keycombo> harus digunakan untuk menandai paket untuk diinstall, <keycombo><keycap>-</keycap></keycombo> menandainya untuk penghapusan dan <keycombo><keycap>_</keycap></keycombo> untuk mem-purge-nya (catat bahwa kunci ini juga dapat digunakan untuk kategori, dalam hal ini aksi yang sesuai akan diterapkan pada seluruh paket kategori tersebut). <keycombo><keycap>u</keycap></keycombo> memerbarui daftar paket tersedia dan <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> memersiapkan upgrade sistem secara global. <keycombo><keycap>g</keycap></keycombo> berganti ke tampilan ringkasan perubahan yang diminta (dan mengetik <keycombo><keycap>g</keycap></keycombo> lagi akan menerapkan perubahan), <keycombo><keycap>q</keycap></keycombo> menutup tampilan kini. Jika Anda pada tampilan awal, ini akan menutup secara efektif <command>aptitude</command>.
			</para>
			 <sidebar> <title><emphasis>DOKUMENTASI</emphasis> <command>aptitude</command></title>
			 <para>
				Bagian ini tidak mencakup rincian penggunanaan <command>aptitude</command>, ini sekedar fokus memberikan survival kit untuk menggunakannya. <command>aptitude</command> terdokumentasi dengan baik dan kami menyarankan Anda untuk menggunakan manual lengkap yang tersedia pada paket <emphasis role="pkg">aptitude-doc-en</emphasis> (<filename>/usr/share/doc/aptitude/html/en/index.html</filename>).
			</para>
			 </sidebar> <para>
				Untuk mencari sebuah paket, Anda dapat mengetik <keycombo><keycap>/</keycap></keycombo> diikuti oleh pola pencarian. Pola ini cocok dengan nama paket, namun dapat pula diterapkan ke deskripsi (jika diawali dengan <literal>~d</literal>), untuk bagian (dengan <literal>~s</literal>), atau karakter lain yang dirinci di dokumentasi. Pola yang sama dapat menyaring daftar paket yang ditampilkan: ketik tombol <keycombo><keycap>l</keycap></keycombo> (sebagaimana <foreignphrase>limit</foreignphrase>) dan masukkan pola.
			</para>
			 <para>
				Managing the “automatic flag” of Debian packages (see <xref linkend="sect.automatic-tracking" />) is a breeze with <command>aptitude</command>. It is possible to browse the list of installed packages and mark packages as automatic with <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> or to remove the mark with the <keycombo><keycap>m</keycap></keycombo> key. “Automatic packages” are displayed with an “A” in the list of packages. This feature also offers a simple way to visualize the packages in use on a machine, without all the libraries and dependencies that you don't really care about. The related pattern that can be used with <keycombo><keycap>l</keycap></keycombo> (to activate the filter mode) is <literal>~i!~M</literal>. It specifies that you only want to see installed packages (<literal>~i</literal>) not marked as automatic (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>ALAT</emphasis> Menggunakan <command>aptitude</command> pada antarmuka baris-perintah</title>
			 <para>
				Kebanyakan fitur <command>aptitude</command> dapat diakses melalui antarmuka yang interaktif sebagaimana melalui baris-perintah. Baris-perintah ini akan nampak lebih familiar untuk pengguna biasa dari <command>apt-get</command> dan <command>apt-cache</command>.
			</para>
			 <para>
				Fitur lanjutan <command>aptitude</command> juga tersedia pada baris-perintah. Anda dapat menggunakan pola pencarian paket yang sama sebagaimana pada versi interaktif. Misalnya, jika Anda ingin membersihkan daftar paket “terinstall manual”, dan jika anda mengetahui bahwa tidak ada program lokal yang memerlukan pustaka tertentu atau modul Perl, Anda dapat menandai paket yang sesai sebagai otomatis sengan perintah tunggal:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				Di sini, Anda dapat dengan jelas melihat kekuatan sistem pola pencarian <command>aptitude</command>, yang mengaktifkan pencarian instan seluruh paket dalam bagian <literal>libs</literal> dan <literal>perl</literal>.
			</para>
			 <para>
				Berhati-hatilah, jika beberapa paket ditandai sebagai otomatis dan jika tidak ada paket lain yang bergantung padanya, mereka akan segera dihapus (setelah permintaan konfirmasi).
			</para>
			 </sidebar> <section>
				<title>Mengelola Rekomendasi, Saran dan Tugas</title>
				 <para>
					Fitur lain yang menarik dari <command>aptitude</command> adalah fakta bahwa ini menghargai rekomendasi antara paket ketika masih memberikan pilihan pada pengguna untuk tidak menginstallnya berdasarkan kasus per kasus. Misalnya, paket <emphasis role="pkg">gnome</emphasis> merekomendasikan <emphasis role="pkg">gdebi</emphasis> (di antara lainnya). Ketika Anda memilih sebelumnya untuk instalasi, yang sesudahnya juga akan dipilih (ditandai sebagai otomatis jika belum terinstall pada sistem). Mengetik <keycombo><keycap>g</keycap></keycombo> akan membuatnya jelas: <emphasis role="pkg">gdebi</emphasis> muncul pada layar ringkasan aksi tertunda pada daftar paket yang terinstall secara otomatis untuk memuaskan ketergantungan. Akan tetapi, Anda dapat memutuskan untuk tidak menginstallnya dengan tidak memilihnya sebelum operasi konfirmasi.
				</para>
				 <para>
					Catat bahwa fitur pelacakan rekomendasi ini tidak berlaku untuk upgrade. Misalnya, jika versi baru <emphasis role="pkg">gnome</emphasis> merekomendasikan paket yang tidak direkomendasikan sebelumnya, paket tidak akan ditandai untuk instalasi. Akan tetapi, ini akan didaftar pada layar upgrade agar administrator masih dapat memilihnya untuk diinstall.
				</para>
				 <para>
					Saran antara paket juga berlaku, namun dalam gaya yang sesuai dengan status spesifik mereka. Misalnya, karena <emphasis role="pkg">gnome</emphasis> menyarankan <emphasis role="pkg">dia-gnome</emphasis>, belakangan akan ditampilkan pada layar ringkasan aksi tertunda (pada bagian paket disarankan oleh paket lain). Cara ini, kelihatan dan administrator dapat memutuskan apakan mengambil saran atau tidak. Karena ini hanya sebuah saran dan bukan ketergantungan atau sebuah rekomendasi, paket tidak akan terpilih secara otomatis - pemilihannya memerlukan intervensi manual dari pengguna (nah, paket tidak akan ditandai sebagai otomatis).
				</para>
				 <para>
					Dalam semangat yang sama, ingatlah bahwa <command>aptitude</command> membuat konsept menggunaan kosept tugas yang cerdas. Karena tugas ditampilkan sebagai kategori pada layar daftar paket, Anda dapat memilih tugas penuh untuk instalasi atau penghapusan, atau menjelajah daftar paket yang disertakan pada tugas untuk memilih subset yang lebih kecil.
				</para>

			</section>
			 <section>
				<title>Algoritma Pemecahan Masalah yang Lebih Baik</title>
				 <para>
					Untuk menyimpulkan bagian ini, mari catat bahwa <command>aptitude</command> memiliki algoritma yang lebih rumit dibandingkan <command>apt-get</command> ketika menyelesaikan situasi yang sulit. Ketika seperangkat aksi diperlukan dan ketika aksi gabungan ini mengarah pada sistem yang tidak koheren, <command>aptitude</command> mengevaluasi beberapa skenario yang mungkin dan menyajikannya dalam urutan relevansi yang berkurang. Akan tetapi, algoritma ini bukan contoh yang gagal. Untungnya selalu ada kemungkinan untuk memilih secara manual aksi yang dilakukan. Ketika aksi yang sedang terpilih mengarah ke kontradiksi, bagian atas layar menunjukkan jumlah paket yang “rusak” (dan Anda dapat navigasi secara langsung ke paket tersebut dengan menekan <keycombo><keycap>b</keycap></keycombo>). Ini kemudian mungkin untuk membangun solusi secara manual untuk masalah yang ditemukan. Khususnya, Anda dapat mendapatkan akses ke versi yang berbeda dengan memilih paket dengan <keycombo><keycap>Enter</keycap></keycombo>. Jika pilihan versi ini memecahkan masalah, Anda tidak perlu ragu untuk menggunakan fungsi tersebut. Ketika jumlah paket yang rusah berkurang ke nol, Anda dapa menuju layar ringkasan aksi tertunda dengan aman untuk pemeriksaan sebelum Anda menerapkannya.
				</para>
				 <sidebar> <title><emphasis>CATATAN</emphasis> log <command>aptitude</command></title>
				 <para>
					Seperti <command>dpkg</command>, <command>aptitude</command> menyimpan jejak aksi yang dieksekusi dalam berkas lognya (<filename>/var/log/aptitude</filename>). Karena kedua perintah tersebut bekerja pada level yang berbeda, Anda tidak dapat menemukan informasi yang sama pada berkas log masing-masing. Ketika <command>dpkg</command> me-log seluruh operasi yang dieksekusi pada paket secara individual langkah demi langkah, <command>aptitude</command> memberikan gambaran yang lebih luas dari operasi level-tinggi seperti sebuah sistem-wide upgrade.
				</para>
				 <para>
					Waspadalah, berkas log ini hanya berisi ringkasan operasi yang dilakukan oleh <command>aptitude</command>. Jika front-end lainnya (bahkan <command>dpkg</command> sendiri) jarang digunakan, kemudian log <command>aptitude</command> hanya akan berisi sebagian gambaran operasi, jadi Anda tidak dapat memercayakannya untuk membangun sejarah sistem yang dipercaya.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> merupakan manajet paket grafis untuk Debian yang fiturnya bersih dan antarmuka grafisnya efisien berbasis GTK+/GNOME. Banyak penyaring yang siap-digunakan memberikan akses cepat ke paket baru yang tersedia, paket terinstall, paket yang dapat diupgrade, paket usang, dan seterusnya. Jika Anda menjelajah melalui daftar ini, Anda dapat memilih operasi untuk dilakukan pada paket (install, upgrade, hapus, purge); operasi ini tidak dilakukan segera, namun letakkkan dalam daftar tugas. Klik tunggal pada sebuah tombol kemudian validasi operasi, dan mereka dilakukan sekaligus.
			</para>
			 <figure>
				<title><command>synaptic</command> manajer paket</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>Pemeriksaan Otentikasi Paket</title>
		 <indexterm>
			<primary>paket</primary>
			<secondary>memeriksa otentikasi</secondary>
		</indexterm>
		 <indexterm>
			<primary>paket</primary>
			<secondary>segel</secondary>
		</indexterm>
		 <indexterm>
			<primary>paket</primary>
			<secondary>tanda tangan</secondary>
		</indexterm>
		 <indexterm>
			<primary>tanda tangan</primary>
			<secondary>tanda tangan paket</secondary>
		</indexterm>
		 <indexterm>
			<primary>otentikasi</primary>
			<secondary>otentikasi paket</secondary>
		</indexterm>
		 <para>
			Keamanan merupakan hal yang sangat penting untuk administrator Falcot Corp. Maka, mereka perlu memastikan baha mereka hanya menginstall paket yang dijamin datang dari Debian dengan tanpa pemadatan. Seorang cracker komputer dapat mencoba untuk menambahkan kode jahat pada selain paket sah. Semacam paket, jika terinstall, dapat melakukan apapun yang didesain cracker untuk melakukannya, termasuk misalnya membongkar password atau informasi rahasia. Untuk menghindari resiko ini, Debian menyediakan sebuah bukti-padat segel untuk menjamin - pada saat instalasi - bahwa sebuah paket datang dari maintainer resminya dan belum dimodifikasi oleh pihak ketiga.
		</para>
		 <para>
			The seal works with a chain of cryptographical hashes and a signature. The signed file is the <filename>Release</filename> file, provided by the Debian mirrors. It contains a list of the <filename>Packages</filename> files (including their compressed forms, <filename>Packages.gz</filename> and <filename>Packages.xz</filename>, and the incremental versions), along with their MD5, SHA1 and SHA256 hashes, which ensures that the files haven't been tampered with. These <filename>Packages</filename> files contain a list of the Debian packages available on the mirror, along with their hashes, which ensures in turn that the contents of the packages themselves haven't been altered either.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			Kunci terpercaya dikelola dengan perintah <command>apt-key</command> yang ditemukan dalam paket <emphasis role="pkg">apt</emphasis>. Program ini memelihata sebuah keyring kunci publik GnuPG, yang digunakan untuk memverifikasi tanda-tangan dalam berkas <filename>Release.gpg</filename> tersedia di mirror. Dapat pula digunakan untuk menambahkan kunci baru secara otomatis (ketika mirror tak resmi diperlukan). Akan tetapi umumnya, hanya kunci resmi Debian yang diperlukan. Kunci ini secara otomatis dijaga ke-up-to-date-annya oleh paket <emphasis role="pkg">debian-archive-keyring</emphasis> (yang menaruh keyring yang sesuai di <filename>/etc/apt/trusted.gpg.d</filename>). Akan tetapi, instalasi pertama pada paket tertentu ini memerlukan perhatian: bahkan jika paket ditandatangani seperti lainnya, tanda tangan tidak dapat terverifikasi secara eksternal. Karena itu administrator yang berhati-hati harus memeriksa sidik jari kunci yang diimpor sebelum memercayainya untuk menginstall paket baru:
		</para>
		 
<screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   4096R/2B90D010 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = 126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid                  Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   4096R/C857C906 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid                  Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   4096R/518E17E1 2013-08-17 [expires: 2021-08-15]
      Key fingerprint = 75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid                  Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-automatic.gpg
-----------------------------------------------------------
pub   4096R/473041FA 2010-08-27 [expires: 2018-03-05]
      Key fingerprint = 9FED 2BCB DCD2 9CDF 7626  78CB AED4 B06F 4730 41FA
uid                  Debian Archive Automatic Signing Key (6.0/squeeze) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-stable.gpg
--------------------------------------------------------
pub   4096R/B98321F9 2010-08-07 [expires: 2017-08-05]
      Key fingerprint = 0E4E DE2C 7F3E 1FC0 D033  800E 6448 1591 B983 21F9
uid                  Squeeze Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   4096R/46925553 2012-04-27 [expires: 2020-04-25]
      Key fingerprint = A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid                  Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   4096R/65FFB764 2012-05-08 [expires: 2019-05-07]
      Key fingerprint = ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid                  Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;
</screen>
		 <sidebar> <title><emphasis>PRAKTEKNYA</emphasis> Menambahkan kunci terpercaya</title>
		 <indexterm>
			<primary>kunci terpercaya</primary>
		</indexterm>
		 <indexterm>
			<primary>key</primary>
			<secondary>Kunci otentikasi APT</secondary>
		</indexterm>
		 <para>
			When a third-party package source is added to the <filename>sources.list</filename> file, APT needs to be told to trust the corresponding GPG authentication key (otherwise it will keep complaining that it can't ensure the authenticity of the packages coming from that repository). The first step is of course to get the public key. More often than not, the key will be provided as a small text file, which we will call <filename>key.asc</filename> in the following examples.
		</para>
		 <para>
			Untuk menambahkan kunci ke keyring terpercaya, administrator dapat menjalankan <command>apt-key add &lt; key.asc</command>.Cara lain adalah dengan menggunakan antar muka grafis <command>synaptic</command>: tab “Authentikasi” pada menu <menuchoice><guimenu>Pengaturan</guimenu> <guisubmenu>Repositori</guisubmenu></menuchoice> memberikan kemungkinan mengimpor sebuah kunci dari berkas <filename>key.asc</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			Untuk orang yang ingin aplikasi terdedikasi dan rincian pada kunci terpercaya, dapat menggunakan <command>gui-apt-key</command> (dalam paket dengan nama yang sama), antar muka grafis yang kecil untuk mengelola keyring terpercaya.
		</para>
		 </sidebar> <para>
			Sekali kunci yang sesuai ada di keyring, APT akan memeriksa tanda-tangan sebelum ada beberapa operasi beresiko, jadi front-end akan menampilkan sebuah peringatan jika diminta untuk menginstall sebuah paket yang otentitasnya tidak dapat ditetapkan.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>Upgrade dari Satu Distribusi Stable ke Berikutnya</title>
		 <para>
			Salah satu fitur yang paling terkenal adalah kemampuannya untuk mengupgrade sistem terinstall dari satu rilis stable ke rilis berikutnya: <foreignphrase>dist-upgrade</foreignphrase> — istilah yang mashur — besar kontribusinya terhadap reputasi rroyek. Dengan sedikit tindakan pencegahan, mengupgrade sebuah komputer dapat membutuhkan waktu beberapa menit, atau belasan menit, tergantung kecepatan unduh dari repositori paket.
		</para>
		 <section>
			<title>Prosedur Direkomendasikan</title>
			 <para>
				Karena Debian memiliki beberapa waktu untuk evolusi antara rilis stable, Anda harus membaca catatan rilis sebelum melakukan upgrade.
			</para>
			 <sidebar> <title><emphasis>KEMBALI KE DASAR</emphasis> Catatan rilis</title>
			 <para>
				Catatan rilis untuk sebuah sistem operasi (dan, lebih umum, untuk perangkat lunak) adalah sebuah dokumen yang memberikan gambaran perangkat lunak, dengan beberapa rincian mengenai fakta suatu versi. Dokumen ini biasanya berupa perbandingan singkat ke dokumentasi lengkapnya, dan mereka biasanya terdapat daftar fitur yang telah diperkenalkan sejak versi sebelumnya. Mereka juga memberikan rincian tentang prosedur upgrade, peringatan untuk penggunan versi sebelumnya, dan terkadang berupa ralat.
			</para>
			 <para>
				Release notes are available online: the release notes for the current stable release have a dedicated URL, while older release notes can be found with their codenames: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/wheezy/releasenotes" />
			</para>
			 </sidebar> <para>
				In this section, we will focus on upgrading a <emphasis role="distribution">Wheezy</emphasis> system to <emphasis role="distribution">Jessie</emphasis>. This is a major operation on a system; as such, it is never 100% risk-free, and should not be attempted before all important data has been backed up.
			</para>
			 <para>
				Kebiasaan baik lainnya yang membuat upgrade lebih mudah (dan ringkas) adalah membereskan paket terinstall dan tersisa hanya yang diperlukan saja. Peralatan yang membantu untuk melakukan hal tersebua termasuk <command>aptitude</command>, <command>deborphan</command> dan <command>debfoster</command> (lihat <xref linkend="sect.automatic-tracking" />). Misalnya, Anda dapat menggunakan perintah berikut, kemudian menggunakan mode interaktif <command>aptitude</command> untuk pemeriksaan ulang dan jadwal penghapusan yang rapih:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Now for the upgrading itself. First, you need to change the <filename>/etc/apt/sources.list</filename> file to tell APT to get its packages from <emphasis role="distribution">Jessie</emphasis> instead of <emphasis role="distribution">Wheezy</emphasis>. If the file only contains references to <emphasis role="distribution">Stable</emphasis> rather than explicit codenames, the change isn't even required, since <emphasis role="distribution">Stable</emphasis> always refers to the latest released version of Debian. In both cases, the database of available packages must be refreshed (with the <command>apt update</command> command or the refresh button in <command>synaptic</command>).
			</para>
			 <para>
				Once these new package sources are registered, you should first do a minimal upgrade with <command>apt upgrade</command>. By doing the upgrade in two steps, we ease the job of the package management tools and often ensure that we have the latest versions of those, which might have accumulated bugfixes and improvements required to complete the full distribution upgrade.
			</para>
			 <para>
				Once this first upgrade is done, it is time to handle the upgrade itself, either with <command>apt full-upgrade</command>, <command>aptitude</command>, or <command>synaptic</command>. You should carefully check the suggested actions before applying them: you might want to add suggested packages or deselect packages which are only recommended and known not to be useful. In any case, the front-end should come up with a scenario ending in a coherent and up-to-date <emphasis role="distribution">Jessie</emphasis> system. Then, all you need is to do is wait while the required packages are downloaded, answer the Debconf questions and possibly those about locally modified configuration files, and sit back while APT does its magic.
			</para>

		</section>
		 <section>
			<title>Menangani Masalah setelah Pembaharuan</title>
			 <para>
				Dalam kegemasan usaha terbaik maintainer Debian, upgrade sistem utama tidak selalu selancar yang Anda inginkan. Versi terbaru perangkat lunak mungkin tidak cocok dengan versi sebelumnya (misalnya, perilaku bawaannya atau format data mereka mungkin berubah). Juga, beberapa kutu mungkin terselip oleh crack walaupun fase testing yang selalu mendahului rilis Debian.
			</para>
			 <para>
				Untuk mengantisipasi beberapa masalah ini, Anda dapat menginstall paket <emphasis role="pkg">apt-listchanges</emphasis>, yang menampilkan informasi tentang kemungkinan masalah di permulaan upgrade paket. Informasi ini dikompilasi oleh maintainer paket Debian dan dimasukkan dalam berkas <filename>/usr/share/doc/<replaceable>paket</replaceable>/NEWS.Debian</filename> untuk memberi manfaat bagi pengguna. Membaca berkas perubahan ini (melalui <emphasis role="pkg">apt-listchanges</emphasis>) akan membantu Anda menghindari kejutan buruk.
			</para>
			 <para>
				You might sometimes find that the new version of a software doesn't work at all. This generally happens if the application isn't particularly popular and hasn't been tested enough; a last-minute update can also introduce regressions which are only found after the stable release. In both cases, the first thing to do is to have a look at the bug tracking system at <literal>https://bugs.debian.org/<replaceable>package</replaceable></literal>, and check whether the problem has already been reported. If it hasn't, you should report it yourself with <command>reportbug</command>. If it is already known, the bug report and the associated messages are usually an excellent source of information related to the bug:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						terkadang sebuah patch telah ada, dan tersedia pada laporan kutu; Anda dapat mengompilasi ulang versi tetap paket yang rusak di lokal (lihat <xref linkend="sect.rebuilding-package" />);
					</para>

				</listitem>
				 <listitem>
					<para>
						dalam kasus lain, pengguna mungkin menemukan solusi masalah tersebut dan dibagi dalam penjelasannya dalam balasan ke laporan tersebut;
					</para>

				</listitem>
				 <listitem>
					<para>
						dan dalam kasus lain, paket perbaikkan mungkin telah dipersiapkan dan tersedia secara publik oleh maintainer.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Depending on the severity of the bug, a new version of the package may be prepared specifically for a new revision of the stable release. When this happens, the fixed package is made available in the <literal>proposed-updates</literal> section of the Debian mirrors (see <xref linkend="sect.proposed-updates" />). The corresponding entry can then be temporarily added to the <filename>sources.list</filename> file, and updated packages can be installed with <command>apt</command> or <command>aptitude</command>.
			</para>
			 <para>
				Sometimes the fixed package isn't available in this section yet because it is pending a validation by the Stable Release Managers. You can verify if that's the case on their web page. Packages listed there aren't available yet, but at least you know that the publication process is ongoing. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>Menjaga agar Sistem Up to Date</title>
		 <para>
			Distro Debian adalah dinamis dan berubah terus-menerus. Perubahan yang paling sering adalah pada versi <emphasis role="distribution">Testing</emphasis> dan <emphasis role="distribution">Unstable</emphasis>, namun bahkan <emphasis role="distribution">Stable</emphasis> diperbaharui dari waktu ke waktu, seringnya untuk perbaikan yang berhubungan dengan keamanan. Apapun versi Debian yang dijalankan sistem, umumnya merupakan ide yang bagus untuk menjaga tetap up to date, agar Anda mendapatkan manfaat evolusi terkini dan perbaikan kutu.
		</para>
		 <para>
			Tentu saja memungkinkan secara berkala menjalankan sebuah alat untuk memeriksa pembaharuan yang tersedia dan menjalankan upgrade, semacam tugas berulang yang membosankan, khususnya ketika perlu dijalankan pada beberapa mesin. Untungnya, seperti tugas berulang lainnya, sebagian dapat diotomatiskan, dan seperangkat alat telah dikembangkan untuk efek tersebut.
		</para>
		 <para>
			Yang pertama dari alat ini adalah <command>apticron</command>, dalam paket dengan nama yang sama. Efek utamanya adalah untuk menjalankan sebuah skrip tiap hari (via <command>cron</command>). Skrip tersebut memperbaharui daftar paket tersedia, dan, jika beberapa paket terinstall bukan merupakan versi terkini yang tersedia, dia mengirim sebuah surel dengan daftar paket ini bersama dengan perubahan yang mungkin telah dibuat pada versi terbarunya. Biasanya, paket ini kebanyakan menargetkan pengguna Debian <emphasis role="distribution">Stable</emphasis>, karena surel harian mungkin akan sangat panjang untuk versi cepat Debian. Ketika pembaharuan tersedia, <command>apticron</command> mengunduhnya secara otomatis. Dia tidak menginstallnya - administrator tetap akan melakukannya - namun jika paket telah terunduh dan tersedia secara lokal (dalam cache APT) membuat pekerjaan lebih cepat.
		</para>
		 <para>
			Administrator yang bertugas pada beberapa komputer tidak akan ragu mengapresiasi informasi upgrade yang tertunda, namun upgrade itu sendiri masih membosankan sebagaimana seharusnya, di mana skrip <filename>/etc/cron.daily/apt</filename> (dalam paket <emphasis role="pkg">apt</emphasis>) hadir untuk memudahkan. Skrip ini juga dijalankan per hari (dan tak-interaktif) oleh <command>cron</command>. Untuk mengontrol perilaku ini, gunakan variabel konfigurasi APT (yang tersimpan dalam sebuah berkas di bawah <filename>/etc/apt/apt.conf.d/</filename>). Variabel utamanya adalah:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						Pilihan ini mengizinkan Anda untuk menentukan frekunsi (dalam hari) untuk menyegarkan daftar paket. Pengguna <command>apticron</command> dapat melakukannya tanpa variabel ini, karena <command>apticron</command> telah melakukan tugas ini.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						Lagi, pilihan ini menentukan sebuah frekuensi (dalam hari), kali ini untuk mengunduh paket aktual. Lagi, pengguna <command>apticron</command> tidak memerlukannya.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						Pilihan ini mencakup fitur yyang tidak dimiliki <command>apticron</command>. Ini mengontrol bagaimana sering paket usang (yang tidak lagi dirujuk oleh distribusi apapun) dihapus dari cache APT. Ini menjaga cache APT pada ukuran yang berarti dan maknanya Anda tidak perlu khawatir terhadap tugas tersebut.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						Ketika pilihan ini diaktifkan, skrip harian akan mengeksekusi <command>unattended-upgrade</command> (dari paket <emphasis role="pkg">unattended-upgrades</emphasis>) yang - namanya menyarankan - dapat mengotomatisasi proses upgrade untuk beberapa paket (secara bawaan hanya menangani pembaharuan keamanan, namun ini dapat dikostumisasi di <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Catat bahwa pilihan ini dapat diatur dengan bantuan debconf dengan menjalankan <command>dpkg-reconfigure -plow unattended-upgrades</command>.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Pilihan lain dapat mengizinkan Anda untuk mengontrol perilaku pembersihan cache dengan lebih seksama. Mereka tidak terdaftar di sini, manum mereka dijelaskan di skrip <filename>/etc/cron.daily/apt</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			These tools work very well for servers, but desktop users generally prefer a more interactive system. That is why the “Debian desktop environment” task installs <emphasis role="pkg">gnome-packagekit</emphasis> (at least when you select GNOME as desktop environment). It provides an icon in the notification area of desktop environments when updates are available; clicking on this icon then runs <command>gpk-update-viewer</command>, a simplified interface to perform updates. You can browse through available updates, read the short description of the relevant packages and the corresponding <filename>changelog</filename> entries, and select whether to apply the update or not on a case-by-case basis.
		</para>
		 <figure>
			<title>Pembaharuan dengan <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>Pembaharuan Otomatis</title>
		 <indexterm>
			<primary>pembaharuan</primary>
			<secondary>pembaharuan sistem otomatis</secondary>
		</indexterm>
		 <indexterm>
			<primary>pembaharuan otomatis</primary>
		</indexterm>
		 <para>
			Karena Falcot Cort memiliki banyak komputer namun hanya terbatas kekuatan orang, administratornya mencoba untuk membuat upgrade seotomatis mungkin. Program yang bertugas pada proses ini harus dijalankan tanpa intervensi manusia.
		</para>
		 <section>
			<title>Mengonfigurasi <command>dpkg</command></title>
			 <para>
				Seperti yang telah kita sebutkan (lihat bilah tepi <xref linkend="sidebar.questions-conffiles" />), <command>dpkg</command> dapat diarahkan untuk tidak meminta konfirmasi ketika mengganti berkas konfigurasi (dengan pilihan <literal>--force-confdef --force-confold</literal>). Akan tetapi, interaksi dapat memiliki tiga sumber lain: beberapa datang dari APT itu sendiri, beberapa ditangai oleh <command>debconf</command>, dan beberapa terjadi di baris perintah karena skrip konfigurasi paket.
			</para>

		</section>
		 <section>
			<title>Mengonfigurasi APT</title>
			 <para>
				Kasus APT ini sederhana: pilihan <literal>-y</literal> (atau <literal>--assume-yes</literal>) memberitahu APT untuk memutuskan menjawab semua pertanyaannya dengan “ya”.
			</para>

		</section>
		 <section>
			<title>Mengonfigurasi <command>debconf</command></title>
			 <para>
				Kasus <command>debconf</command> berhak lebih diperinci. Program ini, dari intersepsinya, didesain untuk mengontrol relevansi dan volume pertanyaan yang ditampilkan ke pengguna, sebagaimana cara mereka dimunculkan. Oleh karena itu, konfigurasinya meminta sebuah prioritas minimal untuk pertanyaan; hanya pertanyaan di atas prioritas minimal yang ditampilkan. <command>debconf</command> mengasumsikan jawaban standar (ditentukan oleh maintainer paket) untuk pertanyaan yang diputuskan untuk dilewati.
			</para>
			 <para>
				Elemen konfigurasi lainnya adalah antarmuka yang digunakan oleh front-end. Jika Anda memilih <literal>nontinteractive</literal> dari pilihan lain, seluruh interaksi pengguna dinonaktifkan. Jika sebuah paket mencoba menampilkan sebuah catatan informatif, ini akan dikirim ke administrator melalui surel.
			</para>
			 <para>
				Untuk mengonfigurasi ulang <command>debconf</command>, gunakan alat <command>dpkg-reconfigure</command> dari paket <emphasis role="pkg">debconf</emphasis>; perintah yang relevan adalah <command>dpkg-reconfigure debconf</command>. Catat bahwa nilai konfigurasi dapat diabaikan sementara dengan variabel lingkungan ketika diperlukan (misalnya, <varname>DEBIAN_FRONTEND</varname> mengontrol antarmuka, sebagaimana didokumentasikan dalam laman manual <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry>).
			</para>

		</section>
		 <section>
			<title>Menangani Interaksi Baris Perintah</title>
			 <para>
				Sumber interaksi terakhir, dan yang paling sulit ditangani, adalah skrip konfigurasi dijalankan oleh <command>dpkg</command>. Sayangnya tidak ada solusi standar, dan tidak ada jawaban yang meliputi lebih baik dari lainnya.
			</para>
			 <para>
				The common approach is to suppress the standard input by redirecting the empty content of <filename>/dev/null</filename> into it with <command><replaceable>command</replaceable> &lt;/dev/null</command>, or to feed it with an endless stream of newlines. None of these methods is 100 % reliable, but they generally lead to the default answers being used, since most scripts consider a lack of reply as an acceptance of the default value.
			</para>

		</section>
		 <section>
			<title>Kombinasi Ajaib</title>
			 <para>
				Dengan mengombinasikan elemen sebelumnya, memungkinkan untuk mendesain skrip kecil yang lebih handal yang dapat menangani upgrade otomatis.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>Skrip pembaharuan non-interaktif</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade
</programlisting>

			</example>
			 <sidebar> <title><emphasis>PRAKTEKNYA</emphasis> Kasus Falcot Corp</title>
			 <para>
				Komputer Falcot adalah sebuah sistem heterogen, dengan mesin yang memiliki fungsi bermacam-macam. Administrator dapat mengambil solusi yang relevan untuk setiap komputer.
			</para>
			 <para>
				In practice, the servers running <emphasis role="distribution">Jessie</emphasis> are configured with the “miracle combination” above, and are kept up to date automatically. Only the most critical servers (the firewalls, for instances) are set up with <command>apticron</command>, so that upgrades always happen under the supervision of an administrator.
			</para>
			 <para>
				The office workstations in the administrative services also run <emphasis role="distribution">Jessie</emphasis>, but they are equipped with <emphasis role="pkg">gnome-packagekit</emphasis>, so that users trigger the upgrades themselves. The rationale for this decision is that if upgrades happen without an explicit action, the behavior of the computer might change unexpectedly, which could cause confusion for the main users.
			</para>
			 <para>
				Di laboratorium, beberapa komputer menggunakan <emphasis role="distribution">Testing</emphasis> — untuk memanfaatkan versi terakhir perangkat lunak - tidak diupgrade secara otomatis juga. Administrator hanya mengonfigurasi APT untuk menyiapkan upgrade namun tidak menerapkannya; ketika mereka memutuskan untuk upgrade (secara manual), bagian yang membosankan dari menyegarkan daftar paket dan mengunduh paket akan dihindari, dan administrator dapat fokus pada bagian yang benar-benar berguna.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>Mencari Paket</title>
		 <para>
			Dengan pertumbuhan jumlah perangkat lunak yang besar di Debian, muncul paradox: Debian biasanya memiliki alat untuk kebanyakan tugas, namun alat itu dapat menjadi sangat sulit untuk di antara segudang paket lain. Kurangnya kesesuaian cara untuk mencari (dan menemukan) alat yang benar menjadi sebuah masalah sejak lama. Untungnya, masalah ini hampir sebagian besar telah teratasi.
		</para>
		 <para>
			The most trivial search possible is looking up an exact package name. If <command>apt show <replaceable>package</replaceable></command> returns a result, then the package exists. Unfortunately, this requires knowing or even guessing the package name, which isn't always possible.
		</para>
		 <sidebar> <title><emphasis>TIP</emphasis> Konvensi penamaan paket</title>
		 <para>
			Beberapa kategori paket dinamai berdasarkan bagan konvensi penamaan; mengetahui bagannya terkadang dapat mengizinkan Anda untuk menduga nama paket yang tepat. Misalnya, untuk modul Perl, konvensinya mengatakan sebuah modul disebut <literal>XML::Handler::Composer</literal> hulu harus dipaketkan sebagai <emphasis role="pkg">libxml-handler-composer-perl</emphasis>. Pustaka yang mengaktifkan penggunaan sistem <command>gconf</command> dari Python dipaketkan sebagai <emphasis role="pkg">python-gconf</emphasis>. Sayangnya tidak mungkin untuk menentukan bagan penamaan umum untuk seluruh paket, bahkan jika maintainer paket biasanya mencoba untuk mengikuti pilihan pengembang hulu.
		</para>
		 </sidebar> <para>
			Pola pencarian yang sedikit lebih sukses adalah pencarian teks-murni pada nama paket, namun ini sangat terbatas. Anda dapat menemukan hasil secara umum dengan mencari deskripsi paket: karena setiap paket memiliki lebih kurang rincian deskripsi tambahan pada nama paketnya, kata kunci pencarian pada deskripsinya seringkali akan berguna. <command>apt-cache</command> dan <command>axi-cache</command> merupakan pilihan alat untuk jenis pencarian ini; misalnya, <command>apt-cache search video</command> akan menghasilkan daftar seluruh paket yang nama atau deskripsinya berisi katakunci “video”.
		</para>
		 <para>
			Untuk pencarian yang lebih kompleks, diperlukan peralatan yang lebih powerful semacam <command>aptitude</command>. <command>aptitude</command> mengizinkan Anda untuk mencari berdasarkan ekspresi logis pada field meta-data paket. Misalnya, perintah berikut mencari paket yang namanya berisi <literal>kino</literal>, yang deskripsinya berisi <literal>video</literal> dan nama maintainernya berisi <literal>paul</literal>:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
State: not installed
Version: 1.3.4-2.1+b1
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8,472 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=
         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=
         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=
         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,
         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=
         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),
         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=
         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),
         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),
         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),
         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,
         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus
Replaces: kino-dvtitler, kino-timfx, kinoplus
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV
 camcorders. This program uses many keyboard commands for fast navigating and
 editing inside the movie. 
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly
 distributed as separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/

Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::x11, role::program, scope::application, suite::gnome,
      uitoolkit::gtk, use::editing, use::learning, works-with::video,
      x11::application
</screen>
		 <para>
			Pencarian ini hanya menghasilkan satu paket, <emphasis role="pkg">kino</emphasis>, yang memenuhi ketiga kriteria.
		</para>
		 <para>
			Bahkan pencarian banyak-kriteria tidak terlalu luas, yang menjelaskan mengapa mereka tidak digunakan sebanyak mereke seharusnya. Sistem pelabelan baru telah dikembangkan, dan ini menyediakan pendekatan baru ke pencarian. Paket diberi label (tag) yang menyediakan klasifikasi tematis bersama beberapa untai, diketahui dengan “klasifikasi berbasi-segi”. Dalam kasus <emphasis role="pkg">kino</emphasis> di atas, tag paket menunjukkan bahwa kino adalah perangkat lunak berbasis-Gnome yang bekerja pada data video dan tujuan utamanya adalah penyuntingan.
		</para>
		 <para>
			Menjelajah klasifikasi ini dapat membantu Anda untuk mencari sebuah paket yang sesuai pada kebutuhan yang diketahui; bahkan jika menghasilkan sejumlah (sedang) hit, seluruh pencarian dapat dilakukan secara manual. Untuk melakukannya, Anda dapat menggunakan pola pencarian <literal>~G</literal> pada <command>aptitude</command>, namun mungkin lebih mudah untuk menavigasi di situs di mana tag dikelola: <ulink type="block" url="http://debtags.alioth.debian.org/cloud/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>tag</primary>
		</indexterm>
		 <para>
			Memilih tag <literal>works-with::video</literal> dan <literal>use::editing</literal> menghasilkan segelintir paket, termasuk <emphasis role="pkg">kino</emphasis> dan editor video <emphasis role="pkg">pitivi</emphasis>. Sistem klasifikasi ini terkait untuk digunakan sesering mungkin seiring berjalannya waktu, dan manajer paket akan secara bertahap menyediakan antarmuka pencarian yang efisien berdasarkan hal ini.
		</para>
		 <para>
			Untuk menghitungnya, peralatan terbaik untuk pekerjaan tergantung pada kompleksitas pencarian yang ingin Anda lakukan:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<command>apt-cache</command> hanya mengizinkan pencarian pada nama paket dan deskripsi, yang sangat nyaman ketika mencari beberapa paket yang cocok dengan target beberapa kata kunci;
				</para>

			</listitem>
			 <listitem>
				<para>
					ketika kriteria pencaria juga menyertakan hubungan antara paket atau meta-data lain seperti nama maintainer, <command>synaptic</command> akan lebih berguna;
				</para>

			</listitem>
			 <listitem>
				<para>
					ketika pencarian berbasis-tag diperlukan, alat yang baik ialah <command>packagesearch</command>, sebuah antarmuka grafis didedikasikan untuk mencari paket tersedia bersama dengan beberapa kriteria (termasuk nama berkas yang ada di dalamnya). Untuk penggunaan baris-perintah, <command>axi-cache</command> akan sesuai dengan permintaan.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					akhirnya, ketika pencarian melibatkan ekspresi yang kompleks dengan operasi logika, alat yang dipilih akan berupa pola sintaks pencarian <command>aptitude</command>, yang cukup powerful sekalipun menjadi semacam jelas; ini bekerja pada baris-perintah dan mode interaktif.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

