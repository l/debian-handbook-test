<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="the-debian-project">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-the-debian-project.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>Cel</keyword>
      <keyword>Środki</keyword>
      <keyword>Działanie</keyword>
      <keyword>Wolontariusz</keyword>
    </keywordset>
  </chapterinfo>
  <title>Projekt Debian</title>
  <highlights>
    <para>Zanim zagłębimy się bezpośrednio w technologię, przyjrzyjmy się temu, czym jest w istocie Projekt Debian; przyjrzyjmy się jego celom, środkom, i działaniom.</para>
  </highlights>
  <section id="sect.what-is-debian">
    <title>Co to jest Debian?</title>
    <indexterm><primary>stowarzyszenie</primary></indexterm>

    <sidebar>
      <title><emphasis>KULTURA</emphasis> Pochodzenie nazwy Debian</title>

      <para>Nie szukając dalej: Debian to nie jest skrót. Ta nazwa, w rzeczywistości, jest połączeniem dwóch imion: pochodzi z połączenia imienia Ian (Ian Murdock) z częścią imienia jego przyjaciółki z tamtych czasów, Debra. Deb- + Ian = Debian.</para>
    </sidebar>

    <para>Debian jest dystrybucją GNU/Linux. Co to jest dystrybucja — wyjaśnimy bardziej szczegółowo w: <xref linkend="sect.role-of-distributions" />; na razie stwierdzimy po prostu, że jest to kompletny system operacyjny, łącznie z oprogramowaniem i systemami do instalacji i zarządzania, a to wszystko oparte jest na jądrze Linuksa i wolnym oprogramowaniu (szczególnie tym, które pochodzi z projektu GNU).</para>

    <para>Ian Murdock, gdy tworzył Debiana w 1993 roku pod przewodnictwem FSF (ang. Free Software Foundation — fundacja wolnego oprogramowania), miał jasno wyznaczone cele, które wyłożył w <emphasis>Manifeście Debiana</emphasis>. Wolny system operacyjny, w zamierzeniu, powinien mieć dwie zasadnicze cechy: po pierwsze, powinien być systemem o wysokiej jakości, tworzonym z największą starannością, aby był wart jądra Linuksa; po drugie, powinien być dystrybucją niekomercyjną, a przy tym na tyle wiarygodną, aby konkurować z dystrybucjami komercyjnymi. Te dwa ambitne cele, zdaniem Murdocka, mogą być osiągnięte tylko poprzez otwarcie procesu tworzenia Debiana, podobnie jak to było w przypadku Linuksa i projektu GNU; partnerskie, wzajemne przeglądy postępów pracy nad Debianem powinny stale udoskonalać ten produkt.</para>

    <sidebar>
      <title><emphasis>KULTURA</emphasis> GNU, projekt FSF</title>
      <indexterm><primary>GNU</primary></indexterm>
      <indexterm><primary>GNU</primary><secondary>nie jest Uniksem (ang. GNU is Not Unix)</secondary></indexterm>

      <para>Projekt GNU obejmuje szeroki zakres oprogramowania, tworzonego lub sponsorowanego przez Fundację Wolnego Oprogramowania (ang. Free Software Foundaton — FSF). Fundacja swoimi początkami sięga działalności niemal już mitycznego lidera, którym był dr Richard M. Stallman. GNU jest rekursywnym akronimem angielskiego zwrotu "GNU is Not Unix" ("GNU nie jest Uniksem").</para>
    </sidebar>

    <sidebar>
      <title><emphasis>KULTURA</emphasis> Richard Stallman</title>
      <indexterm><primary>Stallman, Richard</primary></indexterm>
      <indexterm><primary>RMS</primary></indexterm>

      <para>Założyciel <acronym>FSF</acronym> i autor licencji GPL (ang. General Public License — ogólna licencja publiczna), Richard M. Stallman (często określany za pomocą inicjałów jako RMS) jest charyzmatycznym liderem ruchu Wolnego Oprogramowania. Ze względu na jego bezkompromisową postawę nie wszyscy go podziwiają, lecz szanują go za jego nietechniczny wkład w rozwój Wolnego Oprogramowania (szczególnie na poziomie prawnym i filozoficznym).</para>
    </sidebar>
    <section>
      <title>Wieloplatformowy system operacyjny</title>
      <indexterm><primary>meta-dystrybucja</primary></indexterm>

      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Podróż Ian'a Murdock'a</title>
        <indexterm><primary>Ian Murdock</primary></indexterm>
        <indexterm><primary>Murdock, Ian</primary></indexterm>
        <indexterm><primary>Progeny</primary></indexterm>

	<para>Ian Murdock, założyciel projektu Debian, był jego pierwszym liderem w latach od 1993 do 1996 roku. Po tym, jak pałeczkę przywództwa w Projekcie przejął Bruce Perens, Ian zaczął odgrywać mniejszą rolę publiczną. Powrócił do zakulisowej pracy w społeczności wolnego oprogramowania, tworząc firmę Progeny, z intencją utworzenia komercyjnej dystrybucji, pochodnej od Debiana. Przedsięwzięcie to niestety stało się porażką komercyjną, i rozwój tej dystrybucji został porzucony. Firma, po wielu latach borykania się z trudnościami — dostarczając usługi — w końcu zbankrutowała w kwietniu 2007 roku. Z wielu projektów, zainicjowanych przez Progeny, pozostaje nadal aktywne narzędzie <emphasis>discover</emphasis> , służące do automatycznego wykrywania sprzętu.</para>
      </sidebar>

      
      <para>Debian, pozostając wierny swoim początkowym zasadom, odniósł tak niebywały sukces, że obecnie osiągnął olbrzymie rozmiary. 12 oferowanych architektur obejmuje 10 architektur sprzętowych i dwa jądra (Linux i FreeBSD, chociaż porty oparte na FreeBSD nie są częścią zestawu oficjalnie wspieranych architektur). Co więcej, dostępne oprogramowanie, mając ponad 21 000 pakietów źródłowych, wychodzi naprzeciw prawie wszystkim potrzebom jakie można mieć, zarówno w domu, jak i w przedsiębiorstwie.</para>

      <para>Sama wielkość dystrybucji może być niewygodna. Faktycznie, jest czymś nierozsądnym rozpowszechniać 84 płyty CD-ROM, aby zainstalować pełną wersję Debiana na standardowym PC ... Dlatego też Debian coraz częściej jest określany jako "meta-dystrybucja", z której można wyodrębnić dystrybucje bardziej specyficzne, przeznaczone dla określonych odbiorców: Debian-Desktop (do tradycyjnego użytku biurowego), Debian-Edu (do użytku edukacyjnego i pedagogicznego w środowisku akademickim), Debian-Med (dla aplikacji medycznych), Debian-Junior (dla małych dzieci), itd. Bardziej kompletną listę podprojektów można znaleźć w sekcji poświęconej temu celowi, zobacz <xref linkend="sect.sub-projects" />.</para>

      <para>Te częściowe widoki Debiana są zorganizowane w dobrze zdefiniowane ramy (ang. framework), co gwarantuje bezproblemową kompatybilność pomiędzy różnymi "sub-dystrybucjami". Wszystkie z nich przestrzegają ogólnych zasad planowania, przeznaczonych dla wydań nowych wersji. Ponieważ są zbudowane na tych samych podstawach, mogą być łatwo rozszerzane, kompletowane i personalizowane za pomocą aplikacji dostępnych w repozytoriach Debiana.</para>
      <indexterm><primary>podprojekt</primary></indexterm>

      <para>Wszystkie narzędzia Debiana działają w tym kierunku: <command>debian-cd</command> pozwala na utworzenie zestawu płyt CD-ROM ze wstępnie wybranym zestawem pakietów; <command>debian-installer</command> jest instalatorem modułowym, i dzięki temu jest łatwy do zaadoptowania do specjalnych potrzeb; <command>APT</command> będzie instalował pakiety o różnym pochodzeniu, a przy tym będzie gwarantował ich całkowitą spójność z systemem.</para>

      <sidebar>
        <title><emphasis>NARZĘDZIE</emphasis> Tworzenie płyty Debian CD-ROM</title>
        <indexterm><primary><command>debian-cd</command></primary></indexterm>

	<para><command>debian-cd</command> tworzy gotowe do użytku obrazy ISO mediów instalacyjnych (CD, DVD, Blu-Ray, itp.). Jakakolwiek sprawa odnosząca się do tego oprogramowania jest dyskutowana (w języku angielskim) na liście dyskusyjnej <email>debian-cd@lists.debian.org</email>. Zespół jest prowadzony przez Steve'a McIntyre, który obsługuje oficjalne konstrukcje Debian ISO.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Dla każdego komputera własna architektura</title>

	<para>Termin "architektura" wskazuje na typ komputera (najbardziej znanymi typami są Mac lub PC). Każda architektura różni się głównie ze względu na procesor, zwykle niekompatybilny z innymi procesorami. Różnice w sprzęcie komputerowym pociągają za sobą zróżnicowanie środków działania wymagających oprogramowania, które musi być skompilowane oddzielnie dla każdej architektury.</para>
        <indexterm><primary>architektura</primary></indexterm>
        <indexterm><primary>procesor</primary></indexterm>

	<para>Większość oprogramowania dostępnego w Debianie napisana jest w przenośnych językach programowania; ten sam kod źródłowy może być kompilowany dla różnych architektur. W rezultacie, wykonywalny plik binarny jest zawsze skompilowany dla określonej architektury. Oznacza to, że plik binarny nie zawsze będzie funkcjonował na innych architekturach.</para>

	<para>Warto zauważyć, że każdy program jest tworzony poprzez pisanie kodu źródłowego. Kod źródłowy jest to plik tekstowy złożony z instrukcji w danym języku programowania. Zanim będzie można użyć tego oprogramowania, trzeba skompilować kod źródłowy.  Oznacza to przekształcenie kodu w plik binarny (w serię instrukcji maszynowych wykonywalnych przez procesor). Każdy język programowania posiada specyficzny dla tego języka kompilator, niezbędny do wykonania tej operacji (na przykład, <command>gcc</command> dla języka programowania C).</para>
        <indexterm><primary>kod</primary> <secondary>źródłowy</secondary></indexterm>
        <indexterm><primary>kod binarny</primary></indexterm>
        <indexterm><primary>kompilacja</primary></indexterm>
        <indexterm><primary>kompilator</primary></indexterm>
      </sidebar>

      <sidebar>
        <title>Instalator <emphasis>NARZĘDZIE</emphasis></title>
        <indexterm><primary><command>debian-installer</command></primary></indexterm>

	<para><command>debian-installer</command> to nazwa programu instalacyjnego Debiana. Modułowy projekt tego programu pozwala na używanie go w szerokim zakresie scenariuszy instalacyjnych. Prace rozwojowe wokół tego projektu są koordynowane na liście dyskusyjnej <email>debian-boot@lists.debian.org</email> ; koordynatorem jest Cyril Brulebois.</para>
      </sidebar>
    </section>
    <section>
      <title>Jakość Wolnego Oprogramowania</title>

      <para>Debian postępuje zgodnie ze wszystkimi zasadami Wolnego Oprogramowania, a jego nowe wersje nie są wydawane do czasu, aż wszystko jest w pełni gotowe. Deweloperzy nie żyją pod presją zestawu terminów, nie mają ustalonego ostatecznego terminu dla wydania. Ludzie często skarżą się na długi okres czasu, jaki upływa pomiędzy kolejnymi, stabilnymi wydaniami Debiana. To jednak tylko wzmacnia opinię o legendarnej wręcz wiarygodności Debiana: długie miesiące testów są rzeczywiście niezbędne, aby pełna dystrybucja otrzymała etykietę "stabilna".</para>

      <para>Debian jest bezkompromisowy, jeśli chodzi o jakość: wszystkie znane błędy krytyczne są rozwiązywane (poprawiane) w dowolnej nowej wersji, nawet jeśli to wymaga wstępnego opóźnienia daty wydania w stosunku do wcześniejszych prognoz.</para>
    </section>
    <section>
      <title>Ramy prawne: Organizacja non-profit</title>

      <para>Debian, pod względem prawnym, jest projektem zarządzanym przez amerykańskie stowarzyszenie non-profit, które oparte jest na pracy wolontariuszy. Projekt ma około tysiąca <emphasis>deweloperów Debiana</emphasis>, lecz łączy ze sobą o wiele większą liczbę współpracowników (tłumaczy, osób, które tworzą raporty o błędach systemowych, artystów, przypadkowych deweloperów, itd.).</para>

      <para>Aby prowadzić swoją owocną misję, Debian posiada w Internecie dużą infrastrukturę wielu połączonych ze sobą serwerów, które są oferowane przez licznych sponsorów.</para>

      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> z Debianem w tle, stowarzyszenie SPI, i gałęzie lokalne</title>
        <indexterm><primary>stowarzyszenie</primary></indexterm>
        <indexterm><primary>SPI</primary></indexterm>
        <indexterm><primary>Debian Francja</primary></indexterm>
        <indexterm><primary>Oprogramowanie w Interesie Publicznym (ang. Software in the Public Interest)</primary></indexterm>

	<para>Debian nie ma żadnego serwera pod swoją własną nazwą, ponieważ jest  tylko projektem w obrębie stowarzyszenia <emphasis>Software in the Public Interest — SPI (pol. Oprogramowanie w Interesie Publicznym)</emphasis>, a SPI zarządza sprzętem komputerowym i aspektami finansowymi (darowizny, zakup sprzętu, itd.). Chociaż stowarzyszenie początkowo było założone specjalnie dla projektu Debian, to obecnie jest gospodarzem dla wielu projektów wolnego oprogramowania, szczególnie dla bazy danych PostgreSQL, dla projektu Freedesktop.org (jest to projekt dla standaryzacji różnych części nowoczesnych, pulpitowych środowisk graficznych, takich jak GNOME i KDE), i dla pakietu biurowego Libre Office.
<ulink type="block" url="http://www.spi-inc.org/" /></para>

	<para>Wiele stowarzyszeń lokalnych, oprócz SPI, blisko współpracuje z Debianem. Taka współpraca ma na celu wytwarzanie funduszy dla Debiana bez potrzeby centralizacji wszystkiego w USA. Stowarzyszenia tego rodzaju, w żargonie Debiana, są określane mianem "Zaufanych Organizacji". Takie ustawienie spraw finansowych i organizacyjnych pozwala uniknąć międzynarodowych kosztów transferów, jak też dopasowuje się dobrze do zdecentralizowanej natury projektu.</para>

	<para>Chociaż lista zaufanych organizacji jest raczej krótka, to jest o wiele więcej stowarzyszeń związanych z Debianem, których celem jest promocja Debiana: <emphasis>Debian France</emphasis>, <emphasis>Debian-ES</emphasis>, <emphasis>debian.ch</emphasis>; są także inne, podobne stowarzyszenia na całym świecie. Przyłącz się do twojego lokalnego stowarzyszenia, aby wspierać projekt!
<ulink type="block" url="http://wiki.debian.org/Teams/Auditor/Organizations" />
<ulink type="block" url="http://france.debian.net/" />
<ulink type="block" url="http://www.debian-es.org/" />
<ulink type="block" url="http://debian.ch/" /></para>
      </sidebar>
    </section>
  </section>
  <section id="sect.foundation-documents">
    <title>Dokumenty Założycielskie</title>
    <indexterm><primary>Dokumenty Założycielskie</primary></indexterm>

    <para>Kilka lat po swoim wstępnym uruchomieniu Debian sformalizował zasady, według których powinien postępować jako projekt wolnego oprogramowania. Ta świadoma decyzja aktywistów dopuszcza uporządkowany i pokojowy rozwój projektu poprzez zapewnienie, że wszyscy jego członkowie zmierzają w tym samym kierunku. Aby stać się deweloperem Debiana, każdy kandydat musi potwierdzić i udowodnić swoje wsparcie i przestrzeganie zasad ustalonych w ramach Dokumentów Założycielskich projektu.</para>

    <para>Odbywają się ciągłe debaty na temat procesu tworzenia projektu. Dokumenty Założycielskie są szeroko — i z dużym konsensusem — wspierane, a dzięki temu — rzadko zmieniane. Konstytucja Debiana oferuje  także inne gwarancje swojej stabilności: aby zaaprobować jakąkolwiek poprawkę, wymagane jest trzy czwarte kwalifikowanej większości osób głosujących za przyjęciem lub odrzuceniem tej poprawki.</para>

    <section id="sect.social-contract">
      <title>Zobowiązania wobec użytkowników</title>
      <indexterm><primary>kontrakt społeczny</primary></indexterm>
      <indexterm><primary>kontrakt, społeczny</primary></indexterm>

      <para>Projekt posiada także "kontrakt społeczny". Można by się zapytać, jakie jest miejsce takiego tekstu w projekcie nakierowanym jedynie na rozwój systemu operacyjnego. Odpowiedź jest dość prosta: Debian pracuje dla swoich użytkowników, a w ten sposób — pośrednio — także dla społeczeństwa. Kontrakt podsumowuje zobowiązania, jakich podejmuje się projekt na rzecz swoich użytkowników. Przestudiujmy te zobowiązania bardziej szczegółowo:</para>

      <orderedlist>
        <listitem>
	  <para>Debian pozostanie w 100% wolny.</para>

	  <para>Jest to Zasada Nr 1. Debian jest, i pozostanie — całkowicie i wyłącznie — złożony z wolnego oprogramowania. Dodatkowo, cały rozwój oprogramowania wewnątrz projektu Debiana, sam w sobie, będzie wolny.</para>

          <sidebar>
            <title><emphasis>PERSPEKTYWA</emphasis> Ponad oprogramowaniem</title>

	    <para>Pierwsza wersja Społecznego Kontraktu Debiana mówiła: "Debian Pozostanie w 100% Wolnym <emphasis>Oprogramowaniem</emphasis>". Zniknięcie tego słowa (wraz z ratyfikacją Wersji 1.1 kontraktu w kwietniu 2004 r.) wskazuje na chęć osiągnięcia wolności nie tylko w oprogramowaniu, ale też w dokumentacji i w dowolnym innym elemencie, jaki Debian chce dostarczać w obrębie systemu operacyjnego.</para>

	    <para>Ta zmiana, która w zamierzeniu miała być tylko niewielką poprawką edytorską, miała ogromne konsekwencje, szczególnie przy usuwaniu pewnej problematycznej dokumentacji. Co więcej, wzrost użycia oprogramowania sprzętowego w sterownikach, stwarza również problemy: wiele sterowników jest nie wolnodostępnych (ang. non-free), chociaż są one niezbędne do poprawnego działania odpowiadającego im sprzętu komputerowego.</para>
          </sidebar>
        </listitem>
        <listitem>
	  <para>Obecnie, powrócimy znowu do społeczności otwartego oprogramowania.</para>

	  <para>Dowolne ulepszenie w pracy, która jest integralną częścią dystrybucji, dokonane na rzecz projektu Debian, jest wysyłane z powrotem do autora tej pracy (jest to określane jako "upstream", dosłownie, z ang.: pod prąd, w górę rzeki). Ogólnie, Debian będzie współpracował raczej ze społecznością użytkowników, niż z pracą poszczególnych osób.</para>

          <sidebar>
            <title><emphasis>SPOŁECZNOŚĆ</emphasis> Autor idący pod prąd, czy deweloper Debiana?</title>
            <indexterm><primary>autor upstream</primary></indexterm>
            <indexterm><primary>autor, upstream</primary></indexterm>
            <indexterm><primary>upstream</primary></indexterm>

	    <para>Termin "autor upstream" oznacza autora (autorów) /dewelopera (deweloperów) pracy, tych którzy ją piszą i rozwijają. Z drugiej strony, "Deweloper Debiana" używa istniejącej pracy, aby przekształcić ją w pakiet Debiana (bardziej do tego pasuje określenie "opiekun pakietu Debiana").</para>

	    <para>W praktyce, to rozróżnienie nie jest często aż tak wyraźne. Opiekun pakietu Debiana może np. napisać "łatkę" (ang. patch), która przynosi korzyści dla wszystkich użytkowników tej pracy. Ogólnie, Debian zachęca wszystkich użytkowników, którzy są odpowiedzialni za jakiś pakiet w Debianie, aby zaangażowali się także w rozwój "upstream", i aby stali się w ten sposób współpracownikami, a nie jedynie zwykłymi użytkownikami programu.</para>
          </sidebar>
        </listitem>
        <listitem>
	  <para>Nie będziemy ukrywać problemów.</para>

	  <para>Debian nie jest doskonały, dlatego też będziemy szukać nowych problemów, aby je naprawiać każdego dnia. Będziemy nieustannie utrzymywać, do publicznego wglądu, naszą całą, otwartą bazę danych z raportami o błędach, raportami chętnie wypełnianymi przez ludzi w trybie online, raportami dostępnymi bez ograniczeń dla innych użytkowników Internetu.</para>
        </listitem>
        <listitem>
	  <para>Naszymi priorytetami są nasi użytkownicy i wolne oprogramowanie.</para>

	  <para>To zaangażowanie jest trudniejsze do określenia. Debian narzuca zatem stronniczość wtedy, kiedy trzeba podjąć decyzję, a odrzucić proste (dla deweloperów) rozwiązanie zagrażające doświadczeniu użytkownika, decydując się na bardziej eleganckie rozwiązanie, nawet jeśli jest to trudniejsze do wykonania. Oznacza to wzięcie pod uwagę, jako priorytet, interesów użytkowników i wolnego oprogramowania.</para>
        </listitem>
        <listitem>
	  <para>Prace, które nie spełniają naszych standardów wolnego oprogramowania.</para>

	  <para>Debian akceptuje i rozumie to, że użytkownicy mogą chcieć używać pewnych programów nie wolnodostępnych. Dlatego też projekt pozwala na używanie części swojej infrastruktury do rozpowszechniania pakietów oprogramowania nie wolnodostępnego, które mogą być bezpiecznie rozpowszechniane.</para>

          <sidebar>
            <title><emphasis>SPOŁECZNOŚĆ</emphasis> Za, czy przeciwko sekcji non-free?</title>
            <indexterm><primary>non-free</primary></indexterm>
            <indexterm><primary>sekcja</primary> <secondary>non-free</secondary></indexterm>

	    <para>Zaangażowanie w utrzymywanie struktury dostosowanej do oprogramowania nie wolnodostepnego (to znaczy, oprogramowania z sekcji "non-free", zobacz zakladkę <xref linkend="sidebar.sections" />) jest często tematem debaty wewnątrz społeczności Debiana.</para>

	    <para>Krytycy twierdzą, że to oddala ludzi od wolnych odpowiedników oprogramowania komercyjnego. Jest też sprzeczne z zasadą służącą jedynie wolnemu oprogramowaniu. Zwolennicy kategorycznie twierdzą, że większość nie wolnodostępnych pakietów jest "prawie wolna", a wycofywane są tylko z powodu jednego lub dwóch irytujących ograniczeń (najczęściej będących zakazem komercyjnego użycia tego oprogramowania). Poprzez rozpowszechnianie tych prac w gałęzi non-free pośrednio wyjaśniamy ich autorowi /autorom, że proces wytwarzania tych prac powinien być lepiej znany, a prace powinny być szerzej używane, jeśli mają być zawarte w głównej sekcji oprogramowania Debiana. W ten sposób uprzejmie zapraszamy autorów prac do zmian licencji tak, aby lepiej służyły nadrzędnym celom wolnego oprogramowania.</para>

	    <para>Po pierwszej, bezowocnej próbie w 2004 roku, całkowite usunięcie sekcji non-free stało się mało prawdopodobne, zwłaszcza, że sekcja ta zawiera wiele przydatnych dokumentów, które zostały przeniesione do niej po prostu dlatego, że nie spełniają nowych wymagań dla sekcji głównej. Jest to szczególnie widoczne w przypadku niektórych plików dokumentacji oprogramowania wydanych w ramach projektu GNU (w szczególności, Emacs i Make).</para>

	    <para>Dalsze istnienie sekcji non-free jest źródłem okazjonalnych tarć z Fundacją Wolnego Oprogramowania, i jest głównym powodem tego, że Fundacja odrzuca oficjalną rekomendację dla Debiana twierdząc, ze nie jest to w pełni wolny system operacyjny.</para>
          </sidebar>
        </listitem>
      </orderedlist>
    </section>
    <section id="sect.dfsg">
      <title>Wytyczne Debiana dotyczące wolnego oprogramowania (ang. The Debian Free Software Guidelines)</title>
      <indexterm><primary>zasady wolnego oprogramowania</primary></indexterm>
      <indexterm><primary>DFSG</primary></indexterm>
      <indexterm><primary>Wytyczne Debiana dotyczące wolnego oprogramowania</primary></indexterm>
      <indexterm><primary>wolne</primary> <secondary>oprogramowanie</secondary></indexterm>

      <para>Ten podręcznikowy dokument określa, jakie oprogramowanie jest "wystarczająco wolne", aby je włączyć do Debiana. Jeśli licencja programu jest w zgodzie z tymi zasadami, to może on być ujęty w głównej sekcji, w innym przypadku, jeśli wolna dystrybucja jest tylko dozwolona, można ją znaleźć w sekcji non-free. Sekcja non-free – oficjalnie – nie jest częścią Debiana, jest to usługa dodana, dostarczona użytkownikom.</para>

      <para>Ten tekst, bardziej niż kryteria wyboru dla Debiana, stał się autorytetem w kwestii wolnego oprogramowania i posłużył jako podstawa dla "Definicji Otwartego Źródła". Historycznie, jest to więc jedna z pierwszych, formalnych definicji pojęcia "wolne oprogramowanie".</para>

      <para>Ogólna Licencja Publiczna GNU, Licencja BSD i Licencja Artystyczna, to przykłady tradycyjnych wolnych licencji, które postępują zgodnie z dziewięcioma punktami, wspomnianymi w tym tekście. Poniżej znajdziesz tekst tak, jak został on opublikowany na witrynie internetowej Debiana. <ulink type="block" url="http://www.debian.org/social_contract#guidelines" /></para>
      <orderedlist>
        <listitem>
          <formalpara>
            <title>Wolna redystrybucja.</title>

	    <para>Licencja składnika Debiana nie może ograniczać sprzedaży żadnej części składnika oprogramowania lub przekazania go jako składnika do innej, pełnej dystrybucji oprogramowania, która zawiera programy z wielu różnych źródeł. Licencja nie może żądać honorarium lub innej opłaty za taką sprzedaż.</para>
          </formalpara>

          <sidebar>
            <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Wolne licencje</title>
            <indexterm><primary>licencja</primary> <secondary>BSD</secondary></indexterm>
            <indexterm><primary>licencja BSD</primary></indexterm>
            <indexterm><primary>licencja</primary> <secondary>GPL</secondary></indexterm>
            <indexterm><primary>GPL</primary></indexterm>
            <indexterm><primary>GNU</primary> <secondary>Ogólna Licencja Publiczna GNU</secondary></indexterm>
            <indexterm><primary>Ogólna Licencja Publiczna</primary></indexterm>
            <indexterm><primary>licencja</primary> <secondary>artystyczna</secondary></indexterm>
            <indexterm><primary>licencja artystyczna</primary></indexterm>

	    <para>Licencja GNU GPL, Licencja BSD i Licencja Artystyczna są zgodne z Wytycznymi Debiana dotyczącymi wolnego oprogramowania, nawet jeśli różnią się między sobą.</para>

	    <para>Licencja GNU GPL, używana i promowana przez FSF (ang. Free Software Foundation - Fundacja Wolnego Oprogramowania), jest najpowszechniejszą, wolną licencją. Jej główną zaletą jest to, że stosuje się także do dowolnie rozpowszechnianej pracy pochodnej: program wcielający w życie lub używający kod licencjonowany przez GPL może być rozpowszechniany tylko zgodnie z jej warunkami. Ta licencja zabrania więc jakiegokolwiek ponownego użycia kodu w aplikacji własnościowej. Stwarza to poważne problemy dla ponownego użycia kodu GPL w wolnym oprogramowaniu, niekompatybilnym z tą licencją. Czasami nie jest możliwe połączenie programu, opublikowanego na innej licencji wolnego oprogramowania, z biblioteką rozpowszechnianą według GPL. Z drugiej strony, ta licencja jest bardzo solidnie osadzona w prawie amerykańskim: prawnicy FSF uczestniczyli w jej opracowywaniu i często byli zmuszeni do naruszania polubownego porozumienia z FSF bez uciekania się do rozstrzygnięć sądu.
<ulink type="block" url="http://www.gnu.org/copyleft/gpl.html" /></para>

	    <para>Licencja BSD jest najmniej restryktywna: wszystko jest dozwolone, łącznie z użyciem zmodyfikowanego kodu BSD w aplikacji własnościowej. Nawet Microsoft jej używa, opierając się na warstwie TCP/IP Windows NT z jądrem BSD.
<ulink type="block" url="http://www.opensource.org/licenses/bsd-license.php" /></para>

	    <para>W końcu, Licencja Artystyczna osiąga kompromis pomiędzy tymi dwiema poprzednimi licencjami: dozwolona jest integracja kodu z kodem aplikacji własnościowej, lecz jakakolwiek modyfikacja musi być opublikowana.
<ulink type="block" url="http://www.opensource.org/licenses/artistic-license-2.0.php" /></para>

	    <para>Pełny tekst tych licencji jest dostępny w katalogu <filename>/usr/share/commmon-licences/</filename> w dowolnym systemie Debiana.</para>
          </sidebar>
        </listitem>
        <listitem>
          <formalpara>
            <title>Kod źródłowy.</title>

	    <para>Program musi zawierać kod źródłowy i musi mieć pozwolenie na jego dystrybucję w postaci kodu źródłowego, jak też w postaci skompilowanej.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Prace pochodne.</title>

	    <para>Licencja musi dopuszczać modyfikacje i prace pochodne. Musi też pozwalać na to, aby były one rozpowszechniane na tych samych warunkach, co licencja oryginalnego oprogramowania.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Integralność źródłowego kodu autora.</title>

	    <para>Licencja może nakładać restrykcje na rozpowszechnianie kodu źródłowego w postaci zmodyfikowanej <emphasis>tylko wtedy</emphasis>, gdy pozwala na rozpowszechnianie "plików łatek" (ang. "patch files") z kodem źródłowym, w celu modyfikacji programu w trakcie jego budowania. Licencja musi wyraźnie pozwalać na rozpowszechnianie zbudowanego oprogramowania ze zmodyfikowanego kodu źródłowego. Licencja może wymagać, aby prace pochodne posiadały inną nazwę lub numer wersji niż nazwa lub numer wersji oryginalnego oprogramowania. <emphasis>To jest kompromis. Grupa Debian zachęca wszystkich autorów, aby nie tworzyli restrykcji na modyfikację plików, źródeł lub kodu binarnego</emphasis>.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Żadnej dyskryminacji wobec osób lub grup.</title>

	    <para>Licencja nie może dyskryminować żadnej osoby lub grupy osób.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Żadnej dyskryminacji wobec dziedzin zastosowania.</title>

	    <para>Licencja nie może nakładać restrykcji na nikogo, kto chce użyć program w konkretnej dziedzinie zastosowania. Na przykład, nie można nakładać restrykcji na wykorzystanie programu w biznesie lub w badaniach genetycznych.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Rozpowszechnianie licencji.</title>

	    <para>Prawa dołączone do programu muszą mieć zastosowanie dla tych wszystkich użytkowników, dla których ten program jest rozpowszechniany — bez konieczności posiadania dodatkowych licencji przez te strony.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Licencja nie może być specyficzna wyłącznie dla Debiana.</title>

	    <para>Prawa dołączone do programu nie mogą zależeć od programu, który jest częścią systemu Debian. Jeżeli program jest wyodrębniony z Debiana i używany lub rozpowszechniany bez Debiana, lecz zgodnie z warunkami licencji programu, to wszystkie strony, dla których program jest rozpowszechniany, powinny mieć takie same prawa jak te, które są przyznawane w połączeniu z systemem Debian.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Licencja nie może "zanieczyszczać" innego oprogramowania.</title>

	    <para>Licencja nie może narzucać ograniczeń na inne oprogramowanie, które jest rozprowadzane wraz z oprogramowaniem licencjonowanym. Na przykład, licencja nie może nalegać, aby wszystkie inne programy, rozpowszechniane na tym samym nośniku, były wolnym oprogramowaniem.</para>
          </formalpara>

          <sidebar>
            <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Copyleft</title>
            <indexterm><primary>copyleft</primary></indexterm>
            <indexterm><primary>copyrights</primary></indexterm>

	    <para>Copyleft to zasada, która polega raczej na wykorzystaniu prawa autorskiego do zagwarantowania wolności pracy i jej pochodnych, a nie na ograniczaniu praw użytkowników, jak w przypadku oprogramowania własnościowego. Jest to także gra słów terminu "copyright". Richard Stallman wpadł na ten pomysł, gdy jego kolega, lubiący kalambury, napisał na kopercie zaadresowanej do Stallman'a: “copyleft: all rights reversed”. Copyleft zakłada zachowanie wszystkich początkowych wolności dystrybucji oryginalnej lub zmodyfikowanej wersji pracy (zazwyczaj programu). W ten sposób nie jest możliwe rozprowadzanie programu jako własnego oprogramowania, jeśli pochodzi on z kodu programu wydanego na zasadzie copyleft.</para>

	    <para>Oczywiście, najbardziej znaną rodziną licencji copyleft są: GNU GPL i jej pochodne, GNU LGPL lub GNU Lesser General Public License, i GNU FDL lub GNU Free Documentation License. Niestety, licencje copyleft są na ogół ze sobą niezgodne. W związku z tym, najlepiej jest używać tylko jednej z nich.</para>
          </sidebar>
        </listitem>
      </orderedlist>

      <sidebar id="sidebar.bruce-perens">
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Bruce Perens, lider kontrowersyjny</title>
        <indexterm><primary>Bruce Perens</primary></indexterm>
        <indexterm><primary>Perens, Bruce</primary></indexterm>
        <indexterm><primary>Otwarte Źródło (ang. Open Source)</primary></indexterm>

	<para>Bruce Perens był drugim liderem projektu Debian, zaraz po Ian'ie Murdock'u. Był bardzo kontrowersyjny w swoich dynamicznych i autorytarnych metodach. Niezależnie od tego, pozostaje ważnym współpracownikiem Debiana, któremu Debian jest szczególnie wdzięczny za edycję słynnych "Wytycznych Debiana dotyczących wolnego oprogramowania" (ang. Debian Free Software Guidelines – DFSG). Wytyczne ..., były początkowo pomysłem Ean'a Schussler'a, natomiast Bruce zaczerpnął z nich słynną "Definicję Otwartego Źródła" (ang. Open Source Definition), usuwając z niej wszelkie odniesienia do Debiana. 
<ulink type="block" url="http://www.opensource.org/" /></para>

	<para>Jego odejście z projektu było dość kontrowersyjne, lecz Bruce pozostał silnie związany z Debianem, ponieważ kontynuował promocję tej dystrybucji w sferach politycznych i gospodarczych. Nadal sporadycznie pojawia się na listach dyskusyjnych, aby służyć radą i prezentować swoje najnowsze inicjatywy na rzecz Debiana.</para>
        <indexterm><primary>nazwa kodowa</primary></indexterm>
        <indexterm><primary>nazwa</primary> <secondary>nazwa kodowa</secondary></indexterm>
        <indexterm><primary><emphasis role="distribution">Rex</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Buzz</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Bo</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Hamm</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Slink</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Potato</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Woody</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Sarge</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Etch</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Lenny</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Squeeze</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Wheezy</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Jessie</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Stretch</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Buster</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Sid</emphasis></primary></indexterm>
        <indexterm><primary>Toy Story</primary></indexterm>
        <indexterm><primary>Pixar</primary></indexterm>

	<para>Ostatnia anegdotyczna kwestia. To właśnie Bruce jest odpowiedzialny za inspirację do wyboru różnych "nazw kodowych" dla wersji Debiana (1.1 — <emphasis role="distribution">Rex</emphasis>, 1.2 — <emphasis role="distribution">Buzz</emphasis>, 1.3 — <emphasis role="distribution">Bo</emphasis>, 2.0 — <emphasis role="distribution">Hamm</emphasis>, 2.1 — <emphasis role="distribution">Slink</emphasis>, 2.2 — <emphasis role="distribution">Potato</emphasis>, 3.0 — <emphasis role="distribution">Woody</emphasis>, 3.1 — <emphasis role="distribution">Sarge</emphasis>, 4.0 — <emphasis role="distribution">Etch</emphasis>, 5.0 — <emphasis role="distribution">Lenny</emphasis>, 6.0 — <emphasis role="distribution">Squeeze</emphasis>, 7 — <emphasis role="distribution">Wheezy</emphasis>, 8 — <emphasis role="distribution">Jessie</emphasis>, 9 (jeszcze nie wydana) — <emphasis role="distribution">Stretch</emphasis>, 10 (jeszcze nie wydana) — <emphasis role="distribution">Buster</emphasis>, <emphasis role="distribution">Unstable</emphasis> — <emphasis role="distribution">Sid</emphasis>). Są one wzięte z imion postaci, występujących w filmie Toy Story (pol. Historia Zabawki). Ten film animowany, złożony całkowicie z grafiki komputerowej, został wyprodukowany przez wytwórnię filmową Pixar Studios, gdzie Bruce był zatrudniony w czasie, gdy przewodził projektowi Debian. Nazwa "Sid" ma szczególny status, ponieważ będzie ona zawsze kojarzona z gałęzią <emphasis role="distribution">Unstable</emphasis>. Ten bohater filmu — dziecko z sąsiedztwa — zawsze niszczył zabawki, a więc uważaj, aby zbytnio się nie zbliżać do <emphasis role="distribution">Unstable</emphasis> <emphasis role="distribution">Sid</emphasis> jest także akronimem angielskiego zwrotu "Still in Development" (ciągle w rozwoju).</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.debian-internals">
    <title>Wewnętrzne działania projektu Debian</title>
    <indexterm><primary>działania, wewnętrzne</primary></indexterm>
    <indexterm><primary>organizacja, wewnętrzna</primary></indexterm>

    <para>Obfite wyniki końcowe, uzyskane przez projekt Debian, pochodzą jednocześnie z działań w obrębie infrastruktury. Działania te wykonywane są przez doświadczonych deweloperów Debiana, począwszy od indywidualnych lub zbiorowych prac programistów, tworzących i modyfikujących pakiety Debiana, a kończąc na informacjach zwrotnych od użytkowników.</para>
    <section>
      <title>Deweloperzy Debiana</title>
      <indexterm><primary>deweloperzy</primary> <secondary>Deweloperzy Debiana</secondary></indexterm>

      <para>Deweloperzy Debiana mają różne odpowiedzialności. Jako oficjalni członkowie projektu mają duży wpływ na kierunek, w jakim podąża projekt. Ogólnie, deweloper Debiana jest odpowiedzialny przynajmniej za jeden pakiet, lecz ta odpowiedzialność jest zależna od ilości czasu, jaką może deweloper poświęcić projektowi, i od jego indywidualnych potrzeb i możliwości twórczych. Deweloperzy mają wolny wybór, jeśli chodzi o rodzaj zaangażowania się w projekt i liczne zespoły tego projektu. Im większą aktywność przejawia deweloper, tym więcej odpowiedzialności uzyskuje wewnątrz projektu.<ulink type="block" url="http://www.debian.org/devel/people" />
<ulink type="block" url="http://www.debian.org/intro/organization" />
<ulink type="block" url="http://wiki.debian.org/Teams" /></para>

      <sidebar>
        <title><emphasis>NARZĘDZIE</emphasis> Baza danych deweloperów</title>
        <indexterm><primary>deweloperzy</primary> <secondary>baza danych deweloperów</secondary></indexterm>
        <indexterm><primary>baza danych</primary> <secondary>baza danych deweloperów</secondary></indexterm>

	<para>Debian ma bazę danych obejmującą wszystkich deweloperów zaangażowanych w projekt, w której znajdują się podstawowe informacje na ich temat (adres, numer telefonu, współrzędne geograficzne, takie jak długość i szerokość geograficzna, itp.). Niektóre z tych informacji (imię i nazwisko, kraj, nazwa użytkownika wewnątrz projektu, nazwa użytkownika IRC, klucz GnuPG, itp.) mają charakter publiczny i są  dostępne w sieci internetowej.
<ulink type="block" url="http://db.debian.org/" /></para>

	<para>Współrzędne geograficzne pozwalają stworzyć mapę rozmieszczenia deweloperów na całej kuli ziemskiej. Debian jest prawdziwym projektem międzynarodowym: jego deweloperów można znaleźć na wszystkich kontynentach, chociaż większość z nich zamieszkuje "kraje Zachodu".</para>

        
        <figure>
          <title>Rozmieszczenie deweloperów Debiana w skali światowej</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/developers-map.png" scalefit="1" width="70%" />
            </imageobject>
          </mediaobject>
          <indexterm><primary>rozpowszechnienie w skali światowej</primary></indexterm>
        </figure>
      </sidebar>

      <para>Utrzymywanie pakietów jest działalnością poddaną pewnym ograniczeniom proceduralnym, które są dobrze udokumentowane lub nawet regulowane. W rezultacie, aktywność, którą często określa się terminem "opieka nad pakietami" (stąd określenie "opiekun pakietu" – ang. package maintainer) musi być zgodna ze wszystkimi standardami ustanowionymi przez <emphasis>Politykę Debiana (ang. Debian Policy)</emphasis>. Na szczęście, jest wiele narzędzi, które ułatwiają pracę opiekunów pakietów. Deweloper może więc skupić się na specyfice swojego pakietu, i na innych, bardziej złożonych zadaniach, takich jak śledzenie i likwidowanie błędów. <ulink type="block" url="http://www.debian.org/doc/debian-policy/" /></para>

      <sidebar>
        <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Opieka nad pakietami, praca dewelopera</title>
        <indexterm><primary>opieka</primary> <secondary>opieka nad pakietami</secondary></indexterm>
        <indexterm><primary>pakiet</primary> <secondary>opieka</secondary></indexterm>

	<para>Opieka nad pakietem, po pierwsze, wiąże się z "pakowaniem" programu. W szczególności, oznacza to takie określenie środków instalacji, aby program działał zaraz po zainstalowaniu i był zgodny z zasadami, które Debian ustanowił w swoim własnym projekcie. Wynik tej operacji jest zapisany w pliku <filename>.deb</filename>. Efektywna instalacja programu nie będzie wymagała niczego ponadto, niż wyodrębnienie skompresowanego archiwum i wykonanie pewnych przed- lub po- instalacyjnych skryptów, zawartych w tym pakiecie.</para>

	<para>Cykl opieki zaczyna się, tak naprawdę, dopiero po fazie wstępnej: przygotowanie aktualizacji, w celu postępowania zgodnie z najnowszą Polityką Debiana, naprawa błędów raportowanych przez użytkowników i włączenie nowych wersji "upstream" programu. Oczywiście, te wszystkie czynności są wykonywane jednocześnie. Na przykład, podczas pakowania wstępnego program był w wersji 1.2.3. Po kilku miesiącach tworzenia nowe wydanie otrzymuje wersję stabilną 1.4.0. W tym momencie, opiekun Debiana powinien zaktualizować pakiet, aby użytkownicy mogli wykorzystać najnowszą, stabilną wersję tego programu.</para>
      </sidebar>
      <indexterm><primary>Polityka Debiana</primary></indexterm>
      <indexterm><primary>Polityka Debiana</primary></indexterm>
      <indexterm><primary>polityka</primary></indexterm>

      <para>Polityka, zasadniczy element Projektu Debian, ustanawia normy zapewniające zarówno jakość pakietów, jak i doskonałą interoperacyjność dystrybucji. Dzięki swojej Polityce, Debian pozostaje spójny, niezależnie od gigantycznego rozmiaru. Ta polityka nie jest niezmienna, lecz podlega ewolucji dzięki propozycjom, formułowanym na liście dyskusyjnej <email>debian-policy@lists.debian.org</email>. Poprawki, uzgadniane przez wszystkie zainteresowane strony, są akceptowane i wprowadzane do tekstu Polityki poprzez małą grupę opiekunów, posiadających odpowiedzialność wydawniczą (wprowadzają oni tylko te poprawki, które są uzgodnione przez deweloperów Debiana — członków wyżej wspomnianej listy). Bieżące propozycje poprawek można przeczytać w systemie śledzenia błędów: <ulink type="block" url="http://bugs.debian.org/debian-policy" /></para>

      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Polityka procesu edytorskiego</title>

	<para>Każdy może zaproponować poprawkę do Polityki Debiana. Wystarczy po prostu przesłać raport błędu o poziomie zagrożenia na "listę życzeń" wobec <emphasis role="pkg">debian-policy</emphasis>. Zaczyna sie wtedy proces, udokumentowany w  <filename>usr/share/doc/debian-policy/Process.html</filename>. Jeśli zostanie potwierdzone, że odkryty problem musi być rozwiązany poprzez stworzenie nowej reguły w Polityce Debiana, to zaczyna się dyskusja na liście dyskusyjnej <email>debian-policy@lists.debian.org</email>, aż do osiągnięcia konsensusu i wydania propozycji. Następnie, ktoś pisze szkic żądanej poprawki i przesyła go do akceptacji ( w postaci "łatki" do przeglądu). Jak tylko dwóch innych deweloperów zaakceptuje fakt, do którego odnosi się proponowana poprawka (wobec której osiągnięto konsensus w poprzedniej dyskusji), propozycja może być ujęta w oficjalnym dokumencie poprzez jednego z opiekunów pakietu <emphasis role="pkg">debian-policy</emphasis>. Jeśli ten proces nie powiedzie się na jednym z tych etapów, to opiekunowie zamykają błąd i klasyfikują propozycję jako odrzuconą.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>POLITYKA DEBIANA</emphasis> dokumentacja</title>
        <indexterm><primary>dokumentacja</primary> <secondary>umiejscowienie</secondary></indexterm>
        <indexterm><primary>umiejscowienie dokumentacji</primary></indexterm>
        <indexterm><primary><filename>/usr/share/doc</filename></primary></indexterm>
        <indexterm><primary><filename>README.Debian</filename></primary></indexterm>
        <indexterm><primary><filename>NEWS.Debian.gz</filename></primary></indexterm>

	<para>Dokumentacja dla każdego pakietu jest przechowywana w katalogu <filename>usr/share/doc/<replaceable>pakiet</replaceable></filename>. Ten katalog często zawiera plik <filename>README.Debian</filename>, opisujący dostosowania, specyficzne dla Debiana, wykonane przez opiekuna określonego pakietu. Tak więc, dobrze jest przeczytać ten plik przed jakąkolwiek konfiguracją, aby skorzystać z doświadczenia opiekuna. We wspomnianym katalogu można też znaleźć plik <filename>changelog.Debian.gz</filename> opisujący zmiany, dokonane przez opiekuna, w okresie pomiędzy wydaniem kolejnych wersji pakietu. Nie powinno to być mylone z plikiem <filename>changelog.gz</filename> lub jeg odpowiednikiem), który opisuje zmiany dokonane przez deweloperów upstream. Plik <filename>copyright</filename> zawiera informacje o autorach i licencji, która obejmuje oprogramowanie. W końcu, możemy też znaleźć plik o nazwie <filename>NEWS.Debian.gz</filename>, który pozwala deweloperowi Debiana komunikować na zewnątrz ważne informacje, związane z aktualizacjami. Jeśli jest zainstalowany program <emphasis>apt-listchanges</emphasis>, to te wiadomości będą wyświetlane automatycznie. Wszystkie inne pliki są specyficzne dla danego oprogramowania. Szczególnie, chcielibyśmy wskazać podkatalog <filename>examples</filename>, który często zawiera przykłady plików konfiguracyjnych.</para>
      </sidebar>

      <para>Polityka dostarcza znaczną ilość technicznych aspektów pakietowania. Rozmiar projektu zwiększa też problemy organizacyjne. Są one rozwiązywane w oparciu o Konstytucję Debiana, która ustanawia strukturę i środki do podejmowania decyzji. Innymi słowy — ustanawia formalny system zarządzania.</para>
      <indexterm><primary>konstytucja</primary></indexterm>
      <indexterm><primary>Lider Projektu Debian</primary></indexterm>
      <indexterm><primary>DPL</primary></indexterm>
      <indexterm><primary>rola</primary><secondary>lidera</secondary></indexterm>
      <indexterm><primary>wybory</primary><secondary>lidera</secondary></indexterm>

      <para>Konstytucja Debiana określa pewną liczbę ról i pozycji społecznych, a także odpowiedzialności i władze dla każdej z nich. Szczególnie warto zwrócić uwagę na fakt, że deweloperzy Debiana zawsze mają najwyższą władzę decyzyjną podczas głosowania nad rezolucją ogólną, gdzie wymagana jest większość trzech czwartych (75%), aby dokonać znaczących zmian w konstytucji (takich, jak wpływ na Dokumenty Założycielskie). Jednakże, deweloperzy rokrocznie wybierają "lidera", który ma ich reprezentować na mitingach, i który ma zapewniać wewnętrzną koordynację pomiędzy różnymi zespołami. Wybory lidera są zawsze okresem intensywnych dyskusji. Rola lidera nie jest formalnie zdefiniowana w żadnym dokumencie: kandydaci do tej pozycji zwykle proponują jej własną definicję. W praktyce oznacza to, ze rola lidera obejmuje służenie jako przedstawiciel wobec mediów, koordynowanie zespołów "wewnętrznych" i dostarczanie całkowitego przewodnictwa projektom deweloperów. Poglądy DPL (ang. Debian Project Leader — lider projektu Debian) są bezpośrednio aprobowane przez członków projektu.</para>

      <para>Szczególnie, lider ma rzeczywistą władzę. Głosy liderów mają moc wiążącą. Lider może podjąć dowolną decyzję, której wykonanie nie jest już w mocy kogoś innego, i może delegować część swoich obowiązków.</para>
      <indexterm><primary>Murdock, Ian</primary></indexterm>
      <indexterm><primary>Perens, Bruce</primary></indexterm>
      <indexterm><primary>Jackson, Ian</primary></indexterm>
      <indexterm><primary>Akkerman, Wichert</primary></indexterm>
      <indexterm><primary>Collins, Ben</primary></indexterm>
      <indexterm><primary>Garbee, Bdale</primary></indexterm>
      <indexterm><primary>Michlmayr, Martin</primary></indexterm>
      <indexterm><primary>Robinson, Branden</primary></indexterm>
      <indexterm><primary>Towns, Anthony</primary></indexterm>
      <indexterm><primary>Hocevar, Sam</primary></indexterm>
      <indexterm><primary>McIntyre, Steve</primary></indexterm>
      <indexterm><primary>Zacchiroli, Stefano</primary></indexterm>
      <indexterm><primary>Nussbaum, Lucas</primary></indexterm>

      <para>Od samego początku, projekt był pomyślnie prowadzony przez liderów, którymi byli kolejno: Ian Murdock, Bruce Perens, Ian Jackson, Wichert Akkerman, Ben Collins, Bdale Garbee, Martin Michlmayr, Branden Robinson, Anthony Towns, Sam Hocevar, Steve McIntyre, Stefano Zacchiroli i Lucas Nussbaum.</para>
      <indexterm><primary>komitet techniczny</primary></indexterm>

      <para>Konstytucja określa też 'komitet techniczny". Zasadniczą rolą tego komitetu jest decydowanie o sprawach technicznych w sytuacji, gdy deweloperzy nie mogą ze sobą dojść do porozumienia w jakiejś technicznej kwestii. Mówiąc inaczej, komitet odgrywa rolę doradczą, gdy deweloperowi nie udaje się podjąć decyzji, za jaką jest odpowiedzialny. Warto zapamiętać, że komitet techniczny angażuje się tylko wtedy, gdy jest poproszony, aby być jedną ze stron potencjalnego konfliktu.</para>
      <indexterm><primary>sekretarz projektu</primary></indexterm>

      <para>W końcu, konstytucja określa stanowisko "sekretarza projektu", który jest odpowiedzialny za organizacje głosowania, związanego z różnymi wyborami i rezolucjami ogólnymi.</para>

      <para>Procedura "rezolucji ogólnej" jest szczegółowo określona w konstytucji, od okresu wstępnej dyskusji, aż do końcowego liczenia głosów. Więcej szczegółów można znależć pod adresem: <ulink type="block" url="http://www.debian.org/devel/constitution.en.html" /></para>
      <indexterm><primary>rezolucja ogólna</primary></indexterm>
      <indexterm><primary>głos wyborczy</primary></indexterm>

      <sidebar>
        <title><emphasis>KULTURA</emphasis> "Płomienna wojna", dyskusja, która wyzwala ogień</title>
        <indexterm><primary>"płomienna wojna"</primary></indexterm>
        <indexterm><primary>rozgrzana debata</primary></indexterm>

	<para>"Plomienna wojna" (ang. "flamewar") jest to niezwykle namiętna debata, która często kończy się wzajemnym, słownym  atakowaniem się ludzi, gdy wszystkie rozsądne argumentacje zostały już wyczerpane po obu stronach. Niektóre tematy są częściej przedmiotem polemiki niż inne (wybór edytora tekstu, "czy wolisz edytor <command>vi</command> czy <command>Emacsa</command>?", to stary, ulubiony temat). Te sprawy często wywołują bardzo szybką wymianę listów elektronicznych ze względu na wielość osób i opinii w danej sprawie i bardzo osobisty charakter takich pytań.</para>

	<para>Nic szczególnie pożytecznego nie wynika z takich dyskusji. Ogólne zalecenie: pozostać z dala od takich debat, ewentualnie szybko "przeskanować" wzrokiem te treści, ponieważ ich pełne, dokładne przeczytanie może zająć wiele czasu.</para>
      </sidebar>

      <para>Nawet jeśli ta konstytucja ustanawia pozory demokracji, codzienna rzeczywistość jest zupełnie inna: Debian w sposób naturalny i niewymuszony przestrzega zasad wolnego oprogramowania: kto robi jakieś rzeczy, ten decyduje o tym, jak je robić (tzw. zasada "rób-to-kracji"; w oryginale angielskim: do-cracy). Dużo czasu można zmarnować rozważając korzyści płynące z różnych sposobów podejścia do problemu; wybrane rozwiązanie będzie pierwszym, zarówno funkcjonalnym, jak i satysfakcjonującym, a jednocześnie podanym przez kompetentną osobę ... Jednak, okaże się to dopiero po pewnym czasie.</para>

      <para>Jest to jedyny sposób, aby zasłużyć sobie na szacunek: zrobić coś pożytecznego i pokazać, że się pracowało dobrze. Wiele "administracyjnych" zespołów Debiana działa za pomocą kooptacji, preferując wolontariuszy, którzy już efektywnie przyczynili się do czegoś i potwierdzili swoje kompetencje. Publiczna natura pracy tych zespołów sprawia, że nowi współpracownicy mogą obserwować tę pracę i mogą zacząć pomagać bez specjalnych przywilejów. Z tego powodu Debian jest często określany jako "merytokracja".</para>

      <sidebar>
        <title><emphasis>KULTURA</emphasis> Merytokracja, królestwo wiedzy</title>
        <indexterm><primary>merytokracja</primary></indexterm>

	<para>Merytokracja (ang. meritocracy) jest formą rządu, w którym władza jest sprawowana przez osoby z największą zasługą. Dla Debiana — zasługa jest miarą kompetencji, co jest, samo sobie, oceniane poprzez obserwację ostatnich działań podejmowanych przez jedną lub kilka osób w ramach projektu (Stefano Zacchiroli, były lider projektu, mówi o "rób-to-kracji", ang. "do-cracy", co oznacza "władzę dla tych, którzy sprawiają, że podjęte działanie staje się rzeczywistością, a nie kończy się tylko na deklaracjach słownych"). Proste istnienie tych osób dowodzi pewnego poziomu ich kompetencji: osiągnięcia, będące ogólnie wolnym oprogramowaniem, wraz z dostępnym kodem źródłowym, mogą być łatwo ocenione przez współpracowników, którzy w łatwy sposób mogą ocenić jakość tych wysiłków.</para>
      </sidebar>

      <para>Ta efektywna metoda operacyjna gwarantuje jakość współpracowników w "kluczowych" zespołach Debiana. W żaden jednak sposób metoda ta nie jest doskonała i okazjonalnie ujawniają się również ci, którzy nie akceptują tego sposobu działania. Dobór deweloperów, akceptowanych w zespołach, może wydawać się trochę arbitralny lub nawet nieuczciwy. Co więcej, nie każdy ma te samą definicję służby na rzecz innych, oczekiwaną przez te zespoły. Dla niektórych nie do zaakceptowania jest fakt oczekiwania przez osiem dni na włączenie nowego pakietu Debiana, natomiast inni cierpliwie czekają na to samo przez trzy tygodnie, bez problemu. Tak więc, pojawiają się regularne skargi ze strony tych "niezadowolonych" na temat "jakości usług" tych zespołów.</para>

      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Integracja nowych opiekunów pakietów</title>
        <indexterm><primary>opiekun pakietu</primary> <secondary>nowy opiekun pakietu</secondary></indexterm>

	<para>Najbardziej regularnie krytykowany jest zespół odpowiadający za przyjmowanie nowych deweloperów. Trzeba przyznać, że w ciągu wielu lat swojego istnienia projekt Debian stawał się coraz bardziej wymagający wobec nowo akceptowanych deweloperów. Niektórzy ludzie mogą uważać to za pewien rodzaj niesprawiedliwości, ale musimy przyznać, że na początku projektu było niewiele wyzwań, natomiast, gdy społeczność stała się o wiele większa niż 1000 osób, nadeszła potrzeba zapewnienia jakości i integralności tego wszystkiego, co Debian wytwarza dla swoich użytkowników.</para>
        <indexterm><primary>DAM</primary></indexterm>
        <indexterm><primary>Menadżerzy Konta Debiana</primary></indexterm>

	<para>Co więcej, procedura akceptacji jest oparta na przeglądzie kandydata przez mały zespół o nazwie Menadżerowie Konta Debiana (ang. the Debian Account Managers —  DAM). Menadżerowie są wystawieni na nieustanną krytykę, ponieważ mają ostatnie słowo w kwestii przyjęcia lub odrzucenia wolontariusza w obrębie społeczności Debiana. W praktyce, muszą czasami opóźnić akceptację jakiejś osoby aż do czasu, gdy dowiedzą się czegoś więcej o działaniach projektu, w którym ta osoba uczestniczy. Oczywiście, można przyczyniać się do Debiana zanim się zostanie zaakceptowanym jako oficjalny deweloper. Taka sytuacja jest możliwa,  jeśli ktoś będzie sponsorowany przez obecnych deweloperów.</para>
      </sidebar>
    </section>
    <section>
      <title>Aktywna rola użytkowników</title>

      <para>Można się zastanawiać, czy warto zaliczać "zwykłych" użytkowników do tych współpracowników, którzy działają wewnątrz projektu Debian. Odpowiedzią jest definitywne TAK: odgrywają oni kluczową rolę w tym projekcie. Niektórzy użytkownicy, będąc dalekimi od bycia "pasywnymi", uruchamiają testowe wersje Debiana i regularnie wypełniają raporty o błędach, wskazując na problemy. Inni idą jeszcze dalej i przesyłają pomysły ulepszeń wypełniając raport o błędzie zawierający "listę życzeń" lub nawet przesyłają poprawki kodu źródłowego, zwane "łatkami" (ang "patches"). Zobacz pasek boczny <xref linkend="sidebar.patch" />.</para>

      <sidebar id="sidebar.bts">
        <title><emphasis>NARZĘDZIE</emphasis> System śledzenia błędów</title>
        <indexterm><primary>system</primary><secondary> System Śledzenia Błędów</secondary></indexterm>
        <indexterm><primary>BTS</primary></indexterm>
        <indexterm><primary>System Śledzenia Błędów</primary></indexterm>
        <indexterm><primary><literal>bugs.debian.org</literal></primary></indexterm>

	<para>System Śledzenia Błędów Debiana (ang The Debian Bug Tracking System — Debian BTS) jest używany przez duże części projektu. Część publiczna (interfejs WWW) pozwala użytkownikom na podgląd wszystkich zaraportowanych błędów, z opcją wyświetlania posortowanej listy błędów zgodnie z różnymi kryteriami, takimi jak: pakiet, który podlega błędowi, poważność błędu (stopień zagrożenia), status, adres poczty elektronicznej osoby raportującej, adres poczty opiekuna odpowiedzialnego za pakiet, itd. Możliwe jest też przeglądanie historycznej listy wszystkich dyskusji odnoszących się z osobna do każdego błędu.</para>

	<para>Mówiąc bardziej szczegółowo, Debian BTS jest oparty na poczcie elektronicznej: wszystkie informacje, które przechowuje, pochodzą z wiadomości przesyłanych przez różne zaangażowane w ten proces osoby. Dowolny e-mail przesłany na adres <email>12345@bugs.debian.org</email> będzie więc przypisany do historii błędu jako numer 12345. Autoryzowane osoby mogą "zamknąć" błąd pisząc wiadomość opisującą powody decyzji zamknięcia na adres <email>12345-done@bugs.debian.org</email> (błąd jest zamknięty wtedy, gdy wskazany problem jest rozwiązany lub nie ma już znaczenia). Nowy błąd jest raportowany poprzez przesłanie e-mail na adres <email>submit@bugs.debian.org</email>, zgodnie ze specyficznym formatem, który identyfikuje problematyczny pakiet. Adres <email>control@bugs.debian.org</email>pozwala na modyfikację wszystkich "meta-informacji", odnoszących się do błędu.</para>

	<para>Debian BTS ma też inne funkcjonalne cechy, takie jak użycie znaczników do etykietowania błędów. Więcej informacji, zobacz:<ulink type="block" url="http://www.debian.org/Bugs/" /></para>
      </sidebar>

      <sidebar>
        <title><emphasis>SŁOWNICZEK</emphasis> Nasilenie błędu</title>
        <indexterm><primary>nasilenie</primary></indexterm>
        <indexterm><primary>błąd</primary><secondary>nasilenie</secondary></indexterm>

	<para>Nasilenie błędu wyznacza, formalnie, stopień ciążenia ("wagę") zgłoszonego problemu. W rzeczywistości, nie wszystkie błędy mają taką samą wagę; na przykład literówka na stronie podręcznika nie jest porównywalna z luką w zabezpieczeniach oprogramowania serwerowego.</para>

	<para>Debian wykorzystuje rozszerzoną skalę opisującą ciężkość błędów. Każdy poziom jest dokładnie zdefiniowany, w celu ułatwienia jego wyboru.
<ulink type="block" url="http://www.debian.org/Bugs/Developer#severities" /></para>
      </sidebar>

      <para>Dodatkowo, wielu zadowolonych użytkowników usługi oferowanej przez Debian chciałoby przyczynić wnieść swój wkład do projektu. Ponieważ nie każdy ma odpowiednie poziom doświadczenia w programowaniu, może więc wybrać pomoc w tłumaczeniu i dokonywaniu przeglądów dokumentacji. Istnieją listy dyskusyjne, specyficzne dla poszczególnych języków, które koordynują tę pracę.
<ulink type="block" url="https://lists.debian.org/i18n.html" />
<ulink type="block" url="http://www.debian.org/international/" /></para>

      <sidebar>
        <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Co to są i18n i l10n?</title>
        <indexterm><primary>internacjonalizacja</primary></indexterm>
        <indexterm><primary>lokalizacja</primary></indexterm>
        <indexterm><primary>i18n</primary></indexterm>
        <indexterm><primary>l10n</primary></indexterm>

	<para>"i18n" i "l10n" to skróty od słów "internacjonalizacja" (ang. "internationalization") i "lokalizacja" ("localization"). Są one odbiciem, odpowiednio, pierwszej i ostatniej literę tych terminów oraz ilości liter pomiędzy ich początkowymi i końcowymi literami.</para>

	<para>"Internacjonalizacja" ("umiędzynarodowienie") programu polega na jego modyfikacji tak, aby można go było przetłumaczyć (zlokalizować). 
Wiąże się to z częściowym przebudowaniem programu, napisanego do pracy w jednym języku w ten sposób, aby można go było otworzyć na wszystkie języki.</para>

	<para>"Lokalizacja" programu składa się z tłumaczenia wiadomości oryginalnych (często w języku angielskim) na inny język. Aby to było możliwe, program musi już być zinternacjonalizowany (umiędzynarodowiony).</para>

	<para>Podsumowując, internacjonalizacja przygotowuje oprogramowanie do tłumaczenia, a potem wykonywana jest lokalizacja oprogramowania.</para>
      </sidebar>

      <sidebar id="sidebar.patch">
        <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> "Łatka", sposób na wysłanie poprawki</title>
        <indexterm><primary><command>"łata"</command></primary></indexterm>
        <indexterm><primary>"łata"</primary></indexterm>
        <indexterm><primary><command>diff</command></primary></indexterm>

	<para>"Łata" jest to plik opisujący zmiany dokonane w pliku lub plikach odniesienia. Szczególnie, łata będzie zawierać listę wierszy, które mają być usunięte z kodu lub do niego dodane, jak też (czasami) wiersze wzięte z innego tekstu odniesienia, zamieniające modyfikacje kontekstowe (łaty pozwalają zidentyfikować umiejscowienia zmian, jeśli zmieniły się numery wierszy).</para>

	<para>Narzędzie, używane do zastosowania modyfikacji, podanych w takim pliku, jest nazywane po prostu <command>"łatą" (ang. patch).</command> Narzędzie, które ją tworzy jest nazywane <command>diff</command>, i używane jest w następujący sposób:</para>

        <screen><computeroutput>$ </computeroutput><userinput>diff -u plik.stary plik.nowy &gt;plik.łata</userinput></screen>

	<para>Plik <filename>plik.łata</filename> zawiera instrukcje do zamiany treści z <filename>pliku.starego</filename> na <filename>plik.nowy</filename>. Można go do kogoś przesłać, a ten ktoś może następnie ten plik użyć do odtworzenia  <filename>pliku.nowego</filename> z dwóch innych, w ten sposób:</para>

        <screen><computeroutput>$ </computeroutput><userinput>łata -p0 plik.stary &lt;plik.łata</userinput></screen>

	<para>Plik, <filename>plik.stary</filename>, jest teraz identyczny z plikiem <filename>plik.nowy</filename>.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>NARZĘDZIE</emphasis> Utwórz raport o błędzie za pomocą <command>reportbug</command></title>
        <indexterm><primary><command>reportbug</command></primary></indexterm>
        <indexterm><primary>błąd</primary><secondary> utwórz raport o błędzie</secondary></indexterm>
        <indexterm><primary>zgłoś błąd</primary></indexterm>

	<para>The <command>reportbug</command> tool facilitates sending bug
	reports on a Debian package. It helps making sure the bug in
	question hasn't already been filed, thus preventing redundancy in the
	system. It reminds the user of the definitions of the severity
	levels, for the report to be as accurate as possible (the developer
	can always fine-tune these parameters later, if needed). It helps
	writing a complete bug report without the user needing to know the
	precise syntax, by writing it and allowing the user to edit it.
	This report will then be sent via an e-mail server (local, by
	default, but <command>reportbug</command> can also use a remote
	server).</para>

	<para>This tool first targets the development versions, which
	is where the bugs will be fixed. Effectively, changes are not
	welcome in a stable version of Debian, with very few exceptions
	for security updates or other important updates (if, for example,
	a package is not working at all). A correction of a minor bug in a
	Debian package must, thus, wait for the next stable version.</para>
      </sidebar>

      <para>All of these contribution mechanisms are made more
      efficient by users' behavior. Far from being a collection of
      isolated persons, users are a true community within which
      numerous exchanges take place. We especially note the impressive
      activity on the user discussion mailing list,
      <email>debian-user@lists.debian.org</email> (<xref linkend="solving-problems" /> discusses this in greater
      detail).</para>

      <para>Not only do users help themselves (and others) on
      technical issues that directly affect them, but they also
      discuss the best ways to contribute to the Debian project and
      help it move forward — discussions that frequently result in
      suggestions for improvements.</para>

      <para>Since Debian does not expend funds on any self-promoting
      marketing campaigns, its users play an essential role in its
      diffusion, ensuring its fame via word-of-mouth.</para>

      <para>This method functions quite well, since Debian fans are found
      at all levels of the free software community: from install parties
      (workshops where seasoned users assist newcomers to install the
      system) organized by local LUGs or “Linux User Groups”, to
      association booths at large tech conventions dealing with Linux,
      etc.</para>

      <para>Volunteers make posters, brochures, stickers, and other
      useful promotional materials for the project, which they make
      available to everyone, and which Debian provides freely on its
      website: <ulink type="block" url="http://www.debian.org/events/material" /></para>
    </section>
    <section>
      <title>Teams and Sub-Projects</title>

      <para>Debian has been organized, right from the start, around
      the concept of source packages, each with its maintainer or
      group of maintainers. Many work teams have emerged over time,
      ensuring administration of the infrastructure, management of
      tasks not specific to any package in particular (quality
      assurance, Debian Policy, installer, etc.), with the latest
      series of teams growing up around sub-projects.</para>
      <section id="sect.sub-projects">
        <title>Existing Debian Sub-Projects</title>

	<para>To each their own Debian! A sub-project is a group of
	volunteers interested in adapting Debian to specific
	needs. Beyond the selection of a sub-group of programs
	intended for a particular domain (education, medicine,
	multimedia creation, etc.), sub-projects are also involved in
	improving existing packages, packaging missing software,
	adapting the installer, creating specific documentation, and
	more.</para>

        <sidebar>
          <title><emphasis>VOCABULARY</emphasis> Sub-project and derivative distribution</title>
          <indexterm><primary>podprojekt</primary></indexterm>
          <indexterm><primary>derivative distribution</primary></indexterm>

	  <para>The development process for a derivative distribution
	  consists in starting with a particular version of Debian and
	  making a number of modifications to it. The infrastructure used
	  for this work is completely external to the Debian project. There
	  isn't necessarily a policy for contributing improvements. This
	  difference explains how a derivative distribution may
	  “diverge” from its origins, and why they have to regularly
	  resynchronize with their source in order to benefit from
	  improvements made upstream.</para>

	  <para>On the other hand, a sub-project can not diverge, since all
	  the work on it consists of directly improving Debian in order to
	  adapt it to a specific goal.</para>

	  <para>The most known distribution derived from Debian is, without
	  a doubt, Ubuntu, but there are many. See <xref linkend="derivative-distributions" /> to learn about their
	  particularities and their positioning in relationship to
	  Debian.</para>
        </sidebar>

        
	<para>Here is a small selection of current sub-projects:</para>
        <itemizedlist>
          <listitem>
	    <para>Debian-Junior, by Ben Armstrong, offering an appealing
	    and easy to use Debian system for children;</para>
          </listitem>
          <listitem>
	    <para>Debian-Edu, by Petter Reinholdtsen, focused on the
	    creation of a specialized distribution for the academic
	    world;</para>
          </listitem>
          <listitem>
	    <para>Debian Med, by Andreas Tille, dedicated to the medical
	    field;</para>
          </listitem>
          <listitem>
            <para>Debian Multimedia which deals with audio and multimedia
            work;</para>
          </listitem>
          <listitem>
            <para>Debian-Desktop which focuses on the desktop and coordinates
            artwork for the default theme;</para>
          </listitem>
          <listitem>
            <para>Debian GIS which takes care of Geographical Information Systems
            applications and users;</para>
          </listitem>
          <listitem>
            <para>Debian Accessibility, finally, improving Debian to match the
            requirements of people with disabilities.</para>
          </listitem>
        </itemizedlist>

	<para>This list will most likely continue to grow with time and
	improved perception of the advantages of Debian sub-projects. Fully
	supported by the existing Debian infrastructure, they can, in
	effect, focus on work with real added value, without worrying about
	remaining synchronized with Debian, since they are developed within
	the project.</para>
      </section>
      <section>
        <title>Administrative Teams</title>

	<para>Most administrative teams are relatively closed and recruit
	only by cooptation. The best means to become a part of one is to
	intelligently assist the current members, demonstrating that you
	have understood their objectives and methods of operation.</para>

	<para>The ftpmasters are in charge of the official archive of
	Debian packages. They maintain the program that receives packages
	sent by developers and automatically stores them, after some
	checks, on the reference server
	(<literal>ftp-master.debian.org</literal>).</para>

	<para>They must also verify the licenses of all new packages,
	in order to ensure that Debian may distribute them, prior to
	including them in the corpus of existing packages. When a
	developer wishes to remove a package, they address this team
	through the bug tracking system and the
	<emphasis>ftp.debian.org</emphasis> “pseudo-package”.</para>
        <indexterm><primary>ftpmaster</primary></indexterm>

        <sidebar>
          <title><emphasis>VOCABULARY</emphasis> The pseudo-package, a monitoring tool</title>
          <indexterm><primary>pseudo-package</primary></indexterm>

	  <para>The bug tracking system, initially designed to
	  associate bug reports with a Debian package, has proved very
	  practical to manage other matters: lists of problems to be
	  resolved or tasks to manage without any link to a particular
	  Debian package. The “pseudo-packages” allow, thus, certain
	  teams to use the bug tracking system without associating a
	  real package with their team. Everyone can, thus, report
	  issues that needs to be dealt with. For instance, the BTS
	  has a <emphasis>ftp.debian.org</emphasis> entry that is used
	  to report and track problems on the official package archive
	  or simply to request removal of a package. Likewise, the
	  <emphasis>www.debian.org</emphasis> pseudo-package refers to
	  errors on the Debian website, and
	  <emphasis>lists.debian.org</emphasis> gathers all the
	  problems concerning the mailing lists.</para>
        </sidebar>

        <sidebar id="sidebar.fusionforge">
          <title><emphasis>TOOL</emphasis> FusionForge, the Swiss Army Knife of collaborative development</title>
          <indexterm><primary><literal>alioth</literal></primary></indexterm>
          <indexterm><primary>FusionForge</primary></indexterm>

	  <para>FusionForge is a program that enables creation of
	  sites similar to <literal>www.sourceforge.net</literal>,
	  <literal>alioth.debian.org</literal>, or even
	  <literal>savannah.gnu.org</literal>. It hosts projects and
	  provides a range of services that facilitate collaborative
	  development. Each project will have a dedicated virtual
	  space there, including a web site, several “ticketing”
	  systems to track — most commonly — bugs and patches, a survey
	  tool, file storage, forums, version control system
	  repositories, mailing lists and various other related
	  services.</para>

	  <para><literal>alioth.debian.org</literal> is Debian's
	  FusionForge server, administered by Tollef Fog Heen, Stephen
	  Gran, and Roland Mas. Any project involving one or more
	  Debian developers can be hosted there. <ulink type="block" url="http://alioth.debian.org/" /></para>

	  <para>Although rather complex internally, due to the broad
	  range of services that it provides, FusionForge is otherwise
	  relatively easy to install, thanks to the exceptional work
	  of Roland Mas and Christian Bayle on the <emphasis role="pkg">fusionforge</emphasis> Debian package.</para>
        </sidebar>

	<para id="dsa-team">The <emphasis>Debian System Administrators</emphasis> (DSA) team
	(<email>debian-admin@lists.debian.org</email>), as one might
	expect, is responsible for system administration of the many
	servers used by the project. They ensure optimal functioning of all
	base services (DNS, Web, e-mail, shell, etc.), install software
	requested by Debian developers, and take all precautions in regards
        to security.
        <ulink type="block" url="https://dsa.debian.org" /></para>
        <indexterm><primary><emphasis>debian-admin</emphasis></primary></indexterm>
	<indexterm><primary>DSA (Debian System Administrators)</primary></indexterm>

        <sidebar>
          <title><emphasis>NARZĘDZIE</emphasis> System śledzenia pakietów Debiana</title>
          <indexterm><primary>package tracking system</primary></indexterm>
          <indexterm><primary>system</primary><secondary>package tracking system</secondary></indexterm>
          <indexterm><primary>System śledzenia pakietów Debiana</primary></indexterm>
          <indexterm><primary>tracker</primary><secondary> System śledzenia pakietów Debiana (ang. Debian Package Tracker)</secondary></indexterm>
          <indexterm><primary>pakiet</primary><secondary> System śledzenia pakietów Debiana (ang. Debian Package Tracker)</secondary></indexterm>
          <indexterm><primary>PTS</primary></indexterm>
          <indexterm><primary>DDPO</primary></indexterm>
          <indexterm><primary>Debian Developer's Packages Overview</primary></indexterm>

	  <para>This is one of Raphaël's creations. The basic idea is, for
	  a given package, to centralize as much information as possible on
	  a single page. Thus, one can quickly check the status of a
	  program, identify tasks to be completed, and offer one's
	  assistance. This is why this page gathers all bug statistics,
	  available versions in each distribution, progress of a package in
	  the <emphasis role="distribution">Testing</emphasis>
	  distribution, the status of translations of descriptions and
	  debconf templates, the possible availability of a new upstream
	  version, notices of noncompliance with the latest version of the
	  Debian Policy, information on the maintainer, and any other
          information that said maintainer wishes to include.
          <ulink type="block" url="https://tracker.debian.org/" /></para>

	  <para>An e-mail subscription service completes this web
	  interface. It automatically sends the following selected
	  information to the list: bugs and related discussions,
	  availability of a new version on the Debian servers, new
	  translations available for proofreading, etc.</para>

	  <para>Advanced users can, thus, follow all of this information
	  closely and even contribute to the project, once they've got a
	  good enough understanding of how it works.</para>

	  <para>Another web interface, known as <emphasis>Debian
	  Developer's Packages Overview</emphasis> (DDPO), provides each
	  developer a synopsis of the status of all Debian packages placed
          under their charge.
          <ulink type="block" url="https://qa.debian.org/developer.php" /></para>

	  <para>These two websites are tools developed and managed by
          the group responsible for quality assurance within Debian (known as
          Debian QA).</para>
          <indexterm><primary>assurance</primary><secondary>quality assurance</secondary></indexterm>
          <indexterm><primary>quality</primary><secondary>assurance</secondary></indexterm>
        </sidebar>

	<para>The <emphasis>listmasters</emphasis> administer the e-mail
	server that manages the mailing lists. They create new lists,
	handle bounces (delivery failure notices), and maintain spam
	filters (unsolicited bulk e-mail).</para>
        <indexterm><primary>listmaster</primary></indexterm>

        <sidebar>
          <title><emphasis>CULTURE</emphasis> Traffic on the mailing lists: some figures</title>
          <indexterm><primary>lists</primary><secondary>mailing lists</secondary></indexterm>
	  <indexterm><primary>listy dyskusyjne</primary></indexterm>

          
	  <para>The mailing lists are, without a doubt, the best testimony to
	  activity on a project, since they keep track of everything that
	  happens. Some statistics (from 2015) regarding our mailing lists
	  speak for themselves: Debian hosts more than 240 lists, totaling
	  212,000 individual subscriptions. The 27,000 messages sent each
	  month generate 476,000 e-mails daily.</para>
        </sidebar>

	<para>Each specific service has its own administration team,
	generally composed of volunteers who have installed it (and also
	frequently programmed the corresponding tools themselves). This is
	the case of the bug tracking system (BTS), the package tracker,
	<literal>alioth.debian.org</literal> (FusionForge
	server, see sidebar <xref linkend="sidebar.fusionforge" />), the services available on
	<literal>qa.debian.org</literal>,
	<literal>lintian.debian.org</literal>,
	<literal>buildd.debian.org</literal>,
	<literal>cdimage.debian.org</literal>, etc.</para>
      </section>
      <section>
        <title>Development Teams, Transversal Teams</title>

	<para>Unlike administrative teams, the development teams are rather
	widely open, even to outside contributors. Even if Debian does not
	have a vocation to create software, the project needs some specific
	programs to meet its goals. Of course, developed under a free
	software license, these tools make use of methods proven elsewhere
	in the free software world.</para>

        <sidebar id="cadre-cvs">
          <title><emphasis>KULTURA</emphasis> Git</title>
          <indexterm><primary>Git</primary></indexterm>
          <indexterm><primary>configuration management</primary></indexterm>

	  <para>Git is a tool for
	  collaborative work on multiple files, while maintaining a history
	  of modifications. The files in question are generally text files,
	  such as a program's source code. If several people work together
	  on the same file, <command>git</command> can only merge the
	  alterations made if they were made to different portions of the
	  file. Otherwise, these “conflicts” must be resolved by hand.
	  </para>

          <para>Git is a distributed system where each user has a repository
          with the complete history of changes. Central repositories are
          used to download the project (<command>git clone</command>)
          and to share the work done with others (<command>git push</command>).
          The repository can contain multiple versions of the files
          but only one version can be worked on at a given time: it's
          called the working copy (it can be changed to point to another
          version with <command>git checkout</command>).
          Git can show you the modifications made to the working copy
          (<command>git diff</command>), can store them in the repository
          by creating a new entry in the versions history
          (<command>git commit</command>), can update the working copy
          to include modifications made in parallel by other users
          (<command>git pull</command>), and can record a particular
          configuration in the history in order to be able to easily
          extract it later on (<command>git tag</command>).
          </para>

	  <para>Git makes it easy to handle
	  multiple concurrent versions of a project in development without
	  them interfering with each other. These versions are called
	  <emphasis>branches</emphasis>. This metaphor of a tree is fairly
	  accurate, since a program is initially developed on a common
	  trunk. When a milestone has been reached (such as version 1.0),
	  development continues on two branches: the development branch
	  prepares the next major release, and the maintenance branch
	  manages updates and fixes for version 1.0.</para>

          <indexterm><primary>Version Control System (VCS)</primary></indexterm>
          <para>Git is, nowadays, the most popular version control system but
          it is not the only one. Historically, CVS (Concurrent Versions System)
          was the first widely used tool but its numerous limitations
          contributed to the appearance of more modern free alternatives.
          These include, especially, <command>subversion</command>
	  (<command>svn</command>), <command>git</command>,
	  <command>bazaar</command> (<command>bzr</command>), and
          <command>mercurial</command> (<command>hg</command>).
          <ulink type="block" url="http://www.nongnu.org/cvs/" />
          <ulink type="block" url="http://subversion.apache.org/" />
          <ulink type="block" url="http://git-scm.com/" />
          <ulink type="block" url="http://bazaar.canonical.com/" />
          <ulink type="block" url="http://mercurial.selenic.com/" /></para>
          <indexterm><primary><command>subversion</command></primary></indexterm>
          <indexterm><primary><command>svn</command></primary></indexterm>
          <indexterm><primary><command>git</command></primary></indexterm>
          <indexterm><primary><command>bzr</command></primary></indexterm>
          <indexterm><primary><command>hg</command></primary></indexterm>
          <indexterm><primary><command>mercurial</command></primary></indexterm>
          <indexterm><primary><command>cvs</command></primary></indexterm>
        </sidebar>

	<para>Debian has developed little software of its own, but certain
	programs have assumed a starring role, and their fame has spread
	beyond the scope of the project. Good examples are
	<command>dpkg</command>, the Debian package management program (it
	is, in fact, an abbreviation of Debian PacKaGe, and generally
	pronounced as “dee-package”), and
	<command>apt</command>, a tool to automatically install any Debian
	package, and its dependencies, guaranteeing the consistency of the
	system after an upgrade (its name is an acronym for Advanced Package
	Tool). Their teams are, however, much smaller, since a rather high
	level of programming skill is required to gain an overall understanding of
	the operations of these types of programs.</para>

	<para>The most important team is probably that for the Debian
	installation program, <command>debian-installer</command>, which
	has accomplished a work of momentous proportions since its
	conception in 2001. Numerous contributors were needed, since it is
	difficult to write a single program able to install Debian on a
	dozen different architectures. Each one has its own mechanism for
	booting and its own bootloader. All of this work is coordinated on
	the <email>debian-boot@lists.debian.org</email> mailing list, under
        the direction of Cyril Brulebois.
        <ulink type="block" url="http://www.debian.org/devel/debian-installer/" />
        <ulink type="block" url="http://joeyh.name/blog/entry/d-i_retrospective/" /></para>

	<para>The (very small) <command>debian-cd</command> program team
	has an even more modest objective. Many “small” contributors
	are responsible for their architecture, since the main developer
	can not know all the subtleties, nor the exact way to start the
	installer from the CD-ROM.</para>

	<para>Many teams must collaborate with others in the activity of
	packaging: <email>debian-qa@lists.debian.org</email> tries, for
	example, to ensure quality at all levels of the Debian project. The
	<email>debian-policy@lists.debian.org</email> list develops Debian
	Policy according to proposals from all over the place. The teams in
	charge of each architecture
	(<email>debian-<replaceable>architecture</replaceable>@lists.debian.org</email>)
	compile all packages, adapting them to their particular
	architecture, if needed.</para>

	<para>Other teams manage the most important packages in order to
	ensure maintenance without placing too heavy a load on a single
	pair of shoulders; this is the case with the C library and
	<email>debian-glibc@lists.debian.org</email>, the C compiler on the
	<email>debian-gcc@lists.debian.org</email> list, or Xorg on the
	<email>debian-x@lists.debian.org</email> (this group is also known
	as the X Strike Force).</para>
      </section>
    </section>
  </section>

  <section id="sect.follow-debian-news">
    <title>Follow Debian News</title>

    <para>As already mentioned, the Debian project evolves in a very
    distributed, very organic way.  As a consequence, it may be
    difficult at times to stay in touch with what happens within the
    project without being overwhelmed with a never-ending flood of
    notifications.</para>

    <para>If you only want the most important news about Debian, you
    probably should subscribe to the
    <email>debian-announce@lists.debian.org</email> list.  This is a
    very low-traffic list (around a dozen messages a year), and only
    gives the most important announcements, such as the availability
    of a new stable release, the election of a new Project Leader, or
    the yearly Debian Conference.
    <ulink type="block" url="https://lists.debian.org/debian-announce/" />
    </para>

    <indexterm><primary>Debian Project News</primary></indexterm>
    <para>More general (and regular) news about Debian are sent to the
    <email>debian-news@lists.debian.org</email> list.  The traffic on
    this list is quite reasonable too (usually around a handful of
    messages a month), and it includes the semi-regular “Debian
    Project News”, which is a compilation of various small bits of
    information about what happens in the project.  Since all Debian
    developers can contribute these news when they think they have
    something noteworthy to make public, the DPN gives a valuable
    insight while staying rather focused on the project as a whole.
    <ulink type="block" url="https://lists.debian.org/debian-news/" />
    </para>

    <sidebar>
      <title><emphasis>SPOŁECZNOŚĆ</emphasis> Rozgłos i zespoły prasowe</title>
      <para>Debian's official communication channels are managed by volunteers
      of the Debian publicity team and of the press team. Members of the latter
      are delegates of the Debian Project Leader and handle official press releases.
      The publicity team is much less formal and welcomes contributions from
      everybody, be it to write articles for “Debian Project News” or to animate
      the <emphasis>@debian</emphasis> Identi.ca microblogging account.
      <ulink type="block" url="http://wiki.debian.org/Teams/Press" />
      <ulink type="block" url="http://wiki.debian.org/Teams/Publicity" />
      </para>
    </sidebar>

    <para>For more information about the evolution of Debian and
    what is happening at some point in time in various teams,
    there's also the
    <email>debian-devel-announce@lists.debian.org</email> list.  As
    its name implies, the announcements it carries will probably be
    more interesting to developers, but it also allows interested
    parties to keep an eye on what happens in more concrete terms
    than just when a stable version is released.  While
    <email>debian-announce@lists.debian.org</email> gives news about the user-visible
    results, <email>debian-devel-announce@lists.debian.org</email> gives news about
    how these results are produced.  As a side note, “d-d-a” (as it
    is sometimes referred to) is the only list that
    Debian developers must be subscribed to.
    <ulink type="block" url="https://lists.debian.org/debian-devel-announce/" />
    </para>

    <indexterm><primary>Planet Debian</primary></indexterm>
    <para>A more informal source of information can also be found on
    Planet Debian, which aggregates articles posted by Debian
    contributors on their respective blogs.  While the contents do not
    deal exclusively with Debian development, they provide a view into
    what is happening in the community and what its members are up to.
    <ulink type="block" url="http://planet.debian.org/" />
    </para>

    <indexterm><primary>microblog</primary></indexterm>
    <indexterm><primary>Identi.ca</primary></indexterm>
    <indexterm><primary>Twitter</primary></indexterm>
    <indexterm><primary>Facebook</primary></indexterm>
    <indexterm><primary>Google+</primary></indexterm>
    <indexterm><primary>social networks</primary></indexterm>
    <indexterm><primary>network</primary><secondary>social networks</secondary></indexterm>
    <para>The project is also well represented on social networks.
    While Debian only has an official presence on platforms
    built with free software (like the Identi.ca microblogging
    platform, powered by <emphasis>pump.io</emphasis>),
    there are many Debian contributors who are
    animating Twitter accounts, Facebook pages, Google+ pages,
    and more.
    <ulink type="block" url="https://identi.ca/debian" />
    <ulink type="block" url="https://twitter.com/debian" />
    <ulink type="block" url="https://www.facebook.com/debian" />
    <ulink type="block" url="https://plus.google.com/111711190057359692089" />
    </para>
  </section>

  <section id="sect.role-of-distributions">
    <title>The Role of Distributions</title>
    <indexterm><primary>Linux distribution</primary><secondary>role</secondary></indexterm>

    <para>A GNU/Linux distribution has two main objectives: install a free
    operating system on a computer (either with or without an existing
    system or systems), and provide a range of software covering all of the
    users' needs.</para>
    <section>
      <title>The Installer: <command>debian-installer</command></title>

      <para>The <command>debian-installer</command>, designed to be
      extremely modular in order to be as generic as possible, targets the
      first objective. It covers a broad range of installation situations and in
      general, greatly facilitates the creation of a derivative installer
      corresponding to a particular case.</para>

      <para>This modularity, which also makes it very complex, may be
      daunting for the developers discovering this tool; but whether
      used in graphical or text mode, the user's experience is still
      similar. Great efforts have been made to reduce the number of
      questions asked at installation time, in particular thanks to
      the inclusion of automatic hardware detection software.</para>

      <para>It is interesting to note that distributions derived from
      Debian differ greatly on this aspect, and provide a more limited
      installer (often confined to the i386 or amd64 architectures), but more
      user-friendly for the uninitiated. On the other hand, they usually
      refrain from straying too far from package contents in order to
      benefit as much as possible from the vast range of software offered
      without causing compatibility problems.</para>
    </section>
    <section>
      <title>The Software Library</title>

      
      <para>Quantitatively, Debian is undeniably the leader in this
      respect, with over 21,000 source packages. Qualitatively,
      Debian’s policy and long testing period prior to releasing a new
      stable version justify its reputation for stability and
      consistency. As far as availability, everything is available
      on-line through many mirrors worldwide, with updates pushed out
      every six hours.</para>

      <para>Many retailers sell CD-ROMs on the Internet at a very low price
      (often at cost), the “images” for which are freely available for
      download. There is only one drawback: the low frequency of releases
      of new stable versions (their development sometimes takes more than
      two years), which delays the inclusion of new software.</para>

      <para>Most new free software programs quickly find their way into the
      development version which allows them to be installed. If this
      requires too many updates due to their dependencies, the program can
      also be recompiled for the stable version of Debian (see <xref linkend="debian-packaging" /> for more information on this
      topic).</para>
    </section>
  </section>
  <section id="sect.release-lifecycle">
    <title>Lifecycle of a Release</title>
    <indexterm><primary>lifecycle</primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Unstable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Testing</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Stable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Experimental</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Oldstable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Oldoldstable</emphasis></primary></indexterm>

    <para>The project will simultaneously have three to six different
    versions of each program, named <emphasis role="distribution">Experimental</emphasis>, <emphasis role="distribution">Unstable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Oldstable</emphasis>, and even <emphasis role="distribution">Oldoldstable</emphasis>. Each one corresponds to a
    different phase in development. For a good understanding, let us take a
    look at a program's journey, from its initial packaging to inclusion in
    a stable version of Debian.</para>

    <sidebar>
      <title><emphasis>VOCABULARY</emphasis> Release</title>
      <indexterm><primary>release</primary></indexterm>

      <para>The term “release”, in the Debian project, indicates a
      particular version of a distribution (e.g., “unstable release”
      means “the unstable version”). It also indicates the public
      announcement of the launch of any new version (stable).</para>
    </sidebar>
    <section>
      <title>The <emphasis role="distribution">Experimental</emphasis> Status</title>

      <para>First let us take a look at the particular case of the
      <emphasis role="distribution">Experimental</emphasis> distribution:
      this is a group of Debian packages corresponding to the software
      currently in development, and not necessarily completed, explaining
      its name. Not everything passes through this step; some developers
      add packages here in order to get feedback from more experienced (or
      braver) users.</para>

      <para>Otherwise, this distribution frequently houses important
      modifications to base packages, whose integration into <emphasis role="distribution">Unstable</emphasis> with serious bugs would
      have critical repercussions. It is, thus, a completely isolated
      distribution, its packages never migrate to another version
      (except by direct, express intervention of the maintainer or the
      ftpmasters).  It is also not self-contained: only a subset of
      the existing packages are present in <emphasis role="distribution">Experimental</emphasis>, and it generally
      does not include the base system.  This distribution is
      therefore mostly useful in combination with another,
      self-contained, distribution such as <emphasis role="distribution">Unstable</emphasis>.</para>
    </section>
    <section>
      <title>The <emphasis role="distribution">Unstable</emphasis> Status</title>

      <para>Let us turn back to the case of a typical package. The
      maintainer creates an initial package, which they compile for
      the <emphasis role="distribution">Unstable</emphasis> version
      and place on the <literal>ftp-master.debian.org</literal>
      server. This first event involves inspection and validation from
      the ftpmasters. The software is then available in the <emphasis role="distribution">Unstable</emphasis> distribution, which is
      the “cutting edge” distribution chosen by users who are more
      concerned with having up to date packages than worried about
      serious bugs. They discover the program and then test it.</para>

      <para>If they encounter bugs, they report them to the package's
      maintainer. The maintainer then regularly prepares corrected
      versions, which they upload to the server.</para>

      <para>Every newly updated package is updated on all Debian mirrors
      around the world within six hours. The users then test the
      corrections and search for other problems resulting from the
      modifications. Several updates may then occur rapidly. During these
      times, autobuilder robots come into action. Most frequently, the
      maintainer has only one traditional PC and has compiled their package
      on the amd64 (or i386) architecture; the autobuilders take over and
      automatically compile versions for all the other architectures. Some
      compilations may fail; the maintainer will then receive a bug report
      indicating the problem, which is then to be corrected in the next
      versions. When the bug is discovered by a specialist for the
      architecture in question, the bug report may come with a patch ready
      to use.</para>
      <indexterm><primary>autobuilder</primary></indexterm>

      <figure>
        <title>Compilation of a package by the autobuilders</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/autobuilder.png" scalefit="1" width="75%" />
          </imageobject>
        </mediaobject>
      </figure>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> <command>buildd</command>, the Debian package recompiler</title>
        <indexterm><primary><command>buildd</command></primary></indexterm>
        <indexterm><primary>build daemon</primary></indexterm>

	<para><emphasis>buildd</emphasis> is the abbreviation of “build
	daemon”. This program automatically recompiles new versions of
	Debian packages on the architectures on which it is hosted
	(cross-compilation is avoided as much as possible).</para>

	<para>Thus, to produce binaries for the <literal>arm64</literal>
	architecture, the project has <literal>arm64</literal> machines
	available. The <emphasis>buildd</emphasis> program
	runs on them continuously and creates
	binary packages for <literal>arm64</literal> from source packages
	sent by Debian developers.</para>

	<para>This software is used on all the computers serving as
	autobuilders for Debian. By extension, the term
	<emphasis>buildd</emphasis> frequently is used to refer to these
	machines, which are generally reserved solely for this
	purpose.</para>
      </sidebar>
    </section>
    <section>
      <title>Migration to <emphasis role="distribution">Testing</emphasis></title>

      <para>A bit later, the package will have matured; compiled on all the
      architectures, it will not have undergone recent modifications. It is
      then a candidate for inclusion in the <emphasis role="distribution">Testing</emphasis> distribution — a group of
      <emphasis role="distribution">Unstable</emphasis> packages chosen
      according to some quantifiable criteria. Every day a program
      automatically selects the packages to include in <emphasis role="distribution">Testing</emphasis>, according to elements
      guaranteeing a certain level of quality:</para>
      <orderedlist>
        <listitem>
	  <para>lack of critical bugs, or, at least fewer than the version
	  currently included in <emphasis role="distribution">Testing</emphasis>;</para>
        </listitem>
        <listitem>
	  <para>at least 10 days spent in <emphasis role="distribution">Unstable</emphasis>, which is sufficient time
	  to find and report any serious problems;</para>
        </listitem>
        <listitem>
	  <para>successful compilation on all officially supported
	  architectures;</para>
        </listitem>
        <listitem>
	  <para>dependencies that can be satisfied in <emphasis role="distribution">Testing</emphasis>, or that can at least be
	  moved there together with the package in question.</para>
        </listitem>
      </orderedlist>

      <para>This system is clearly not infallible; critical bugs are
      regularly found in packages included in <emphasis role="distribution">Testing</emphasis>. Still, it is generally
      effective, and <emphasis role="distribution">Testing</emphasis> poses
      far fewer problems than <emphasis role="distribution">Unstable</emphasis>, being for many, a good
      compromise between stability and novelty.</para>

      <sidebar>
        <title><emphasis>NOTE</emphasis> Limitations of <emphasis role="distribution">Testing</emphasis></title>

	<para>While very interesting in principle, <emphasis role="distribution">Testing</emphasis> does have some practical
	problems: the tangle of cross-dependencies between packages is such
	that a package can rarely move there completely on its own. With
	packages all depending upon each other, it is sometimes necessary to migrate a
	large number of packages simultaneously, which is impossible when some are
	uploading updates regularly. On the other hand, the script
	identifying the families of related packages works hard to create
	them (this would be an NP-complete problem, for which, fortunately,
	we know some good heuristics). This is why we can manually interact
	with and guide this script by suggesting groups of packages, or
	imposing the inclusion of certain packages in a group, even if this
	temporarily breaks some dependencies. This functionality is
	accessible to the Release Managers and their assistants.</para>

	<para>Recall that an NP-complete problem is of an exponential
	algorithmic complexity according to the size of the data, here
	being the length of the code (the number of figures) and the
	elements involved. The only way to resolve it is frequently to
	examine all possible configurations, which could require enormous
	means. A heuristic is an approximate, but satisfying,
	solution.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Menadżer wydania</title>
        <indexterm><primary>Release Manager</primary></indexterm>
        <indexterm><primary>Stable Release Manager</primary></indexterm>

	<para>Release Manager is an important title, associated with heavy
	responsibilities. The bearer of this title must, in effect, manage
	the release of a new, stable version of Debian, and define the
	process for development of <emphasis role="distribution">Testing</emphasis> until it meets the quality
	criteria for <emphasis role="distribution">Stable</emphasis>. They
	also define a tentative schedule (not always followed).</para>

	<para>We also have Stable Release Managers, often abbreviated SRM,
	who manage and select updates for the current stable version of
	Debian. They systematically include security patches and examine
	all other proposals for inclusion, on a case by case basis, sent by
	Debian developers eager to update their package in the stable
	version.</para>
      </sidebar>
    </section>
    <section>
      <title>The Promotion from <emphasis role="distribution">Testing</emphasis> to <emphasis role="distribution">Stable</emphasis></title>

      <para>Let us suppose that our package is now included in <emphasis role="distribution">Testing</emphasis>. As long as it has room for
      improvement, its maintainer must continue to improve it and
      restart the process from <emphasis role="distribution">Unstable</emphasis> (but its later inclusion in
      <emphasis role="distribution">Testing</emphasis> is generally faster:
      unless it changed significantly, all of its dependencies are
      already available). When it reaches perfection, the maintainer has
      completed their work. The next step is the inclusion in the <emphasis role="distribution">Stable</emphasis> distribution, which is, in
      reality, a simple copy of <emphasis role="distribution">Testing</emphasis> at a moment chosen by the
      Release Manager. Ideally this decision is made when the installer is
      ready, and when no program in <emphasis role="distribution">Testing</emphasis> has any known critical
      bugs.</para>

      <para>Since this moment never truly arrives, in practice, Debian must
      compromise: remove packages whose maintainer has failed to correct
      bugs on time, or agree to release a distribution with some bugs in
      the thousands of programs. The Release Manager will have previously
      announced a freeze period, during which each update to <emphasis role="distribution">Testing</emphasis> must be approved. The goal
      here is to prevent any new version (and its new bugs), and to only
      approve updates fixing bugs.</para>

      <figure>
        <title>A package's path through the various Debian versions</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/release-cycle.png" width="60%" />
          </imageobject>
        </mediaobject>
      </figure>

      <sidebar>
        <title><emphasis>VOCABULARY</emphasis> Freeze: the home straight</title>
        <indexterm><primary>freeze</primary></indexterm>

	<para>During the freeze period, development of the <emphasis role="distribution">Testing</emphasis> distribution is blocked; no
	more automatic updates are allowed. Only the Release Managers are
	then authorized to change packages, according to their own
	criteria. The purpose is to prevent the appearance of new bugs by
	introducing new versions; only thoroughly examined updates are
	authorized when they correct significant bugs.</para>
      </sidebar>

      <para>After the release of a new stable version, the Stable Release
      Manager manages all further development (called “revisions”, ex:
      7.1, 7.2, 7.3 for version 7). These updates systematically
      include all security patches. They will also include the most
      important corrections (the maintainer of a package must prove the
      gravity of the problem that they wish to correct in order to have
      their updates included).</para>

      <para>At the end of the journey, our hypothetical package is now included in
      the stable distribution. This journey, not without its difficulties,
      explains the significant delays separating the Debian Stable
      releases. This contributes, over all, to its reputation for quality.
      Furthermore, the majority of users are satisfied using one of the
      three distributions simultaneously available. The system
      administrators, concerned above all about the stability of their
      servers, don't need the latest and greatest version of GNOME; they can choose Debian
      <emphasis role="distribution">Stable</emphasis>, and they will be
      satisfied. End users, more interested in the latest versions of GNOME
      or KDE than in rock-solid stability, will find Debian <emphasis role="distribution">Testing</emphasis> to be a good compromise
      between a lack of serious problems and relatively up to date
      software. Finally, developers and more experienced users may blaze
      the trail, testing all the latest developments in Debian <emphasis role="distribution">Unstable</emphasis> right out of the gate, at the
      risk of suffering the headaches and bugs inherent in any new version
      of a program. To each their own Debian!</para>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> GNOME and KDE, graphical desktop environments</title>

	<para>GNOME (GNU Network Object Model Environment) and KDE (K
	Desktop Environment) are the two most popular graphical desktop
	environments in the free software world. A desktop environment is a
	set of programs grouped together to allow easy management of the
	most common operations through a graphical interface. They
	generally include a file manager, office suite, web browser, e-mail
	program, multimedia accessories, etc. The most visible difference
	resides in the choice of the graphical library used: GNOME has
	chosen GTK+ (free software licensed under the LGPL), and KDE has
	selected Qt (a company-backed project, available nowadays both
	under the GPL and a commercial license).
	<ulink type="block" url="http://www.gnome.org/" />
	<ulink type="block" url="http://www.kde.org/" /></para>
      </sidebar>

      <figure>
        <title>Chronological path of a program packaged by Debian</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/package-lifecycle.png" scalefit="1" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
    
    <section>
      <title>The <emphasis role="distribution">Oldstable</emphasis> and <emphasis role="distribution">Oldoldstable</emphasis> Status</title>
      <indexterm><primary>Long Term Support (LTS)</primary></indexterm>
      <indexterm><primary>wsparcie</primary><secondary>Wsparcie długoterminowe (ang. Long Term Support — LTS</secondary></indexterm>
      <para>Each <emphasis role="distribution">Stable</emphasis> release
      has an expected lifetime of about 5 years and given that releases tend
      to happen every 2 years, there can be up to 3 supported releases
      at a given point of time. When a new stable release happens, the former
      release becomes <emphasis role="distribution">Oldstable</emphasis>
      and the one even before becomes <emphasis role="distribution">Oldoldstable</emphasis>.
      </para>
      <para>This Long Term Support (LTS) of Debian releases is a recent
      initiative: individual contributors and companies joined forces to create
      the Debian LTS team. Older releases which are no longer supported by
      the Debian security team fall under the responsibility of this new team.
      </para>
      <para>
      The Debian security team handles security support in the current
      <emphasis role="distribution">Stable</emphasis>
      release and also in the <emphasis role="distribution">Oldstable</emphasis> release (but only for as long
      as is needed to ensure one year of overlap with the current stable release).
      This amounts roughly to three years of support for each release. The
      Debian LTS team handles the last (two) years of security support so that
      each releases benefits from at least 5 years of support and so that
      users can upgrade from version N to N+2.
      <ulink type="block" url="https://wiki.debian.org/LTS" />
      </para>
      <sidebar>
        <title><emphasis>SPOŁECZNOŚĆ</emphasis> Firmy sponsorujące wysiłki LTS</title>
        <para>Long Term Support is a difficult commitment to make in Debian because
        volunteers tend to avoid the work that is not very fun. And providing security
        support for 5 years old software is — for many contributors — a
        lot less fun than packaging new upstream versions or developing new features.
        </para>
        <para>To bring this project to life, the project counted on the fact that
        long term support was particularly relevant for companies and that they would
        be willing to mutualize the cost of this security support.
        </para>
        <para>The project started in june 2014: some organizations
        allowed their employees to contribute part-time to Debian LTS
        while others preferred to sponsor the project with money so that
        Debian contributors get paid to do the work that they would not do
        for free. Most Debian contributors willing to be paid to work on
        LTS got together to create a clear sponsorship offer managed by
        Freexian (Raphaël Hertzog's company):
        <ulink type="block" url="http://www.freexian.com/services/debian-lts.html" />
        </para>
        <para>The Debian LTS team is not yet able to properly support all packages in
        Debian, hence the volunteers work on packages they care about
        while the paid contributors prioritize packages used by their
        sponsors.
        </para>
        <para>Projekt cały czas szuka nowych sponsorów: a co z twoją firmą? Czy pozwolisz, aby twój pracownik pracował na część etatu przy wsparciu długoterminowym? Czy możesz przeznaczyć mały budżet na wsparcie bezpieczeństwa? <ulink type="block" url="https://wiki.debian.org/LTS/Funding" /></para>
      </sidebar>
    </section>
  </section>
</chapter>
