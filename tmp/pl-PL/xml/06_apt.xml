<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="pl-PL">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Konserwacja i aktualizacje: Narzędzia APT</title>
	 <highlights> <para>
		Tym co sprawia, że Debian jest tak popularny wśród administratorów, jest łatwość instalacji nowych programów oraz aktualizowania całego systemu. Ta unikatowa zaleta wynika głównie z zastosowania programu <emphasis>APT</emphasis>, którego administratorzy Falcot Corp uczyli się z zapałem.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm> APT jest skrótem od angielskiego Advanced Package Tool - Zaawansowane narzędzie zarządzania pakietami. Tym, co sprawia, że program jest 'zaawansowany', jest traktowanie pakietów. Nie przetwarza ich indywidualnie, lecz uważa je za całość i tworzy najlepszą możliwą kombinację pakietów w zależności od tego, co jest dostępne i kompatybilne (zgodnie z zależnościami).
	</para>
	 <sidebar> <title><emphasis>SŁOWNICZEK</emphasis> Źródło pakietu i pakiet źródłowy</title>
	 <para>
		Słowo <emphasis>źródło</emphasis> może być niejednoznaczne. Pakietu źródłowego — pakietu zawierającego kod źródłowy programu — nie należy mylić ze źródłem pakietu — repozytorium (strona www, serwer FTP, CD-ROM, lokalny katalog, itp.), które zawiera pakiety.
	</para>
	 </sidebar> <para>
		APT needs to be given a “list of package sources”: the file <filename>/etc/apt/sources.list</filename> will list the different repositories (or “sources”) that publish Debian packages. APT will then import the list of packages published by each of these sources. This operation is achieved by downloading <filename>Packages.xz</filename> or a variant using a different compression method (such as <filename>Packages.gz</filename> or <filename>.bz2</filename>) files (in case of a source of binary packages) and <filename>Sources.xz</filename> or a variant (in case of a source of source packages) and by analyzing their contents. When an old copy of these files is already present, APT can update it by only downloading the differences (see sidebar <xref linkend="sidebar.apt-pdiff" />).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Kompresja <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> i <command>XZ</command></title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		Rozszerzenie <filename>.gz</filename> oznacza plik skompresowany za pomocą narzędzia <command>gzip</command>. <command>gzip</command> jest szybkim i efektywnym tradycyjnym narzędziem Uniksa do kompresji plików. Nowsze narzędzia osiągają lepsze wskaźniki kompresji, ale wymagają więcej zasobów (czasu obliczeniowego i pamięci) do kompresowania i dekompresowania plików. Wśród nich, oraz w kolejności występowania, są <command>bzip2</command> (tworzący pliki z rozszerzeniem <filename>.bz2</filename>), <command>lzma</command> (tworzący pliki <filename>.lzma</filename>) oraz <command>xz</command> (tworzący pliki <filename>.xz</filename>).
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>Wypełnianie pliku <filename>sources.list</filename></title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>source</primary>
			<secondary>of packages</secondary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>source of</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>Składnia</title>
			 <para>
				Każda aktywna linia pliku <filename>/etc/apt/sources.list</filename> zawiera opis źródła, tworzony z 3 części oddzielonych spacjami.
			</para>
			 <para>
				Pierwsze pole określa rodzaj źródła:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						“<literal>deb</literal>” dla pakietów binarnych,
					</para>

				</listitem>
				 <listitem>
					<para>
						“<literal>deb-src</literal>” dla pakietów źródłowych.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				The second field gives the base URL of the source (combined with the filenames present in the <filename>Packages.gz</filename> files, it must give a full and valid URL): this can consist in a Debian mirror or in any other package archive set up by a third party. The URL can start with <literal>file://</literal> to indicate a local source installed in the system's file hierarchy, with <literal>http://</literal> to indicate a source accessible from a web server, or with <literal>ftp://</literal> for a source available on an FTP server. The URL can also start with <literal>cdrom:</literal> for CD-ROM/DVD-ROM/Blu-ray disc based installations, although this is less frequent, since network-based installation methods are more and more common.
			</para>
			 <para>
				Składnia ostatniego pola zależy od struktury repozytorium. W najprostszym przypadku, można zwyczajnie wskazać podkatalog (z wymaganym ukośnikiem na końcu) pożądanego źródła (często jest to po prostu “<filename>./</filename>”, które sygnalizuje brak podkatalogu — pakiety są wtedy bezpośrednio pod wskazanym adresem URL). W najczęściej spotykanym przypadku, repozytoria będą miały strukturę serwera lustrzanego Debiana, z wieloma dystrybucjami, z których każda zawiera wiele komponentów. W tych przypadkach należy podać nazwę wybranej dystrybucji (poprzez jej "nazwę kodową" — spójrz na listę w fiszce <xref linkend="sidebar.bruce-perens" /> — lub odpowiednie "wydania" — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), a następnie komponenty (lub sekcje) aby aktywować (wybrane spośród <literal>main</literal>, <literal>contrib</literal> i <literal>non-free</literal> na typowym serwerze lustrzanym Debiana).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>SŁOWNICZEK</emphasis> Archiwa <literal>main</literal>, <literal>contrib</literal> i <literal>non-free</literal></title>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>main</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>contrib</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>non-free</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>komponent (w repozytorium)</primary>
			</indexterm>
			 <para>
				Debian używa trzech sekcji do różnicowania pakietów według licencji wybranych przez autorów poszczególnych prac. <literal>Main</literal> gromadzi wszystkie pakiety w pełni zgodne z Wytycznymi Debiana dotyczącymi Wolnego Oprogramowania (DFSG).
			</para>
			 <para>
				Archiwum <literal>non-free</literal> jest inne, ponieważ zawiera oprogramowanie, które nie jest (w całości) dostosowane do tych zasad, ale które mimo to mogą być rozpowszechniane bez ograniczeń. To archiwum, które nie jest oficjalnie częścią Debiana, jest usługą dla użytkowników, którzy mogą potrzebować niektórych z tych programów — jednak Debian zawsze zaleca nadawać priorytet wolnemu oprogramowaniu. Istnienie tej sekcji stanowi znaczący problem dla Richarda M. Stallmana i przez to Free Software Foundation nie rekomenduje Debiana użytkownikom.
			</para>
			 <para>
				<literal>Contrib</literal> (kontrybucje) jest zbiorem oprogramowania otwartoźródłowego, które nie może funkcjonować bez pewnych nie-wolnych elementów. Te elementy mogą pochodzić z sekcji <literal>non-free</literal> lub nie-wolnych plików, takich jak ROMy gier, BIOS konsol, itd. <literal>Contrib</literal> zawiera również oprogramowanie, którego kompilacja wymaga własnościowych elementów. Początkowo było tak w przypadku pakietu biurowego OpenOffice.org, który wymagał własnościowego środowiska Java.
			</para>
			 </sidebar> <sidebar> <title><emphasis>WSKAZÓWKA</emphasis> Pliki <filename>/etc/apt/sources.list.d/*.list</filename></title>
			 <para>
				Jeżeli wymieniono wiele źródeł pakietów, dla wygody można je podzielić między kilka plików. Każda część jest wtedy przechowana w pliku <filename>/etc/apt/sources.list.d/<replaceable>nazwa_pliku</replaceable>.list</filename> (spójrz na fiszkę <xref linkend="sidebar.directory.d" />).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				The <literal>cdrom</literal> entries describe the CD/DVD-ROMs you have. Contrary to other entries, a CD-ROM is not always available since it has to be inserted into the drive and since only one disc can be read at a time. For those reasons, these sources are managed in a slightly different way, and need to be added with the <command>apt-cdrom</command> program, usually executed with the <literal>add</literal> parameter. The latter will then request the disc to be inserted in the drive and will browse its contents looking for <filename>Packages</filename> files. It will use these files to update its database of available packages (this operation is usually done by the <command>apt update</command> command). From then on, APT can require the disc to be inserted if it needs one of its packages.
			</para>

		</section>
		 <section>
			<title>Repozytoria dla <emphasis role="distribution">Stabilnych</emphasis> Użytkowników</title>
			 <para>
				Poniżej jest standardowy plik <filename>sources.list</filename> dla systemu działającego pod kontrolą <emphasis role="distribution">Stabilnej</emphasis> wersji Debiana:
			</para>
			 <example id="example.stable-sources-list">
				<title>plik <filename>/etc/apt/sources.list</filename> dla użytkowników Stabilnego Debiana</title>
				 
<programlisting># Security updates
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

## Debian mirror

# Base repository
deb http://ftp.debian.org/debian jessie main contrib non-free
deb-src http://ftp.debian.org/debian jessie main contrib non-free

# Stable updates
deb http://ftp.debian.org/debian jessie-updates main contrib non-free
deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free

# Stable backports
deb http://ftp.debian.org/debian jessie-backports main contrib non-free
deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free
</programlisting>

			</example>
			 <para>
				This file lists all sources of packages associated with the <emphasis role="distribution">Jessie</emphasis> version of Debian (the current <emphasis role="distribution">Stable</emphasis> as of this writing). We opted to name “jessie” explicitly instead of using the corresponding “stable“ alias (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) because we don't want to have the underlying distribution changed outside of our control when the next stable release comes out.
			</para>
			 <para>
				Większość pakietów będzie pochodzić z "repozytorium bazowego", które zawiera wszystkie pakiety, ale jest rzadko aktualizowane (około raz na 2 miesiące w "wydaniu kropkowym"). Inne repozytoria są częściowe (nie zawierają wszystkich pakietów) i mogą zawierać aktualizacje (pakiety w nowszej wersji) do zainstalowania przez APTa. Kolejne sekcje wyjaśnią powody istnienia i prawa rządzące każdym z tych repozytoriów.
			</para>
			 <para>
				Zauważ, że jeżeli pożądana wersja pakietu jest dostępna w kilku repozytoriach, to zostanie użyte pierwsze z nich występujące w pliku <filename>sources.list</filename>. Z tego powodu nieoficjalne źródła zazwyczaj są dodawane na końcu pliku.
			</para>
			 <para>
				Tak na marginesie, większość wiadomości z tej sekcji na temat wydania <emphasis role="distribution">Stabilnego</emphasis> równie dobrze stosuje się do <emphasis role="distribution">Oldstable</emphasis>, ponieważ to tylko starsza wersja <emphasis role="distribution">Stabilnego</emphasis>, która jest utrzymywana równolegle.
			</para>
			 <section id="sect.security-updates">
				<title>Aktualizacje bezpieczeństwa</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>security updates</primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>security updates</secondary>
				</indexterm>
				 <para>
					Aktualizacje bezpieczeństwa nie są hostowane w zwyczajnej sieci serwerów lustrzanych Debiana, ale na <literal>security.debian.org</literal> (na małym zbiorze maszyn zarządzanych przez <link linkend="dsa-team">Debian System Administrators</link>). To archiwum zawiera aktualizacje bezpieczeństwa (przygotowane przez Debian Security Team i/lub przez zarządców pakietów) dla <emphasis role="distribution">Stabilnej</emphasis> dystrybucji.
				</para>
				 <para>
					Serwer może również hostować aktualizacje bezpieczeństwa dla <emphasis role="distribution">Testowego</emphasis>, ale nie zdarza się to zbyt często, ponieważ te aktualizacje docierają do <emphasis role="distribution">Testowego</emphasis> normalnym kanałem aktualizacji pochodzącym od <emphasis role="distribution">Niestabilnego</emphasis>.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>Stabilne aktualizacje</title>
				 <indexterm>
					<primary>stable updates</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>stable updates</secondary>
				</indexterm>
				 <para>
					Stabilne aktualizacje nie są wrażliwe ze względów bezpieczeństwa, ale uważane za wystarczająco ważne, aby udostępnić je użytkownikom przez kolejnym stabilnym wydaniem kropkowym.
				</para>
				 <para>
					This repository will typically contain fixes for critical bugs which could not be fixed before release or which have been introduced by subsequent updates. Depending on the urgency, it can also contain updates for packages that have to evolve over time… like <emphasis role="pkg">spamassassin</emphasis>'s spam detection rules, <emphasis role="pkg">clamav</emphasis>'s virus database, or the daylight-saving time rules of all timezones (<emphasis role="pkg">tzdata</emphasis>).
				</para>
				 <para>
					W praktyce, to repozytorium jest podzbiorem repozytorium <literal>proposed-updates</literal>, starannie wybranym przez Stable Release Managers.
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>Proponowane Aktualizacje</title>
				 <indexterm>
					<primary><literal>proposed-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-proposed-updates</literal></primary>
				</indexterm>
				 <para>
					Po opublikowaniu, <emphasis role="distribution">Stabilna</emphasis> dystrybucja jest aktualizowana tylko raz na 2 miesiące. Repozytorium <literal>proposed-updates</literal> jest miejscem, gdzie są przygotowywane spodziewane aktualizacje (pod nadzorem Stable Release Managers).
				</para>
				 <para>
					Aktualizacje bezpieczeństwa i stabilne opisane w poprzedniej sekcji są zawsze zawarte w tym repozytorium, ale jest też więcej, ponieważ zarządcy pakietów maja również okazję naprawienia ważnych błędów, które nie wymagają natychmiastowego wydania.
				</para>
				 <para>
					Anyone can use this repository to test those updates before their official publication. The extract below uses the <literal>jessie-proposed-updates</literal> alias which is both more explicit and more consistent since <literal>wheezy-proposed-updates</literal> also exists (for the <emphasis role="distribution">Oldstable</emphasis> updates):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free
</programlisting>

			</section>
			 <section id="sect.backports">
				<title>Stabilne Wsteczne Łatki</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>updates</primary>
					<secondary>backports</secondary>
				</indexterm>
				 <para>
					Repozytorium <literal>stable-backports</literal> hostuje "wsteczne łatki pakietów". Termin ten odnosi się do pakietu nowego oprogramowania, które zostało przekompilowane dla starszej dystrybucji, ogólnie dla <emphasis role="distribution">Stabilnej</emphasis>.
				</para>
				 <para>
					Kiedy dystrybucja staje się trochę podstarzała, wiele projektów związanych z oprogramowaniem wydało nowe wersje, które nie są włączone do aktualnej <emphasis role="distribution">Stabilnej</emphasis> (która jest modyfikowana wyłącznie w celu naprawienia krytycznych problemów, na przykład z bezpieczeństwem). Ponieważ <emphasis role="distribution">Testowa</emphasis> i <emphasis role="distribution">Niestabilna</emphasis> mogą być bardziej ryzykowne, zarządcy pakietów oferują czasem przekompilowane wersje nowych aplikacji dla <emphasis role="distribution">Stabilnej</emphasis>, która ma tą zaletę, że ogranicza potencjalną niestabilność do małej liczby wybranych pakietów. <ulink type="block" url="http://backports.debian.org" />
				</para>
				 <para>
					Repozytorium <literal>stable-backports</literal> jest teraz dostępne na normalnych serwerach lustrzanych Debiana. Ale wsteczne łatki do <emphasis role="distribution">Squeeze</emphasis> są nadal hostowane na dedykowanym serwerze (<literal>backports.debian.org</literal>) i wymagają następującego wpisu w <filename>sources.list</filename>:
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 
<programlisting>deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free
</programlisting>
				 <para>
					Wsteczne łatki z <literal>stable-backports</literal> są zawsze tworzone z pakietów dostępnych w <emphasis role="distribution">Testowym</emphasis>. To zapewnia, że wszystkie zainstalowane wsteczne łatki będzie można zaktualizować do odpowiedniej stabilnej wersji, kiedy będzie dostępne następne stabilne wydanie Debiana.
				</para>
				 <para>
					Mimo, że to repozytorium dostarcza nowsze wersje pakietów, APT nie zainstaluje ich do czasu, aż nie wydasz do tego bezpośrednich instrukcji (lub jeżeli już tego nie zrobiłeś z wcześniejszą wersją danej wstecznej łatki):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/jessie-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>package</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>Repozytoria dla użytkowników <emphasis role="distribution">Testowej</emphasis>/<emphasis role="distribution">Niestabilnej</emphasis></title>
			 <para>
				Poniżej jest standardowy plik <filename>sources.list</filename> dla systemu działającego pod kontrolą <emphasis role="distribution">Testowej</emphasis> lub <emphasis role="distribution">Niestabilnej</emphasis> wersji Debiana:
			</para>
			 <example id="example.testing-sources-list">
				<title>plik <filename>/etc/apt/sources.list</filename> dla użytkowników <emphasis role="distribution">Testowego</emphasis>/<emphasis role="distribution">Niestabilnego</emphasis> Debiana</title>
				 
<programlisting>
# Niestabilny
deb http://ftp.debian.org/debian unstable main contrib non-free
deb-src http://ftp.debian.org/debian unstable main contrib non-free

# Testowy
deb http://ftp.debian.org/debian testing main contrib non-free
deb-src http://ftp.debian.org/debian testing main contrib non-free

# Stabilny
deb http://ftp.debian.org/debian stable main contrib non-free
deb-src http://ftp.debian.org/debian stable main contrib non-free

# Aktualizacje bezpieczeństwa
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free</programlisting>

			</example>
			 <para>
				Używając tego pliku <filename>sources.list</filename> APT będzie instalował pakiety z wersji <emphasis role="distribution">Niestabilnej</emphasis>. Jeżeli nie jest to pożądane, należy użyć ustawienia <literal>APT::Default-Release</literal> (patrz <xref linkend="sect.apt-upgrade" />), które poinstruuje APTa, aby wybierał pakiety z innej dystrybucji (w tym przypadku najprawdopodobniej <emphasis role="distribution">Testowej</emphasis>).
			</para>
			 <para>
				Istnieją uzasadnione przyczyny, aby załączyć wszystkie te repozytoria, mimo że jedno powinno wystarczyć. Użytkownicy <emphasis role="distribution">Testowego</emphasis> docenią możliwość wybrania naprawionych pakietów z <emphasis role="distribution">Niestabilnego</emphasis> kiedy wersja w <emphasis role="distribution">Testowym</emphasis> jest obarczona denerwującym błędem. Z drugiej strony, użytkownicy <emphasis role="distribution">Niestabilnego</emphasis> nadgryzieni przez niespodziewane regresje mają możliwość pobrania starszych pakietów dla (rzekomo działającej) wersji <emphasis role="distribution">Testowej</emphasis>.
			</para>
			 <para>
				Załączenie <emphasis role="distribution">Stabilnego</emphasis> jest bardziej dyskusyjne, ale zazwyczaj daje dostęp to pakietów, które zostały usunięte z wersji deweloperskich. Zapewnia również dostęp do najnowszych aktualizacji pakietów, które nie zostały zmodyfikowane od ostatniego stabilnego wydania.
			</para>
			 <section>
				<title>Repozytorium <emphasis role="distribution">Eksperymentalnego</emphasis></title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					The archive of <emphasis role="distribution">Experimental</emphasis> packages is present on all Debian mirrors, and contains packages which are not in the <emphasis role="distribution">Unstable</emphasis> version yet because of their substandard quality — they are often software development versions or pre-versions (alpha, beta, release candidate…). A package can also be sent there after undergoing subsequent changes which can generate problems. The maintainer then tries to uncover them with help from advanced users who can handle important issues. After this first stage, the package is moved into <emphasis role="distribution">Unstable</emphasis>, where it reaches a much larger audience and where it will be tested in much more detail.
				</para>
				 <para>
					<emphasis role="distribution">Eksperymentalny</emphasis> jest używany głównie przez użytkowników, którym nie przeszkadza ciągłe psucie i naprawianie ich systemu. Taki podział pozwala w razie potrzeby na zaimportowanie pakietu, którego użytkownik chciałby wypróbować lub używać. Jest to również standardowe podejściem Debiana z nim związane, ponieważ dodanie go w pliku APTa <filename>sources.list</filename> nie powoduje systematycznego korzystania z jego pakietów. Linia, którą należy dodać to:
				</para>
				 <informalexample> 
<programlisting>deb http://ftp.debian.org/debian experimental main contrib non-free
</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Non-Official Resources: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				There are numerous non-official sources of Debian packages set up by advanced users who have recompiled some software (Ubuntu made this popular with their Personal Package Archive service), by programmers who make their creation available to all, and even by Debian developers who offer pre-versions of their package online.
			</para>
			 <para>
				The <literal>mentors.debian.net</literal> site is interesting (although it only provides source packages), since it gathers packages created by candidates to the status of official Debian developer or by volunteers who wish to create Debian packages without going through that process of integration. These packages are made available without any guarantee regarding their quality; make sure that you check their origin and integrity and then test them before you consider using them in production.
			</para>
			 <sidebar> <title><emphasis>SPOŁECZNOŚĆ</emphasis> Strony <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				Domena <emphasis>debian.net</emphasis> nie jest oficjalnym zasobem projektu Debian. Każdy deweloper Debiana może używać nazwy tej domeny dla własnego użytku. Te strony internetowe mogą zawierać nieoficjalne serwisy (czasami osobiste strony) założone przez deweloperów Debiana, hostowane na sprzęcie, który nie należy do projektu lub nawet prototypy do przeniesienia na <emphasis>debian.org</emphasis>. Istnieją dwa powody, które wyjaśniają dlaczego te prototypy pozostają na <emphasis>debian.net</emphasis>: albo nikt nie podjął się wysiłku przekształcenia go w oficjalny serwis (hostowany w domenie <emphasis>debian.org</emphasis> i z odpowiednią gwarancją zarządzania), albo serwis jest zbyt kontrowersyjny, aby uznać go za oficjalny.
			</para>
			 </sidebar> <para>
				Instalowanie pakietu oznacza przyznanie uprawnień root jego twórcy, ponieważ to on decyduje o zawartości skryptów inicjalizacyjnych, które są uruchamiane pod tą tożsamością. Oficjalne pakiety Debiana są tworzone przez wolontariuszy, z którymi współpracowano i zostali zweryfikowani oraz potrafią zabezpieczyć swój pakiet w taki sposób, aby było możliwe sprawdzenie jego pochodzenia i spójności.
			</para>
			 <para>
				Generalnie należy być ostrożnym w stosunku do pakietów, których pochodzenie jest niewiadome oraz nie są hostowane na jednym z oficjalnych serwerów Debiana: należy ocenic stopień zaufania do jego twórcy i sprawdzić spójność pakietu. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>IDĄĆ DALEJ</emphasis> Stare wersje pakietów: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				The <literal>snapshot.debian.org</literal> service, introduced in April 2010, can be used to “go backwards in time” and to find an old version of a package. It can be used for example to identify which version of a package introduced a regression, and more concretely, to come back to the former version while waiting for the regression fix.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Buforujący Pośrednik dla Pakietów Debiana</title>
			 <indexterm>
				<primary>proxy cache</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				Kiedy cała sieć maszyn jest skonfigurowana, aby używać tego samego zdalnego serwera w celu pobierania tych samych zaktualizowanych pakiety, każdy administrator wie, że korzystnie byłoby mieć pośrednika działającego jako lokalna pamięć podręczna (spójrz na fiszkę <xref linkend="sidebar.cache" />).
			</para>
			 <para>
				Można skonfigurować APT, żeby używał "standardowego" pośrednika (spójrz na fiszkę <xref linkend="sect.apt-config" /> dotyczącą APTa i <xref linkend="sect.http-ftp-proxy" /> dotyczące pośrednika), ale ekosystem Debiana oferuje lepsze rozwiązania tego problemu. Przeznaczone do tego oprogramowanie, zaprezentowane w tej sekcji, jest lepsze od zwykłego pośrednika, ponieważ może używać specyficznej struktury repozytorium APTa (np.: wie, czy konkretne pliki są przestarzałe, czy nie i odpowiednio dopasowuje czas ich przetrzymywania).
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> i <emphasis role="pkg">apt-cacher-ng</emphasis> działają jak zwykłe pośredniczące serwery buforowe. Plik <filename>sources.list</filename> nie jest zmieniany, ale APT jest skonfigurowany, aby używać ich jako pośredników dla wychodzących zapytań.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				Z kolei <emphasis role="pkg">approx</emphasis> działa jako serwer HTTP odzwierciedlając dowolną liczbę zdalnych repozytoriów pod jego adresami URL najwyższego poziomu. Mapowanie pomiędzy tymi katalogami najwyższego poziomu, a zdalnymi URLami repozytoriów jest przechowywane w pliku <filename>/etc/approx/approx.conf</filename>:
			</para>
			 
<programlisting>
# &lt;nazwa&gt; &lt;adres-bazowy-repozytorium&gt;
debian   http://ftp.debian.org/debian
security http://security.debian.org</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> domyślnie działa na porcie 9999 przez inetd (spójrz na fiszkę <xref linkend="sect.inetd" />) i wymaga od użytkownika, aby dopasować plik <filename>sources.list</filename>, żeby wskazywał serwer approx:
			</para>
			 
<programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free
deb http://apt.falcot.com:9999/debian jessie main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title><command>aptitude</command>, <command>apt-get</command>, and <command>apt</command> Commands</title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT is a vast project, whose original plans included a graphical interface. It is based on a library which contains the core application, and <command>apt-get</command> is the first front end — command-line based — which was developed within the project. <command>apt</command> is a second command-line based front end provided by APT which overcomes some design mistakes of <command>apt-get</command>.
		</para>
		 <para>
			Numerous other graphical interfaces then appeared as external projects: <command>synaptic</command>, <command>aptitude</command> (which includes both a text mode interface and a graphical one — even if not complete yet), <command>wajig</command>, etc. The most recommended interface, <command>apt</command>, is the one that we will use in the examples given in this section. Note however that <command>apt-get</command> and <command>aptitude</command> have a very similar command line syntax. When there are major differences between <command>apt</command>, <command>apt-get</command> and <command>aptitude</command>, these differences will be detailed.
		</para>
		 <section>
			<title>Inicjalizacja</title>
			 <para>
				For any work with APT, the list of available packages needs to be updated; this can be done simply through <command>apt update</command>. Depending on the speed of your connection, the operation can take a while since it involves downloading a certain number of <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename> files, which have gradually become bigger and bigger as Debian has developed (at least 10 MB of data for the <literal>main</literal> section). Of course, installing from a CD-ROM set does not require any downloading — in this case, the operation is very fast.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Instalacja i Usuwanie</title>
			 <indexterm>
				<primary>package</primary>
				<secondary>installation</secondary>
			</indexterm>
			 <indexterm>
				<primary>package</primary>
				<secondary>removal</secondary>
			</indexterm>
			 <indexterm>
				<primary>installation</primary>
				<secondary>package installation</secondary>
			</indexterm>
			 <indexterm>
				<primary>removal of a package</primary>
			</indexterm>
			 <para>
				With APT, packages can be added or removed from the system, respectively with <command>apt install <replaceable>package</replaceable></command> and <command>apt remove <replaceable>package</replaceable></command>. In both cases, APT will automatically install the necessary dependencies or delete the packages which depend on the package that is being removed. The <command>apt purge <replaceable>package</replaceable></command> command involves a complete uninstallation — the configuration files are also deleted.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>WSKAZÓWKA</emphasis> Instalowanie tego samego zestawu pakietów kilka razy</title>
			 <para>
				Może okazać się przydatne, aby systematycznie instalować tą samą listę pakietów na kilku komputerach. Można tego dokonać całkiem łatwo.
			</para>
			 <para>
				Najpierw należy uzyskać listę pakietów zainstalowanych na komputerze służącym za "wzór" do skopiowania.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				The <filename>pkg-list</filename> file then contains the list of installed packages. Next, transfer the <filename>pkg-list</filename> file onto the computers you want to update and use the following commands:
			</para>
			 
<screen>## Aktualizacja bazy danych znanych pakietów programu dpkg
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Aktualizacja zaznaczeń programu dpkg
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Instalacja wybranych pakietów przy użyciu apt-get
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				Pierwsza część komend zapisuje listę dostępnych pakietów w bazie danych dpkg, następnie <command>dpkg --set-selections</command> przywraca zaznaczenia pakietów do instalacji, a wywołanie <command>apt-get</command> wykonuje wymagane operacje! <command>aptitude</command> nie posiada tej komendy.
			</para>
			 </sidebar> <sidebar> <title><emphasis>WSKAZÓWKA</emphasis> Usuwanie i instalacja w tym samym czasie</title>
			 <para>
				It is possible to ask <command>apt</command> (or <command>apt-get</command>, or <command>aptitude</command>) to install certain packages and remove others on the same command line by adding a suffix. With an <command>apt install</command> command, add “<literal>-</literal>” to the names of the packages you wish to remove. With an <command>apt remove</command> command, add “<literal>+</literal>” to the names of the packages you wish to install.
			</para>
			 <para>
				Następny przykład ukazuje dwa różne sposoby na zainstalowanie <replaceable>pakiet1</replaceable> i usunięcie <replaceable>pakiet2</replaceable>.
			</para>
			 
<screen># <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>
[...]
</screen>
			 <para>
				Tego sposobu można użyć do wykluczenia z instalacji pakietów, które w przeciwnym razie zostałyby zainstalowane, np. jako <literal>Rekomendowane</literal>. W ogólnym przypadku mechanizm rozwiązywania zależności użyje tej informacji jako wskazówki do wyszukania alternatywnych rozwiązań.
			</para>
			 </sidebar> <sidebar> <title><emphasis>TIP</emphasis> <command>apt --reinstall</command> and <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>reinstallation</primary>
			</indexterm>
			 <para>
				The system can sometimes be damaged after the removal or modification of files in a package. The easiest way to retrieve these files is to reinstall the affected package. Unfortunately, the packaging system finds that the latter is already installed and politely refuses to reinstall it; to avoid this, use the <literal>--reinstall</literal> option of the <command>apt</command> and <command>apt-get</command> commands. The following command reinstalls <emphasis role="pkg">postfix</emphasis> even if it is already present:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				Składnia komendy <command>aptitude</command> jest nieco inna, ale osiąga ten sam rezultat z pomocą <command>aptitude reinstall postfix</command>.
			</para>
			 <para>
				Problem ten nie występuje w przypadku <command>dpkg</command>, ale administrator rzadko korzysta z niej bezpośrednio.
			</para>
			 <para>
				Be careful! Using <command>apt --reinstall</command> to restore packages modified during an attack will certainly not recover the system as it was. <xref linkend="sect.dealing-with-compromised-machine" /> details the necessary steps to take with a compromised system.
			</para>
			 </sidebar> <para>
				If the file <filename>sources.list</filename> mentions several distributions, it is possible to give the version of the package to install. A specific version number can be requested with <command>apt install <replaceable>package</replaceable>=<replaceable>version</replaceable></command>, but indicating its distribution of origin (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>) — with <command>apt install <replaceable>package</replaceable>/<replaceable>distribution</replaceable></command> — is usually preferred. With this command, it is possible to go back to an older version of a package (if for instance you know that it works well), provided that it is still available in one of the sources referenced by the <filename>sources.list</filename> file. Otherwise the <literal>snapshot.debian.org</literal> archive can come to the rescue (see sidebar <xref linkend="sidebar.snapshot.debian.org" />).
			</para>
			 <example>
				<title>Instalacja <emphasis role="distribution">niestabilnej</emphasis> wersji <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <sidebar> <title><emphasis>IDĄC DALEJ</emphasis> Mechanizm cache plików <filename>.deb</filename></title>
			 <para>
				APT keeps a copy of each downloaded <filename>.deb</filename> file in the directory <filename>/var/cache/apt/archives/</filename>. In case of frequent updates, this directory can quickly take a lot of disk space with several versions of each package; you should regularly sort through them. Two commands can be used: <command>apt-get clean</command> entirely empties the directory; <command>apt-get autoclean</command> only removes packages which can no longer be downloaded (because they have disappeared from the Debian mirror) and are therefore clearly useless (the configuration parameter <literal>APT::Clean-Installed</literal> can prevent the removal of <filename>.deb</filename> files that are currently installed). Note that <command>apt</command> does not support those commands.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>Uaktualnienie systemu</title>
			 <indexterm>
				<primary>upgrade</primary>
				<secondary>system upgrade</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				Regular upgrades are recommended, because they include the latest security updates. To upgrade, use <command>apt upgrade</command>, <command>apt-get upgrade</command> or <command>aptitude safe-upgrade</command> (of course after <command>apt update</command>). This command looks for installed packages which can be upgraded without removing any packages. In other words, the goal is to ensure the least intrusive upgrade possible. <command>apt-get</command> is slightly more demanding than <command>aptitude</command> or <command>apt</command> because it will refuse to install packages which were not installed beforehand.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>WSKAZÓWKA</emphasis> Uaktualnienie przyrostowe</title>
			 <para>
				As we explained earlier, the aim of the <command>apt update</command> command is to download for each package source the corresponding <filename>Packages</filename> (or <filename>Sources</filename>) file. However, even after a <command>bzip2</command> compression, these files can remain rather large (the <filename>Packages.xz</filename> for the <foreignphrase>main</foreignphrase> section of <emphasis role="distribution">Jessie</emphasis> takes more than 6 MB). If you wish to upgrade regularly, these downloads can take up a lot of time.
			</para>
			 <para>
				To speed up the process APT can download “diff” files containing the changes since the previous update, as opposed to the entire file. To achieve this, official Debian mirrors distribute different files which list the differences between one version of the <filename>Packages</filename> file and the following version. They are generated at each update of the archives and a history of one week is kept. Each of these “diff” files only takes a few dozen kilobytes for <emphasis role="distribution">Unstable</emphasis>, so that the amount of data downloaded by a weekly <command>apt update</command> is often divided by 10. For distributions like <emphasis role="distribution">Stable</emphasis> and <emphasis role="distribution">Testing</emphasis>, which change less, the gain is even more noticeable.
			</para>
			 <para>
				Jednakże czasami pobranie całego pliku <filename>Packages</filename> jest pożądane, zwłaszcza jeżeli ostatnie uaktualnienie było bardzo dawno temu i mechanizm przyrostów różnicowych niewiele by wniósł. Może być to również interesujące w przypadku posiadania bardzo szybkiego połączenia z siecią w połączeniu ze stosunkowo wolnym procesorem uaktualnianej maszyny, ponieważ więcej czasu będzie zaoszczędzone na pobieraniu w porównaniu z obliczaniem nowych wersji tych plików (zaczynając od starszych wersji i aplikując kolejne różnice). W tym celu należy użyć parametru konfiguracyjnego <literal>Acquire::Pdiffs</literal> ustawionego na <literal>false</literal>.
			</para>
			 </sidebar> <para>
				<command>apt</command> will generally select the most recent version number (except for packages from <emphasis role="distribution">Experimental</emphasis> and <emphasis role="distribution">stable-backports</emphasis>, which are ignored by default whatever their version number). If you specified <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> in your <filename>sources.list</filename>, <command>apt upgrade</command> will switch most of your <emphasis role="distribution">Stable</emphasis> system to <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>, which might not be what you intended.
			</para>
			 <para>
				To tell <command>apt</command> to use a specific distribution when searching for upgraded packages, you need to use the <literal>-t</literal> or <literal>--target-release</literal> option, followed by the name of the distribution you want (for example: <command>apt -t stable upgrade</command>). To avoid specifying this option every time you use <command>apt</command>, you can add <literal>APT::Default-Release "stable";</literal> in the file <filename>/etc/apt/apt.conf.d/local</filename>.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				For more important upgrades, such as the change from one major Debian version to the next, you need to use <command>apt full-upgrade</command>. With this instruction, <command>apt</command> will complete the upgrade even if it has to remove some obsolete packages or install new dependencies. This is also the command used by users who work daily with the Debian <emphasis role="distribution">Unstable</emphasis> release and follow its evolution day by day. It is so simple that it hardly needs explanation: APT's reputation is based on this great functionality.
			</para>
			 <para>
				Unlike <command>apt</command> and <command>aptitude</command>, <command>apt-get</command> doesn't know the <command>full-upgrade</command> command. Instead, you should use <command>apt-get dist-upgrade</command> (”distribution upgrade”), the historical and well-known command that <command>apt</command> and <command>aptitude</command> also accept for the convenience of users who got used to it.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>Opcje konfiguracyjne</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>configuration</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				Besides the configuration elements already mentioned, it is possible to configure certain aspects of APT by adding directives in a file of the <filename>/etc/apt/apt.conf.d/</filename> directory. Remember for instance that it is possible for APT to tell <command>dpkg</command> to ignore file conflict errors by specifying <literal>DPkg::options { "--force-overwrite"; }</literal>.
			</para>
			 <para>
				Jeżeli dostęp do sieci jest możliwy jedynie przez proxy, należy dodać linię podobną do <literal>Acquire::http::proxy "http://<replaceable>twojeproxy</replaceable>:3128"</literal>. Dla proxy FTP należy wpisać <literal>Acquire::ftp::proxy "ftp://<replaceable>twojeproxy</replaceable>"</literal>. Więcej opcji konfiguracyjnych można znaleźć na stronach pomocy <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> za pomocą komendy <command>man apt.conf</command> (szczegóły korzystania ze stron pomocy można znaleźć w <xref linkend="sect.manual-pages" />).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Katalogi zakończone na <filename>.d</filename></title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				Katalogi zakończone przyrostkiem <filename>.d</filename> są coraz częściej stosowane. Każdy katalog zawiera ustawienia konfiguracyjne podzielone pomiędzy wiele plików. W związku z tym wszystkie pliki w katalogu <filename>/etc/apt/apt.conf.d/</filename> to instrukcje konfiguracji APTa. APT uwzględnia je w kolejności alfabetycznej, tak więc ostatnie z nich mogą modyfikować element konfiguracyjny zdefiniowany w jednym z pierwszych.
			</para>
			 <para>
				Taka struktura zapewnia pewną elastyczność administratorowi maszyny oraz zarządcom pakietów. Rzeczywiście, administrator może z łatwością zmienić konfigurację oprogramowania dodając w tym katalogu przygotowany wcześniej plik, bez konieczności modyfikacji istniejących. Zarządcy pakietów używają tego samego podejścia kiedy muszą dopasować konfigurację innego oprogramowania, aby zapewnić ich bezproblemowe współistnienie. Polityka Debiana wyraźnie zakazuje modyfikacji plików konfiguracyjnych innych pakietów — tylko użytkownik ma takie prawo. Przypomnijmy, że podczas uaktualnienia pakietu użytkownik otrzymuje wybór, którą wersję pliku konfiguracyjnego należy zatrzymać w przypadku wykrycia zmian. Wszelkie zewnętrzne zmiany w pliku uruchomiłyby takie zapytanie, które zastanowiłoby administratora przekonanego o tym, że nic nie zmieniał.
			</para>
			 <para>
				Without a <filename>.d</filename> directory, it is impossible for an external package to change the settings of a program without modifying its configuration file. Instead it must invite the user to do it themselves and lists the operations to be done in the file <filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename>.
			</para>
			 <para>
				W zależności od aplikacji katalog <filename>.d</filename> jest używany bezpośrednio lub zarządzany przez zewnętrzy skrypt, który scali wszystkie pliki w celu stworzenia końcowej konfiguracji. Ważne jest, aby uruchamiać ten skrypt po każdej zmianie w tym katalogu tak, aby najnowsze zmiany były brane pod uwagę. Tak samo ważne jest, aby nie pracować bezpośrednio z plikiem utworzonym automatycznie, ponieważ wszystkie zmiany zostaną utracone po ponownym uruchomieniu skryptu. Wybrana metoda (katalog <filename>.d</filename> używany bezpośrednio lub plik utworzony na jego podstawie) jest zazwyczaj podyktowana przez ograniczenia implementacyjne, ale w obu przypadkach zyski z elastyczności konfiguracji przeważają nad komplikacjami związanymi z jej obsługą. Serwer poczty Exim 4 jest przykładem metody tworzenia pliku: może być skonfigurowany przez kilka plików (<filename>/etc/exim4/conf.d/*</filename>), które są scalone w <filename>/var/lib/exim4/config.autogenerated</filename> przy użyciu komendy <command>update-exim4.conf</command>.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>Zarządzanie Priorytetami Pakietów</title>
			 <para>
				Jednym z najważniejszych aspektów w konfiguracji APTa jest zarządzanie priorytetami związanymi z każdym ze źródeł pakietów. Przykładowo, chciałbyś rozszerzyć dystrybucję o jeden lub dwa nowsze pakiety z <emphasis role="distribution">Testowego</emphasis>, <emphasis role="distribution">Niestabilnego</emphasis> lub <emphasis role="distribution">Eksperymentalnego</emphasis>. Możliwe jest przypisanie priorytetu do każdego dostępnego pakietu (ten sam pakiet może mieć wiele priorytetów, zależnie od jego wersji lub dystrybucji, z której pochodzi). Priorytety wpływają bowiem na zachowanie APTa: dla każdego pakietu zawsze zostanie wybrana wersja z najwyższym priorytetem (z wyjątkiem przypadku, gdy jego wersja jest starsza niż zainstalowana i jego priorytet jest mniejszy niż 1000).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>pinning, APT pinning</primary>
			</indexterm>
			 <indexterm>
				<primary>package</primary>
				<secondary>priority</secondary>
			</indexterm>
			 <indexterm>
				<primary>priority</primary>
				<secondary>package priority</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>preferences</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>preferences</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				APT definiuje kilka domyślnych priorytetów. Każda zainstalowana wersja pakietu ma priorytet 100. Niezainstalowana wersja pakietu ma domyślnie priorytet 500, ale może zostać podniesiony do 990 jeżeli jest częścią wydania docelowego (zdefiniowanego opcją <literal>-t</literal> lub instrukcja konfiguracyjną <literal>APT::Default-Release</literal>).
			</para>
			 <para>
				Można zmodyfikować priorytety dodając w pliku <filename>/etc/apt/preferences</filename> wpisy z nazwami danych pakietów, ich wersją, źródłem i nowym priorytetem.
			</para>
			 <para>
				APT nigdy nie zainstaluje starej wersji pakietu (tzn. takiej, której numer wersji jest mniejszy niż aktualnie zainstalowany w systemie) z wyjątkiem przypadku kiedy jego priorytet jest wyższy niż 1000. APT zawsze zainstaluje pakiet o najwyższym priorytecie, który spełnia powyższy warunek. Jeżeli dwa pakiety maja taki sam priorytet, APT zainstaluje nowszy (ten, którego numer wersji jest wyższy). Jeżeli dwa pakiety tej samej wersji mają taki sam priorytet, ale różnią się zawartością, APT zainstaluje wersję, która nie jest jeszcze zainstalowana (ta zasada została stworzona dla pakietów, które zostały zaktualizowane bez zmieniania numeru wersji, który jest zazwyczaj wymagany).
			</para>
			 <para>
				Mówiąc bardziej konkretnie, pakiet, którego priorytet jest mniejszy niż 0 nigdy nie zostanie zainstalowany. Pakiet o priorytecie pomiędzy 0 i 100 zostanie zainstalowany tylko wtedy, kiedy żadna wersja tego pakietu nie jest aktualnie zainstalowana. Posiadając priorytet pomiędzy 100 i 500, pakiet zostanie zainstalowany pod warunkiem, że jego nowsza wersja nie jest zainstalowana lub nie ma jej w innej dystrybucji. Pakiet o priorytecie pomiędzy 500 i 990 zostanie zainstalowany pod warunkiem, że jego nowsza wersja nie jest zainstalowana lub nie ma jej w docelowej dystrybucji. Posiadając priorytet pomiędzy 990 i 1000, pakiet zostanie zainstalowany, z wyjątkiem przypadku, kiedy zainstalowana jest jego nowsza wersja. Priorytet większy niż 1000 zawsze spowoduje zainstalowanie pakietu, nawet jeżeli wymusza to zejście do jego starszej wersji.
			</para>
			 <para>
				When APT checks <filename>/etc/apt/preferences</filename>, it first takes into account the most specific entries (often those specifying the concerned package), then the more generic ones (including for example all the packages of a distribution). If several generic entries exist, the first match is used. The available selection criteria include the package's name and the source providing it. Every package source is identified by the information contained in a <filename>Release</filename> file that APT downloads together with the <filename>Packages</filename> files. It specifies the origin (usually “Debian” for the packages of official mirrors, but it can also be a person's or an organization's name for third-party repositories). It also gives the name of the distribution (usually <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> or <emphasis role="distribution">Experimental</emphasis> for the standard distributions provided by Debian) together with its version (for example 8 for Debian <emphasis role="distribution">Jessie</emphasis>). Let's have a look at its syntax through some realistic case studies of this mechanism.
			</para>
			 <sidebar> <title><emphasis>SZCZEGÓLNY PRZYPADEK</emphasis> Priorytet <emphasis role="distribution">eksperymentalnego</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				If you listed <emphasis role="distribution">Experimental</emphasis> in your <filename>sources.list</filename> file, the corresponding packages will almost never be installed because their default APT priority is 1. This is of course a specific case, designed to keep users from installing <emphasis role="distribution">Experimental</emphasis> packages by mistake. The packages can only be installed by typing <command>aptitude install <replaceable>package</replaceable>/experimental</command> — users typing this command can only be aware of the risks that they take. It is still possible (though <emphasis>not</emphasis> recommended) to treat packages of <emphasis role="distribution">Experimental</emphasis> like those of other distributions by giving them a priority of 500. This is done with a specific entry in <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500
</programlisting>
			 </informalexample> </sidebar> <para>
				Załóżmy, że chcesz używać tylko pakietów ze stabilnej wersji Debiana. Te dostarczane w innych wersjach nie powinny być instalowane, chyba że na bezpośrednie żądanie. Mógłbyś dodać następujące wpisy w pliku <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10
</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> definiuje nazwę wybranej dystrybucji. <literal>o=Debian</literal> ogranicza zakres pakietów do tych, których źródłem jest "Debian".
			</para>
			 <para>
				Let's now assume that you have a server with several local programs depending on the version 5.14 of Perl and that you want to ensure that upgrades will not install another version of it. You could use this entry:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.14*
Pin-Priority: 1001
</programlisting>
			 </informalexample> <para>
				Referencyjna dokumentacja dla tego pliku konfiguracyjnego jest dostępna na stronach pomocy <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>, które można wyświetlić za pomocą <command>man apt_preferences</command>.
			</para>
			 <sidebar> <title><emphasis>WSKAZÓWKA</emphasis> Komentarze w pliku <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Explanation</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin-Priority</literal></primary>
			</indexterm>
			 <para>
				Nie istnieje oficjalna składnia do umieszczania komentarzy w pliku <filename>/etc/apt/preferences</filename>, ale można wprowadzić pewne opisy tekstowe przez dodanie jednego lub więcej pól “<literal>Explanation</literal>” na początku każdego wpisu:
			</para>
			 <informalexample> 
<programlisting>Explanation: Pakiet xserver-xorg-video-intel dostarczony
Explanation: w eksparymentalnym może być bezpiecznie używany
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>Praca z Kilkoma Dystrybucjami</title>
			 <para>
				<command>apt</command> being such a marvelous tool, it is tempting to pick packages coming from other distributions. For example, after having installed a <emphasis role="distribution">Stable</emphasis> system, you might want to try out a software package available in <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> without diverging too much from the system's initial state.
			</para>
			 <para>
				Even if you will occasionally encounter problems while mixing packages from different distributions, <command>apt</command> manages such coexistence very well and limits risks very effectively. The best way to proceed is to list all distributions used in <filename>/etc/apt/sources.list</filename> (some people always put the three distributions, but remember that <emphasis role="distribution">Unstable</emphasis> is reserved for experienced users) and to define your reference distribution with the <literal>APT::Default-Release</literal> parameter (see <xref linkend="sect.apt-upgrade" />).
			</para>
			 <para>
				Let's suppose that <emphasis role="distribution">Stable</emphasis> is your reference distribution but that <emphasis role="distribution">Testing</emphasis> and <emphasis role="distribution">Unstable</emphasis> are also listed in your <filename>sources.list</filename> file. In this case, you can use <command>apt install <replaceable>package</replaceable>/testing</command> to install a package from <emphasis role="distribution">Testing</emphasis>. If the installation fails due to some unsatisfiable dependencies, let it solve those dependencies within <emphasis role="distribution">Testing</emphasis> by adding the <literal>-t testing</literal> parameter. The same obviously applies to <emphasis role="distribution">Unstable</emphasis>.
			</para>
			 <para>
				In this situation, upgrades (<command>upgrade</command> and <command>full-upgrade</command>) are done within <emphasis role="distribution">Stable</emphasis> except for packages already upgraded to another distribution: those will follow updates available in the other distributions. We will explain this behavior with the help of the default priorities set by APT below. Do not hesitate to use <command>apt-cache policy</command> (see sidebar <xref linkend="sidebar.apt-cache-policy" />) to verify the given priorities.
			</para>
			 <para>
				Wszystko to jest związane z faktem, że APT rozpatruje tylko pakiety mające większy lub równy numer wersji w porównaniu z zainstalowanym (zakładając, że nie użyto <filename>/etc/apt/preferences</filename> do wymuszenia wartości priorytetów większych niż 1000).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>WSKAZÓWKA</emphasis> <command>apt-cache policy</command></title>
			 <para>
				W celu lepszego zrozumienia mechanizmu priorytetów można wykonać komendę <command>apt-cache policy</command>, która wyświetla domyślny priorytet związany z danym źródłem pakietów. Można także użyć <command>apt-cache policy <replaceable>pakiet</replaceable></command>, aby wyświetlić priorytety wszystkich dostępnych wersji danego pakietu.
			</para>
			 </sidebar> <para>
				Załóżmy, że zainstalowano wersję 1 pierwszego pakietu ze <emphasis role="distribution">Stabilnego</emphasis>, a wersje 2 i 3 są dostępne odpowiednio w <emphasis role="distribution">Testowym</emphasis> i <emphasis role="distribution">Niestabilnym</emphasis>. Zainstalowana wersja ma priorytet 100, ale wersja dostępna w <emphasis role="distribution">Stabilnym</emphasis> (ta sama) ma priorytet 990 (ponieważ jest częścią docelowego wydania). Pakiety w <emphasis role="distribution">Testowym</emphasis> i <emphasis role="distribution">Niestabilnym</emphasis> mają priorytet 500 (domyślny priorytet dla wersji niezainstalowanej). Zwycięzcą jest więc wersja 1 posiadająca priorytet 990. W związku z tym pakiet "zostaje w <emphasis role="distribution">Stabilnym</emphasis>".
			</para>
			 <para>
				Weźmy teraz przykład innego pakietu, który jest w wersji 2 i został zainstalowany z <emphasis role="distribution">Testowego</emphasis>. Wersja 1 jest dostępna w <emphasis role="distribution">Stabilnym</emphasis>, a wersja 3 w <emphasis role="distribution">Niestabilnym</emphasis>. Wersja 1 (mająca priorytet 990 — nadal mniejsza niż 1000) jest pominięta, ponieważ jest mniejsza niż aktualnie zainstalowana. W związku z tym zostają wersje 2 i 3, obie z priorytetem 500. Postawiony przed takim wyborem, APT wybierze nowszą wersję, tą z <emphasis role="distribution">Niestabilnego</emphasis>. Jeżeli nie jest pożądane, aby pakiet zainstalowany z <emphasis role="distribution">Testowego</emphasis> został przeniesiony do <emphasis role="distribution">Niestabilnego</emphasis>, należy przypisać priorytet niższy niż 500 (na przykład 490) pakietom pochodzącym z <emphasis role="distribution">Niestabilnego</emphasis>. W celu uzyskania tego efektu można zmodyfikować plik <filename>/etc/apt/preferences</filename>:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490
</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>Śledzenie Automatycznie Zainstalowanych Pakietów</title>
			 <para>
				One of the essential functionalities of <command>apt</command> is the tracking of packages installed only through dependencies. These packages are called “automatic”, and often include libraries for instance.
			</para>
			 <para>
				With this information, when packages are removed, the package managers can compute a list of automatic packages that are no longer needed (because there is no “manually installed” packages depending on them). <command>apt-get autoremove</command> will get rid of those packages. <command>aptitude</command> and <command>apt</command> do not have this command: the former because it removes them automatically as soon as they are identified, and the latter probably because the user should not have to manually run such a command. In all cases, the tools display a clear message listing the affected packages.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				Dobrym nawykiem jest zaznaczanie jako automatycznych tych pakietów, które nie są bezpośrednio wymagane, dzięki czemu są one automatycznie usuwane w momencie, kiedy nie są już potrzebne. <command>apt-mark auto <replaceable>pakiet</replaceable></command> zaznaczy pakiet jako automatyczny, podczas gdy <command>apt-mark manual <replaceable>pakiet</replaceable></command> działa przeciwnie. <command>aptitude markauto</command> i <command>aptitude unmarkauto</command> działają w ten sam sposób, niemniej jednak oferują więcej możliwości zaznaczania wielu pakietów naraz (patrz <xref linkend="sect.aptitude" />). Interaktywny, konsolowy interfejs <command>aptitude</command> również pozwala na łatwy przegląd "flag automatyczności" wielu pakietów.
			</para>
			 <indexterm>
				<primary><command>aptitude why</command></primary>
			</indexterm>
			 <para>
				People might want to know why an automatically installed package is present on the system. To get this information from the command line, you can use <command>aptitude why <replaceable>package</replaceable></command> (<command>apt</command> and <command>apt-get</command> have no similar feature):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>ALTERNATYWA</emphasis> <command>deborphan</command> i <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				In days where <command>apt</command>, <command>apt-get</command> and <command>aptitude</command> were not able to track automatic packages, there were two utilities producing lists of unnecessary packages: <command>deborphan</command> and <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> is the most rudimentary of both. It simply scans the <literal>libs</literal> and <literal>oldlibs</literal> sections (in the absence of supplementary instructions) looking for the packages that are currently installed and that no other package depends on. The resulting list can then serve as a basis to remove unneeded packages.
			</para>
			 <para>
				<command>debfoster</command> stosuje bardziej złożone podejście, bardzo podobne do APTa: zarządza listą pakietów, które zostały bezpośrednio zainstalowane i zapamiętuje pakiety, które są naprawdę wymagane pomiędzy kolejnymi wywołaniami. Jeżeli w systemie pojawią się nowe pakiety i <command>debfoster</command> nie rozpozna ich jako wymagane pakiety, to zostaną wyświetlone na ekranie razem z listą ich zależności. W takiej sytuacji program oferuje wybór: usunięcie pakietu (prawdopodobnie razem z pakietem, który od niego zależy), oznaczenie go jako bezpośrednio wymagany lub tymczasowe zignorowanie.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>Komenda <command>apt-cache</command></title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>package search</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>header display</secondary>
		</indexterm>
		 <indexterm>
			<primary>search of packages</primary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>search</secondary>
		</indexterm>
		 <para>
			The <command>apt-cache</command> command can display much of the information stored in APT's internal database. This information is a sort of cache since it is gathered from the different sources listed in the <filename>sources.list</filename> file. This happens during the <command>apt update</command> operation.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>SŁOWNIK</emphasis> Pamięć podręczna</title>
		 <para>
			Pamięć podręczna jest rodzajem tymczasowego systemu magazynowania używanym w celu przyspieszenia dostępu do często używanych danych, podczas gdy zwykłe sposoby dostępu są kosztowne (wydajnościowo). Ten sposób może być stosowany w wielu sytuacjach i na różną skalę, od rdzeni mikroprocesorów do zaawansowanych systemów magazynowania.
		</para>
		 <para>
			W przypadku APTa, referencyjne pliki <filename>Packages</filename> to te znajdujące się na serwerach lustrzanych Debiana. W związku z tym byłoby bardzo nieefektywne, aby przy każdym wyszukiwaniu wykorzystywać sieć do przeszukiwania bazy danych dostępnych pakietów. Właśnie dlatego APT przechowuje kopię tych plików (w <filename>/var/lib/apt/lists/</filename>) i wyszukiwania są wykonywane na tych lokalnych plikach. Podobnie, <filename>/var/cache/apt/archives/</filename> zawiera pamięć podręczną już pobranych pakietów, aby uniknąć ich ponownego pobierania w celu reinstalacji po usunięciu.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			The <command>apt-cache</command> command can do keyword-based package searches with <command>apt-cache search <replaceable>keyword</replaceable></command>. It can also display the headers of the package's available versions with <command>apt-cache show <replaceable>package</replaceable></command>. This command provides the package's description, its dependencies, the name of its maintainer, etc. Note that <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> work in the same way.
		</para>
		 <sidebar> <title><emphasis>ALTERNATYWA</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> jest bardzo prostym narzędziem, właściwie stosuje komendę <command>grep</command> dla opisu pakietu. Często zwraca zbyt wiele wyników albo wcale, jeżeli zostanie zawarte zbyt wiele słów kluczowych.
		</para>
		 <para>
			Z drugiej strony <command>axi-cache search <replaceable>określenie</replaceable></command> dostarcza lepsze wyniki, posortowane względem trafności. Używa silnika wyszukiwania <emphasis>Xapian</emphasis> i jest częścią pakietu <emphasis role="pkg">apt-xapian-index</emphasis>, który indeksuje wszystkie informacje pakietu (i nawet więcej, jak pliki <filename>.desktop</filename> ze wszystkich pakietów Debiana). Rozróżnia także znaczniki (spójrz na fiszkę <xref linkend="sidebar.debtags" />) i zwraca wyniki w ciągu milisekund.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
105 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
98% debtags - Enables support for package tags
94% debian-goodies - Small toolbox-style utilities 
93% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
93% goplay - games (and more) package browser using DebTags
[...]
87% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
[...]
More terms: search debian searching strigi debtags bsearch libbsearch
More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			Niektóre funkcje są rzadziej używane. Na przykład <command>apt-cache policy</command> wyświetla zarówno priorytety źródeł pakietów i pojedynczych pakietów. Kolejnym przykładem jest <command>apt-cache dumpavail</command>, która wyświetla nagłówki wszystkich dostępnych wersji wszystkich pakietów. <command>apt-cache pkgnames</command> wyświetla listę wszystkich pakietów, które choć raz pojawiają się w pamięci podręcznej.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>Interfejsy: <command>aptitude</command>, <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>interfaces</secondary>
		</indexterm>
		 <para>
			APT jest programem w języku C++, którego kod zawiera się głównie we współdzielonej bibliotece <command>libapt-pkg</command>. Używanie biblioteki współdzielonej ułatwia tworzenie interfejsów użytkownika, ponieważ jej kod jest łatwy do wykorzystania. Z historycznego punktu widzenia <command>apt-get</command> był zaprojektowany wyłącznie jako testowy interfejs dla <command>libapt-pkg</command>, ale jego sukces przyćmił ten fakt.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> jest interaktywnym programem, który może być używany w semigraficznym trybie konsolowym. Pozwala na przeglądanie listy zainstalowanych pakietów, wyszukiwanie wszystkich dostępnych informacji i wybieranie pakietów do instalacji lub usunięcia. Został on zaprojektowany szczególnie z myślą o administratorach, dlatego jego zachowanie jest dużo bardziej inteligentne w porównaniu do <command>apt-get</command>, a jego interfejs łatwiejszy w zrozumieniu.
			</para>
			 <figure>
				<title>Menedżer pakietów <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Po uruchomieniu <command>aptitude</command> pokazuje listę pakietów posortowaną według stanu (zainstalowane, niezainstalowane lub zainstalowane, ale niedostępne na serwerach lustrzanych — inne sekcje wyświetlają zadania, wirtualne pakiety i nowe pakiety, które niedawno pojawiły się na serwerach lustrzanych). W celu ułatwienia przeglądania tematycznego dostępne są inne widoki. We wszystkich przypadkach <command>aptitude</command> wyświetla na ekranie listę łączącą kategorie i pakiety. Kategorie są zorganizowane w strukturę drzewa, którego gałęzie mogą być odpowiednio rozwijane i zamykane za pomocą klawiszy <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> i <keycombo><keycap>]</keycap></keycombo>. <keycombo><keycap>+</keycap></keycombo> jest używany do oznaczania pakietów do instalacji, <keycombo><keycap>-</keycap></keycombo> do usunięcia, a <keycombo><keycap>_</keycap></keycombo> do całkowitej likwidacji (zauważ, że można ich również używać w stosunku do kategorii, wtedy odpowiednie akcje zostaną zastosowane do wszystkich pakietów danej kategorii). <keycombo><keycap>u</keycap></keycombo> pozwala zaktualizować listę dostępnych pakietów, a <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> przygotowuje całkowite uaktualnienie systemu. <keycombo><keycap>g</keycap></keycombo> przełącza do widoku podsumowania żądanych zmian (ponowne wpisanie <keycombo><keycap>g</keycap></keycombo> zatwierdza zmiany), a <keycombo><keycap>q</keycap></keycombo> zamyka aktualny widok. Użycie go w przypadku początkowego widoku spowoduje zamknięcie <command>aptitude</command>.
			</para>
			 <sidebar> <title><emphasis>DOKUMENTACJA</emphasis> <command>aptitude</command></title>
			 <para>
				Ta sekcja nie opisuje szczegółów użytkowania <command>aptitude</command>, ale raczej skupia się na dostarczeniu minimum do przetrwania. <command>aptitude</command> posiada dość dobrą dokumentację i zalecane jest używanie jego pełnego podręcznika dostępnego w pakiecie <emphasis role="pkg">aptitude-doc-en</emphasis> (<filename>/usr/share/doc/aptitude/html/en/index.html</filename>).
			</para>
			 </sidebar> <para>
				W celu wyszukania pakietu należy wpisać <keycombo><keycap>/</keycap></keycombo>, a następnie wyszukiwany wzorzec. Wzorzec zostanie dopasowany do nazwy pakietu, ale poprzedzając go <literal>~d</literal> zostanie zastosowany również do opisu, natomiast używając <literal>~s</literal> do sekcji, wyszukiwanie innych cech zostało szerzej opisane w dokumentacji. Te same wzorce mogą być też używane do filtrowania listy wyświetlanych pakietów: należy wprowadzić literę <keycombo><keycap>l</keycap></keycombo> (jako <foreignphrase>limit</foreignphrase>), a następnie szukany wzorzec.
			</para>
			 <para>
				Managing the “automatic flag” of Debian packages (see <xref linkend="sect.automatic-tracking" />) is a breeze with <command>aptitude</command>. It is possible to browse the list of installed packages and mark packages as automatic with <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> or to remove the mark with the <keycombo><keycap>m</keycap></keycombo> key. “Automatic packages” are displayed with an “A” in the list of packages. This feature also offers a simple way to visualize the packages in use on a machine, without all the libraries and dependencies that you don't really care about. The related pattern that can be used with <keycombo><keycap>l</keycap></keycombo> (to activate the filter mode) is <literal>~i!~M</literal>. It specifies that you only want to see installed packages (<literal>~i</literal>) not marked as automatic (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>NARZĘDZIE</emphasis> Używanie <command>aptitude</command> w linii komend</title>
			 <para>
				Większość opcji <command>aptitude</command> jest dostępna zarówno przez interaktywny interfejs i w linii komend. Opisane polecenia powinny być znajome stałym użytkownikom <command>apt-get</command> i <command>apt-cache</command>.
			</para>
			 <para>
				Zaawansowane opcje <command>aptitude</command> są również dostępne w linii komend. Można używać tych samych wzorców wyszukiwania, co w wersji interaktywnej. Na przykład, jeżeli celem jest oczyszczenie listy "ręcznie zainstalowanych" pakietów i wiadomo, że żaden z lokalnie zainstalowanych programów nie wymaga jakichś konkretnych bibliotek modułów Perla, można oznaczyć wspomniane pakiety jako automatyczne za pomocą pojedynczej komendy:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				Na przykładzie tej komendy można zauważyć prawdziwą potęgę systemu wzorców wyszukiwania <command>aptitude</command>, która pozwala natychmiastowo zaznaczyć wszystkie pakiety w sekcjach <literal>libs</literal> i <literal>perl</literal>.
			</para>
			 <para>
				Należy jednak uważać, ponieważ jeżeli jakieś pakiety zostaną oznaczone jako automatyczne i nie są wymagane przez żaden inny pakiet, to zostaną natychmiast usunięte (po prośbie o potwierdzenie).
			</para>
			 </sidebar> <section>
				<title>Zarządzanie Rekomendacjami, Sugestiami i Zadaniami</title>
				 <para>
					Kolejną ciekawą funkcją <command>aptitude</command> jest to, że uznaje rekomendacje pomiędzy pakietami, jednocześnie dla każdego przypadku dając użytkownikowi możliwość ich nie instalowania. Na przykład pakiet <emphasis role="pkg">gnome</emphasis> rekomenduje (między innymi) <emphasis role="pkg">gdebi</emphasis>. Kiedy pierwszy z nich zostanie wybrany do instalacji, to drugi również zostanie wybrany (i oznaczony jako automatyczny, jeżeli nie jest jeszcze zainstalowany). Po wpisaniu <keycombo><keycap>g</keycap></keycombo>, <emphasis role="pkg">gdebi</emphasis> pojawi się na ekranie podsumowania oczekujących akcji na liście pakietów zainstalowanych automatycznie dla rozwiązania zależności. Jednakże można zdecydować, aby pominąć jego instalację poprzez odznaczenie go przed zatwierdzeniem operacji.
				</para>
				 <para>
					Zauważ, że funkcja śledzenia rekomendacji nie stosuje się do uaktualnień. Na przykład, jeżeli nowa wersja <emphasis role="pkg">gnome</emphasis> rekomenduje pakiet, którego wcześniej nie rekomendowała, wtedy pakiet nie zostanie zaznaczony do instalacji. Jednakże nadal zostanie na liście ekranu uaktualnienia, tak żeby administrator mógł ja zaznaczyć do instalacji.
				</para>
				 <para>
					Sugestie pomiędzy pakietami również są brane pod uwagę, ale w sposób dopasowany do ich szczególnego statusu. Na przykład, ponieważ <emphasis role="pkg">gnome</emphasis> sugeruje <emphasis role="pkg">dia-gnome</emphasis>, ten drugi zostanie wyświetlony na ekranie oczekujących akcji (w sekcji pakietów sugerowanych przez inne pakiety). W ten sposób jest to widoczne i administrator może zdecydować, czy wziąć pod uwagę sugestie, czy nie. Ze względu na to, że jest to tylko sugestia, a nie zależność lub rekomendacja, pakiet nie zostanie zaznaczony automatycznie — jego zaznaczenie wymaga ręcznej interwencji użytkownika (dlatego pakiet nie zostanie zaznaczony jako automatyczny).
				</para>
				 <para>
					W tym samym duchu, należy pamiętać, że <command>aptitude</command> inteligentnie wykorzystuje koncepcję zadań. Ze względu na to, że zadania są wyświetlane jako kategorie na ekranie list pakietów, możliwe jest zaznaczenia całego zadania do instalacji lub usunięcia, lub przeglądanie listy pakietów zawartych w zadaniu, aby zaznaczyć mniejszy podzbiór.
				</para>

			</section>
			 <section>
				<title>Lepsze Algorytmy Analityczne</title>
				 <para>
					W celu podsumowania tej sekcji należy zauważyć, że <command>aptitude</command> do rozwiązywania problemów używa bardziej zaawansowanych algorytmów w porównaniu z <command>apt-get</command>. Kiedy żądany zbiór akcji w połączeniu prowadziłby do rozbieżnego działania systemu <command>aptitude</command> ocenia kilka możliwych scenariuszy i prezentuje je w kolejności malejącej ważności. Algorytmy te nie są jednak niezawodne. Na szczęście zawsze istnieje możliwość ręcznego wybrania pożądanych akcji. W przypadku, gdy aktualnie zaznaczone akcje prowadzą do sprzeczności, górna część ekranu wskazuje liczbę "zepsutych" pakietów (można przejść do nich bezpośrednio po naciśnięciu <keycombo><keycap>b</keycap></keycombo>). Można wtedy ręcznie stworzyć rozwiązanie dla znalezionych problemów. W szczególności można uzyskać dostęp do różnych dostępnych wersji poprzez wybranie pakietu za pomocą klawisza <keycombo><keycap>Enter</keycap></keycombo>. Jeżeli wybranie jednej z tych wersji rozwiązuje problem, to użycie tej funkcji jest najprostszym rozwiązaniem. Kiedy już liczba zepsutych pakietów spadnie do zera, można bezpiecznie przejść do ekranu oczekujących akcji i jeszcze raz je sprawdzić przed zatwierdzeniem.
				</para>
				 <sidebar> <title><emphasis>ZAUWAŻ</emphasis> Dziennik <command>aptitude</command>'a</title>
				 <para>
					Podobnie do <command>dpkg</command>, <command>aptitude</command> przechowuje listęp wykonanych akcji w pliku dziennika (<filename>/var/log/aptitude</filename>). Jednakże ze względu na to, że obie komendy działają na zupełnie innym poziomie, w ich plikach dziennika znajdują się różne informacje. Podczas, gdy <command>dpkg</command> zapisuje wszystkie operacje wykonywane krok po kroku dla każdego pakietu, <command>aptitude</command> daje bardziej ogólny widok na wysokopoziomowe operacje, takie jak uaktualnienie systemu.
				</para>
				 <para>
					Należy jednak mieć na uwadze, że plik dziennika zawiera tylko podsumowanie operacji wykonanych przez <command>aptitude</command>. Jeżeli używane są inne interfejsy (lub nawet sam <command>dpkg</command>), to dzienniki <command>aptitude</command> będą zawierać jedynie częściowy zapis operacji, więc nie należy na nim polegać w celu tworzenia wiarygodnej historii systemu.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> jest graficznym menedżerem pakietów dla Debiana, który posiada wydajny i prosty interfejs graficzny bazujący na GTK+/GNOME. Posiada wbudowane filtry pozwalające na szybki dostęp do nowych pakietów, zainstalowanych pakietów, pakietów do uaktualnienia, przestarzałych pakietów, itd. Po przejrzeniu tych list można wybrać operacje do wykonania na pakietach (instalacja, uaktualnienie, usunięcie, wyczyszczenie); operacje te nie są wykonywane natychmiast, ale dodawane do listy zadań. Pojedyncze naciśnięcie przycisku sprawdza listę operacji, które są następnie wykonane za jednym razem.
			</para>
			 <figure>
				<title>Menedżer pakietów <command>synaptic</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>Sprawdzanie Autentyczności Pakietów</title>
		 <indexterm>
			<primary>package</primary>
			<secondary>authenticity check</secondary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>seal</secondary>
		</indexterm>
		 <indexterm>
			<primary>package</primary>
			<secondary>signature</secondary>
		</indexterm>
		 <indexterm>
			<primary>signature</primary>
			<secondary>package signature</secondary>
		</indexterm>
		 <indexterm>
			<primary>authentication</primary>
			<secondary>package authentication</secondary>
		</indexterm>
		 <para>
			Dla administratorów Falcot Corp bezpieczeństwo jest bardzo ważne. Zgodnie z tym założeniem, muszą być pewni, że instalują tylko pakiety, których pochodzenie od Debiana jest gwarantowane, które nie były zmieniane przez osoby trzecie. Włamywacz komputerowy mógłby bowiem próbować dodać szkodliwy kod do wiarygodnego pakietu. Po zainstalowaniu, taki pakiet mógłby robić cokolwiek, do czego włamywacz go zaprojektował, włączając w to na przykład kradzież haseł lub poufnych informacji. W celu przeciwdziałania takim zagrożeniom, Debian stosuje pieczęci zabezpieczające, aby zagwarantować — w czasie instalacji — że pakiet naprawdę pochodzi od jego opiekuna i nie był modyfikowany przez osoby trzecie.
		</para>
		 <para>
			The seal works with a chain of cryptographical hashes and a signature. The signed file is the <filename>Release</filename> file, provided by the Debian mirrors. It contains a list of the <filename>Packages</filename> files (including their compressed forms, <filename>Packages.gz</filename> and <filename>Packages.xz</filename>, and the incremental versions), along with their MD5, SHA1 and SHA256 hashes, which ensures that the files haven't been tampered with. These <filename>Packages</filename> files contain a list of the Debian packages available on the mirror, along with their hashes, which ensures in turn that the contents of the packages themselves haven't been altered either.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			Zarządzanie zaufanymi kluczami odbywa się przez użycie komendy <command>apt-key</command> z pakietu <emphasis role="pkg">apt</emphasis>. Program ten zarządza bazą kluczy publicznych GnuPG, które są używane do sprawdzania podpisów w plikach <filename>Release.gpg</filename> dostępnych na serwerach lustrzanych. Może zostać użyty do ręcznego dodania nowych kluczy (kiedy wymagane są nieoficjalne serwery lustrzane). Jednakże zazwyczaj wymagane są tylko oficjalne klucze Debiana. Wspomniane klucze są automatycznie aktualizowane przez pakiet <emphasis role="pkg">debian-archive-keyring</emphasis> (przechowuje on bazę kluczy w <filename>/etc/apt/trusted.gpg.d</filename>). Jednakże pierwsza instalacja tego pakietu wymaga zachowania ostrożności: nawet jeżeli pakiet jest podpisany tak jak pozostałe, jego podpis nie może być zweryfikowany zewnętrznie. Z tego powodu ostrożni administratorzy powinni sprawdzić skróty zaimportowanych kluczy przed zaufaniu im do instalacji nowych pakietów:
		</para>
		 
<screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   4096R/2B90D010 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = 126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid                  Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   4096R/C857C906 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid                  Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   4096R/518E17E1 2013-08-17 [expires: 2021-08-15]
      Key fingerprint = 75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid                  Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-automatic.gpg
-----------------------------------------------------------
pub   4096R/473041FA 2010-08-27 [expires: 2018-03-05]
      Key fingerprint = 9FED 2BCB DCD2 9CDF 7626  78CB AED4 B06F 4730 41FA
uid                  Debian Archive Automatic Signing Key (6.0/squeeze) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-stable.gpg
--------------------------------------------------------
pub   4096R/B98321F9 2010-08-07 [expires: 2017-08-05]
      Key fingerprint = 0E4E DE2C 7F3E 1FC0 D033  800E 6448 1591 B983 21F9
uid                  Squeeze Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   4096R/46925553 2012-04-27 [expires: 2020-04-25]
      Key fingerprint = A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid                  Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   4096R/65FFB764 2012-05-08 [expires: 2019-05-07]
      Key fingerprint = ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid                  Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;
</screen>
		 <sidebar> <title><emphasis>W PRAKTYCE</emphasis> Dodawanie zaufanych kluczy</title>
		 <indexterm>
			<primary>trusted key</primary>
		</indexterm>
		 <indexterm>
			<primary>key</primary>
			<secondary>APT's authentication keys</secondary>
		</indexterm>
		 <para>
			When a third-party package source is added to the <filename>sources.list</filename> file, APT needs to be told to trust the corresponding GPG authentication key (otherwise it will keep complaining that it can't ensure the authenticity of the packages coming from that repository). The first step is of course to get the public key. More often than not, the key will be provided as a small text file, which we will call <filename>key.asc</filename> in the following examples.
		</para>
		 <para>
			W celu dodania klucza do bazy zaufanych kluczy, administrator może wykonać <command>apt-key add &lt; key.asc</command>. Innym sposobem jest użycie graficznego interfejsu <command>synaptic</command>: jego zakładka "Uwierzytelnianie" w menu <menuchoice><guimenu>Ustawienia</guimenu> <guisubmenu>Repozytoria</guisubmenu></menuchoice> daje możliwość zaimportowania klucza z pliku <filename>key.asc</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			Dla tych, którzy potrzebowaliby osobnej aplikacji i więcej szczegółów na temat zaufanych kluczy istnieje możliwość użycia <command>gui-apt-key</command> (z pakietu o tej samej nazwie), minimalistycznego graficznego interfejsu do zarządzania bazą zaufanych kluczy.
		</para>
		 </sidebar> <para>
			Kiedy już odpowiednie klucze znajdą się w bazie, APT będzie sprawdzał ich podpisy przed każdą ryzykowną operacją, dzięki temu interfejsy wyświetlą ostrzeżenie w przypadku gdy zażądano instalacji pakietu, którego wiarygodność nie może zostać ustalona.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>Uaktualnienie z Jednej Stabilnej Dystrybucji do Następnej</title>
		 <para>
			Jedna z najbardziej rozpoznawalnych funkcji Debiana jest jego zdolność uaktualniania całego systemu z jednego stabilnego wydania do następnego: <foreignphrase>dist-upgrade</foreignphrase> — dobrze znana fraza — znacznie przyczyniła się do reputacji projektu. Przy zachowaniu odpowiedniej troski, uaktualnienie może zająć zaledwie kilka minut lub kilkanaście minut, zależnie od prędkości pobierania z repozytoriów pakietów.
		</para>
		 <section>
			<title>Zalecana Procedura</title>
			 <para>
				W związku z tym, że Debian ma sporo czasu do ewolucji pomiędzy stabilnymi wydaniami, przed uaktualnieniem należy przeczytać informacje o wydaniu.
			</para>
			 <sidebar> <title><emphasis>WRACAJĄC DO PODSTAW</emphasis> Informacje o wydaniu</title>
			 <para>
				Informacje o wydaniu dotyczące systemu operacyjnego (oraz ogólnie oprogramowania) to dokument ukazujący przegląd oprogramowania, z uwzględnieniem szczegółów konkretnej wersji. Dokumenty te są zazwyczaj krótkie, w porównaniu do pełnej dokumentacji, oraz zawierają listę nowych funkcji wprowadzonych od czasu poprzedniej wersji. Często opisują też procedurę uaktualnienia, ostrzeżenia dla użytkowników poprzednich wersji, a czasami wykaz błędów.
			</para>
			 <para>
				Release notes are available online: the release notes for the current stable release have a dedicated URL, while older release notes can be found with their codenames: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/wheezy/releasenotes" />
			</para>
			 </sidebar> <para>
				In this section, we will focus on upgrading a <emphasis role="distribution">Wheezy</emphasis> system to <emphasis role="distribution">Jessie</emphasis>. This is a major operation on a system; as such, it is never 100% risk-free, and should not be attempted before all important data has been backed up.
			</para>
			 <para>
				Kolejnym dobrym zwyczajem ułatwiającym uaktualnienie (i skracającym je) jest porządkowanie zainstalowanych pakietów i zachowywanie tylko tych, które są naprawdę wymagane. Pomocnymi narzędziami do tego celu mogą być <command>aptitude</command>, <command>deborphan</command> i <command>debfoster</command> (spójrz na fiszkę <xref linkend="sect.automatic-tracking" />). Na przykład można użyć jednej ze wspomnianych komend, a następnie użyć trybu interaktywnego <command>aptitude</command> w celu sprawdzenia i dopracowania zaplanowanych usunięć:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Now for the upgrading itself. First, you need to change the <filename>/etc/apt/sources.list</filename> file to tell APT to get its packages from <emphasis role="distribution">Jessie</emphasis> instead of <emphasis role="distribution">Wheezy</emphasis>. If the file only contains references to <emphasis role="distribution">Stable</emphasis> rather than explicit codenames, the change isn't even required, since <emphasis role="distribution">Stable</emphasis> always refers to the latest released version of Debian. In both cases, the database of available packages must be refreshed (with the <command>apt update</command> command or the refresh button in <command>synaptic</command>).
			</para>
			 <para>
				Once these new package sources are registered, you should first do a minimal upgrade with <command>apt upgrade</command>. By doing the upgrade in two steps, we ease the job of the package management tools and often ensure that we have the latest versions of those, which might have accumulated bugfixes and improvements required to complete the full distribution upgrade.
			</para>
			 <para>
				Once this first upgrade is done, it is time to handle the upgrade itself, either with <command>apt full-upgrade</command>, <command>aptitude</command>, or <command>synaptic</command>. You should carefully check the suggested actions before applying them: you might want to add suggested packages or deselect packages which are only recommended and known not to be useful. In any case, the front-end should come up with a scenario ending in a coherent and up-to-date <emphasis role="distribution">Jessie</emphasis> system. Then, all you need is to do is wait while the required packages are downloaded, answer the Debconf questions and possibly those about locally modified configuration files, and sit back while APT does its magic.
			</para>

		</section>
		 <section>
			<title>Obsługa Problemów po Uaktualnieniu</title>
			 <para>
				Wbrew największym wysiłkom opiekunów Debiana, uaktualnienie nie zawsze jest tak bezproblemowe jak można by sobie życzyć. Nowe wersje oprogramowania mogą być niekompatybilne z poprzednimi (na przykład mogło się zmienić ich domyślne zachowanie lub format danych). Pomimo fazy testowania, poprzedzającej każde wydanie Debiana, mogły również przemknąć się jakieś błędy.
			</para>
			 <para>
				W celu przewidzenia niektórych problemów można zainstalować pakiet <emphasis role="pkg">apt-listchanges</emphasis>, który wyświetla informacje o możliwych problemach na początku procesu uaktualnienia pakietu. Informacja ta jest opracowana przez opiekunów pakietu i umieszczona w plikach <filename>/usr/share/doc/<replaceable>pakiet</replaceable>/NEWS.Debian</filename> dla pożytku użytkowników. Czytanie tych plików (prawdopodobnie używając <emphasis role="pkg">apt-listchanges</emphasis>) powinno pomóc w uniknięciu niemiłych niespodzianek.
			</para>
			 <para>
				You might sometimes find that the new version of a software doesn't work at all. This generally happens if the application isn't particularly popular and hasn't been tested enough; a last-minute update can also introduce regressions which are only found after the stable release. In both cases, the first thing to do is to have a look at the bug tracking system at <literal>https://bugs.debian.org/<replaceable>package</replaceable></literal>, and check whether the problem has already been reported. If it hasn't, you should report it yourself with <command>reportbug</command>. If it is already known, the bug report and the associated messages are usually an excellent source of information related to the bug:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						czasami istnieje już łatka i jest dostępna w zgłoszeniu błędu; można wtedy lokalnie przekompilować naprawioną wersję zepsutego pakietu (spójrz na fiszkę <xref linkend="sect.rebuilding-package" />);
					</para>

				</listitem>
				 <listitem>
					<para>
						w innych przypadkach, użytkownicy znajdują obejścia problemu i dzielą się swoimi spostrzeżeniami w odpowiedziach pod zgłoszeniem;
					</para>

				</listitem>
				 <listitem>
					<para>
						w jeszcze innych przypadkach, naprawiona wersja pakietu mogła zostać już przygotowana i udostępniona przez jego opiekuna.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Depending on the severity of the bug, a new version of the package may be prepared specifically for a new revision of the stable release. When this happens, the fixed package is made available in the <literal>proposed-updates</literal> section of the Debian mirrors (see <xref linkend="sect.proposed-updates" />). The corresponding entry can then be temporarily added to the <filename>sources.list</filename> file, and updated packages can be installed with <command>apt</command> or <command>aptitude</command>.
			</para>
			 <para>
				Sometimes the fixed package isn't available in this section yet because it is pending a validation by the Stable Release Managers. You can verify if that's the case on their web page. Packages listed there aren't available yet, but at least you know that the publication process is ongoing. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>Utrzymywanie Aktualności Systemu</title>
		 <para>
			Debian jest dynamiczną dystrybucją, która nieustannie się zmienia. Większość zmian zawiera się w <emphasis role="distribution">Testowym</emphasis> i <emphasis role="distribution">Niestabilnym</emphasis>, ale nawet <emphasis role="distribution">Stabilny</emphasis> jest od czasu do czasu aktualizowany, głównie w związku z poprawkami bezpieczeństwa. Niezależnie od wersji Debiana, pod którą działa system, przyjętą regułą jest utrzymywanie go w stanie zaktualizowanym tak, aby czerpać korzyści z najnowszych zmian i poprawek błędów.
		</para>
		 <para>
			Biorąc pod uwagę, że możliwe jest okresowe uruchamianie narzędzi do sprawdzania dostępnych aktualizacji i przeprowadzania uaktualnienia, takie powtarzalne zadanie jest uciążliwe, zwłaszcza w przypadku, gdy należy je wykonać na kilku maszynach. Na szczęście, podobnie do innych powtarzalnych zadań, może być częściowo zautomatyzowane, a w tym celu stworzono odpowiedni zestaw narzędzi.
		</para>
		 <para>
			Pierwszym ze wspomnianych narzędzi jest <command>apticron</command>, z pakietu o tej samej nazwie. Jego głównym działaniem jest codzienne uruchamianie skryptu (poprzez <command>cron</command>). Skrypt ten aktualizuje listę dostępnych pakietów i jeżeli któreś z zainstalowanych pakietów nie są w najnowszej wersji, wysyła wiadomość e-mail z listą tych pakietów oraz zmianami wprowadzonymi w ich nowych wersjach. Oczywiście pakiet ten jest kierowany głównie do użytkowników Debiana <emphasis role="distribution">Stabilnego</emphasis>, ponieważ dla szybciej postępujących wersji Debiana codzienne e-maile byłyby bardzo długie. Kiedy sa dostępne aktualizacje, <command>apticron</command> pobiera je automatycznie. Nie instaluje ich — zadanie to nadal pozostaje dla administratora — ale posiadanie pobranych pakietów dostępnych lokalnie (w pamięci podręcznej APTa) przyspiesza pracę.
		</para>
		 <para>
			Administratorzy mający pod opieką kilka komputerów z pewnością docenią informacje o oczekujących uaktualnieniach, ale same uaktualnienia nadal są tak samo uciążliwe, jak były wcześniej, dlatego z pomocą przychodzi skrypt <filename>/etc/cron.daily/apt</filename> (z pakietu <emphasis role="pkg">apt</emphasis>). Skrypt ten również uruchamiany jest codziennie (bez trybu interaktywnego) przez <command>cron</command>. W celu kontroli jego zachowania można użyć zmiennych konfiguracyjnych APTa (zapisanych w pliku, w katalogu <filename>/etc/apt/apt.conf.d/</filename>). Głównymi zmiennymi są:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						Ta opcja pozwala ustawić częstotliwość (w dniach) odświeżania listy pakietów. Użytkownicy <command>apticron</command> mogą pominąć tą zmienną, ponieważ <command>apticron</command> sam ustawia to zadanie.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						Podobnie, ta opcja wskazuje częstotliwość (w dniach), ale tym razem pobierania pakietów. Znowu, użytkownicy <command>apticron</command> nie będą jej potrzebować.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						Ta opcja udostępnia funkcję, której nie ma <command>apticron</command>. Kontroluje, jak często przestarzałe pakiety (te, do których nie odwołuje się już żadna dystrybucja) są usuwane z pamięci podręcznej APTa. Pozwala to utrzymać rozsądny rozmiar pamięci podręcznej APTa, dzięki czemu nie trzeba się już przejmować ręcznym wykonywaniem tego zadania.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						Kiedy włączona jest ta opcja, codzienny skrypt będzie uruchamiał <command>unattended-upgrade</command> (z pakietu <emphasis role="pkg">unattended-upgrades</emphasis>), który — jak sama nazwa wskazuje — może zautomatyzować uaktualnianie niektórych pakietów (domyślnie zajmuje się tylko aktualizacjami bezpieczeństwa, ale można to dostosować w <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Należy zauważyć, ze ta opcja może być ustawiona przy pomocy debconfa po uruchomieniu <command>dpkg-reconfigure -plow unattended-upgrades</command>.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Inne opcje pozwalają bardziej precyzyjnie kontrolować czyszczenie pamięci podręcznej. Chociaż nie są tutaj wymienione, to są opisane w skrypcie <filename>/etc/cron.daily/apt</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			These tools work very well for servers, but desktop users generally prefer a more interactive system. That is why the “Debian desktop environment” task installs <emphasis role="pkg">gnome-packagekit</emphasis> (at least when you select GNOME as desktop environment). It provides an icon in the notification area of desktop environments when updates are available; clicking on this icon then runs <command>gpk-update-viewer</command>, a simplified interface to perform updates. You can browse through available updates, read the short description of the relevant packages and the corresponding <filename>changelog</filename> entries, and select whether to apply the update or not on a case-by-case basis.
		</para>
		 <figure>
			<title>Uaktualnianie z użyciem <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>Automatyczne Uaktualnienia</title>
		 <indexterm>
			<primary>upgrade</primary>
			<secondary>automatic system upgrade</secondary>
		</indexterm>
		 <indexterm>
			<primary>automatic upgrade</primary>
		</indexterm>
		 <para>
			W związku z tym, że Falcot Corp posiada wiele komputerów, ale ograniczoną siłę roboczą, jego administratorzy starają się jak najbardziej zautomatyzować proces uaktualniania. Dlatego programy zarządzające tym procesem powinny działać bez interwencji człowieka.
		</para>
		 <section>
			<title>Konfigurowanie <command>dpkg</command></title>
			 <para>
				Jak już zostało wspomniane (spójrz na fiszkę <xref linkend="sidebar.questions-conffiles" />), <command>dpkg</command> może zostać poinstruowany, aby pytać o potwierdzenie w przypadku zastępowania plików konfiguracyjnych (z opcjami <literal>--force-confdef --force-confold</literal>). Jednakże interakcje mogą mieć trzy inne źródła: jedne pochodzą z samego APTa, inne są obsługiwane przez <command>debconf</command>, a niektóre występują w linii komend w powiązaniu do skryptów konfiguracyjnych pakietu.
			</para>

		</section>
		 <section>
			<title>Konfigurowanie APTa</title>
			 <para>
				W przypadku APTa sprawa jest prosta: opcja <literal>-y</literal> (lub <literal>--assume-yes</literal>) mówi programowi, aby na wszystkie odpowiedzi odpowiadał "tak".
			</para>

		</section>
		 <section>
			<title>Konfigurowanie <command>debconf</command></title>
			 <para>
				Omówienie przypadku <command>debconf</command> zasługuje na więcej uwagi. Od początku istnienia tego programu, był on projektowany do kontroli trafności i ilości pytań wyświetlanych użytkownikowi oraz sposobu w jaki są pokazywane. Z tego powodu jego konfiguracja wymaga nadania minimalnego priorytetu dla pytań; tylko pytania powyżej minimalnego priorytetu są wyświetlane. <command>debconf</command> zakłada domyślną odpowiedź (zdefiniowaną przez opiekuna pakietu) dla pytań, które zdecydował pominąć.
			</para>
			 <para>
				Kolejnym znaczącym elementem konfiguracji jest sposób komunikacji używany przez interfejs. Jeżeli zostanie wybrany <literal>noninteractive</literal>, to wszystkie interakcje z użytkownikiem zostaną wyłączone. W przypadku, gdy pakiet będzie próbował wyświetlić informację, zostanie ona wysłana do administratora w wiadomości e-mail.
			</para>
			 <para>
				W celu zmiany konfiguracji <command>debconf</command> należy użyć narzędzia <command>dpkg-reconfigure</command> z pakietu <emphasis role="pkg">debconf</emphasis>; omawianą komendą jest <command>dpkg-reconfigure debconf</command>. Warto zauważyć, że w razie potrzeby wartości konfiguracyjne mogą być tymczasowo nadpisane zmiennymi środowiskowymi (przykładowo <varname>DEBIAN_FRONTEND</varname> kontroluje interfejs, co zostało opisane na stronach pomocy <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry>).
			</para>

		</section>
		 <section>
			<title>Obsługa Interakcji Linii Komend</title>
			 <para>
				Ostatnim źródłem interakcji, najtrudniejszym do ominięcia, są skrypty konfiguracyjne uruchamiane przez <command>dpkg</command>. Niestety nie mają one standardowego rozwiązania, a żadna odpowiedź nie jest znacząco lepsza niż inne.
			</para>
			 <para>
				The common approach is to suppress the standard input by redirecting the empty content of <filename>/dev/null</filename> into it with <command><replaceable>command</replaceable> &lt;/dev/null</command>, or to feed it with an endless stream of newlines. None of these methods is 100 % reliable, but they generally lead to the default answers being used, since most scripts consider a lack of reply as an acceptance of the default value.
			</para>

		</section>
		 <section>
			<title>Cudowne Połączenie</title>
			 <para>
				Poprzez połączenie wcześniej wspomnianych elementów możliwe jest zaprojektowanie małego, dosyć niezawodnego skryptu do wykonywania automatycznych uaktualnień.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>Skrypt uaktualniający bez interakcji</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade
</programlisting>

			</example>
			 <sidebar> <title><emphasis>W PRAKTYCE</emphasis> Przypadek Falcot Corp</title>
			 <para>
				Komputery w Falcot składają się na zróżnicowany system, zawierający maszyny przeznaczone do różnych zadań. Z tego powodu dla każdego komputera administratorzy muszą wybrać najbardziej odpowiednie rozwiązanie.
			</para>
			 <para>
				In practice, the servers running <emphasis role="distribution">Jessie</emphasis> are configured with the “miracle combination” above, and are kept up to date automatically. Only the most critical servers (the firewalls, for instances) are set up with <command>apticron</command>, so that upgrades always happen under the supervision of an administrator.
			</para>
			 <para>
				The office workstations in the administrative services also run <emphasis role="distribution">Jessie</emphasis>, but they are equipped with <emphasis role="pkg">gnome-packagekit</emphasis>, so that users trigger the upgrades themselves. The rationale for this decision is that if upgrades happen without an explicit action, the behavior of the computer might change unexpectedly, which could cause confusion for the main users.
			</para>
			 <para>
				W laboratorium, kilka komputerów używających <emphasis role="distribution">Testowego</emphasis> — w celu wykorzystania najnowszych wersji oprogramowania — również nie jest uaktualnianych automatycznie. Administratorzy jedynie konfigurują APTa do przygotowania uaktualnienia, ale bez instalacji; kiedy już zdecydują o uaktualnieniu (ręcznym), uciążliwa część odświeżania list pakietów i pobierania pakietów zostanie pominięta, a administratorzy mogą w pełni skupić się na produktywnym działaniu.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>Wyszukiwanie Pakietów</title>
		 <para>
			W ogromnej, ciągle rosnącej bazie oprogramowania dla Debiana powstaje pewien paradoks: Debian zazwyczaj ma narzędzie do wykonywania większości zadań, ale to narzędzie może być bardzo trudne do znalezienia pośród niezliczonej liczby innych pakietów. Przez długi czas brak odpowiednich sposobów wyszukiwania (i znajdowania) właściwego narzędzia był problemem. Na szczęście ten problem został niemal w całości rozwiązany.
		</para>
		 <para>
			The most trivial search possible is looking up an exact package name. If <command>apt show <replaceable>package</replaceable></command> returns a result, then the package exists. Unfortunately, this requires knowing or even guessing the package name, which isn't always possible.
		</para>
		 <sidebar> <title><emphasis>WSKAZÓWKA</emphasis> Konwencje nazewnictwa pakietów</title>
		 <para>
			Niektóre kategorie pakietów są nazywane według konwencjonalnego schematu nazewnictwa; znajomość tego schematu pozwala czasami zgadnąć dokładne nazwy pakietów. Na przykład dla modułów Perla konwencja mówi, że moduł nazwany <literal>XML::Handler::Composer</literal> powinien być spakowany jako <emphasis role="pkg">libxml-handler-composer-perl</emphasis>. Biblioteka umożliwiająca używanie systemu <command>gconf</command> z poziomu Pythona jest spakowana jako <emphasis role="pkg">python-gconf</emphasis>. Niestety niemożliwe jest sformułowanie w pełni ogólnego schematu nazewnictwa pakietów, nawet jeżeli opiekunowie pakietów zazwyczaj starają się postępować zgodnie z wyborem deweloperów.
		</para>
		 </sidebar> <para>
			Nieco bardziej pomyślnym szablonem wyszukiwania jest przeszukiwanie zwykłego tekstu w nazwach pakietów, ale jest ono bardzo ograniczone. Często można znaleźć wyniki przeszukując opisy pakietów: poza nazwą każdy pakiet ma bowiem mniej lub bardziej szczegółowy opis, wyszukiwanie słów kluczowych w tych opisach zazwyczaj również będzie użyteczne. <command>apt-cache</command> oraz <command>axi-cache</command> są typowymi narzędziami do tego typu szukania; na przykład <command>apt-cache search video</command> zwróci listę wszystkich pakietów, których nazwy lub opisy zawierają słowo kluczowe "video".
		</para>
		 <para>
			Do bardziej złożonych wyszukiwań potrzebne jest potężniejsze narzędzie takie jak <command>aptitude</command>. <command>aptitude</command> pozwala na wyszukiwanie według wyrażeń logicznych bazujących na polach metadanych pakietu. Na przykład następująca komenda wyszukuje pakiety, których nazwy zawierają <literal>kino</literal>, opisy zawierają <literal>video</literal>, a imię opiekuna zawiera <literal>paul</literal>:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
State: not installed
Version: 1.3.4-2.1+b1
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8,472 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=
         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=
         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=
         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,
         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=
         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),
         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=
         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),
         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),
         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),
         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,
         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus
Replaces: kino-dvtitler, kino-timfx, kinoplus
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV
 camcorders. This program uses many keyboard commands for fast navigating and
 editing inside the movie. 
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly
 distributed as separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/

Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::x11, role::program, scope::application, suite::gnome,
      uitoolkit::gtk, use::editing, use::learning, works-with::video,
      x11::application
</screen>
		 <para>
			Wspomniane wyszukiwanie zwraca jeden pakiet, <emphasis role="pkg">kino</emphasis>, który spełnia wszystkie trzy kryteria.
		</para>
		 <para>
			Niemniej jednak wyszukiwania zawierające wiele kryteriów są dość niewygodne, co tłumaczy fakt dlaczego nie są tak często używane. Niejako w odpowiedzi został stworzony nowy system znakowania, który dostarcza nowy sposób wyszukiwania. Pakietom przypisane są znaczniki o charakterze tematycznym oraz inne powiązania, znane jako "klasyfikacja fasetowa". W przypadku powyższego <emphasis role="pkg">kino</emphasis>, znaczniki pakietu wskazują, że Kino jest oprogramowaniem bazującym na Gnome, pracuje z danymi wideo, a jego głównym celem jest montaż.
		</para>
		 <para>
			Przeglądanie taj klasyfikacji może pomóc w znalezieniu pakietu, który spełnia wymagane potrzeby; nawet jeżeli zwróci (znaczną) ilość wyników, pozostała część wyszukiwania może być wykonana ręcznie. W tym celu można użyć wzorca wyszukiwania <literal>~G</literal> w <command>aptitude</command>, ale prawdopodobnie łatwiej jest przejrzeć stronę, na której odbywa się zarządzanie znacznikami: <ulink type="block" url="http://debtags.alioth.debian.org/cloud/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>tag</primary>
		</indexterm>
		 <para>
			Wybranie znaczników <literal>works-with::video</literal> i <literal>use::editing</literal> zwraca ledwie kilka pakietów, włączając w to edytory wideo <emphasis role="pkg">kino</emphasis> i <emphasis role="pkg">pitivi</emphasis>. Ta klasyfikacja z upływem czasu ma być coraz częściej stosowana, a zarządcy pakietów będą dostarczać bazujące na niej, efektywne interfejsy wyszukiwania.
		</para>
		 <para>
			Podsumowując, najlepsze narzędzie do wykonania zadania zależy od stopnia komplikacji danego wyszukiwania:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<command>apt-cache</command> pozwala tylko na wyszukiwanie w nazwach pakietów i ich opisach, co jest bardzo wygodne w przypadku szukania konkretnego pakietu, do którego pasuje kilka słów kluczowych;
				</para>

			</listitem>
			 <listitem>
				<para>
					kiedy kryteria wyszukiwania obejmują również powiązania pomiędzy pakietami lub inne metadane takie jak imię opiekuna, <command>synaptic</command> będzie bardziej użyteczny;
				</para>

			</listitem>
			 <listitem>
				<para>
					kiedy potrzebne jest wyszukiwanie oparte o znaczniki, dobrym narzędziem jest <command>packagesearch</command>, interfejs graficzny przeznaczony do przeszukiwania dostępnych pakietów według kilku kryteriów (włączając nazwy plików, które zawierają). W przypadku użycia linii komend najlepiej będzie pasował <command>axi-cache</command>.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					wreszcie, kiedy wyszukiwanie obejmuje wyrażenia złożone z operacjami logicznymi, najlepszym wyborem będzie <command>aptitude</command> i jego wzorce wyszukiwania, które są potężnym narzędziem, choć nie zawsze jasnym w użyciu; działa zarówno w trybie linii komend i interaktywnym.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

