<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="fa-IR">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>نگهداری و بروزرسانی: ابزار APT</title>
	 <highlights> <para>
		آنچه دبیان را بین مدیرسیستم‌ها محبوب ساخته سادگی نصب نرم‌افزار و بروزرسانی کل سیستم است. این برتری اعظم بیشتر به خاطر برنامه <emphasis>APT</emphasis> است، که مدیرسیستم‌های شرکت فالکات با اشتیاق آن را مطالعه کرده‌اند.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm> APT مخفف Advanced Package Tool است. چیزی که آن را “پیشرفته” ساخته، رویکرد آن به بسته‌ها است. تنها به بررسی انفرادی آن‌ها نمی‌پردازد بلکه مجموعه‌ای از بسته‌ها را در کنار یکدیگر و به عنوان یک سیستم در نظر می‌گیرد و بهترین حالت‌های ممکن در پیکربندی آنان را انتخاب می‌کند (با توجه به وابستگی‌ها).
	</para>
	 <sidebar> <title><emphasis>واژگان</emphasis> مبدا بسته و بسته سورس</title>
	 <para>
		کلمه <emphasis>source</emphasis> ممکن است نامفهوم باشد. یک بسته سورس - بسته‌ای که سورس کد یک برنامه را به همراه دارد - نباید با مبدا یک بسته اشتباه گرفته شود - یک مخزن نرم‌افزار (وبسایت، سرور فایل، سی‌دی‌-رام، دایرکتوری شخصی، ...) که شامل بسته‌ها می‌شود.
	</para>
	 </sidebar> <para>
		APT نیازمند دریافت “فهرستی از منابع بسته‌ها” است: فایل <filename>/etc/apt/sources.list</filename> فهرستی از مخازن (یا “منابع”) که شامل بسته‌های دبیان می‌شود را نمایش می‌دهد. APT به وارد کردن فهرست بسته‌ها با توجه به این منابع می‌پردازد. این عملیات با دانلود <filename>Packages.xz</filename> یا فایلی مشابه با الگوریتم فشرده‌سازی دیگری محقق می‌شود (مانند <filename>Packages.gz</filename> یا <filename>.bz2</filename> در مورد منبع بسته‌های باینری) و <filename>Sources.xz</filename> (در مورد منبع بسته‌های سورس) و به تحلیل محتویات آن می‌پردازد. زمانی که کپی قدیمی از این فایل‌ها موجود باشد، APT تنها با دانلود اختلاف بین آن‌ها، عملیات بروزرسانی را انجام می‌دهد (<xref linkend="sidebar.apt-pdiff" /> را مشاهده کنید).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>بازگشت به مقدمات</emphasis> فشرده‌سازی <command>gzip</command>، <command>bzip2</command>، <command>LZMA</command> و <command>XZ</command></title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		پسوند <filename>.gz</filename> اشاره با فایلی فشرده‌شده با ابزار <command>gzip</command> دارد. <command>gzip</command> ابزار سنتی اما سریع و کاربردی یونیکس برای فشرده‌سازی فایل‌ها است. ابزار جدیدتر با اینکه فشرده‌سازی بهتری انجام می‌دهند اما منابع بیشتری (زمان محاسباتی و حافظه) نیز لازم دارند. از میان آن‌ها، به ترتیب زمانی، می‌توان به <command>bzip2</command> (فایل‌هایی با پسوند <filename>.bz2</filename> ایجاد می‌کند)، <command>lzma</command> (فایل‌هایی با پسوند <filename>.lzma</filename> ایجاد می‌کند) و <command>xz</command> (فایل‌هایی با پسوند <filename>.xz</filename> ایجاد می‌کند) اشاره کرد.
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>پر کردن فایل <filename>sources.list</filename></title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>سورس</primary>
			<secondary>از بسته‌های</secondary>
		</indexterm>
		 <indexterm>
			<primary>بسته</primary>
			<secondary>از سورس</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>شیوه استفاده</title>
			 <para>
				هر خط فعال از فایل ... شامل توضیحات یک منبع می‌باشد، که از ۳ قسمت جدا شده با فاصله تشکیل شده است.
			</para>
			 <para>
				فیلد اول نوع منبع را مشخص می‌کند:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						“<literal>deb</literal>” برای بسته‌های باینری،
					</para>

				</listitem>
				 <listitem>
					<para>
						“<literal>deb-src</literal>” برای بسته‌های سورس.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				The second field gives the base URL of the source (combined with the filenames present in the <filename>Packages.xz</filename> files, it must give a full and valid URL): this can consist in a Debian mirror or in any other package archive set up by a third party. The URL can start with <literal>file://</literal> to indicate a local source installed in the system's file hierarchy, with <literal>http://</literal> to indicate a source accessible from a web server, or with <literal>ftp://</literal> for a source available on an FTP server. The URL can also start with <literal>cdrom:</literal> for CD-ROM/DVD-ROM/Blu-ray disc based installations, although this is less frequent, since network-based installation methods are more and more common.
			</para>
			 <para>
				شیوه نگارش فیلد آخر به ساختار مخزن بستگی دارد. در ساده‌ترین حالت‌ها، می‌تواند یک دایرکتوری (به همراه کاراکتر /) از منبع مورد نظر تعریف کنید (که با استفاده از “<filename>./</filename>” صورت می‌گیرد که نشان‌دهنده غیاب یک دایرکتوری فرزند است - بسته‌ها به صورت مستقیم در نشانی قرار می‌گیرند). اما در معمول‌ترین حالت، مخازن به مانند یک سرور دبیان ساختاردهی می‌شوند، با توزیع‌های جداگانه که هر یک اجزای مربوط به خود را خواهند داشت. در اینگونه موارد، توزیع مورد نظر را نامگذاری کنید (با استفاده از نام مخصوص به آن - قسمت <xref linkend="sidebar.bruce-perens" /> را مشاهده کنید - یا با استفاده از وضعیت آن مانند <literal>stable</literal>، <literal>testing</literal> و <literal>unstable</literal>) سپس اجرا (قسمت‌هایی) که قصد فعال شدنشان را دارید (انتخاب از میان <literal>main</literal>، <literal>contrib</literal> و <literal>non-free</literal> در یک سرور پشتیبان دبیان).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>واژگان</emphasis> بایگانی‌های <literal>main</literal>، <literal>contrib</literal> و <literal>non-free</literal></title>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>main</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>contrib</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>section</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>non-free</literal>, section</primary>
			</indexterm>
			 <indexterm>
				<primary>اجزای (یک مخزن)</primary>
			</indexterm>
			 <para>
				دبیان از سه قمست برای تفاوت گذاشتن بین مجوزهای نرم‌افزاری هر بسته استفاده می‌کند. <literal>Main</literal> شامل بسته‌هایی است که به صورت کامل با رویکرد نرم‌افزار آزاد دبیان همخوانی داشته باشند.
			</para>
			 <para>
				بایگانی <literal>non-free</literal> متفاوت با سایر قسمت‌ها است چرا که شامل نرم‌افزارهایی است که (به صورت کامل) با این قواعد سازگاری ندارند اما بدون هیچ محدودیتی می‌توانند توزیع شوند. این بایگانی، که به صورت رسمی جزو دبیان نیست، سرویسی برای کاربرانی است که به این نرم‌افزارها نیاز دازند - اگرچه دبیان همیشه توصیه می‌کند که استفاده از نرم‌افزار آزاد در اولویت قرار گیرد. وجود این قسمت است که برای ریچارد استالمن مشکل به حساب می‌آید و بنیاد نرم‌افزار آزاد به همین دلیل دبیان را به کاربران توصیه نمی‌کند.
			</para>
			 <para>
				<literal>Contrib</literal> (مشارکت‌های دیگران) مجموعه‌ای از نرم‌افزارهای اوپن سورس است که بدون استفاده از برخی عناصر غیر-آزاد نمی‌توانند اجرا شوند. این عناصر می‌توانند شامل نرم‌افزارهای موجود در قسمت <literal>non-free</literal> باشند، یا فایل‌های غیر-آزاد مانند ROM، BIOS کنسول‌ها و موارد مشابه. <literal>Contrib</literal> همچنین شامل نرم‌افزارهای آزادی می‌شود که فرآیند کامپایل آن‌ها نیازمند عناصر انحصاری و غیر-آزاد می‌گردد. برای نمونه، در رابطه با بسته اداری OpenOffice.org در ابتدا نیاز بود که از یک محیط انحصاری و غیر-آزاد جاوا استفاده شود.
			</para>
			 </sidebar> <sidebar> <title><emphasis>نکته</emphasis> فایل‌های <filename>/etc/apt/sources.list.d/*.list</filename></title>
			 <para>
				اگر به تعداد زیادی منابع بسته‌ها اشاره می‌شود، بهتر است که آن‌ها را در فایل‌های جداگانه قرار داد. هر قسمت باید در <filename>/etc/apt/sources.list.d/<replaceable>filename</replaceable>.list</filename> ذخیره گردد (<xref linkend="sidebar.directory.d" /> را مشاهده کنید).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				مدخل‌های موجود در <literal>cdrom</literal> به تشریح CD/DVD-ROM می‌پردازد. بر خلاف سایر مدخل‌ها، یک CD-ROM همیشه در دسترس نیست چرا که باید داخل درایو قرار گیرد و در هر لحظه بیشتر از یک دیسک در آن جای نمی‌گیرد. به همین دلایل، این منابع به شیوه گوناگونی مدیریت می‌شوند و نیاز دارند که با برنامه <command>apt-cdrom</command> اضافه گردند که معمولا از پارامتر <literal>add</literal> آن استفاده می‌شود. در این مورد، برنامه به دنبال دیسک موجود می‌گردد و از فایل <filename>Packages</filename> آن استفاده می‌کند. برنامه با استفاده از فایل‌های موجود، پایگاه داده درونی خود را بروزرسانی می‌کند (این عملیات با استفاده از دستور <command>apt update</command> انجام می‌شود). از این لحظه به بعد، APT هر زمان به برنامه‌ای از این فهرست نیاز داشته باشد دیسک مورد نظر آن را درخواست می‌کند.
			</para>

		</section>
		 <section>
			<title>مخازنی برای کاربران <emphasis role="distribution">Stable</emphasis></title>
			 <para>
				در اینجا نمونه‌ای از فایل <filename>sources.list</filename> برای سیستمی که نسخه <emphasis role="distribution">Stable</emphasis> دبیان را اجرا می‌کند، ارائه می‌شود:
			</para>
			 <example id="example.stable-sources-list">
				<title>فایل <filename>/etc/apt/sources.list</filename> برای کاربران نسخه پایدار دبیان</title>
				 
<programlisting># Security updates
deb http://security.debian.org/ stretch/updates main contrib non-free
deb-src http://security.debian.org/ stretch/updates main contrib non-free

## Debian mirror

# Base repository
deb http://deb.debian.org/debian stretch main contrib non-free
deb-src http://deb.debian.org/debian stretch main contrib non-free

# Stable updates
deb http://deb.debian.org/debian stretch-updates main contrib non-free
deb-src http://deb.debian.org/debian stretch-updates main contrib non-free

# Stable backports
deb http://deb.debian.org/debian stretch-backports main contrib non-free
deb-src http://deb.debian.org/debian stretch-backports main contrib non-free
</programlisting>

			</example>
			 <para>
				This file lists all sources of packages associated with the <emphasis role="distribution">Stretch</emphasis> version of Debian (the current <emphasis role="distribution">Stable</emphasis> as of this writing). We opted to name “stretch” explicitly instead of using the corresponding “stable“ alias (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) because we don't want to have the underlying distribution changed outside of our control when the next stable release comes out.
			</para>
			 <para>
				اکثر بسته‌ها از یک “مخزن پایه” می‌آیند که به ندرت بروزرسانی می‌شود (در حدود هر ۲ ماه یکبار به منظور یک “point release”). سایر مخازن نقش جانبی دارند (شامل تمام بسته‌ها نیستند) و از بروزرسانی‌ها میزبانی می‌کنند (بسته‌هایی با نسخه جدیدتر) که توسط APT نصب می‌شوند. قسمت‌های پیش‌رو به بررسی هدف و قانون هر یک از این مخازن می‌پردازد.
			</para>
			 <para>
				زمانی که نسخه مورد نظر از یک بسته در چند مخزن وجود دارد، اولین مخزنی که در فایل <filename>sources.list</filename> فهرست شده باشد مورد استفاده قرار می‌گیرد. به همین دلیل، منابع غیر-رسمی همیشه در انتهای فایل قرار می‌گیرند.
			</para>
			 <para>
				به عنوان یک نکته جانبی، اکثر مطالبی که در این قسمت درباره <emphasis role="distribution">Stable</emphasis> گفته شد به طور یکسان در مورد <emphasis role="distribution">OldStable</emphasis> نیز صدق می‌کند چرا که آن تنها یک نسخه قدیمی‌تر از <emphasis role="distribution">Stable</emphasis> است که به صورت موازی مدیریت می‌شود.
			</para>
			 <section id="sect.security-updates">
				<title>بروزرسانی‌های امنیتی</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>بروزرسانی‌های امنیتی</primary>
				</indexterm>
				 <indexterm>
					<primary>بروزرسانی</primary>
					<secondary>بروزرسانی‌های امنیتی</secondary>
				</indexterm>
				 <para>
					بروزرسانی‌های امنیتی به طور معمول در سرورهای mirror دبیان قرار نمی‌گیرند بلکه در <literal>security.debian.org</literal> (بر روی تعداد کوچکی از ماشین‌ها که توسط <link linkend="dsa-team">مدیر سیستم‌های دبیان</link> مدیریت می‌شوند). این بایگانی شامل بروزرسانی‌های امنیتی (توسط تیم امنیت دبیان یا مدیر بسته‌های مختلف) برای توزیع <emphasis role="distribution">Stable</emphasis> است.
				</para>
				 <para>
					این سرور همچنین می‌تواند از بروزرسانی‌های امنیتی برای <emphasis role="distribution">Testing</emphasis> میزبانی کند که این امر خیلی اتفاق نمی‌افتد چرا که این بروزرسانی‌ها اغلب از طریق توزیع <emphasis role="distribution">Unstable</emphasis> برای <emphasis role="distribution">Testing</emphasis> ارائه می‌شوند.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>بروزرسانی‌های پایدار</title>
				 <indexterm>
					<primary>بروزرسانی‌های پایدار</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>بروزرسانی</primary>
					<secondary>بروزرسانی‌های پایدار</secondary>
				</indexterm>
				 <para>
					این دسته به اهمیت بروزرسانی‌های امنیتی نیست اما باید قبل از انتشار نسخه پایدار بعدی، در اختیار کاربران قرار گیرند.
				</para>
				 <para>
					این مخزن به طور معمول شامل اصلاحاتی برای باگ‌های حاد است که نمی‌توانند قبل از انتشار یا بروزرسانی بعدی بازنگری گردند. بر اساس اولویت باگ، این مخزن می‌تواند شامل بسته‌هایی شود که طی مرور زمان کامل می‌گردند ... مانند قواعد شناسایی اسپم در <emphasis role="pkg">spamassassin</emphasis>، پایگاه‌داده ویروس در <emphasis role="pkg">clamav</emphasis> یا قواعد منطقه‌زمانی در <emphasis role="pkg">tzdata</emphasis> .
				</para>
				 <para>
					در عمل، این مخزن زیرمجموعه‌ای از <literal>proposed-updates</literal> است، که به دقت توسط مدیران انتشار نسخه‌های پایدار انتخاب می‌شوند.
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>بروزرسانی‌های پیشنهادی</title>
				 <indexterm>
					<primary><literal>proposed-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-proposed-updates</literal></primary>
				</indexterm>
				 <para>
					زمانی که توزیع <emphasis role="distribution">Stable</emphasis> منتشر شود، در بازه زمانی ۲ ماه یکبار بروزرسانی می‌گردد. مخزن <literal>proposed-updates</literal> جایی است که برای برورزسانی‌های مورد انتظار در دوره بعدی تحت نظر مدیران انتشار پایدار تصمیمات مورد نظر گرفته می‌شود.
				</para>
				 <para>
					بروزرسانی‌های امنیتی و پایدار که در قسمت‌های قبل به آن‌ها پرداخته شد، در این مخزن قرار می‌گیرند اما مدیران بسته می‌توانند به رفع باگ‌های مهم که نیاز به انتشار بعدی ندارند، بپردازند.
				</para>
				 <para>
					Anyone can use this repository to test those updates before their official publication. The extract below uses the <literal>stretch-proposed-updates</literal> alias which is both more explicit and more consistent since <literal>jessie-proposed-updates</literal> also exists (for the <emphasis role="distribution">Oldstable</emphasis> updates):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian stretch-proposed-updates main contrib non-free
</programlisting>

			</section>
			 <section id="sect.backports">
				<title>بروزرسانی‌های پایدار قدیمی</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>بروزرسانی</primary>
					<secondary>بروزرسانی‌های پایدار قدیمی</secondary>
				</indexterm>
				 <para>
					مخزن <literal>stable-backports</literal> از “package backports” میزبانی می‌کند. این عبارت به بسته‌ای از یک نرم‌افزار اشاره می‌کند که برای یک توزیع قدیمی‌تر مجدد کامپایل شده است، به صورت عمومی برای <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					زمانی که از عمر یک توزیع می‌گذرد، تعداد زیادی از پروژه‌های نرم‌افزاری بروزرسانی‌هایی اعمال می‌کنند که در مخزن <emphasis role="distribution">Stable</emphasis> قرار ندارد (که اغلب برای مشکلات بحرانی در نظر گرفته شده است، مانند مشکلات امنیتی). از آنجایی که توزیع‌های <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis> از ریسک بالاتری برای میزبانی از بسته‌ها برخوردارند، مدیران بسته گاهی اوقات اقدام به کامپایل مجدد نرم‌افزار خود در مخزن <emphasis role="distribution">Stable</emphasis> می‌کنند، که در رابطه با تعداد مشخصی از بسته‌ها پایدار خواهد بود. <ulink type="block" url="http://backports.debian.org" />
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 <para>
					Backport‌‌های موجود در <literal>stable-backports</literal> همیشه از بسته‌های موجود در توزیع <emphasis role="distribution">Testing</emphasis> ایجاد می‌شوند. این فرآیند تضمین می‌کند که تمام backport‌های نصب‌شده زمانی که نسخه پایدار بعدی از دبیان آماده باشد، قابل بروزرسانی خواهند داشت.
				</para>
				 <para>
					با اینکه این مخزن نسخه‌های جدیدی از بسته‌های را فراهم می‌آورد، APT به صورت خودکار آن‌ها را نصب نمی‌کند مگر اینکه با دستورات صریح مواجه گردد (مگر اینکه در رابطه با یک نسخه از backport مورد نظر این کار را از قبل انجام داده باشید):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/stretch-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t stretch-backports <replaceable>package</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>مخازنی برای کاربران <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis></title>
			 <para>
				در اینجا فایل استاندارد <filename>sources.list</filename> برای سیستمی که از نسخه‌های <emphasis role="distribution">Testing</emphasis> یا <emphasis role="distribution">Unstable</emphasis> دبیان استفاده می‌کند قرار دارد:
			</para>
			 <example id="example.testing-sources-list">
				<title><filename>/etc/apt/sources.list</filename> برای کاربران دبیان در نسخه‌های <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
				 
<programlisting>
# Unstable
deb http://deb.debian.org/debian unstable main contrib non-free
deb-src http://deb.debian.org/debian unstable main contrib non-free

# Testing
deb http://deb.debian.org/debian testing main contrib non-free
deb-src http://deb.debian.org/debian testing main contrib non-free

# Stable
deb http://deb.debian.org/debian stable main contrib non-free
deb-src http://deb.debian.org/debian stable main contrib non-free

# Security updates
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free
</programlisting>

			</example>
			 <para>
				با <filename>sources.list</filename> فایل APT از طریق <emphasis role="distribution">Unstable</emphasis> به نصب بسته‌ها می‌پردازد. اگر گزینه جالبی نیست می‌توانید از تنظیم <literal>APT::Default-Release</literal> استفاده کنید (قسمت <xref linkend="sect.apt-upgrade" /> را مشاهده کنید) به منظور اینکه APT را وادار سازید از یک توزیع دیگر بسته‌هایش را دریافت کند (که در این مورد معمولا شامل <emphasis role="distribution">Testing</emphasis> می‌شود)
			</para>
			 <para>
				دلایل خوبی وجود دارد که تمام آن مخازن را وارد کنید با اینکه تنها وجود یکی کافی است. کاربران <emphasis role="distribution">Testing</emphasis> در زمان بروز باگ در نرم‌افزارهای این مخزن، می‌توانند یکی از بسته‌های اصلاح شده در <emphasis role="distribution">Unstable</emphasis> را انتخاب کنند. از طرف دیگر، کاربران <emphasis role="distribution">Unstable</emphasis> هر زمان بخوانند امکان بازگشت به بسته موجود در مخزن <emphasis role="distribution">Testing</emphasis> را خواهند داشت.
			</para>
			 <para>
				وجود <emphasis role="distribution">Stable</emphasis> از اهمیت بالاتری برخوردار است چرا که امکان استفاده از بسته‌هایی که طی فرآیند توسعه دیگر ادامه داده نشده‌اند را فراه می‌آورد. همچنین به شما تضمین می‌کند که همیشه آخرین بروزرسانی‌های مربوط به بسته‌ها را از آخرین انتشار رسمی دریافت خواهید کرد.
			</para>
			 <section>
				<title>مخزن <emphasis role="distribution">Experimental</emphasis></title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					بایگانی بسته‌های <emphasis role="distribution">Experimental</emphasis> در تمام سرورهای دبیان موجود است و شامل بسته‌هایی می‌شود که در <emphasis role="distribution">Unstable</emphasis> به دلیل ماهیت ناپایدار خود قرار ندارند - معمولا نسخه‌های اولیه نرم‌افزار مانند آلفا، بتا و ... هستند. همچنین بسته‌ای که مشکلات زیادی را بوجود آورد به این مخزن منتقل خواهد شد. مدیر بسته در این زمان با کمک کاربران پیشرفته که قادر به شناسایی مشکلات حاد هستند می‌تواند آن‌ها را برطرف کند. پس از این مرحله، بسته به <emphasis role="distribution">Unstable</emphasis> منتقل می‌شود، جایی که در دسترس کاربران بیشتری قرار خواهد گرفت.
				</para>
				 <para>
					<emphasis role="distribution">Experimental</emphasis> معمولا توسط کاربرانی استفاده می‌شود که از خراب کردن سیستم و تعمیر مجدد آن بیمی ندارند. این توزیع بیشتر به منظور آزمایشی بودن یک بسته برای رفع نیازهای جدید استفاده می‌شود. این دقیقا همان رویکردی است که دبیان نسبت به آن دارد، به صورتی که اضافه کردن آن در فایل <filename>sources.list</filename> منجر به استفاده گسترده از بسته‌های موجود در آن نخواهد شد.
				</para>
				 <informalexample> 
<programlisting>deb http://deb.debian.org/debian experimental main contrib non-free
</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Using Alternate Mirrors</title>
			 <indexterm>
				<primary><literal>deb.debian.org</literal></primary>
			</indexterm>
			 <para>
				The <filename>sources.list</filename> examples in this chapter refer to package repositories hosted on <literal>deb.debian.og</literal>. Those URLs will redirect you to servers which are close to you and which are managed by Content Delivery Networks (<acronym>CDN</acronym>) whose main role is to store multiple copies of the files across the world to deliver them as fast as possible to users. The CDN companies that Debian is working with are Debian partners who are offering their services freely to Debian. While none of those servers are under direct control of Debian, the fact that the whole archive is sealed by GPG signatures makes it a non-issue.
			</para>
			 <indexterm>
				<primary>mirror list</primary>
			</indexterm>
			 <indexterm>
				<primary>list of mirrors</primary>
			</indexterm>
			 <para>
				Picky users who are not satisfied with the performance of <literal>deb.debian.org</literal> can try to find a better mirror in the official mirror list: <ulink type="block" url="https://www.debian.org/mirror/list" />
			</para>
			 <para>
				But when you don't know which mirror is best for you, this list is of not much use. Fortunately for you, Debian maintains DNS entries of the form <literal>ftp.<replaceable>country-code</replaceable>.debian.org</literal> (e.g. <literal>ftp.us.debian.org</literal> for the USA, <literal>ftp.fr.debian.org</literal> for France, etc.) which are covering many countries and which are pointing to one (or more) of the best mirrors available within that country.
			</para>
			 <indexterm>
				<primary><literal>httpredir.debian.org</literal></primary>
			</indexterm>
			 <para>
				As an alternative to <literal>deb.debian.org</literal>, there used to be <literal>httpredir.debian.org</literal>. This service would identify a mirror close to you (among the list of official mirrors, using GeoIP mainly) and would redirect APT's requests to that mirror. This service has been deprecated due to reliability concerns and now <literal>httpredir.debian.org</literal> provides the same CDN-based service as <literal>deb.debian.org</literal>.
			</para>

		</section>
		 <section>
			<title>منابع غیر-رسمی: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				تعداد بسیار زیادی از بسته‌های دبیان به صورت غیر-رسمی از طرف کاربران پیشرفته و برنامه‌نویس وجود دارند که به صورت آزاد در اختیار همگان قرار گرفته است، حتی توسعه‌دهندگان دبیان که نسخه‌های آزمایشی از بسته‌های خود را به صورت آنلاین منتشر می‌کنند (اوبونتو با استفاده از سرویس Personal Package Archive یا بایگانی بسته‌های شخصی به توسعه این بسته‌ها کمک بسیاری کرده است).
			</para>
			 <para>
				وبسایت <literal>mentors.debian.net</literal> جالب توجه است (با اینکه تنها شامل بسته‌های سورس می‌شود) از آنجا که شامل بسته‌هایی می‌شود که داوطلبان بدون درخواست از کانال رسمی دبیان، آن‌ها را منتشر کرده‌اند. این بسته‌ها بدون هیچ تضمینی از کارکردشان به صورت آزاد منتشر شده‌اند؛ پس قبل از اینکه در محیط عملیاتی از آن‌ها استفاده کنید، نسبت به جامعیت و درست بودنشان اطمینان حاصل کنید.
			</para>
			 <sidebar> <title><emphasis>جامعه‌کاربری</emphasis> وبسایت <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				دامنه <emphasis>debian.net</emphasis> یک منبع رسمی از پروژه دبیان به حساب نمی‌آید. هر توسعه‌دهنده دبیان می‌تواند از آن به نفع خود استفاده کند. این وبسایت‌ها می‌توانند شامل خدمات غیر-رسمی باشند که در ماشین‌هایی میزبانی می‌گردند که جزء پروژه رسمی دبیان و توسعه‌دهندگان آن قرار ندارند یا حتی نمونه‌هایی که برای انتقال به <emphasis>debian.org</emphasis> در نظر گرفته‌اند. دو دلیل می‌تواند بیانگر این باشد که چرا برخی از این نمونه‌ها در همان وبسایت <emphasis>debian.net</emphasis> باقیمانده‌اند. یا هیچ فردی اقدام به انتقال رسمی آن‌ها به <emphasis>debian.org</emphasis> نکرده است یا سرویس مورد نظر ارزش رسمی شدن را نداشته است.
			</para>
			 </sidebar> <para>
				نصب یک بسته به معنی اهدا حقوق اولیه به خالق آن است، چرا که آن‌ها هستند تصمیم می‌گیرند چه محتوایی از طریق اسکریپت‌های راه‌انداز هنگام نصب قرار بگیرد. بسته‌های رسمی دبیان توسط داوطلبانی ایجاد شده‌اند که همکاری متقابل و بازنگری در بسته را داشته‌اند و کسانی که می‌توانند بسته‌ها را به صورتی تنظیم کنند تا جامعیت آن‌ها حفظ گردد.
			</para>
			 <para>
				در حالت کلی، در مورد بسته‌هایی که منبع ناشناس دارند و در مخازن رسمی دبیان نیستند محتاط باشید: درجه اعتماد خود نسبت به خالق بسته را سنجیده و جامعیت آن را مد نظر قرار دهید. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>یک قدم فراتر</emphasis> نسخه‌های قدیمی بسته: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				سرویس <literal>snapshot.debian.org</literal>، که در آوریل ۲۰۱۰ معرفی شد، می‌تواند به منظور “بازگشت به عقب در زمان” و یافتن نسخه قدیمی‌تر از یک بسته مورد استفاده قرار گیرد. برای نمونه می‌تواند دریافت که یک بسته در کدام زمان دچار پسرفت شده و به آنجا بازگشت تا از مشکل بوجود آمده را بتوان حل کرد.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>پروکسی کش برای بسته‌های دبیان</title>
			 <indexterm>
				<primary>proxy cache</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				زمانی که یک شبکه کامل از ماشین‌ها تنظیم شده‌اند تا از یک سرور بسته‌های بروزشده را دریافت کنند، هر مدیرسیستمی می‌داند که استفاده از یک کش محلی-شبکه بسیار مفید خواهد بود (قسمت <xref linkend="sidebar.cache" /> را مشاهده کنید)
			</para>
			 <para>
				می‌توانید APT را به گونه‌ای تنظیم کنید که مانند یک پروکسی "استاندارد" عمل کند (به <xref linkend="sect.apt-config" /> برای قسمت APT و به <xref linkend="sect.http-ftp-proxy" /> برای قسمت پروکسی مراجعه کنید)، اما اکوسیتم دبیان گزینه بهتری برای حل این مشکل نیز دارد. نرم‌افزار منحصربفردی که در این قسمت معرفی می‌شود چیزی بیشتر از یک پروکسی کش ساده است چرا که می‌تواند ساختار مخازن APT را درک کند (برای نمونه، می‌داند چه زمان فایل‌های انفرادی عمرشان به پایان می‌رسد، و زمان مربوط به آن را به صورت خودکار تنظیم کند)
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> و <filename>sources.list</filename> مانند کش سرورهای معمولی کار می‌کنند. فایل <emphasis role="pkg">apt-cacher-ng</emphasis> از APT بدون تغییر باقی می‌ماند، اما APT از آن‌ها به عنوان پروکسی برای درخواست‌های ارسالی خود استفاده می‌کند.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				از طرف دیگر، <emphasis role="pkg">approx</emphasis> به مانند یک سرور HTTP عمل می‌کند که فهرستی از مخازن راه‌دور را “بازتاب” می‌دهد. نگاشت بین دایرکتوری‌های سطح-اول و نشانی‌های راه‌دور درون فایل <filename>/etc/approx/approx.conf</filename> ذخیره می‌شود.
			</para>
			 
<programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://deb.debian.org/debian
security http://security.debian.org
</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> runs by default on port 9999 via a systemd socket and requires the users to adjust their <filename>sources.list</filename> file to point to the approx server:
			</para>
			 
<programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security stretch/updates main contrib non-free
deb http://apt.falcot.com:9999/debian stretch main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title><command>aptitude</command>, دستورات <command>apt-get</command> و <command>apt</command></title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT یک پروژه گسترده است، که اهداف اولیه آن شامل یک رابط گرافیکی نیز می‌شود. شامل کتابخانه‌ای است که عملکردهای پایه‌ای نرم‌افزار را دربر دارد و <command>apt-get</command> اولین پیاده‌سازی آن به حساب می‌آید -- بر اساس خط فرمان -- که درون خود پروژه توسعه یافته است. <command>apt</command> دومین پیاده‌سازی رابط خط فرمان APT به حساب می‌آید که بسیاری از مشکلات موجود در <command>apt-get</command> را بر طرف کرده است.
		</para>
		 <para>
			Both tools are built on top of the same library and are thus very close but the default behaviour of <command>apt</command> has been improved for interactive use and to actually do what most users expect. APT's developers reserve the right to change the public interface of this tool to further improve it. On the opposite, the public interface of <command>apt-get</command> is well defined and will not change in any backwards incompatible way. It is thus the tool that you want to use when you need to script package installation requests.
		</para>
		 <para>
			تعداد بسیاری رابط‌های گرافیکی نیز به عنوان پروژه‌های بیرونی تعریف شده‌اند: <command>synaptic</command>، <command>aptitude</command> (که شامل هر دو محیط متنی و گرافیکی می‌شود -- حتی اگر کافی نباشد)، <command>wajig</command> و پروژه‌های دیگر. رایج‌ترین رابط کاربری <command>apt</command> است که در مثال‌های این قسمت از آن استفاده شده است. نکته اینکه <command>apt-get</command> و <command>aptitude</command> نحو خط فرمان تقریبا یکسانی دارند. زمانی که بین <command>apt</command>، <command>apt-get</command> و <command>aptitude</command> تفاوت عمده‌ای وجود داشته باشد، به آن‌ها اشاره خواهد شد.
		</para>
		 <section>
			<title>راه‌اندازی</title>
			 <para>
				به منظور انجام هر کاری با APT، ابتدا باید فهرست بسته‌های موجود در آن بروزرسانی گردد؛ که اینکار به سادگی از طریق <command>apt update</command> قابل انجام است. بر اساس سرعت اتصال شما، این عملیات ممکن است چند دقیقه زمان ببرد چرا که نیاز به دانلود تعداد مشخصی از فایل‌های <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename> دارد، فایل‌هایی که طی زمان توسعه دبیان بزرگ و بزرگ‌تر شده‌اند (حداقل ۱۰ مگابایت برای قسمت ...). البته، نصب از طریق CD-ROM نیاز به دانلود ندارد -- که در این مورد عملیات با سرعت بیشتری انجام می‌شود.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>نصب و حذف</title>
			 <indexterm>
				<primary>بسته</primary>
				<secondary>نصب</secondary>
			</indexterm>
			 <indexterm>
				<primary>بسته</primary>
				<secondary>حذف</secondary>
			</indexterm>
			 <indexterm>
				<primary>نصب</primary>
				<secondary>نصب بسته</secondary>
			</indexterm>
			 <indexterm>
				<primary>حذف یک بسته</primary>
			</indexterm>
			 <para>
				با استفاده از APT، بسته‌ها می‌توانند به راحتی از طریق <command>apt install <replaceable>package</replaceable></command> و <command>apt remove <replaceable>package</replaceable></command> نصب یا حذف گردند. در هر دو مورد، APT به صورت خودکار اقدام به بررسی وابستگی‌های مربوط به هر بسته می‌کند. فرمان <command>apt purge <replaceable>package</replaceable></command> یک حذف کامل را در پی خواهد داشت -- فایل‌های پیکربندی نیز حذف می‌گردند.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>نکته</emphasis> نصب مجموعه‌ی ثابتی از بسته‌ها در هر مربته</title>
			 <para>
				نصب تعداد مشخصی از بسته‌ها روی تمام رایانه‌ها ممکن است کار بسیار متداولی باشد که به راحتی قابل انجام است.
			</para>
			 <para>
				ابتدا، فهرست تمام بسته‌هایی که روی رایانه مبدا قرار دارند را جهت استفاده در سایر سیستم‌ها، رونوشت بگیرید.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				فایل <filename>pkg-list</filename> شامل تمام بسته‌های نصب شده است. سپس، فایل <filename>pkg-list</filename> را به رایانه‌هایی که قصد نصب بسته‌ها را دارید منتقل کنید. می‌توانید از این فرمان استفاده کنید:
			</para>
			 
<screen>## Update dpkg's database of known packages
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Update dpkg's selections
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Ask apt-get to install the selected packages
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				فرامین اولیه فهرستی از بسته‌های موجود در پایگاه‌داده dpkg را ثبت می‌کنند، سپس <command>dpkg --set-selections</command> مجموعه بسته‌هایی را که می‌خواهید نصب کنید بازیابی کرده، آنگاه فراخوانی <command>apt-get</command> منجر به نصب این بسته‌ها می‌گردد! <command>aptitude</command> این فرمان را شامل نمی‌شود.
			</para>
			 </sidebar> <sidebar> <title><emphasis>نکته</emphasis> نصب و حذف در یک زمان</title>
			 <para>
				این امکان وجود دارد که از <command>apt-get</command> (<command>apt</command> یا <command>aptitude</command>) بخواهیم که همزمان اقدام به نصب و حذف بسته‌ها کند که اینکار با اضافه‌کردن یک پسوند صورت می‌گیرد. با یک فرمان <command>apt install</command>، به نام هر بسته “<literal>-</literal>” را اضافه کنید تا حذف گردد. با یک فرمان <command>apt remove</command>، به نام هر بسته “<literal>+</literal>” را اضافه کنید تا نصب گردد.
			</para>
			 <para>
				مثال بعد دو شیوه گوناگون برای نصب <replaceable>package1</replaceable> و حذف <replaceable>package2</replaceable> را نمایش می‌دهد.
			</para>
			 
<screen># <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>
[...]</screen>
			 <para>
				اینکار می‌تواند برای خارج‌سازی بسته‌هایی که برای نصب درنظر گرفته شده‌اند نیز صورت پذیرد، برای نمونه بر اساس یک <literal>Recommends</literal>. به صورت کلی، مکانیزم درونی APT برای رفع وابستگی‌ها از این اطلاعات استفاده می‌کند تا راهکارهای جایگزین را معرفی کند.
			</para>
			 </sidebar> <sidebar> <title><emphasis>نکته</emphasis> <command>apt --reinstall</command> و <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>نصب مجدد</primary>
			</indexterm>
			 <para>
				سیستم ممکن است به دلیل حذف یا تغییر فایل‌های یک بسته، آسیب ببیند. ساده‌ترین راه برای بازیابی این فایل‌ها، نصب مجدد بسته مورد نظر است. متاسفانه، سیستم بسته‌بندی در می‌یابد که بسته مورد نظر موجود است و از نصب آن خودداری می‌کند؛ برای پیشگیری، از گزینه <literal>--reinstall</literal> برای فرمان‌های <command>apt</command> و <command>apt-get</command> استفاده کنید. فرمان پیش رو اقدام به نصب مجدد <emphasis role="pkg">postfix</emphasis> می‌کند حتی اگر موجود باشد:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				فرمان <command>aptitude</command> اما کفی متفاوت است، اما به همان نتایج قبلی با استفاده از <command>aptitude reinstall postfix</command> دست می‌یابد.
			</para>
			 <para>
				مشکل از <command>dpkg</command> آب نمی‌خورد، بلکه مدیر سیستم است که به ندرت از آن استفاده می‌کند.
			</para>
			 <para>
				مراقب باشید! استفاده از <command>apt --reinstall</command> برای بازیابی بسته‌هایی که حین بروز حمله دچار تغییر شده‌اند، به بازیابی صحیح سیستم منجر نمی‌شود. <xref linkend="sect.dealing-with-compromised-machine" /> به تشریح گام‌های مورد نیاز برای بازیابی یک سیستم نفوذ شده می‌پردازد.
			</para>
			 </sidebar> <para>
				اگر فایل <filename>sources.list</filename> به توزیع‌های مختلف اشاره کرده باشد، امکان درج نسخه برای بسته مورد نصب وجود دارد. یک نسخه خاص از بسته با استفاده از <command>apt install <replaceable>package</replaceable>=<replaceable>version</replaceable></command> می‌تواند درخواست شود اما نشان‌کردن توزیع مبدا آن ((<emphasis role="distribution">Stable</emphasis>، (<emphasis role="distribution">Testing</emphasis> یا (<emphasis role="distribution">Unstable</emphasis>) -- با استفاده از <command>apt install <replaceable>package</replaceable>/<replaceable>distribution</replaceable></command> -- معمولا مورد استفاده قرار می‌گیرد. با این فرمان، استفاده از یک نسخه قدیمی‌تر بسته ممکن می‌شود (اگر از عملکرد آن اطلاع داشته باشید)، در صورتی که منبع آن در فایل <filename>sources.list</filename> ذکر شده باشد. در غیر اینصورت، بایگانی <literal>snapshot.debian.org</literal> می‌تواند به کمک شما بیاید (قسمت <xref linkend="sidebar.snapshot.debian.org" /> را مشاهده کنید).
			</para>
			 <example>
				<title>نصب نسخه <emphasis role="distribution">unstable</emphasis> از بسته <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <para>
				If the package to install has been made available to you under the form of a simple <filename>.deb</filename> file without any associated package repository, it is still possible to use APT to install it together with its dependencies (provided that the dependencies are available in the configured repositories) with a simple command: <command>apt install ./<replaceable>path-to-the-package.deb</replaceable></command>. The leading <literal>./</literal> is important to make it clear that we are referring to a filename and not to the name of a package available in one of the repositories.
			</para>
			 <sidebar> <title><emphasis>مطالعه بیشتر</emphasis> کَش فایل‌های <filename>.deb</filename></title>
			 <para>
				APT keeps a copy of each downloaded <filename>.deb</filename> file in the directory <filename>/var/cache/apt/archives/</filename>. In case of frequent updates, this directory can quickly take a lot of disk space with several versions of each package; you should regularly sort through them. Two commands can be used: <command>apt-get clean</command> entirely empties the directory; <command>apt-get autoclean</command> only removes packages which can no longer be downloaded (because they have disappeared from the Debian mirror) and are therefore clearly useless (the configuration parameter <literal>APT::Clean-Installed</literal> can prevent the removal of <filename>.deb</filename> files that are currently installed).
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>بروزرسانی سیستم</title>
			 <indexterm>
				<primary>بروزرسانی</primary>
				<secondary>بروزرسانی سیستم</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				بروزرسانی‌های متداول توصیه می‌شوند، چرا که شامل آخرین اصلاحات امنیتی هستند. برای بروزرسانی سیستم، از <command>apt upgrade</command>، <command>apt-get upgrade</command> یا <command>aptitude safe-upgrade</command> استفاده کنید (البته پس از فراخوانی <command>apt update</command>). این فرمان به بسته‌های نصب شده نگاه می‌کند که بدون حذف بسته‌های دیگر قابلیت بروزرسانی داشته باشند. به عبارت دیگر، هدف دستیابی به کم‌هزینه‌ترین نوع بروزرسانی است. <command>apt-get</command> در مقایسه با <command>apt</command> و <command>aptitude</command> سخت‌گیری بیشتری دارد چرا که نسبت به بسته‌های جدید از خود مقاومت نشان می‌دهد.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>نکته</emphasis> بروزرسانی افزایشی</title>
			 <para>
				As we explained earlier, the aim of the <command>apt update</command> command is to download for each package source the corresponding <filename>Packages</filename> (or <filename>Sources</filename>) file. However, even after a <command>xz</command> compression, these files can remain rather large (the <filename>Packages.xz</filename> for the <foreignphrase>main</foreignphrase> section of <emphasis role="distribution">Stretch</emphasis> takes more than 6 MB). If you wish to upgrade regularly, these downloads can take up a lot of time.
			</para>
			 <para>
				برای سرعت بخشیدن به این فرآیند، APT می‌تواند فایل “diff” تغییرات نسبت به بروزرسانی قبلی را دانلود کند. برای دستیابی به این هدف، سرورهای رسمی دبیان فایل‌های مختلفی را به منظور نمایش اختلاف بین یک نسخه از فایل <filename>Packages</filename> و نسخه جاری توزیع می‌کنند. آن‌ها پس از بروزرسانی هر بایگانی تولید شده و به مدت یک هفته ذخیره می‌گردند. هر یک از این فایل‌های “diff” تنها شامل چند کیلوبایت از توزیع <emphasis role="distribution">Unstable</emphasis> هستند، به طوری که حجم داده دانلود شده توسط <command>apt update</command> به یک دهم کاهش یابد. برای توزیع‌هایی مانند <emphasis role="distribution">Stable</emphasis> یا <emphasis role="distribution">Testing</emphasis>، که تغییرات کمتری دارند، این صرفه‌جویی چشمگیرتر است.
			</para>
			 <para>
				اگرچه، گاهی اوقات لازم است محتوای کامل فایل <filename>Packages</filename> دانلود شود، به خصوص زمانی که از آخرین بروزرسانی زمان زیادی گذشته باشد یا مکانیزم بروزرسانی افزایشی دیگر کاربردی نداشته باشد. جالب است که اگر سرعت دسترس به شبکه بالا و سرعت پردازنده ماشین پایین باشد، چرا که زمان صرفه‌جویی شده در دانلود در مقایسه با زمان محاسبه نسخه جدید از فایل‌ها از بین می‌رود (شروع با نسخه‌های قدیمی‌تر و اعمال بروزرسانی‌های لازم). برای اینکار، می‌توانید از پارامتر پیکربندی <literal>Acquire::Pdiffs</literal> استفاده کرده و مقدار آن را <literal>false</literal> تنظیم کنید.
			</para>
			 </sidebar> <para>
				<command>apt</command> به صورت عمومی از آخرین نسخه موجود استفاده می‌کند (به جز بسته‌های موجود در <emphasis role="distribution">Experimental</emphasis> و <emphasis role="distribution">stable-backports</emphasis> که به صورت پیش‌فرض استفاده نمی‌شوند). اگر شما در فایل <filename>sources.list</filename> خود به <emphasis role="distribution">Testing</emphasis> یا <emphasis role="distribution">Unstable</emphasis> اشاره کرده باشید، <command>apt upgrade</command> اکثر سیستم <emphasis role="distribution">Stable</emphasis> شما را به <emphasis role="distribution">Testing</emphasis> تبدیل می‌کند یا حتی <emphasis role="distribution">Unstable</emphasis>، چیزی که شاید انتظارش را نداشته باشید.
			</para>
			 <para>
				برای اطلاع دادن به <command>apt</command> در جهت استفاده از یک توزیع خاص هنگام بروزرسانی، باید از گزینه <literal>-t</literal> یا <literal>--target-release</literal> به همراه نام توزیع مورد نظر خود استفاده کنید (برای نمونه: <command>apt -t stable upgrade</command>). برای پیشگیری از استفاده مجدد این گزینه در هر مرتبه فراخوانی <command>apt</command>، می‌توانید گزینه <literal>APT::Default-Release "stable";</literal> را در فایل <filename>/etc/apt/apt.conf.d/local</filename> وارد کنید.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				برای بروزرسانی‌های مهم‌تر، مانند تغییر از یک نسخه دبیان به دیگری، باید از <command>apt full-upgrade</command> استفاده کنید. با این فرمان، <command>apt</command> اقدام به بروزرسانی سیستم می‌کند حتی اگر لازم باشد برخی بسته‌ها را پاک کرده یا وابستگی‌های جدید را نصب کند. این فرمان همچنین از طرف کاربرانی که به صورت روزانه با توزیع <emphasis role="distribution">Unstable</emphasis> کار می‌کنند مورد استفاده قرار می‌گیرد. به قدری آسان است که حتی نیاز به توضیح نیز ندارد. اعتبار APT بر اساس این قابلیت فوق‌العاده است.
			</para>
			 <para>
				برخلاف <command>apt</command> و <command>aptitude</command>، فرمان <command>apt-get</command> اطلاعی از <command>full-upgrade</command> ندارد. در عوض، باید از فرمان <command>apt-get dist-upgrade</command> استفاده کنید، دستور تاریخی که <command>apt</command> و <command>aptitude</command> به منظور سهولت دسترسی کاربران در استفاده از آن، شناخته می‌شود.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>گزینه‌های پیکربندی</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>پیکربندی</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				علاوه بر گزینه‌های پیکربندی اشاره شده، امکان پیکربندی جلوه‌های مشخصی از APT با اضافه کردن دستورات در فایلی به مسیر <filename>/etc/apt/apt.conf.d/</filename> وجود دارد. برای نمونه، به یاد دارید که APT چگونه با <command>dpkg</command> اعلام می‌کرد که تداخل‌های بوجود آمده را توسط دستور <literal>DPkg::options { "--force-overwrite"; }</literal> در نظر نگیرد.
			</para>
			 <para>
				اگر وب تنها از طریق پراکسی قابل دسترسی است، یک خط مانند <literal>Acquire::http::proxy "http://<replaceable>yourproxy</replaceable>:3128"</literal> را اضافه کنید. برای پراکسی FTP، از <literal>Acquire::ftp::proxy "ftp://<replaceable>yourproxy</replaceable>"</literal> استفاده کنید. برای کشف گزینه‌های پیکربندی بیشتر، راهنمای <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> را با استفاده از دستور <command>man apt.conf</command> مطالعه کنید (برای جزئیات بیشتر درباره صفحات راهنما، <xref linkend="sect.manual-pages" /> را مشاهده کنید).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>بازگشت به مقدمات</emphasis> دایرکتوری‌هایی که به <filename>.d</filename> ختم می‌شوند</title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				دایرکتوری‌هایی با پسوند <filename>.d</filename> بیشتر و بیشتر مورد استفاده قرار می‌گیرند. هر دایرکتوری نشان‌دهنده یک فایل پیکربندی است که خود بین چند فایل کوچک‌تر تقسیم شده است. در اینجا، تمام فایل‌های موجود در <filename>/etc/apt/apt.conf.d/</filename> دستورالعمل‌هایی برای پیکربندیAPT هستند. APT آن‌ها را به ترتیب الفبایی مرتب می‌کند به صورتی که فایل آخر قابلیت ایجاد تغییرات نسبت به فایل اول را داشته باشد.
			</para>
			 <para>
				این ساختار، انعطاف بیشتری را برای مدیرسیستم و نگهدارنده بسته به وجود می‌آورد. در حقیقت، مدیرسیستم برای ایجاد تغییرات در پیکربندی نرم‌افزار تنها کافی است یک فایل جداگانه در دایرکتوری مربوط به آن قرار دهد بجای اینکه محتوای فایل موجود را دست بزند. نگهدارنده بسته نیز از رویکرد یکسانی برای برقراری تنظیمات در سایر نرم‌افزارها نسبت به بسته خود استفاده می‌کند. خط‌مشی دبیان صراحتاً از ویرایش فایل‌های پیکربندی نرم‌افزارهای دیگر جلوگیری به عمل می‌آورد -- تنها کاربران قادر به انجام آن هستند. به یاد داشته باشید که حین بروزرسانی یک بسته، زمانی که یک تغییر ایجاد می‌شود از کاربر پرسیده می‌شود که کدام فایل پیکربندی را می‌خواهد ذخیره کند. هر تغییر خارجی اعمال شده روی فایل، این درخواست را به همراه دارد، که منجر به اذیت‌شدن مدیرسیستم می‌گردد.
			</para>
			 <para>
				بدون یک دایرکتوری <filename>.d</filename>، برای یک بسته خارجی عملاً غیرممکن است که بدون تغییر در فایل پیکربندی یک نرم‌افزار دیگر، تغییرات خود را اعمال کند. در عوض باید کاربر را دعوت به انجام این تغییرات سازد با استفاده از عملیاتی که در فایل <filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename> مستند شده است.
			</para>
			 <para>
				با توجه به برنامه، دایرکتوری <filename>.d</filename> به طور مستقیم یا توسط یک اسکریپت خارجی مدیریت می‌شود که با قرار دادن تمام فایل‌های موجود در کنار هم، منجر به ایجاد فایل پیکربندی اصلی می‌گردد. اهمیت دارد که پس از تغییر در فایل‌های دایرکتوری، اسکریپت مورد نظر فراخوانی گردد تا همواره از آخرین تغییرات موجود در آن استفاده شود. به همین روش، عدم ایجاد تغییرات در فایل پیکربندی تولید شده نیز از اهمیت خاصی برخوردار است، چرا که تمام این تغییرات در اجرای بعدی اسکریپت از بین خواهد رفت. روش انتخابی (استفاده مستقیم از دایرکتوری<filename>.d</filename> یا فایلی که از سایر فایل‌های موجود در آن تولید می‌شود) با توجه به محدودیت‌های پیاده‌سازی دیکته می‌شود، اما در هر دو مورد خروجی کار در مقایسه با پیچیدگی انجام آن، ارزش خواهد داشت چرا که به انعطاف‌پذیری بیشتر ختم می‌شود. سرور ایمیل Exim 4 نمونه‌ای از شیوه تولید خودکار فایل پیکربندی است: می‌تواند از طریق چند فایل پیکربندی گردد (<filename>/etc/exim4/conf.d/*</filename>) که در نهایت توسط دستور <command>update-exim4.conf</command> به <filename>/var/lib/exim4/config.autogenerated</filename> تبدیل می‌شوند.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>مدیریت اولویت بسته‌ها</title>
			 <para>
				یکی از جلوه‌های مهم در پیکربندی APT مدیریت اولویت مربوط به هر بسته و منبع آن است. برای نمونه، ممکن است بخواهید یک توزیع را با استفاده از یک یا چند بسته جدید از <emphasis role="distribution">Testing</emphasis>، <emphasis role="distribution">Unstable</emphasis> یا <emphasis role="distribution">Experimental</emphasis> گسترش دهید. امکان اختصاص یک اولویت به هر بسته وجود دارد (همان بسته می‌تواند چندین اولویت مختلف با توجه به نسخه و توزیع فراهم‌کننده‌اش داشته باشد). این اولویت‌ها عملکرد APT را تحت تاثیر قرار می‌دهند: برای هر بسته، همیشه نسخه‌ای انتخاب می‌شود که بالاترین اولویت را داشته باشد (مگر حالتی که این نسخه قدیمی‌تر از نسخه نصبی باشد و اولویت آن کمتر از ۱۰۰۰ باشد).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>pinning, APT pinning</primary>
			</indexterm>
			 <indexterm>
				<primary>بسته</primary>
				<secondary>اولویت</secondary>
			</indexterm>
			 <indexterm>
				<primary>اولویت</primary>
				<secondary>اولویت بسته</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>تنظیمات</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>تنظیمات</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				APT چندین اولویت پیش‌فرض را تعریف می‌کند. هر بسته نصب شده اولویت ۱۰۰ دارد. یک نسخه نصب نشده اولویت ۵۰۰ دارد، اما می‌تواند به ۹۹۰ تغییر یابد اگر قسمتی از انتشار نهایی شود (که با استفاده از گزینه <literal>-t</literal> یا دستور پیکربندی <literal>APT::Default-Release</literal> تعریف می‌شود).
			</para>
			 <para>
				می‌توانید این اولویت‌ها را با اضافه‌کردن در فایل <filename>/etc/apt/preferences</filename> با استفاده از نام بسته، نسخه، منشا و اولویت مورد نظر تغییر دهید.
			</para>
			 <para>
				APT هیچگاه بسته قدیمی‌تر را نصب نمی‌کند (بسته‌ای که نسخه‌ی آن از نسخه نصب شده پایین‌تر باشد) مگر اولویت آن بالاتر از ۱۰۰۰ باشد. APT همیشه بالاترین اولویت موجود که با این محدودیت همخوانی داشته باشد را نصب می‌کند. اگر دو بسته اولویت یکسان داشته باشند، APT جدیدترین آن‌ها را نصب می‌کند (بسته‌ای که شماره نسخه بالاتری داشته باشد). اگر دو بسته با نسخه و اولویت یکسان اما محتوای متفاوت موجود باشند، APT نسخه‌ای که نصب نشده باشد را نصب می‌کند (این قانون به منظور پوشش بروزرسانی بسته بوجود آمده است بدون آنکه شماره نسخه آن افزایش یابد، که معمولا مورد نیاز است).
			</para>
			 <para>
				به عبارت بهتر، بسته‌ای که اولویت زیر ۰ داشته باشد هیچگاه نصب نخواهد شد. بسته‌ای که اولویت بین ۰ تا ۱۰۰ داشته باشد تنها زمانی نصب می‌شود که نسخه دیگری از آن در سیستم موجود نباشد. با اولویت بین ۱۰۰ تا ۵۰۰، بسته زمانی نصب می‌شود که نسخه جدیدتری از آن موجود نصب نبوده یا در توزیع دیگری موجود نباشد. بسته‌ای با اولویت بین ۵۰۱ و ۹۹۰ تنها زمانی نصب می‌شود که نسخه جدیدتری از آن در توزیع هدف موجود نباشد. با اولویت بین ۹۹۰ تا ۱۰۰۰، بسته نصب خواهد شد مگر اینکه نسخه نصب شده فعلی جدیدتر باشد. اولویت بالاتر از ۱۰۰۰ همیشه منجر به نصب بسته خواهد شد حتی اگر به APT اجبار شده باشد که به نسخه قدیمی‌تر بسته مهاجرت شود.
			</para>
			 <para>
				When APT checks <filename>/etc/apt/preferences</filename>, it first takes into account the most specific entries (often those specifying the concerned package), then the more generic ones (including for example all the packages of a distribution). If several generic entries exist, the first match is used. The available selection criteria include the package's name and the source providing it. Every package source is identified by the information contained in a <filename>Release</filename> file that APT downloads together with the <filename>Packages</filename> files. It specifies the origin (usually “Debian” for the packages of official mirrors, but it can also be a person's or an organization's name for third-party repositories). It also gives the name of the distribution (usually <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> or <emphasis role="distribution">Experimental</emphasis> for the standard distributions provided by Debian) together with its version (for example 9 for Debian <emphasis role="distribution">Stretch</emphasis>). Let's have a look at its syntax through some realistic case studies of this mechanism.
			</para>
			 <sidebar> <title><emphasis>مورد بخصوص</emphasis> اولویت <emphasis role="distribution">experimental</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				اگر به توزیع <emphasis role="distribution">Experimental</emphasis> در فایل <filename>sources.list</filename> اشاره کرده‌اید، بسته‌های موجود در آن هیچگاه نصب نمی‌شوند چرا که APT به آن‌ها اولویت ۱ را اختصاص می‌دهد. البته این مورد بخصوصی است، تا از اشتباهی نصب شدن بسته‌های توزیع <emphasis role="distribution">Experimental</emphasis> توسط کاربران جلوگیری بعمل آید. بسته‌ها تنها توسط دستور <command>aptitude install <replaceable>package</replaceable>/experimental</command> می‌توانند نصب گردند -- کاربرانی که از این دستور استفاده می‌کنند باید با خطرات آن آشنا باشند. البته این احتمال وجود دارد (اما توصیه <emphasis>نمی‌شود</emphasis>) که با بسته‌های موجود در <emphasis role="distribution">Experimental</emphasis> مانند سایر توزیع‌ها برخورد شود و اولویت ۵۰۰ را به آن‌ها بدهیم. اینکار با یک تنظیم خاص در فایل <filename>/etc/apt/preferences</filename> صورت می‌پذیرد.
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar> <para>
				بیایید فرض کنیم که شما تنها قصد استفاده از بسته‌های موجود در توزیع Stable دبیان را دارید. سایر بسته‌ها در این مورد نباید نصب شوند مگر به صورت خاص به آن‌ها اشاره گردد. برای اینکار می‌توانید مدخل زیر را در فایل <filename>/etc/apt/preferences</filename> ایجاد کنید.
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> نام توزیع انتخاب شده را مشخص می‌کند. <literal>o=Debian</literal> بسته‌ها را تنها نسبت به منبع آن‌ها که «دبیان» باشد محدود می‌سازد.
			</para>
			 <para>
				Let's now assume that you have a server with several local programs depending on the version 5.24 of Perl and that you want to ensure that upgrades will not install another version of it. You could use this entry:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.24*
Pin-Priority: 1001
</programlisting>
			 </informalexample> <para>
				مستندات مربوط به تنظیمات موجود در این فایل از طریق صفحه راهنما <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> قابل دسترسی هستند که با استفاده از دستور <command>man apt_preferences</command> می‌توانید آن را مشاهده کنید.
			</para>
			 <sidebar> <title><emphasis>نکته</emphasis> توضیحات موجود در <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Explanation</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin-Priority</literal></primary>
			</indexterm>
			 <para>
				شیوه رسمی برای قرار دادن توضیحات در فایل <filename>/etc/apt/preferences</filename> وجود ندارد، اما می‌توان با قرار دادن یک یا چند فیلد “<literal>Explanation</literal>” در ابتدای هر مدخل به این مهم دست یافت.
			</para>
			 <informalexample> 
<programlisting>Explanation: The package xserver-xorg-video-intel provided
Explanation: in experimental can be used safely
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>کار با چندین توزیع مختلف</title>
			 <para>
				<command>apt</command> ابزار حیرت‌انگیزی است، انتخاب بسته از سایر توزیع‌ها کاری وسوسه‌انگیز به حساب می‌آید. برای نمونه، پس از نصب یک سیستم <emphasis role="distribution">Stable</emphasis>، شاید بخواهید به آزمون یک بسته موجود در توزیع <emphasis role="distribution">Testing</emphasis> یا <emphasis role="distribution">Unstable</emphasis> بپردازید بدون آنکه از وضعیت فعلی سیستم فاصله بگیرید.
			</para>
			 <para>
				حتی اگر با ترکیب بسته‌ها از توزیع‌های مختلف مشکلی بوجود بیاید، <command>apt</command> این همزیستی را بخوبی مدیریت کرده و خطرات احتمالی را پوشش می‌دهد. بهترین شیوه عملکرد در این حالت، فهرست کردن تمام توزیع‌ها موجود در <filename>/etc/apt/sources.list</filename> است (برخی افراد تنها از سه توزیع استفاده می‌کنند، اما بدانید که <emphasis role="distribution">Unstable</emphasis> برای کاربران باتجربه‌تر در نظر گرفته شده است) و برای اشاره به توزیع اصلی می‌توان از پارامتر <literal>APT::Default-Release</literal> استفاده کرد (<xref linkend="sect.apt-upgrade" /> را مشاهده کنید).
			</para>
			 <para>
				فرض کنیم که <emphasis role="distribution">Stable</emphasis> توزیع اصلی شما باشد، اما هر دو توزیع <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis> نیز در فایل <filename>sources.list</filename> فهرست شده‌اند. در این مورد، برای نصب بسته‌ای از توزیع <emphasis role="distribution">Testing</emphasis> می‌توانید از دستور <command>apt install <replaceable>package</replaceable>/testing</command> استفاده کنید. اگر عملیات نصب با توجه به برطرف نشدن برخی وابستگی‌ها متوقف شود، با اضافه کردن پارامتر <literal>-t testing</literal> می‌توان به حل این مشکل در توزیع <emphasis role="distribution">Testing</emphasis> پرداخت. این شیوه در رابطه با <emphasis role="distribution">Unstable</emphasis> نیز صدق می‌کند.
			</para>
			 <para>
				در این وضعیت، عملیات بروزرسانی (<command>upgrade</command> و <command>full-upgrade</command>) توسط توزیع <emphasis role="distribution">Stable</emphasis> صورت می‌پذیرند به جز بسته‌هایی که به سایر توزیع‌ها بروزرسانی گردیده‌اند: آن‌ها عملیات بروزرسانی توزیع خود را پیگیری می‌کنند. ما به شرح این رفتار با توجه به اولویت‌های پیش‌فرض APT در ادامه خواهیم پرداخت. می‌توانید با استفاده از دستور <command>apt-cache policy</command> اولویت‌های موجود در سیستم را بررسی و تایید کنید (قسمت <xref linkend="sidebar.apt-cache-policy" /> را مشاهده کنید).
			</para>
			 <para>
				همه چیز حول این محور می‌چرخد که APT تنها بسته‌هایی را در نظر می‌گیرد که نسخه برابر یا بالاتر از آنچه در سیستم موجود می‌باشد را دارا باشند (با فرض اینکه در فایل <filename>/etc/apt/preferences</filename> اولویت بالاتر از ۱۰۰۰ برای هیچ بسته‌ای در نظر گرفته نشده است).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>نکته</emphasis> <command>apt-cache policy</command></title>
			 <para>
				برای درک بهتر مکانیزم این اولویت‌ها، می‌توان از <command>apt-cache policy</command> برای نمایش اولویت متناسب با هر منبع بسته استفاده کرد. همچنین می‌توانید از <command>apt-cache policy <replaceable>package</replaceable></command> برای نمایش اولویت مربوط به یک بسته خاص استفاده کنید.
			</para>
			 </sidebar> <para>
				فرض کنیم شما نسخه ۱ از بسته‌ موجود در <emphasis role="distribution">Stable</emphasis> را نصب کرده‌اید و نسخه‌های ۲ و ۳ همان بسته در <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis> قرار دارند. نسخه نصب شده اولویت ۱۰۰ دارد اما همان نسخه موجود در <emphasis role="distribution">Stable</emphasis> اولویت ۹۹۰ دارد (چرا که بخشی از توزیع هدف است). بسته‌های موجود در <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis> اولویت ۵۰۰ دارند (اولویت پیش‌فرض برای بسته‌های نصب نشده). برنده نسخه اول با اولویت ۹۹۰ است که در <emphasis role="distribution">Stable</emphasis> قرار دارد.
			</para>
			 <para>
				مثال دیگر، نسخه ۲ از بسته‌ای در <emphasis role="distribution">Testing</emphasis> است. نسخه ۱ در <emphasis role="distribution">Stable</emphasis> و نسخه ۳ در <emphasis role="distribution">Unstalbe</emphasis> قرار دارد. نسخه ۱ (با اولویت ۹۹۰ -- که کمتر از ۱۰۰۰ است) رد می‌شود چرا که از نسخه نصب شده پایین‌تر است. در اینجا تنها نسخه ۲و ۳ باقی می‌مانند که هر دو اولویت ۵۰۰ دارند. APT در مواجه با این انتخاب، بسته موجود در <emphasis role="distribution">Unstalbe</emphasis> را بر می‌گزیند. اگر نمی‌خواهید بسته‌ای که از <emphasis role="distribution">Testing</emphasis> نصب می‌شود به <emphasis role="distribution">Unstalbe</emphasis> مهاجرت کند، باید اولویتی پایین‌تر از ۵۰۰ (برای نمونه ۵۹۰) به بسته‌های موجود در <emphasis role="distribution">Unstalbe</emphasis> اختصاص دهید. برای اینکار، می‌توانید <filename>/etc/apt/preferences</filename> را ویرایش کنید:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>ردیابی خودکار بسته‌های نصب شده</title>
			 <para>
				یکی از عملکردهای ضروری <command>apt</command> قابلیت ردیابی بسته‌های نصب شده و وابستگی‌های مربوط به آنان است. این بسته‌ها اغلب “automatic” خوانده می‌شوند و معمولا شامل کتابخانه‌های جانبی هستند.
			</para>
			 <para>
				With this information, when packages are removed, the package managers can compute a list of automatic packages that are no longer needed (because there is no “manually installed” packages depending on them). <command>apt-get autoremove</command> or <command>apt autoremove</command> will get rid of those packages. <command>aptitude</command> does not have this command because it removes them automatically as soon as they are identified. In all cases, the tools display a clear message listing the affected packages.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				عادت خوبی است بسته‌هایی را که به صورت مستقیم با آن‌ها کار نداریم نشانه‌گذاری کنیم تا در زمان عدم نیاز به آن‌ها به سرعت قابل شناسایی باشند. <command>apt-mark auto <replaceable>package</replaceable></command> بسته مورد نظر را برچسب خودکار می‌زند در صورتی که <command>apt-mark manual <replaceable>package</replaceable></command> عمل مخالف آن را انجام می‌دهد. <command>aptitude markauto</command> و <command>aptitude unmarkauto</command> نیز به همین شیوه کار می‌کنند با این تفاوت که می‌توان چندین بسته را نشانه‌گذاری کرد. (<xref linkend="sect.aptitude" /> را مشاهده کنید). رابط تعاملی مبتنی بر کنسول <command>aptitude</command> این امکان را می‌دهد که “پرچم خودکار” موجود در بسته‌ها را به راحتی بررسی کرد.
			</para>
			 <indexterm>
				<primary><command>aptitude why</command></primary>
			</indexterm>
			 <para>
				شاید بخواهید بدانید که چرا بسته‌ای که برچسب خودکار خورده هنوز در سیستم موجود است. برای دستیابی به این اطلاعات از طریق خط فرمان، می‌توانید از <command>aptitude why <replaceable>package</replaceable></command> استفاده کنید (<command>apt</command> و (<command>apt-get</command> چنین قابلیت مشابهی ندارند):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>گزینه‌های جایگزین</emphasis> <command>deborphan</command> و <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				روزهایی که <command>apt</command>، <command>apt-get</command> و <command>aptitude</command> قادر به ردیابی بسته‌های خودکار نبودند، دو ابزار کاربردی برای ایجاد فهرستی از بسته‌های غیرضروری وجود داشت: <command>deborphan</command> و <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> ابتدایی‌ترین آن‌ها است. تنها به پویش محتوای <literal>libs</literal> و <literal>oldlibs</literal> می‌پردازد (در غیاب دستورالعمل‌های تکمیلی) تا بسته‌هایی را پیدا کند که نصب هستند و بسته دیگری به آن‌ها وابسته نیست. فهرست خروجی، می‌تواند پایه‌ای برای حذف بسته‌های غیرضروری بحساب آید.
			</para>
			 <para>
				<command>debfoster</command> اما رویکرد متفاوتی به قضیه دارد، که بی‌شباهت به APT نیست: ابتدا فهرستی از بسته‌ها که به صورت ضمنی نصب شده‌اند را بدست می‌آورد، و در هر فراخوانی بیاد می‌سپارد که کدام بسته‌ها ارجاع داده می‌شوند. اگر بسته‌های جدید در سیستم ظاهر شوند و اگر <command>debfoster</command> آن‌ها را به عنوان بسته‌های مورد نیاز نشناسد، آن‌ها بر روی صفحه نمایش به همراه فهرستی از وابستگی‌هایشان نمایش داده می‌شوند. برنامه آنگاه انتخابی را پیشنهاد می‌دهد: حذف بسته (همراه با وابستگی‌هایش)، نشانه‌گذاری به عنوان بسته مورد نیاز یا در نظر نگرفتن به صورت موقتی.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>دستور <command>apt-cache</command></title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>جستجو بسته</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>نمایش سرآیند</secondary>
		</indexterm>
		 <indexterm>
			<primary>جستجوی بسته‌ها</primary>
		</indexterm>
		 <indexterm>
			<primary>بسته</primary>
			<secondary>جستجو</secondary>
		</indexterm>
		 <para>
			دستور <command>apt-cache</command> می‌تواند تمام اطلاعات ذخیره شده در پایگاه‌داده داخلی APT را نمایش دهد. این اطلاعات مجموعه‌ای از فایل‌های بدست آمده از منابع مختلف در فایل <filename>sources.list</filename> که به صورت cache ذخیره می‌شوند. این عملیات هنگام اجرای <command>apt update</command> صورت می‌پذیرد.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>واژگان</emphasis> Cache</title>
		 <para>
			حافظه نهان، یک سیستم ذخیره‌سازی موقت به منظور افزایش سرعت دسترسی به داده است زمانی که شیوه معمول در دستیابی به داده هزینه‌بر باشد (از لحاظ عملکرد سیستم). این مفهوم می‌تواند در شرایط گوناگون و مقیاس‌های متفاوت مورد استفاده قرار گیرد، از هسته ریزپردازنده‌ها گرفته تا سیستم‌های ذخیره‌سازی با قابلیت بالا.
		</para>
		 <para>
			در مورد APT، فایل <filename>Packages</filename> اصلی روی سرورهای دبیان قرار دارد. با توجه به این موضوع، هنگامی که به دنبال بسته‌ای هستیم بسیار غیرموثر است که برای هر درخواست شبکه به سراغ این فایل در سرور اصلی برویم. به همین دلیل است که APT نسخه‌ای از این فایل را در مسیر <filename>/var/lib/apt/lists/</filename> نگهداری می‌کند و عملیات جستجو با توجه به این فایل محلی صورت می‌گیرد. به صورت مشابه، <filename>/var/cache/apt/archives/</filename> شامل cache بسته‌های دانلود شده است تا در صورت نیاز به نصب مجدد آنان، نیازی به دانلود مجدد نباشد.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			دستور <command>apt-cache</command> قادر به جستجو مبتنی بر کلمات کلیدی با استفاده از <command>apt-cache search <replaceable>keyword</replaceable></command> است. همچنین قادر به نمایش فایل سرآیند مربوط به هر بسته با استفاده از <command>apt-cache show <replaceable>package</replaceable></command> است. این دستور توضیحات مربوط به هر بسته، وابستگی‌های آن، نام نگهدارنده بسته و موارد دیگر را فراهم می‌آورد. نکته اینکه <command>apt search</command>، <command>apt show</command>، <command>aptitude search</command> و <command>aptitude search</command> به شیوه یکسانی عمل می‌کنند.
		</para>
		 <sidebar> <title><emphasis>گزینه‌های جایگزین</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> ابزاری بسیار ابتدایی است، که در حقیقیت <command>grep</command> را برای توضیحات مربوط به بسته‌ها پیاده‌سازی کرده است. زمانی که کلیدواژه‌های بسیاری در اختیارش بگذارید، ممکن است نتایج زیاد یا هیچ نتیجه‌ای برگرداند.
		</para>
		 <para>
			از طرف دیگر، <command>axi-cache search <replaceable>term</replaceable></command> نتایج بهتری به همراه می‌آورد، که بر اساس مرتبط بودن با عبارت مورد جستجو مرتب می‌گردند. این برنامه از موتور جستجو <emphasis>Xapian</emphasis> استفاده می‌کند و قسمتی از بسته <emphasis role="pkg">apt-xapian-index</emphasis> به حساب می‌آید که اقدام به فهرست‌سازی از تمام بسته‌های موجود می‌کند (مانند فایل‌های <filename>.desktop</filename> از تمام بسته‌های موجود در دبیان). این برنامه نسبت به برچسب‌ها آگاهی دارد (قسمت <xref linkend="sidebar.debtags" /> را مشاهده کنید) و نتایج را تنها در کسری از میلی‌ثانیه باز می‌گرداند.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
100 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
100% apt-utils - package management related utility programs
99% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
98% migemo - Transitional package for migemo
95% apt-file - search for files within Debian packages (command-line interface)
[...]
79% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
More terms: paquets debian pour debtags recherche gift gnuift
More tags: suite::debian works-with::software:package role::program admin::package-management interface::commandline scope::utility field::biology:bioinformatics
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			برخی ویژگی‌ها کمتر مورد استفاده قرار می‌گیرند. برای نمونه، <command>apt-cache policy</command> اولویت مربوط به منابع بسته‌ها و آن‌هایی که نصب شده است را نشان می‌دهد. نمونه دیگر <command>apt-cache dumpavail</command> است که فایل سرآیند مربوط به تمام نسخه‌های یک بسته را نمایش می‌دهد. <command>apt-cache pkgnames</command> نیز تمام بسته‌هایی که حداقل یک مرتبه در cache ذخیره شده‌اند را نمایش می‌دهد.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>رابط‌های کاربری: <command>aptitude</command> و <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>interfaces</secondary>
		</indexterm>
		 <para>
			APT یک برنامه ++C است که کد اصلی آن در کتابخانه اشتراکی <command>libapt-pkg</command> نگهداری می‌شود. با استفاده از یک کتابخانه اشتراکی می‌توان به راحتی برنامه‌هایی مانند رابط‌های کاربری گرافیکی را ایجاد کرد، چرا که کد داخل کتابخانه به راحتی می‌تواند مورد استفاده قرار گیرد. به لحاظ تاریخی، <command>apt-get</command> تنها به عنوان یک رابط کاربری امتحانی برای <command>libapt-pkg</command> نوشته شده بود اما موفقیت آن خلاف این حقیقت را نشان می‌دهد.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> یک برنامه تعاملی است که می‌تواند در محیط نیمه گرافیکی کنسول استفاده شود. شما می‌توانید فهرستی از بسته‌های نصب شده و موجود را جستجو، اطلاعات موجود را بررسی و بسته‌های مورد نیاز خود را نصب یا حذف کنید. برنامه به طور خاص برای استفاده مدیرسیستم‌ها طراحی شده است، به صورتی که رفتار پیش‌فرض به نسبت هوشمندانه‌تری در مقایسه با <command>apt-get</command> داشته و رابط کاربری آن نیز راحت‌تر باشد.
			</para>
			 <figure>
				<title>مدیر بسته <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				When it starts, <command>aptitude</command> shows a list of packages sorted by state (installed, non-installed, or installed but not available on the mirrors — other sections display tasks, virtual packages, and new packages that appeared recently on mirrors). To facilitate thematic browsing, other views are available. In all cases, <command>aptitude</command> displays a list combining categories and packages on the screen. Categories are organized through a tree structure, whose branches can respectively be unfolded or closed with the <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> and <keycombo><keycap>]</keycap></keycombo> keys. <keycombo><keycap>+</keycap></keycombo> should be used to mark a package for installation, <keycombo><keycap>-</keycap></keycombo> to mark it for removal and <keycombo><keycap>_</keycap></keycombo> to purge it (note that these keys can also be used for categories, in which case the corresponding actions will be applied to all the packages of the category). <keycombo><keycap>u</keycap></keycombo> updates the lists of available packages and <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> prepares a global system upgrade. <keycombo><keycap>g</keycap></keycombo> switches to a summary view of the requested changes (and typing <keycombo><keycap>g</keycap></keycombo> again will apply the changes), and <keycombo><keycap>q</keycap></keycombo> quits the current view. If you are in the initial view, this will effectively close <command>aptitude</command>.
			</para>
			 <sidebar> <title><emphasis>مستندات</emphasis> <command>aptitude</command></title>
			 <para>
				این قسمت به بررسی جزییات استفاده از <command>aptitude</command> نمی‌پردازد، بلکه بسته حیاتی را برای این محیط معرفی می‌کند. <command>aptitude</command> به خوبی مستندسازی شده است و توصیه می‌کنیم راهنمای اصلی آن که در بسته <emphasis role="pkg">aptitude-doc-en</emphasis> قرار دارد را مطالعه کنید (<filename>/usr/share/doc/aptitude/html/en/index.html</filename> را مشاهده کنید).
			</para>
			 </sidebar> <para>
				برای جستجوی یک بسته می‌توانید کلید <keycombo><keycap>/</keycap></keycombo> را فشار دهید و عبارت مورد نظر را وارد کنید. این الگو نام بسته را مد نظر قرار می‌دهد اما می‌تواند شامل توضیحات (اگر همراه با <literal>~d</literal> باشد)، یا قسمت آن نیز شود (با <literal>~s</literal>) یا به سایر ویژگی‌های موجود در مستندات. همان الگو می‌تواند برای فیلتر کردن بسته‌های نمایش داده شده نیز استفاده گردد: کلید <keycombo><keycap>l</keycap></keycombo> را فشار دهید (مانند <foreignphrase>limit</foreignphrase>) و الگو را وارد کنید.
			</para>
			 <para>
				مدیریت “automatic flag” بسته‌های دبیان (<xref linkend="sect.automatic-tracking" /> را مشاهده کنید) در <command>aptitude</command> کار بسیار ساده‌ای است. با مرور بسته‌های نصب شده این امکان وجود دارد که آن‌ها را با استفاده از <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> به عنوان بسته خودکار نشانه‌گذاری کرده یا با کلید <keycombo><keycap>m</keycap></keycombo> این نشانه‌گذاری را حذف کنیم. “بسته‌های خودکار” با حرف “A” نمایش داده می‌شوند. این قابلیت، همچنین روشی ساده را برای بسته‌های نصب شده روی ماشین در نظر می‌گیرد، بدون تمام کتابخانه‌ها و وابستگی‌هایی که به آن‌ها اهمیت نمی‌دهید. الگوی مرتبطی که قبل از این با استفاده از <keycombo><keycap>l</keycap></keycombo> ممکن بود حال با ترکیب <literal>~i!~M</literal> وجود دارد. معنی آن این است که می‌خواهید بسته‌های نصب‌شده‌ای (<literal>~i</literal>) را ببینید که به عنوان بسته خودکار نشانه‌گذاری نشده‌اند (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>ابزار</emphasis> استفاده از <command>aptitude</command> در رابط خط-فرمان</title>
			 <para>
				اکثر ویژگی‌های <command>aptitude</command> از طریق خط-فرمان نیز قابل دسترسی هستند. این مجموعه دستورات برای کاربران <command>apt-get</command> و <command>apt-cache</command> آشنا به نظر می‌رسند.
			</para>
			 <para>
				ویژگی‌های پیشرفته <command>aptitude</command> نیز از طریق خط-فرمان قابل دسترسی هستند. می‌توانید از همان الگوی جستجو بسته در نسخه تعاملی برنامه استفاده کنید. برای نمونه، اگر می‌خواهید فهرست “بسته‌های نصب‌شده محلی” را پاکسازی کنید و می‌دانید که هیچ کدام از این بسته‌های نصب شده محلی وابستگی خاصی به کتابخانه‌ها یا Perl نداشته، می‌توانید تمام این بسته‌ها را با یک دستور به عنوان بسته خودکار نشانه‌گذاری کنید:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				در اینجا می‌توانید به قدرت الگوی جستجو در سیستم <command>aptitude</command> پی ببرید، که به انتخاب سریع تمام بسته‌های موجود در قسمت‌های <literal>libs</literal> و <literal>perl</literal> می‌پردازد.
			</para>
			 <para>
				آگاه باشید، اگر برخی بسته‌ها به عنوان خودکار برچسب خورده باشند و هیچ بسته دیگری به آن‌ها وابسته نباشد، بلافاصله از سیستم حذف می‌گردند (پس از درخواست تایید).
			</para>
			 </sidebar> <section>
				<title>مدیریت توصیه‌ها، پیشنهادها و وظایف</title>
				 <para>
					Another interesting feature of <command>aptitude</command> is the fact that it respects recommendations between packages while still giving users the choice not to install them on a case by case basis. For example, the <emphasis role="pkg">gnome</emphasis> package recommends <emphasis role="pkg">brasero</emphasis> (among others). When you select the former for installation, the latter will also be selected (and marked as automatic if not already installed on the system). Typing <keycombo><keycap>g</keycap></keycombo> will make it obvious: <emphasis role="pkg">brasero</emphasis> appears on the summary screen of pending actions in the list of packages installed automatically to satisfy dependencies. However, you can decide not to install it by deselecting it before confirming the operations.
				</para>
				 <para>
					نکته اینکه قابلیت ردیابی این توصیه‌ها برای عملیات بروزرسانی موجود نیست. برای نمونه، اگر نسخه جدیدی از <emphasis role="pkg">gnome</emphasis> بسته‌ای را توصیه کند که قبل از این توصیه نشده بود، بسته برای نصب نشانه‌گذاری نخواهد شد. اگرچه، در صفحه بروزرسانی نمایش داده می‌شود تا مدیرسیستم بتواند آن را نصب کند.
				</para>
				 <para>
					Suggestions between packages are also taken into account, but in a manner adapted to their specific status. For example, since <emphasis role="pkg">gnome</emphasis> suggests <emphasis role="pkg">empathy</emphasis>, the latter will be displayed on the summary screen of pending actions (in the section of packages suggested by other packages). This way, it is visible and the administrator can decide whether to take the suggestion into account or not. Since it is only a suggestion and not a dependency or a recommendation, the package will not be selected automatically — its selection requires a manual intervention from the user (thus, the package will not be marked as automatic).
				</para>
				 <para>
					به شیوه مشابه، به یاد دارید که <command>aptitude</command> از مفهوم وظیفه استفاده هوشمندانه‌ای می‌کند. از آنجایی که وظایف به صورت طبقه‌بندی شده در صفحه بسته‌های موجود نمایش می‌یابند، می‌توانید یک وظیفه کامل را برای نصب یا خذف علامت‌گذاری کرده یا فهرستی از بسته‌های مشخص در یک طبقه‌بندی را انتخاب کنید.
				</para>

			</section>
			 <section>
				<title>الگوریتم‌های بهتر</title>
				 <para>
					برای نتیجه‌گیری در این قسمت، یادآوری می‌کنیم که <command>aptitude</command> در مقایسه با <command>apt-get</command> از الگوریتم‌های بهتری برای حل مشکل در شرایط دشوار بهره می‌برد. زمانی که مجموعه دستوراتی انتخاب می‌شوند و این دستورات به ناپایدار شدن سیستم منجر می‌گردند، <command>aptitude</command> سناریوهای مختلفی را در نظر گرفته و آن‌ها را به ترتیب اولویت ارتباط، نمایش می‌دهد. اگرچه، این الگوریتم‌ها هیچگاه کامل نیستند. خوشبختانه این امکان وجود دارد که عملیات مورد نیاز را به صورت دستی فراخوانی کرد. زمانی که این عملیات دستی دچار مشکل گردند، قسمت بالایی صفحه تعدادی از بسته‌های “broken” را نمایش می‌دهد (که می‌توانید با فشار دادن کلید <keycombo><keycap>b</keycap></keycombo> آن‌ها را مشاهده کنید). در اینجا امکان ایجاد راه حل به صورت دستی برای این بسته‌ها وجود دارد. به طور مشخص، می‌توانید با فشردن کلید <keycombo><keycap>Enter</keycap></keycombo> بین نسخه‌های مختلف از آن بسته حرکت کنید. اگر انتخاب یکی از این نسخه‌ها مشکل را حل کرد، نباید از آن چشم‌پوشی کنید. زمانی که تعداد بسته‌های “broken” به صفر رسیدند، می‌توانید به صفحه خلاصه وضعیت رفته و عملیات را از سر گیرید.
				</para>
				 <sidebar> <title><emphasis>یادآوری</emphasis> ثبت عملیات <command>aptitude</command></title>
				 <para>
					مانند <command>dpkg</command>، <command>aptitude</command> نیز کلیه عملیات انجام گرفته را در فایل لاگ (<filename>/var/log/aptitude</filename>) خود ذخیره می‌کند. اگرچه، چون دو دستور به شیوه‌های مختلفی عمل می‌کنند نباید انتظار نتایج یکسان در فایل‌های لاگ را داشته باشید. <command>dpkg</command> تمام عملیات اجرا شده روی بسته را گام به گام ثبت می‌کند در صورتی که <command>aptitude</command> دید کلی‌تری از سیستم در این رابطه ارائه می‌دهد مانند بروزرسانی کل سیستم.
				</para>
				 <para>
					آگاه باشید، که این فایل‌لاگ تنها خلاصه‌ای از عملیات اجرا شده توسط <command>aptitude</command> را ذخیره می‌کند. اگر سایر رابط‌های کاربری (یا حتی خود <command>dpkg</command>) مورد استفاده قرار گیرند، آنگاه لاگ <command>aptitude</command> تنها به خلاصه‌ای از این عملیات اشاره می‌کند، پس نمی‌توانید روی آن برای دسترسی به تاریخچه کلی در سیستم اعتماد کنید.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> یک مدیر بسته گرافیکی برای دبیان است که بر اساس رابط گرافیکی +GTK طراحی شده است. تمام فیلترهای مورد استفاده در آن، امکان دسترسی سریع به بسته‌های موجود، نصب‌شده، قابل بروزرسانی، منسوخ‌شده و سایر گزینه‌ها را به کاربر می‌دهد. اگر در میان این فهرست‌ها جستجو کنید، می‌توانید عملیات مربوط به هر بسته را انتخاب کرده (نصب، بروزرسانی، حذف و حذف کامل)؛ این عملیات اما بلافاصله صورت نمی‌پذیرند، اما در یک فهرست وظیفه قرار می‌گیرند. تنها با یک کلیک می‌توان عملیات مورد نظر را تایید و انجام داد.
			</para>
			 <figure>
				<title>مدیر بسته <command>synaptic</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>بررسی صحت بسته‌ها</title>
		 <indexterm>
			<primary>بسته</primary>
			<secondary>بررسی صحت</secondary>
		</indexterm>
		 <indexterm>
			<primary>بسته</primary>
			<secondary>مُهر</secondary>
		</indexterm>
		 <indexterm>
			<primary>بسته</primary>
			<secondary>امضا</secondary>
		</indexterm>
		 <indexterm>
			<primary>امضا</primary>
			<secondary>امضا بسته</secondary>
		</indexterm>
		 <indexterm>
			<primary>اعتبارسنجی</primary>
			<secondary>اعتبارسنجی بسته</secondary>
		</indexterm>
		 <para>
			امنیت برای مدیرسیستم‌های شرکت فالکات اهمیت بسیاری دارد. به همین دلیل، آن‌ها باید اطمینان حاصل کنند که بسته‌های دریافتی از سرورهای دبیان در میان راه تغییر نمی‌کنند. یک خرابکار رایانه‌ای می‌تواند با قرار دادن کد مخرب در این بسته‌ها اعتبارشان را از بین ببرد. چنین بسته‌ای، در صورت نصب، آنطور که خرابکار طراحی‌اش کرده باشد کار می‌کند، برای نمونه درج گذرواژه‌ها یا اطلاعات حساس کاربر. برای دوری از این خطرات، دبیان از یک مهر و موم خاص -- در زمان نصب -- استفاده می‌کند که اطمینان می‌دهد بسته از منبع رسمی آن آمده و در میانه راه تغییر نکرده است.
		</para>
		 <para>
			این مُهر به همراه مجموعه‌ای از روش‌های رمزنگاری و امضای دیجیتال کار می‌کند. فایل امضا شده فایل <filename>Release</filename> است، که از طرف سرور اصلی دبیان ارائه می‌شود. این فایل شامل فهرستی از فایل‌های <filename>Packages</filename> است (که شامل حالت فشرده آن مانند <filename>Packages.gz</filename> و <filename>Packages.xz</filename> و نسخه افزایشی هستند) به همراه کدهای MD5، SHA1 و SHA256 که نشان می‌دهند فایل تغییر نکرده است. این فایل‌های <filename>Packages</filename> شامل فهرستی از بسته‌های دبیان موجود روی سرورهای اصلی هستند، به همراه hash آن‌ها که نشان دهنده عدم تغییر این فایل‌ها می‌باشند.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			APT needs a set of trusted GnuPG public keys to verify signatures in the <filename>Release.gpg</filename> files available on the mirrors. It gets them from files in <filename>/etc/apt/trusted.gpg.d/</filename> and from the <filename>/etc/apt/trusted.gpg</filename> keyring (managed by the <command>apt-key</command> command). The official Debian keys are provided and kept up-to-date by the <emphasis role="pkg">debian-archive-keyring</emphasis> package which puts them in <filename>/etc/apt/trusted.gpg.d/</filename>. Note however that the first installation of this particular package requires caution: even if the package is signed like any other, the signature cannot be verified externally. Cautious administrators should therefore check the fingerprints of imported keys before trusting them to install new packages:
		</para>
		 
<screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   rsa4096 2014-11-21 [SC] [expires: 2022-11-19]
      126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid           [ unknown] Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   rsa4096 2014-11-21 [SC] [expires: 2022-11-19]
      D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid           [ unknown] Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   rsa4096 2013-08-17 [SC] [expires: 2021-08-15]
      75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid           [ unknown] Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-stretch-automatic.gpg
-----------------------------------------------------------
pub   rsa4096 2017-05-22 [SC] [expires: 2025-05-20]
      E1CF 20DD FFE4 B89E 8026  58F1 E0B1 1894 F66A EC98
uid           [ unknown] Debian Archive Automatic Signing Key (9/stretch) &lt;ftpmaster@debian.org&gt;
sub   rsa4096 2017-05-22 [S] [expires: 2025-05-20]

/etc/apt/trusted.gpg.d/debian-archive-stretch-security-automatic.gpg
--------------------------------------------------------------------
pub   rsa4096 2017-05-22 [SC] [expires: 2025-05-20]
      6ED6 F5CB 5FA6 FB2F 460A  E88E EDA0 D238 8AE2 2BA9
uid           [ unknown] Debian Security Archive Automatic Signing Key (9/stretch) &lt;ftpmaster@debian.org&gt;
sub   rsa4096 2017-05-22 [S] [expires: 2025-05-20]

/etc/apt/trusted.gpg.d/debian-archive-stretch-stable.gpg
--------------------------------------------------------
pub   rsa4096 2017-05-20 [SC] [expires: 2025-05-18]
      067E 3C45 6BAE 240A CEE8  8F6F EF0F 382A 1A7B 6500
uid           [ unknown] Debian Stable Release Key (9/stretch) &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   rsa4096 2012-04-27 [SC] [expires: 2020-04-25]
      A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid           [ unknown] Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   rsa4096 2012-05-08 [SC] [expires: 2019-05-07]
      ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid           [ unknown] Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;
</screen>
		 <sidebar> <title><emphasis>در عمل</emphasis> افزودن کلیدهای مورد اعتماد</title>
		 <indexterm>
			<primary>trusted key</primary>
		</indexterm>
		 <indexterm>
			<primary>کلید</primary>
			<secondary>کلیدهای اعتبارسنجی APT</secondary>
		</indexterm>
		 <para>
			زمانی که منبع یک بسته ثالث به فایل <filename>sources.list</filename> اضافه می‌شود، APT نیاز دارد که کلید اعتبارسنجی GPG آن را بداند (در غیر اینصورت مدام در ارتباط با عدم اعتبار بسته‌های موجود در این مخزن گلایه می‌کند). اولین گام البته که دریافت کلید عمومی است. این کلید معمولا به صورت یک فایل متنی کوچک ارائه می‌شود که در مثال زیر آن را <filename>key.asc</filename> می‌نامیم.
		</para>
		 <para>
			To add the key to the trusted keyring, the administrator can just put it in a <filename>*.asc</filename> file in <filename>/etc/apt/trusted.gpg.d/</filename>. This is supported since Debian <emphasis role="distribution">Stretch</emphasis>. With older releases, you had to run <command>apt-key add &lt; key.asc</command>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			برای افرادی که می‌خواهند یک برنامه اختصاصی به منظور مدیریت کلیدهای مورد اعتماد داشته باشند، استفاده از <command>gui-apt-key</command> ممکن است (در بسته‌ای با همان نام)، یک رابط گرافیکی کوچک که کلیدهای مورد اعتماد سیستم را مدیریت می‌کند.
		</para>
		 </sidebar> <para>
			زمانی که کلیدهای مناسب در جای خود قرار گیرند، APT قبل از هر عملیاتی به بررسی امضای آن‌ها می‌پردازد، به این منظور که رابط‌های کاربری هنگامی نصب یک بسته غیر قابل اعتماد، هشدار مربوطه را نمایش دهند.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>بروزرسانی کلی از یک توزیع پایدار به دیگری</title>
		 <para>
			یکی از بهترین ویژگی‌های دبیان قابلیت بروزرسانی کلی آن از یک توزیع پایدار به انتشار بعدی است: <foreignphrase>dist-upgrade</foreignphrase> -- عبارتی با معنا -- اعتبار زیادی را برای این پروژه به ارمغان آورده است. با رعایت برخی پیش‌زمینه‌ها، بروزرسانی یک رایانه تنها چند دقیقه زمان نمی‌برد که آن نیز بسته به سرعت دانلود بسته‌ها از اینترنت متفاوت است.
		</para>
		 <section>
			<title>فرآیند توصیه‌شده</title>
			 <para>
				از آنجایی که زمان نسبتا زیادی بین دو نسخه پایدار دبیان فاصله می‌افتد، قبل از بروزرسانی کلی باید یادداشت انتشار آن را مطالعه کنید.
			</para>
			 <sidebar> <title><emphasis>بازگشت به مقدمات</emphasis> یادداشت انتشار</title>
			 <para>
				یادداشت انتشار برای یک سیستم عامل (یا هر نرم‌افزار دیگری) شامل سندی است که در آن به توضیح کلی راجع به نرم‌افزار پرداخته می‌شود، همراه با جزئیاتی که بین نسخه‌های مختلف تفاوت دارند. این اسناد در مقایسه با مستندات رسمی بسیار کوتاه‌تر هستند و معمولا شامل قابلیت‌هایی می‌باشند که از نسخه پیشین به نرم‌افزار افزوده شده است. همچنین در رابطه با فرآیند بروزرسانی، اخطار به کاربران نسخه‌های پیشین و برخی اصلاحات احتمالی نیز جزئیاتی را شامل می‌شوند.
			</para>
			 <para>
				Release notes are available online: the release notes for the current stable release have a dedicated URL, while older release notes can be found with their codenames: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/jessie/releasenotes" />
			</para>
			 </sidebar> <para>
				In this section, we will focus on upgrading a <emphasis role="distribution">Jessie</emphasis> system to <emphasis role="distribution">Stretch</emphasis>. This is a major operation on a system; as such, it is never 100% risk-free, and should not be attempted before all important data has been backed up.
			</para>
			 <para>
				عادت خوبی که هنگام بروزرسانی کلی باعث آسان‌تر شدن (و کوتاه‌تر شدن) آن می‌گردد محدود کردن بسته‌های مورد نیاز به حداقل تعداد ممکن است. ابزار کاربردی که به این امر کمک می‌کنند عبارتند از <command>aptitude</command>، <command>deborphan</command> و <command>debfoster</command> (<xref linkend="sect.automatic-tracking" /> را مشاهده کنید). برای نمونه، می‌توانید از دستور زیر استفاده کرده سپس در حالت تعاملی <command>aptitude</command> زمان‌بندی حذف بسته‌ها را مدیریت کنید:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Now for the upgrading itself. First, you need to change the <filename>/etc/apt/sources.list</filename> file to tell APT to get its packages from <emphasis role="distribution">Stretch</emphasis> instead of <emphasis role="distribution">Jessie</emphasis>. If the file only contains references to <emphasis role="distribution">Stable</emphasis> rather than explicit codenames, the change isn't even required, since <emphasis role="distribution">Stable</emphasis> always refers to the latest released version of Debian. In both cases, the database of available packages must be refreshed (with the <command>apt update</command> command or the refresh button in <command>synaptic</command>).
			</para>
			 <para>
				زمانی که این منابع بسته‌ها ثبت شدند، ابتدا باید یک بروزرسانی جزئی با استفاده از <command>apt upgrade</command> انجام دهید. با انجام فرآیند بروزسانی کلی در دو مرحله، کار ابزار مدیریت بسته را راحت‌تر می‌سازیم تا تمام بسته‌ها به آخرین نسخه پایدار خود بروزرسانی گردیده و از بهینه‌سازی‌های لازم بهره‌مند گردند.
			</para>
			 <para>
				Once this first upgrade is done, it is time to handle the upgrade itself, either with <command>apt full-upgrade</command>, <command>aptitude</command>, or <command>synaptic</command>. You should carefully check the suggested actions before applying them: you might want to add suggested packages or deselect packages which are only recommended and known not to be useful. In any case, the front-end should come up with a scenario ending in a coherent and up-to-date <emphasis role="distribution">Stretch</emphasis> system. Then, all you need is to do is wait while the required packages are downloaded, answer the Debconf questions and possibly those about locally modified configuration files, and sit back while APT does its magic.
			</para>

		</section>
		 <section>
			<title>بررسی مشکلات پس از بروزرسانی کلی</title>
			 <para>
				با تمام تلاش‌های صورت گرفته، یک بروزرسانی کلی ممکن است همیشه خوب پیش نرود. نسخه‌های جدید نرم‌افزار ممکن است با نسخه‌های پیشین ناسازگار باشند (برای نمونه، رفتار پیش‌فرض آن‌ها یا قالب داده‌یشان ممکن است تغییر کند). برخی باگ‌ها ممکن است از دید فرآیند تست که همیشه قبل از انتشار دبیان صورت می‌گیرد، مخفی مانده باشند.
			</para>
			 <para>
				برای پیش‌بینی این مشکلات، می‌توانید بسته <emphasis role="pkg">apt-listchanges</emphasis> را نصب کنید که احتمال بروز مشکلات در ابتدای فرآیند بروزرسانی کلی را بررسی می‌کند. این اطلاعات توسط نگهدارنده‌های بسته کامپایل شده و در فایل <filename>/usr/share/doc/<replaceable>package</replaceable>/NEWS.Debian</filename> قرار می‌گیرند که کاربران از آن‌ها استفاده کنند. مطالعه این فایل‌ها (احتمالا از طریق <emphasis role="pkg">apt-listchanges</emphasis>) شما را از غافلگیری‌های بد دور می‌کند.
			</para>
			 <para>
				گاهی اوقات ممکن است دریابید که نسخه جدید نرم‌افزار درست کار نکند. این امر ممکن است با توجه به عدم محبوبیت نرم‌افزار و تست نشدن کافی آن صورت گرفته باشد؛ یک بروزرسانی لحظه آخر می‌تواند منجر به پسرفت گردد که تنها در آخرین نسخه پایدار مشاهده می‌شود. در هر دو مورد، اولین کاری که می‌توان انجام داد بررسی سیستم ردگیری باگ در <literal>https://bugs.debian.org/<replaceable>package</replaceable></literal> است و اینکه آیا مشکل تا حالا گزارش شده است. اگر نشده بود، باید با استفاده از <command>reportbug</command> آن را گزاش کنید. اگر گزارش شده باشد، گزارش باگ و پیام‌های مرتبط با آن یک منبع فوق‌العاده برای حل مشکل هستند.
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						گاهی اوقات یک patch در گزارش باگ موجود است؛ آنگاه می‌توانید بسته مشکل‌دار را کامپایل مجدد کنید (<xref linkend="sect.rebuilding-package" /> را مشاهده کنید)؛
					</para>

				</listitem>
				 <listitem>
					<para>
						در سایر موارد، کاربران راه حل‌های خود را برای مشکل پیدا می‌کنند و در گزارش باگ مربوطه قرار می‌دهند؛
					</para>

				</listitem>
				 <listitem>
					<para>
						در موردی دیگر، یک بسته اصلاح‌شده ممکن است توسط نگهدارنده اصلی آن آماده شده باشد.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				با توجه به شدت باگ، نسخه جدیدی از بسته ممکن است برای نسخه جدیدی از توزیع پایدار آماده شده باشد. زمانی که این اتفاق می‌افتد، بسته اصلاح‌شده در قسمت <literal>proposed-updates</literal> سرورهای دبیان قرار می‌گیرد (<xref linkend="sect.proposed-updates" /> را مشاهده کنید). خطوط مورد نظر می‌توانند به صورت موقت به فایل <filename>sources.list</filename> اضافه گردند و بسته‌های بروزرسانی شده می‌توانند با استفاده از <command>apt</command> یا <command>aptitude</command> نصب گردند.
			</para>
			 <para>
				گاهی اوقات بسته اصلاح شده ممکن است در این قسمت قرار نگیرد چرا که در انتظار تاییدیه از مدیران انتشار پایدار است. اگر چنین باشد می‌توانید از طریق وبسایت آن آگاه شوید. بسته‌هایی که در آنجا فهرست شده‌اند موجود نیستند، اما حداقل می‌دانید که بزودی در این قسمت قرار می‌گیرند. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>بروز نگهداشتن یک سیستم</title>
		 <para>
			توزیع دبیان بسیار پویا و متغیر است. اکثر تغییرات در <emphasis role="distribution">Testing</emphasis> و <emphasis role="distribution">Unstable</emphasis> صورت می‌گیرند اما <emphasis role="distribution">Stable</emphasis> نیز در بازه‌های زمانی مختلف بروزرسانی می‌گردد، اغلب به دلیل اصلاحات امنیتی. جدا از اینکه کدام نسخه دبیان مورد استفاده قرار می‌گیرد، ایده خوبی است که بروز نگهداشته شود به این منظور که از آخرین اصلاحات باگ و تغییرات بهره‌مند شوید.
		</para>
		 <para>
			از آنجا که این امکان وجود دارد با استفاده از یک ابزار در زمان‌های مختلف اقدام به بررسی بروزرسانی‌ها و نصب آن‌ها صورت گیرد، چنین فعالیت تکراری بسیار طاقت‌فرسا خواهد شد به خصوص اگر روی ماشین‌های مختلف صورت پذیرد. خوشبختانه، مانند سایر فعالیت‌های تکراری، این فعالیت نیز می‌تواند خودکارسازی گردد و مجموعه ابزاری به همین منظور تهیه شده‌اند.
		</para>
		 <para>
			اولین ابزار <command>apticron</command> است که در بسته‌ای با همین نام قرار دارد. تاثیر اصلی آن اجرای یک اسکریپت به صورت روزانه است (از طریق <command>cron</command>). اسکریپت فهرست بسته‌های موجود را بروزرسانی می‌کند و اگر برخی بسته‌های نصب شده در این فهرست نباشند از طریق ایمیل به مدیرسیستم همراه با آخرین تغییراتی که در نسخه آخرشان صورت گرفته است، اطلاع می‌دهد. واضح است که این بسته اغلب برای کاربران نسخه <emphasis role="distribution">Stable</emphasis> در نظر گرفته شده چرا که تغییرات در سایر نسخه‌ها با سرعت بیشتری روی می‌دهد. زمانی که بروزرسانی‌ها موجود باشند، <command>apticron</command> به صورت خودکار آن‌ها را دانلود می‌کند اما اقدام به نصب آن‌ها نمی‌کند -- چرا که کار مدیرسیستم است -- اما داشتن این بسته‌ها به صورت آفلاین (cache) سرعت انجام عملیات را افزایش می‌دهد.
		</para>
		 <para>
			Administrators in charge of several computers will no doubt appreciate being informed of pending upgrades, but the upgrades themselves are still as tedious as they used to be. Periodic upgrades can be enabled: it uses a <command>systemd</command> timer unit or <command>cron</command>. If <emphasis role="pkg">systemd</emphasis> is not installed the <filename>/etc/cron.daily/apt-compat</filename> script (in the <emphasis role="pkg">apt</emphasis> package) comes in handy. This script is run daily (and non-interactively) by <command>cron</command>. To control the behavior, use APT configuration variables (which are therefore stored in a file <filename>/etc/apt/apt.conf.d/10periodic</filename>). The main variables are:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						این گزینه تعداد روزهایی که برای یک بروزرسانی منتظر می‌مانید را مشخص می‌کند. کاربران <command>apticron</command> بدون این متغیر نیز قادر به اجرای آن هستند چرا که به صورت پیش‌فرض این فعالیت از طرف <command>apticron</command> صورت می‌پذیرد.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						این گزینه نیز تعداد روزهایی که باید سپری شوند یا یک بسته دانلود شود را مشخص می‌کند. کاربران <command>apticron</command> به آن نیازی ندارند.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						این گزینه قابلیتی را شامل می‌شود که <command>apticron</command> ندارد. کنترل می‌کند که بسته‌های قدیمی (آن‌هایی که دیگر در هیچ توزیعی قرار ندارند) طی چه بازه زمانی از حافظه APT پاک شوند. این کار باعث تمیز نگهداشتن حافظه cache می‌گردد و دیگر نیازی نیست نگران پر شدن آن باشید.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						زمانی که این گزینه فعال باشد، اسکریپت روزانه به اجرای <command>unattended-upgrade</command> (از بسته <emphasis role="pkg">unattended-upgrades</emphasis>) می‌پردازد که -- همانطور از نامیش پیداست -- می‌تواند فرآیند بروزرسانی برخی بسته‌ها را خودکار سازد (به صورت پیش‌فرض تنها به بررسی بروزرسانی امنیتی می‌پردازد، اما این فعالیت می‌تواند از طریق فایل <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename> شخصی‌سازی گردد). این گزینه با اجرای دستور <command>dpkg-reconfigure -plow unattended-upgrades</command> می‌تواند تنظیم شود.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Other options can allow you to control the cache cleaning behavior with more precision. They are not listed here, but they are described in the <filename>/usr/lib/apt/apt.systemd.daily</filename> script.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			These tools work very well for servers, but desktop users generally prefer a more interactive system. The package <emphasis role="pkg">gnome-packagekit</emphasis> provides an icon in the notification area of desktop environments when updates are available; clicking on this icon then runs <command>gpk-update-viewer</command>, a simplified interface to perform updates. You can browse through available updates, read the short description of the relevant packages and the corresponding <filename>changelog</filename> entries, and select whether to apply the update or not on a case-by-case basis.
		</para>
		 <figure>
			<title>بروزرسانی با استفاده از <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>
		 <para>
			This tool is no longer installed in the default GNOME desktop. The new philosophy is that security updates should be automatically installed, either in the background or, preferably, when you shutdown your computer so as to not confuse any running application.
		</para>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>بروزرسانی‌های خودکار</title>
		 <indexterm>
			<primary>بروزرسانی</primary>
			<secondary>بروزرسانی خودکار سیستم</secondary>
		</indexterm>
		 <indexterm>
			<primary>بروزرسانی خودکار</primary>
		</indexterm>
		 <para>
			از آنجایی که شرکت فالکوت تعداد زیادی رایانه به همراه نیروی انسانی محدود دارد، مدیرسیستم‌های آن تلاش دارند تا فرآیند بروزرسانی را تا آنجا که ممکن است خودکار سازند. برنامه‌هایی که برای این فرآیند لازم هستند باید بدون دخالت انسان اجرا شوند.
		</para>
		 <section>
			<title>پیکربندی <command>dpkg</command></title>
			 <para>
				همانطور که قبلا اشاره کردیم (قسمت <xref linkend="sidebar.questions-conffiles" /> را مشاهده کنید)، <command>dpkg</command> می‌تواند طوری تنظیم شود که برای تغییر یک گزینه پیکربندی نیازی به تاییدیه کاربر نداشته باشد (با استفاده از گزینه <literal>--force-confdef --force-confold</literal>). این تعامل، می‌تواند سه منبع دیگر نیز داشته باشد: برخی از خود APT می‌آیند، برخی توسط <command>debconf</command> مدیریت می‌شوند و برخی نیز در خط فرمان با استفاده از اسکریپت‌های پیکربندی صورت می‌پذیرند.
			</para>

		</section>
		 <section>
			<title>پیکربندی APT</title>
			 <para>
				در مورد APT اینکار به سادگی صورت می‌گیرد: گزینه <literal>-y</literal> (یا <literal>--assume-yes</literal>) به APT می‌گوید پاسخ تمام پرسش‌ها را مثبت فرض کند.
			</para>

		</section>
		 <section>
			<title>پیکربندی <command>debconf</command></title>
			 <para>
				در مورد <command>debconf</command> جزئیات بیشتری لازم است. این برنامه، در حقیقت برای کنترل میزان ارتباط و حجم پرسش‌های مربوط به یک بسته از کاربر به همراه چگونگی نحوه نمایش آن طراحی شده است. به همین دلیل است که پیکربندی آن نیازمند تعیین اولویت برای پرسش‌ها است؛ تنها پرسش‌هایی که بالاتر از حداقل اولویت تعریف شده باشند، نمایش می‌یابند. <command>debconf</command> برای پرسش‌هایی که تصمیم به نشان دادنشان ندارد از پاسخ پیش‌فرض (که نگهدارنده بسته تعریف کرده است) استفاده می‌کند.
			</para>
			 <para>
				عنصر مرتبط پیکربندی دیگر، رابطی است که توسط برنامه استفاده می‌شود. اگر گزینه <literal>noninteractive</literal> را انتخاب کنید، تمام تعاملات با کاربر غیر فعال می‌شود. اگر بسته‌ای تلاش کند که اطلاعات مهمی را به کاربر نشان دهد، از طریق ایمیل به مدیرسیستم اطلاع داده می‌شود.
			</para>
			 <para>
				برای پیکربندی مجدد <command>debconf</command>، از ابزار <command>dpkg-reconfigure</command> موجود در بسته <emphasis role="pkg">debconf</emphasis> استفاده کنید؛ دستور مورد نظر عبارت است از <command>dpkg-reconfigure debconf</command>. نکته اینکه مقادیر تنظیم‌شده به صورت موقت می‌توانند با استفاده از متغیرهای محیطی هر زمان که لازم باشد، تغییر یابند (برای نمونه متغیر <varname>DEBIAN_FRONTEND</varname> رابط کاربری را کنترل می‌کند که مستندات آن در <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry> آمده است).
			</para>

		</section>
		 <section>
			<title>مدیریت شیوه تعامل با خط فرمان</title>
			 <para>
				آخرین منبع تعاملات و دشوارترین آن‌ها تنظیم، اسکریپت‌های پیکربندی هستند که توسط <command>dpkg</command> اجرا می‌شوند. متاسفانه روش استاندارد و پاسخ سراسری برای مدیریت آن‌ها وجود ندارد.
			</para>
			 <para>
				رویکرد متداول برای جلوگیری از ورودی استاندارد، فرستادن محتوای خالی <filename>/dev/null</filename> به سمت آن با استفاده از دستور <command><replaceable>command</replaceable> &lt;/dev/null</command> است یا استفاده از تعداد نامحدودی newline. هیچ یک از این شیوه‌ها ۱۰۰٪ قابل اعتماد نیستند، اما معمولا منجر به استفاده از پاسخ پیش‌فرض می‌گردند چرا که اکثر اسکریپت‌ها عدم پاسخ به پرسش‌ها را به منزله پاسخ پیش‌فرض می‌دانند.
			</para>

		</section>
		 <section>
			<title>ترکیب جادویی</title>
			 <para>
				با ترکیب عناصر پیشین، امکان طراحی یک اسکریپت کوچک که توانایی مدیریت بروزرسانی‌های خودکار را داشته باشد، وجود دارد.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>اسکریپت غیر-تعاملی بروزرسانی</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade</programlisting>

			</example>
			 <sidebar> <title><emphasis>در عمل</emphasis> مورد شرکت فالکوت</title>
			 <para>
				رایانه‌های شرکت فالکوت ساختار پیوسته‌ای دارند، با ماشین‌هایی که هر کدام عملکرد خاصی دارند. مدیرسیستم‌ها باید مرتبط‌ترین راه‌حل را برای هر رایانه انتخاب کنند.
			</para>
			 <para>
				In practice, the servers running <emphasis role="distribution">Stretch</emphasis> are configured with the “miracle combination” above, and are kept up to date automatically. Only the most critical servers (the firewalls, for instances) are set up with <command>apticron</command>, so that upgrades always happen under the supervision of an administrator.
			</para>
			 <para>
				The office workstations in the administrative services also run <emphasis role="distribution">Stretch</emphasis>, but they are equipped with <emphasis role="pkg">gnome-packagekit</emphasis>, so that users trigger the upgrades themselves. The rationale for this decision is that if upgrades happen without an explicit action, the behavior of the computer might change unexpectedly, which could cause confusion for the main users.
			</para>
			 <para>
				در آزمایشگاه تعداد محدودی از رایانه‌ها بر روی <emphasis role="distribution">Testing</emphasis> تنظیم شده‌اند -- تا از آخرین نرم‌افزارهای کاربردی بهره‌مند شوند -- به صورت خودکار بروزرسانی نمی‌شوند. مدیرسیستم‌ها APT را تنظیم کرده‌اند که تنها بروزرسانی‌ها را آماده کند ولی هیچ اقدامی جهت نصب صورت ندهد؛ زمانی که تصمیم به بروزرسانی بگیرند (به صورت دستی)، فرآیند خسته‌کننده بروزرسانی بسته‌ها و دانلود آن‌ها دیگر ضرورتی ندارد و مدیرسیستم‌ها می‌توانند روی بخش‌های کاربردی دیگر تمرکز کنند.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>جستجو برای بسته‌ها</title>
		 <para>
			با توجه به حجم عظیم و رو به افزایش نرم‌افزار در دبیان، تضادی بوجود می‌آید: دبیان معمولا برای هر کاری یک ابزار مناسب دارد، اما یافتن همین ابزار از میان سایر گزینه‌های مشابه کاری دشوار است. عدم وجود روشی مناسب برای جستجو (و یافتن) ابزار مناسب خود به یک معضل در طی سال‌ها تبدیل شده است. خوشبختانه، این مشکل تقریبا از میان رفته است.
		</para>
		 <para>
			مختصرترین شیوه جستجو استفاده از نام دقیق بسته است. اگر <command>apt show <replaceable>package</replaceable></command> نتیجه‌ای بازگرداند، آنگاه بسته موجود است. متاسفانه، این امر مستلزم دانستن یا حدس زدن نام بسته است، که همیشه مقدور نیست.
		</para>
		 <sidebar> <title><emphasis>نکته</emphasis> اصول نامگذاری بسته</title>
		 <para>
			برخی طبقه‌بندی‌های مربوط به بسته‌ها از اصول نامگذاری خاصی پیروی می‌کنند؛ دانستن این الگوها به شما کمک می‌کند که نام بسته را به درستی حدس بزنید. برای نمونه، در مورد ماژول‌های Perl شیوه متداول این است که ماژول <literal>XML::Handler::Composer</literal> به صورت <emphasis role="pkg">libxml-handler-composer-perl</emphasis> نامگذاری گردد. کتابخانه‌ای که اجازه استفاده از سیستم <command>gconf</command> پایتون را می‌دهد <emphasis role="pkg">python-gconf</emphasis> نام دارد. متاسفانه شیوه استاندارد و ثابتی برای نامگذاری تمام بسته‌ها وجود ندارد، با این حال مدیر بسته‌ها سعی می‌کنند تا شیوه نامگذاری توسعه‌دهندگان بالادستی را رعایت کنند.
		</para>
		 </sidebar> <para>
			الگوی دیگر جستجو برای بسته‌ها، استفاده از جستجو plain-text در نام بسته‌ها است، اما به صورت خیلی محدود کار می‌کند. معمولا می‌توانید با استفاده از توضیحات بسته نیز به جستجو بپردازید: از آنجایی که هر بسته شامل توضیحات کم و بیش راجع به نام بسته می‌باشد، جستجوی کلیدواژه در این مورد می‌تواند کاربردی باشد. <command>apt-cache</command> و <command>axi-cache</command> ابزار انتخابی برای این شیوه جستجو هستند؛ برای نمونه، <command>apt-cache search video</command> به جستجو بسته‌هایی می‌پردازد که در نام یا توضیح خود کلیدواژه “video” را دارا باشند.
		</para>
		 <para>
			برای جستجوهای پیشرفته‌تر، ابزار پیشرفته‌تری مانند <command>aptitude</command> مورد نیاز است. <command>aptitude</command> اجازه جستجو منطقی در تمام فیلد‌های meta-data را می‌دهد. برای نمونه، دستور زیر به جستجوی بسته‌هایی می‌پردازد که نامشان شامل <literal>kino</literal>، توضیحشان شامل <literal>video</literal> و نام نگهدارنده‌اش شامل <literal>paul</literal> باشد:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
Version: 1.3.4-2.2+b2
State: not installed
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8300 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0
         (&gt;= 0.5.3), libavcodec57 (&gt;= 7:3.2.4) | libavcodec-extra57 (&gt;=
         7:3.2.4), libavformat57 (&gt;= 7:3.2.4), libavutil55 (&gt;= 7:3.2.4), libc6
         (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4 (&gt;= 1.0.0), libfontconfig1
         (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;= 1:3.0),
         libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~), libglib2.0-0
         (&gt;= 2.16.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;= 1:1.0.0),
         libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0), libpangocairo-1.0-0
         (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0), libquicktime2 (&gt;=
         2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7), libsm6, libstdc++6
         (&gt;= 5.2), libswscale4 (&gt;= 7:3.2.4), libx11-6, libxext6, libxml2 (&gt;=
         2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus, kino-dvtitler:i386, kino-timfx:i386,
           kinoplus:i386, kino:i386
Replaces: kino-dvtitler, kino-timfx, kinoplus, kino-dvtitler:i386, kino-timfx:i386,
          kinoplus:i386
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV camcorders.
 This program uses many keyboard commands for fast navigating and editing inside the
 movie.
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly distributed as
 separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/
Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::graphical, interface::x11, role::program, scope::application,
      suite::gnome, uitoolkit::gtk, use::editing, use::learning,
      works-with::video, x11::application
</screen>
		 <para>
			جستجو تنها یک نتیجه بازگرداند، <emphasis role="pkg">kino</emphasis> که با تمام شرایط فوق سازگار بود.
		</para>
		 <para>
			حتی این جستجوهای چند شرطی نیز آنطور که باید استفاده نمی‌شوند، که توضیح خوبی برای عدم فراگیر شدنشان می‌باشد. یک سیستم جدید برچسب‌گذاری به تازگی توسعه‌یافته است که رویکرد جدیدی در جستجو را ارائه می‌دهد. بسته‌ها به صورتی برچسب‌گذاری می‌شوند که به آن “facet-based classification” می‌گویند. در مورد <emphasis role="pkg">kino</emphasis>، برچسب‌های آن می‌گویند که kino یک نرم‌افزار مبتنی بر GNOME است که با داده‌های تصویری کار کرده و هدف اصلی آن ویرایش است.
		</para>
		 <para>
			Browsing this classification can help you to search for a package which corresponds to known needs; even if it returns a (moderate) number of hits, the rest of the search can be done manually. To do that, you can use the <literal>~G</literal> search pattern in <command>aptitude</command>, but it is probably easier to simply navigate the site where tags are managed: <ulink type="block" url="https://debtags.debian.org/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>tag</primary>
		</indexterm>
		 <para>
			انتخاب <literal>works-with::video</literal> و <literal>use::editing</literal> منجر به جستجو بسته‌های مرتبط می‌گردد، که شامل <emphasis role="pkg">kino</emphasis> و <emphasis role="pkg">pitivi</emphasis> نیز می‌شود. این سیستم طبقه‌بندی روز به روز بیشتر مورد استفاده قرار می‌گیرد و مدیر بسته‌ها نیز به مرور رابط‌های جستجوی کاربردی‌تری را برای آن فراهم می‌کنند.
		</para>
		 <para>
			در نتیجه، بهترین ابزار برای اینکار بستگی به پیچدگی جستجو مورد نظر شما دارد:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<command>apt-cache</command> تنها اجازه جستجو در نام و توضیحات بسته را می‌دهد، که برای یافتن بسته‌ای خاص با دانستن اطلاعات آن بسیار کاربردی است؛
				</para>

			</listitem>
			 <listitem>
				<para>
					زمانی که شرایط جستجو شامل روابط بین بسته‌ها و meta-data آن‌ها شود، <command>synaptic</command> کاربردی‌تر خواهد بود؛
				</para>

			</listitem>
			 <listitem>
				<para>
					زمانی که جستجو بر اساس برچسب مورد نیاز باشد، یک ابزار خوب <command>packagesearch</command> است، رایط گرافیکی که امکان جستجو بر اساس برچسب‌ها و موارد دیگر را فراهم می‌کند (مانند نام فایلی که آن را در بر دارد). برای استفاده در خط فرمان، <command>axi-cache</command> انتخاب مناسبی است.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					در نهایت، زمانی که جستجو شامل عبارت‌های پیچیده و عملگرهای منطقی باشد، ابزار مورد انتخاب، الگوی جستجو در <command>aptitude</command> است که با وجود عجیب بودنش بسیار قدرتمند است؛ در هر دو حالت خط فرمان و تعاملی نیز کار می‌کند.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

