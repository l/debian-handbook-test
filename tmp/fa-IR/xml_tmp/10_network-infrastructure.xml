<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="network-infrastructure">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-network-infrastructure.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>شبکه</keyword>
      <keyword>Gateway</keyword>
      <keyword>TCP/IP</keyword>
      <keyword>IPv6</keyword>
      <keyword>DNS</keyword>
      <keyword>Bind</keyword>
      <keyword>DHCP</keyword>
      <keyword>QoS</keyword>
    </keywordset>
  </chapterinfo>
  <title id="infrastructure.title">زیرساخت شبکه</title>
  <highlights>
    <para>لینوکس از میراث شبکه یونیکس پشتیبانی می‌کند و دبیان مجموعه کاملی از ابزارها را برای ایجاد و مدیریت آن فراهم می‌آورد. این فصل به بررسی این ابزار می‌پردازد.</para>
  </highlights>
  <section id="sect.gateway">
    <title>Gateway</title>

    <para>یک gateway رایانه‌ای است که چندین شبکه را به یکدیگر متصل می‌کند. این عبارت اغلب به “نقطه خروجی” یک شبکه محلی به تمام نشانی‌های IP ضروری حارجی اشاره دارد. gateway به هر کدام از شبکه‌هایی که پیوند می‌دهد، متصل است و به عنوان یک مسیریاب کار تبدیل بسته‌های IP را بر عهده دارد.</para>
    <indexterm><primary>gateway</primary></indexterm>
    <indexterm><primary>شبکه</primary><secondary>gateway</secondary></indexterm>
    <indexterm><primary>مسیریاب</primary></indexterm>

    <sidebar>
      <title><emphasis>بازگشت به مقدمات</emphasis> بسته IP</title>
      <indexterm><primary>بسته</primary><secondary>IP</secondary></indexterm>

      <para>امروزه اکثر شبکه‌ها از پروتکل IP یا <emphasis>Internet Protocol</emphasis> استفاده می‌کنند. این پروتکل داده انتقالی را به بسته‌هایی با اندازه کوچک تبدیل می‌کند. هر بسته علاوه بر داده مذکور، شامل جزئیاتی برای مسیریابی صحیح خود می‌باشد.</para>
    </sidebar>

    <sidebar id="sidebar.tcp-udp">
      <title><emphasis>بازگشت به مقدمات</emphasis> TCP/UDP</title>
      <indexterm><primary>درگاه</primary><secondary>TCP</secondary></indexterm>
      <indexterm><primary>درگاه</primary><secondary>UDP</secondary></indexterm>
      <indexterm><primary>TCP، درگاه</primary></indexterm>
      <indexterm><primary>UDP، درگاه</primary></indexterm>

      <para>بسیاری برنامه‌ها خود به مدیریت بسته‌ها نمی‌پردازند، با اینکه داده انتقالی آن‌‌ها از طریق IP منتقل می‌شود؛ آن‌ها اغلب از TCP یا <emphasis>Transmission Control Protocol</emphasis> استفاده می‌کنند. TCP لایه‌ای بر فراز IP است که امکان برقراری ارتباط برای جریان داده‌ای بین دو نقطه را برقرار می‌کند. برنامه‌ها تنها یک نقطه ورودی برای ارسال داده‌ها می‌دانند که ضمانت از بین نرفتن داده را دارد و به همان ترتیب که فرستاده می‌شود در نقطه خروجی نیز دریافت می‌گردد. با اینکه انواع گوناگونی از خطا در لایه‌های پایینی ممکن است اتفاق بیفتد، توسط TCP جبران می‌شوند: بسته‌های گم شده دوباره ارسال می‌گردند و بسته‌هایی که خارج از ترتیب دریافت می‌شوند (برای نمونه، اگر از مسیرهای مختلف استفاده کرده باشند) به صورت مناسبی شماره‌گذاری مجدد می‌شوند.</para>

      <para>پروتکل دیگری که به IP وابسته است UDP یا <emphasis>User Datagram Protocol</emphasis> نام دارد. بر خلاف TCP، مبتنی بر بسته و اهداف این پروتکل متفاوت است: هدف UDP تنها انتقال یک بسته از یک برنامه به دیگری است. پروتکل نه تنها جبران بسته‌های گم شده در مسیر را نمی‌کند بلکه در رابطه با ترتیب ارسال و دریافت آن‌ها نیز کاری انجام نمی‌دهد. مزیت اصلی آن در این است که تاخیر به میزان کمی وجود دارد، از آنجا که گم شدن یک بسته منجر به تاخیر در کل فرآیند ارسال مجدد آن نمی‌گردد.</para>

      <para>TCP و UDP هر دو شامل درگاه هستند، که در حقیقت “شماره‌های اضافی” برای برقراری ارتباط با یک برنامه روی یک رایانه هستند. این مفهوم امکان برقراری چند ارتباط هم‌زمان با یک مخاطب را فراهم می‌سازد، از آنجا که این ارتباطات از طریق شماره درگاه قابل شناسایی هستند.</para>

      <para>برخی از این شماره‌های درگاه - که توسط IANA یا <emphasis>Internet Assigned Numbers Authority</emphasis> استانداردسازی شده‌اند - به صورت “شناخته-شده” برای سرویس‌های شبکه هستند. برای نمونه، درگاه ۲۵ از TCP معمولا توسط سرور ایمیل استفاده می‌شود. <ulink type="block" url="http://www.iana.org/assignments/port-numbers" /></para>
    </sidebar>

    <para>زمانی که یک شبکه محلی از یک بازه نشانی خصوصی (که به اینترنت مسیریابی نمی‌شوند) استفاده می‌کند، gateway نیاز به پیاده‌سازی <emphasis>address masquerading</emphasis> دارد تا رایانه‌های داخل شبکه بتوانند با دنیای خارج ارتباط برقرار کنند. عملیات ماسک‌گذاری نوعی پروکسی در شبکه به حساب می‌آیند: هر ارتباط خارجی از یک رایانه داخلی توسط نشانی gateway جایگزین می‌شود (چرا که gateway خود یک نشانی خارجی و قابل‌مسیریابی دارد)، داده‌ای که از طریق ارتباط ماسک‌گذاری شده عبور می‌کند نیز به این ارتباط ارسال می‌شود و داده‌ی بازگشتی نیز به ترتیب عکس به رایانه داخلی فرستاده می‌شود. gateway از بازه درگاه‌های اختصاصی TCP به این منظور استفاده می‌کند، معمولا با اعداد خیلی بالا (بیش از ۶۰۰۰۰). هر ارتباطی ارسالی از رایانه‌های داخلی به مانند یک ارتباط حارجی با استفاده از این درگاه‌های رزرو شده نمایش می‌یابد.</para>
    <indexterm><primary>ماسک‌گذاری</primary></indexterm>

    <sidebar>
      <title><emphasis>فرهنگ</emphasis> بازه خصوصی نشانی</title>
      <indexterm><primary>نشانی IP</primary><secondary>خصوصی</secondary></indexterm>
      <indexterm><primary>نشانی IP خصوصی</primary></indexterm>

      <para>RFC 1918 سه بازه اختصاصی برای نشانی‌های IPv4 تعریف می‌کند که در اینترنت قابل مسیریابی نیستند اما می‌توانند در شبکه‌های محلی استفاده شوند. اولی، <literal>10.0.0.0/8</literal> (نوارکناری <xref linkend="sidebar.networking-basics" /> را مشاهده کنید) یک بازه کلاش A است (با ۲<superscript>۲۴</superscript> نشانی IP). دومی، <literal>172.16.0.0/12</literal> شامل ۱۶ بازه کلاس B است (<literal>172.16.0.0/16</literal> تا <literal>172.31.0.0/16</literal>) که هر یک شامل ۲<superscript>۱۶</superscript> نشانی IP هستند. سومی، <literal>192.168.0.0/16</literal> یک بازه کلاس B است (که ۲۵۶ بازه کلاس C از <literal>192.168.0.0/24</literal> تا <literal>192.168.255.0/24</literal> را گروه‌بندی می‌کند که هر کدام شامل ۲۵۶ نشانی IP هستند). <ulink type="block" url="http://www.faqs.org/rfcs/rfc1918.html" /></para>
    </sidebar>

    <para>gateway می‌تواند دو نوع NAT یا <emphasis>Network Address Translation</emphasis> اجرا کند. نوع اول، DNAT یا <emphasis>Destination NAT</emphasis> تکنیکی برای تغییر نشانی IP (و/یا درگاه TCP یا UDP) مقصد برای یک ارتباط ورودی است. مکانیزم رهگیری ارتباط نیز بسته‌های موجود را برای تضمین تداوم ارتباط تغییر می‌دهد. نوع دوم، SNAT یا <emphasis>Source NAT</emphasis> است که <emphasis>ماسک‌گذاری</emphasis> یک حالت ویژه آن به حساب می‌آید؛ SNAT تکنیکی برای تغییر نشانی IP (و/یا درگاه TCP یا UDP) مبدا برای یک ارتباط خروجی است. همانند DNAT، تمام بسته‌های موجود از طریق مکانیزم رهگیری ارتباط تغییر داده می‌شوند. نکته اینکه NAT تنها برای نشانی‌های IPv4 و فضای محدود نشانی‌دهی آن کاربرد دارد؛ در IPv6، بازه بسیار گسترده نشانی‌دهی کاربرد NAT را از بین می‌برد چرا که هر نشانی “داخلی” امکان مسیریابی روی اینترنت را دارد (این به معنای در دسترس بودن رایانه‌های داخلی نیست، چرا که فایروال‌های میانی می‌توانند ترافیک را فیلتر کنند).</para>
    <indexterm><primary>NAT</primary></indexterm>
    <indexterm><primary>شبکه</primary><secondary>تبدیل نشانی</secondary></indexterm>
    <indexterm><primary>SNAT</primary></indexterm>
    <indexterm><primary>DNAT</primary></indexterm>
    <indexterm><primary>Destination NAT</primary></indexterm>
    <indexterm><primary>Source NAT</primary></indexterm>

    <sidebar>
      <title><emphasis>بازگشت به مقدمات</emphasis> ارسال درگاه</title>
      <indexterm><primary>port forwarding</primary></indexterm>

      <para>یکی از کاربردهای DNAT <emphasis>ارسال درگاه</emphasis> است. ارتباطات ورودی به یک درگاه مشخص از یک رایانه به یک درگاه در رایانه دیگری ارسال می‌شوند. راهکارهای دیگری نیز برای دستیابی به این هدف وجود دارد، مانند، به خصوص در سطح برنامه‌ای با <command>ssh</command> یا <command>ssh</command> (قسمت <xref linkend="sect.ssh-port-forwarding" /> را مشاهده کنید).</para>
    </sidebar>

    <para>مباحث نظری کافی است، بیایید دست بکار شویم. تبیدل یک سیستم دبیان به یک gateway به سادگی فعال‌کردن چند گزینه در کرنل است که از طریق فایل‌سیستم مجازی <filename>/proc/</filename> صورت می‌گیرند.</para>

    <screen>
<computeroutput># </computeroutput><userinput>echo 1 &gt; /proc/sys/net/ipv4/conf/default/forwarding</userinput></screen>

    <para>این گزینه به صورت خودکار نیز دز زمان راه‌اندازی اولیه می‌تواند فعال شود اگر فایل <filename>/etc/sysctl.conf</filename> گزینه <literal>net.ipv4.conf.default.forwarding</literal> را به <literal>1</literal> تنظیم کند.</para>

    <example id="example.sysctl.conf">
      <title>فایل <filename>/etc/sysctl.conf</filename></title>

      <programlisting>
net.ipv4.conf.default.forwarding = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.tcp_syncookies = 1</programlisting>
    </example>

    <para>این مجموعه عملیات را برای IPv6 نیز می‌توان انجام داد، تنها کافی است <literal>ipv4</literal> را با <literal>ipv4</literal> جایگزین کنیم یا خط <literal>net.ipv6.conf.all.forwarding</literal> را در فایل <filename>/etc/sysctl.conf</filename> قرار دهیم.</para>

    <para>فعال‌سازی ماسک‌گذاری IPv4 عملیات کمی پیچیده‌تری است چرا که باید فایروال <emphasis>netfilter</emphasis> را پیکربندی کرد.</para>

    <para>به طور مشابه، استفاده از NAT برای IPv4 نیازمند پیکربندی <emphasis>netfilter</emphasis> است. از آنجا که هدف اصلی این قسمت فیلترکردن بسته‌ها است، جزئیات آن در <xref linkend="security" xrefstyle="select: label quotedtitle nopage" /> آمده است (قسمت <xref linkend="sect.firewall-packet-filtering" /> را مشاهده کنید).</para>
  </section>
  <section id="sect.virtual-private-network">
    <title>شبکه خصوصی مجازی</title>

    <para>یک <emphasis>Virtual Private Network</emphasis> یا به اختصار VPN روشی برای پیوند زدن دو شبکه محلی از طریق ایجاد تونل در اینترنت است؛ تونل معمولا برای محرمانگی اطلاعات رمزنگاری می‌شود. از VPN معمولا برای برقراری ارتباط با یک رایانه در شبکه داخلی یک شرکت استفاده می‌شود.</para>
    <indexterm><primary>شبکه</primary><secondary>خصوصی مجازی</secondary></indexterm>
    <indexterm><primary>VPN</primary></indexterm>
    <indexterm><primary>شبکه خصوصی مجازی</primary></indexterm>

    <para>ابزارهای بسیاری این قابلیت را فراهم می‌کنند. OpenVPN یک راهکار موثر، ساده برای راه‌اندازی و نگهداری و امن بر اساس SSL/TLS است. امکان دیگر استفاده از IPsec برای رمزگذاری ترافیک بین دو رایانه است؛ این رمزنگاری به صورت شفاف است، یعنی برنامه‌هایی که روی این رایانه‌ها اجرا می‌شوند برای استفاده از VPN نیاز به تغییر ندارند. SSH نیز علاوه بر کاربرد اصلی خود، برای فراهم‌کردن VPN مورد استفاده قرار می‌گیرد. در نهایت، یک VPN می‌تواند توسط پروتکل PPTP از مایکروسافت برقرار شود. گزینه‌های دیگری نیز وجود دارند اما خارج از تمرکز این کتاب هستند.</para>
    <section id="sect.openvpn">
      <title>OpenVPN</title>
      <indexterm><primary>OpenVPN</primary></indexterm>

      <para>OpenVPN نرم‌افزاری است که برای ایجاد شبکه‌های خصوصی مجازی استفاده می‌شود. راه‌اندازی آن شامل ایجاد رابط‌های شبکه خصوصی روی سرور VPN و کلاینت‌های آن است؛ هر دو رابط <literal>tun</literal> (برای تونل‌های سطح IP) و <literal>tap</literal> (برای تونل‌های سطح Ethernet) پشتیبانی می‌شوند. در عمل، رابط‌های <literal>tun</literal> اغلب مورد استفاده قرار می‌گیرند زمانی که کلاینت‌های VPN قرار باشد درون شبکه محلی سرور با استفاده از پل Ethernet تنظیم گردند.</para>

      <para>OpenVPN برای عملیات رمزنگاری SSL/TLS و سایر قابلیت‌ها (محرمانگی، احرازهویت، جامعیت، انکارناپذیری) به OpenSSL وابسته است. امکان پیکربندی آن با استفاده از یک کلید خصوصی اشتراکی یا گواهینامه‌های X.509 مبتنی بر زیرساخت کلید عمومی وجود دارد. شیوه دوم پیکربندی به شدت ارجحیت دارد، چرا که در زمان درخواست سایر کاربران برای دسترسی به VPN، انعطاف‌پذیری بیشتری دارد.</para>

      <sidebar>
        <title><emphasis>فرهنگ</emphasis> SSL و TLS</title>
        <indexterm><primary>SSL</primary></indexterm>
        <indexterm><primary>TLS</primary></indexterm>

	<para>پروتکل SSL یا <emphasis>Secure Socket Layer</emphasis> توسط Netscape برای برقراری ارتباطات امن با وب سرورها اختراع شد. اندکی بعد توسط کارگروه مهندسی اینترنت یا IETF تحت عنوان TLS یا <emphasis>Transport Layer Security</emphasis> استانداردسازی شد. از آن زمان به بعد TLS به پیشرفت خود ادامه داد و SSL بر اساس چندین آسیب‌پذیری در طراحی اولیه متوقف شد.</para>
      </sidebar>
      <section id="sect.easy-rsa">
        <title>زیرساخت کلید عمومی: <emphasis>easy-rsa</emphasis></title>
        <indexterm><primary>PKI (Public Key Infrastructure)</primary></indexterm>
        <indexterm><primary>زیرساخت کلید عمومی</primary></indexterm>
        <indexterm><primary>X.509، گواهینامه</primary></indexterm>
        <indexterm><primary>گواهینامه</primary><secondary>X.509</secondary></indexterm>
        <indexterm><primary><emphasis>easy-rsa</emphasis></primary></indexterm>
        <indexterm><primary>RSA (الگوریتم)</primary></indexterm>
        <indexterm><primary>زوج کلید</primary></indexterm>

	<para>الگوریتم RSA در رمزنگاری کلید-عمومی کاربرد بسیاری دارد. این الگوریتم شامل یک “زوج کلید” است که از یک کلید عمومی و خصوصی تشکیل شده است. این دو کلید بسیار عملکرد نزدیکی دارند و خصوصیات ریاضی آن‌ها به گونه‌ای است که پیام رمزگذاری شده با کلید عمومی تنها می‌تواند با کلید خصوصی مرتبط با آن رمزگشایی شود، که این امر به محرمانگی اطلاعات کمک می‌کند. از طرف دیگر، پیامی که با کلید خصوصی رمزگذاری شده باشد توسط هر کسی که کلید عمومی را بداند قابل رمزگشایی است، که این امر به احرازهویت فرستنده کمک می‌کند چرا که تنها یک نفر به کلید خصوصی دسترسی دارد. زمانی که با یک تابع مخلوط‌سازی دیجیتال (MD5، SHA1 یا یک گزینه مشابه) این امر به یک مکانیزم امضا منجر می‌شود که می‌تواند برای هر پیام بکار رود.</para>

	<para>با این وجود، هر فردی می‌تواند زوج کلید خود را به نام فرد دیگری بوجود آورد. یک راه شامل مفهوم CA یا <emphasis>Certification Authority</emphasis> است که توسط X.509 استانداردسازی شده است. این عبارت شامل یک موجودیت دارای زوج کلید به نام <emphasis>root certificate</emphasis> است. از این گواهینامه تنها برای امضای سایر گواهینامه‌ها (زوج کلیدها) استفاده می‌شود، پس از اینکه گام‌های مورد نیاز برای شناسایی هویت را انجام دهد. برنامه‌هایی که از X.509 استفاده می‌کنند می‌توانند در صورت دانستن گواهینامه‌های ریشه، به بررسی گواهینامه‌های خود بپردازند.</para>

	<para>OpenVPN از این قانون استفاده می‌کند. از آنجا که CAهای عمومی در ازای مبلغ (سنگینی) حاضر به تبادل گواهینامه‌ها هستند، امکان ایجاد یک CA خصوصی در شرکت وجود دارد. بسته <emphasis role="pkg">easy-rsa</emphasis> شامل ابزاری است که امکان ایجاد زیرساخت گواهینامه X.509 را فراهم می‌کند، که به صورت چند اسکریپت با استفاده از دستور <command>openssl</command> پیاده‌سازی شده است.</para>

        <sidebar>
          <title><emphasis>یادداشت</emphasis> <emphasis>easy-rsa</emphasis> قبل از <emphasis role="distribution">Jessie</emphasis></title>

          <para>در نسخه‌های دبیان تا <emphasis role="distribution">Wheezy</emphasis>، بسته <emphasis>easy-rsa</emphasis> به عنوان قسمتی از <emphasis>openvpn</emphasis> توزیع می‌شد و اسکریپت‌های آن در مسیر <filename>/usr/share/doc/openvpn/examples/easy-rsa/2.0/</filename> قرار داشتند. راه‌اندازی یک CA شامل رونوشت گرفتن از آن دایرکتوری، بجای استفاده از دستور <command>make-cadir</command> بود که در اینجا به آن می‌پردازیم.</para>
        </sidebar>

	<para>مدیرسیستم‌های شرکت فالکوت از این ابزار برای ایجاد گواهینامه‌های مورد نظر در هر دو سمت کلاینت و سرور استفاده می‌کنند. این کار امکان پیکربندی تمام کلاینت‌ها را به صورت مشابهی فراهم می‌آورد چرا که آن‌ها تنها باید به گواهینامه‌های خصوصی در محل شرکت فالکوت اعتماد کنند. این CA اولین گواهینامه موجود است؛ به این منظور، مدیرسیستم‌ها اقدام به ایجاد یک دایرکتوری با فایل‌های مورد نیاز CA می‌کنند، احتمالا روی رایانه‌ای که به شبکه متصل نباشد تا با اینکار امکان لو رفتن کلید خصوصی CA را کاهش دهند.</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>make-cadir pki-falcot
</userinput><computeroutput>$ </computeroutput><userinput>cd pki-falcot</userinput></screen>

	<para>آنگاه اقدام به ذخیره‌سازی پارامترهای مورد نیاز در فایل <filename>vars</filename> می‌کنند، به خصوص آن‌هایی که پیشوند <literal>KEY_</literal> دارند؛ این متغیرها در ادامه به محیط اجرایی اضافه خواهند شد:</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>vim vars
</userinput><computeroutput>$ </computeroutput><userinput>grep KEY_ vars
</userinput><computeroutput>export KEY_CONFIG=`$EASY_RSA/whichopensslcnf $EASY_RSA`
export KEY_DIR="$EASY_RSA/keys"
echo NOTE: If you run ./clean-all, I will be doing a rm -rf on $KEY_DIR
export KEY_SIZE=2048
export KEY_EXPIRE=3650
export KEY_COUNTRY="FR"
export KEY_PROVINCE="Loire"
export KEY_CITY="Saint-Étienne"
export KEY_ORG="Falcot Corp"
export KEY_EMAIL="admin@falcot.com"
export KEY_OU="Certificate authority"
export KEY_NAME="Certificate authority for Falcot Corp"
# If you'd like to sign all keys with the same Common Name, uncomment the KEY_CN export below
# export KEY_CN="CommonName"
$ </computeroutput><userinput>. ./vars
</userinput><computeroutput>NOTE: If you run ./clean-all, I will be doing a rm -rf on /home/roland/pki-falcot/keys
$ </computeroutput><userinput>./clean-all
</userinput></screen>

	<para>گام بعد ایجاد زوج کلید خود CA است (این دو قسمت از زوج کلید در فایل‌های <filename>keys/ca.crt</filename> و <filename>keys/ca.key</filename> ذخیره می‌شوند):</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>./build-ca</userinput>
<computeroutput>Generating a 2048 bit RSA private key
...................................................................+++
...+++
writing new private key to 'ca.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [FR]:
State or Province Name (full name) [Loire]:
Locality Name (eg, city) [Saint-Étienne]:
Organization Name (eg, company) [Falcot Corp]:
Organizational Unit Name (eg, section) [Certificate authority]:
Common Name (eg, your name or your server's hostname) [Falcot Corp CA]:
Name [Certificate authority for Falcot Corp]:
Email Address [admin@falcot.com]:
</computeroutput></screen>

	<para>اکنون گواهینامه مربوط به سرور VPN می‌تواند ایجاد گردد، همین طور پارامترهای Diffie-Hellman مورد نیاز برای بخش سمت-سرور یک ارتباط SSL/TLS. سرور VPN توسط نام دامنه <literal>vpn.falcot.com</literal> شناخته می‌شود؛ این نام برای فایل‌های دیگری نیز استفاده شده است (<filename>keys/vpn.falcot.com.crt</filename> برای گواهینامه عمومی و <filename>keys/vpn.falcot.com.key</filename> برای کلید خصوصی آن):</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>./build-key-server vpn.falcot.com
</userinput><computeroutput>Generating a 2048 bit RSA private key
.....................................................................................................................+++
...........+++
writing new private key to 'vpn.falcot.com.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [FR]:
State or Province Name (full name) [Loire]:
Locality Name (eg, city) [Saint-Étienne]:
Organization Name (eg, company) [Falcot Corp]:
Organizational Unit Name (eg, section) [Certificate authority]:
Common Name (eg, your name or your server's hostname) [vpn.falcot.com]:
Name [Certificate authority for Falcot Corp]:
Email Address [admin@falcot.com]:

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
Using configuration from /home/roland/pki-falcot/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'FR'
stateOrProvinceName   :PRINTABLE:'Loire'
localityName          :T61STRING:'Saint-\0xFFFFFFC3\0xFFFFFF89tienne'
organizationName      :PRINTABLE:'Falcot Corp'
organizationalUnitName:PRINTABLE:'Certificate authority'
commonName            :PRINTABLE:'vpn.falcot.com'
name                  :PRINTABLE:'Certificate authority for Falcot Corp'
emailAddress          :IA5STRING:'admin@falcot.com'
Certificate is to be certified until Mar  6 14:54:56 2025 GMT (3650 days)
Sign the certificate? [y/n]:</computeroutput><userinput>y
</userinput><computeroutput>

1 out of 1 certificate requests certified, commit? [y/n]</computeroutput><userinput>y
</userinput><computeroutput>Write out database with 1 new entries
Data Base Updated
$ </computeroutput><userinput>./build-dh
</userinput><computeroutput>Generating DH parameters, 2048 bit long safe prime, generator 2
This is going to take a long time
[…]
</computeroutput></screen>

	<para>گام بعدی گواهینامه‌های مورد نیاز کلاینت‌های VPN را ایجاد می‌کند؛ برای هر رایانه یا فردی که قصد استفاده از VPN را دارد، یک گواهینامه مورد نیاز است:</para>

        <screen>
<computeroutput>$ </computeroutput><userinput>./build-key JoeSmith
</userinput><computeroutput>Generating a 2048 bit RSA private key
................................+++
..............................................+++
writing new private key to 'JoeSmith.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [FR]:
State or Province Name (full name) [Loire]:
Locality Name (eg, city) [Saint-Étienne]:
Organization Name (eg, company) [Falcot Corp]:
Organizational Unit Name (eg, section) [Certificate authority]:</computeroutput><userinput>Development unit
</userinput><computeroutput>Common Name (eg, your name or your server's hostname) [JoeSmith]:</computeroutput><userinput>Joe Smith
</userinput><computeroutput>[…]</computeroutput></screen>

	<para>اکنون تمام گواهینامه‌ها ایجاد شده‌اند و باید به مکان مناسبی منتقل شوند: کلید عمومی گواهینامه ریشه (<filename>keys/ca.crt</filename>) در تمام رایانه‌ها (کلاینت و سرور) به نام <filename>/etc/ssl/certs/Falcot_CA.crt</filename> ذخیره می‌شود. گواهینامه سرور تنها در سرور ذخیره می‌شود (<filename>keys/vpn.falcot.com.crt</filename> به <filename>/etc/ssl/vpn.falcot.com.crt</filename> و <filename>keys/vpn.falcot.com.key</filename> به <filename>/etc/ssl/vpn.falcot.com.key</filename> تغییر نام می‌یابند همراه با مجوزهای محدودشده به طوری که تنها مدیرسیستم قابلیت خواندن داشته باشد) و پارامترهای Diffie-Hellman نیز (<filename>keys/dh2048.pem</filename>) در فایل <filename>/etc/openvpn/dh2048.pem</filename> نصب می‌گردند. گواهینامه‌های کلاینت هم به شیوه‌ای مشابه روی هر کلاینت VPN ذخیره می‌شوند.</para>
      </section>
      <section>
        <title>پیکربندی سرور OpenVPN</title>

	<para>به صورت پیش‌فرض، اسکریپت راه‌انداز OpenVPN اقدام به راه‌اندازی تمام شبکه‌های خصوصی مجازی تعریف شده در فایل <filename>/etc/openvpn/*.conf</filename> می‌کند. تنظیم یک سرور VPN به سادگی ذخیره‌سازی یک فایل پیکربندی در این دایرکتوری است. یک نقطه شروع مناسب عبارت است از <filename>/usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz</filename>، که یک سرور استاندارد را تنظیم می‌کند. البته، برخی پارامترها باید تغییر کنند: <literal>ca</literal>، <literal>cert</literal>، <literal>key</literal> و <literal>dh</literal> نیاز به تعریف مکان‌های انتخابی دارند (به ترتیب، <literal>/etc/ssl/certs/Falcot_CA.crt</literal>، <literal>/etc/ssl/vpn.falcot.com.crt</literal>، <literal>/etc/ssl/private/vpn.falcot.com.key</literal> و <literal>/etc/openvpn/dh2048.pem</literal>). عبارت <literal>server 10.8.0.0 255.255.255.0</literal> subnet مورد استفاده VPN را تعریف می‌کند؛ سرور از اولین نشانی IP در محدوده <literal>10.8.0.1</literal> استفاده می‌کند و سایر نشانی‌ها به کلاینت‌ها تخصیص داده می‌شوند.</para>

	<para>با این پیکربندی، اجرای OpenVPN رابط شبکه مجازی را ایجاد می‌کند، معمولا تحت عنوان <literal>tun0</literal>. اگرچه، فایروال‌ها اغلب به شیوه مشابه رابط‌های واقعی شبکه پیکربندی می‌شوند، که درست قبل از آغاز OpenVPN اتفاق می‌افتند. البته توصیه می‌شود که ابتدا یک رابط شبکه مجازی پایدار ایجاد گردد، سپس OpenVPN را مبتنی با آن تنظیم کرد. این کار امکان نامگذاری برای رابط را فراهم می‌آورد. برای اینکار، دستور <command>openvpn --mktun --dev vpn --dev-type tun</command> یک رابط شبکه مجازی به نام <literal>vpn</literal> از نوع <literal>tun</literal> ایجاد می‌کند؛ این دستور به سادگی می‌تواند در یک اسکریپت پیکربندی فایروال یا یک دستور <literal>up</literal> در فایل <filename>/etc/network/interfaces</filename> قرار گیرد. فایل پیکربندی OpenVPN نیز مطابق آن باید بروزرسانی گردد، با استفاده از عبارت‌های <literal>dev vpn</literal> و <literal>dev-type tun</literal>.</para>

	<para>بدون اقدام دیگری، کلاینت‌های VPN تنها از طریق نشانی <literal>10.8.0.1</literal> می‌توانند به سرور متصل گردند. برای صادر کردن مجوز دسترسی کلاینت‌ها به شبکه محلی (192.168.0.0/24)، نیاز است که عبارت <literal>push route 192.168.0.0 255.255.255.0</literal> به فایل پیکربندی OpenVPN اضافه گردد تا کلاینت‌ها به صورت خودکار به شبکه VPN موجود متصل گردند. علاوه بر این، رایانه‌های شبکه محلی نیاز دارند در رابطه با مسیریابی از طریق سرور VPN به آن‌ها اطلاع‌رسانی گردد (زمانی که سرور VPN به gateway متصل باشد این اتفاق می‌افتد). همین طور، سرور VPN می‌تواند به منظور ماسک‌گذاری IP پیکربندی گردد (<xref linkend="sect.gateway" /> را مشاهده کنید).</para>
      </section>
      <section>
        <title>پیکربندی کلاینت OpenVPN</title>

	<para>تنظیم یک کلاینت OpenVPN نیز نیازمند ایجاد یک فایل پیکربندی در <filename>/etc/openvpn/</filename> است. یک پیکربندی ساده می‌تواند مانند <filename>/usr/share/doc/openvpn/examples/sample-config-files/client.conf</filename> باشد. عبارت <literal>remote vpn.falcot.com 1194</literal> نشانی و درگاه سرور OpenVPN را مشخص می‌کند؛ <literal>ca</literal>، <literal>cert</literal> و <literal>key</literal> برای مشخص‌کردن محل فایل‌های کلید باید تعریف شوند.</para>

	<para>اگر نیاز به آغاز VPN هنگام راه‌اندازی اولیه نباشد، عبارت <literal>AUTOSTART</literal> را به <literal>none</literal> در فایل <filename>/etc/default/openvpn</filename> تنظیم کنید. شروع و پایان یک ارتباط VPN همیشه با استفاده از دستورات <command>service openvpn@<replaceable>name</replaceable> start</command> و <command>service openvpn@<replaceable>name</replaceable> stop</command> ممکن است (به صورتی که <replaceable>name</replaceable> ارتباط با نام موجود در فایل <filename>/etc/openvpn/<replaceable>name</replaceable>.conf</filename> منطبق است).</para>

	<para>بسته <emphasis role="pkg">network-manager-openvpn-gnome</emphasis> شامل یک افزونه برای مدیر شبکه است (<xref linkend="sect.roaming-network-config" /> را مشاهده کنید) که امکان مدیریت شبکه‌های خصوصی مجازی را فراهم می‌کند. این ابزار به هر کاربر امکان پیکربندی OpenVPN را از یک رابط گرافیکی می‌دهد. <indexterm><primary><emphasis role="pkg">network-manager-openvpn-gnome</emphasis></primary></indexterm></para>
      </section>
    </section>
    <section id="sect.ssh-vpn">
      <title>VPN به همراه SSH</title>
      <indexterm><primary>SSH</primary></indexterm>
      <indexterm><primary>PPP</primary></indexterm>

      <para>دو راه برای ایجاد شبکه خصوصی مجازی با استفاده از SSH وجود دارد. شیوه قدیمی‌تر شامل برقراری یک لایه PPP برفزار پیوند SSH است. این روش در یک سند جداگانه بررسی شده است: <ulink type="block" url="http://www.tldp.org/HOWTO/ppp-ssh/" /></para>

      <para>روش دوم جدیدتر است و با انتشار نسخه ۴.۳ از OpenSSH معرفی شد؛ اکنون برای OpenSSH امکان ایجاد رابط‌های مجازی شبکه (<literal>tun*</literal>) در هر دو سمت ارتباط SSH وجود دارد و این رابط‌های مجازی می‌توانند همانند رابط‌های فیزیکی پیکربندی گردند. سیستم تونل‌‌کشی ابتدا باید با تنظیم <literal>PermitTunnel</literal> به “yes” در فایل پیکربندی سرور SSH (<filename>/etc/ssh/sshd_config</filename>) فعال گردد. هنگام برقراری ارتباط SSH، ایجاد یک تونل باید به صورت اختصاصی و با گزینه <literal>-w any:any</literal> بیان شود (<literal>any</literal> می‌تواند با شماره دستگاه <literal>tun</literal> مورد نظر جایگزین گردد). این امر نیازمند داشتن دسترسی مدیریتی برای کاربر در هر دو سمت است، همان‌طور که برای ایجاد دستگاه شبکه مورد نیاز است (به عبارت دیگر، ارتباط باید از طریق root برقرار شود).</para>

      <para>هر دو روش ایجاد یک شبکه خصوصی مجازی از طریق SSH بسیار سرراست هستند. اگرچه، VPN که فراهم می‌کنند عملکرد بهینه‌ای نخواهد داشت؛ به طور مشخص، به خوبی نمی‌تواند ترافیک بالا را مدیریت کند.</para>

      <para>توضیح اینکه هنگام قراردادن یک پشته TCP/IP در یک ارتباط TCP/IP (برای SSH)، پروتکل TCP دو بار استفاده می‌شود، یکبار برای ارتباط SSH و بار دیگر برای تونل. این کار به مشکل بر می‌خورد، به خصوص از آنجا که TCP با تغییر در زمان تاخیر بسته‌ها، خود را با شبکه منطبق می‌سازد. سایت <ulink type="block" url="http://sites.inka.de/sites/bigred/devel/tcp-tcp.html" /> به جزئیات بیشتری از این مشکل می‌پردازد. VPN از طریق SSH تنها باید برای تونل‌های یک-طرفه بدون محدودیت عملکرد در نظر گرفته شود.</para>
    </section>
    <section id="sect.ipsec">
      <title>IPsec</title>
      <indexterm><primary>IPsec</primary></indexterm>
      <indexterm><primary><command>strongswan</command></primary></indexterm>
      <indexterm><primary><command>racoon</command></primary></indexterm>

      <para>IPsec، بر خلاف استاندارد بودن در IP ٰVPN، بیشتر در پیاده‌سازی آن نقش دارد. موتور IPsec در کرنل لینوکس قرار دارد؛ قسمت‌های مورد نظر فضای-کاربر، ابزارهای پیکربندی و کنترل توسط بسته <emphasis role="pkg">ipsec-tools</emphasis> فراهم شده‌اند. در حقیقت، هر فایل <filename>/etc/ipsec-tools.conf</filename> شامل پارامترهای <emphasis>IPsec tunnels</emphasis> (یا <emphasis>Security Associations</emphasis> در واژگان IPsec) است که میزبان با آن ارتباط دارد؛ اسکریپت <command>/etc/init.d/setkey</command> روشی برای آغاز و پایان یک تونل فراهم می‌کند (هر تونل یک پیوند امن به میزبان دیگری است که به شبکه خصوصی مجازی متصل است). این فایل می‌تواند به صورت دستی از مستندات موجود در صفحه راهنمای <citerefentry><refentrytitle>setkey</refentrytitle> <manvolnum>8</manvolnum></citerefentry> ساخته شود. البته، نوشتن پارامترهای تمام میزبان‌ها در یک مجموعه بزرگ از رایانه‌ها به آرامی به فرآیندی دشوار تبدیل می‌شود، چرا که تعداد تونل‌ها به سرعت افزایش می‌یابند. نصب یک فرآیند پس‌زمینه IKE (که مخفف <emphasis>IPsec Key Exchange</emphasis> است) مانند <emphasis role="pkg">racoon</emphasis> یا <emphasis role="pkg">strongswan</emphasis> به ساده‌تر شدن کار مدیریت آن‌ها به صورت مرکزی و امن‌تر شدن آن‌ها با بایگانی‌های متعدد منجز می‌شود.</para>
      <indexterm><primary>IKE</primary></indexterm>
      <indexterm><primary>IPsec</primary><secondary>تبادل کلید IPsec</secondary></indexterm>
      <indexterm><primary>زوج کلید</primary></indexterm>
      <indexterm><primary><command>setkey</command></primary></indexterm>

      <para>علی رغم وضعیت IPsec به عنوان یک راه حل جامع، پیچیدگی تنظیم آن در واقع منجر به کاهش استفاده‌اش می‌گردد. راه‌حل‌های مبتنی بر OpenVPN زمانی که تعداد تونل‌ها زیاد یا پویا نباشند ترجیخ داده می‌شوند.</para>

      <sidebar>
        <title><emphasis>احتیاط</emphasis> IPsec و NAT</title>

	<para>NATکردن فایروال و IPsec به خوبی با یکدیگر کار نمی‌کنند: از آنجا که IPsec بسته‌ها را امضا کرده، هر تغییری احتمالی روی این بسته‌ها توسط فایروال منجر به باطل‌شدن امضا می‌گردد و بسته‌ها در مقصد تحویل داده نمی‌شوند. بسیاری از پیاده‌سازی‌های IPsec اکنون با شامل شدن تکنیک <emphasis>NAT-T</emphasis> (به معنی <emphasis>NAT Traversal</emphasis>) با قراردادن بسته IPsec در یک بسته استاندارد UDP به این مشکل رسیدگی می‌کنند.</para>
        <indexterm><primary>NAT-T</primary></indexterm>
        <indexterm><primary>NAT Traversal</primary></indexterm>
      </sidebar>

      <sidebar>
        <title><emphasis>امنیت</emphasis> IPsec و فایروال‌ها</title>

	<para>حالت استاندارد عملیات IPsec شامل تبادل داده روی درگاه ۵۰۰ UDP برای تبادل کلید (یا درگاه ۴۵۰۰ UDP در صورت استفاده از NAT-T) است. علاوه بر این، بسته‌های IPsec از دو پروتکل اختصاصی IP استفاده می‌کنند که فایروال باید اجازه عبور آن‌ها را صادر کند؛ دریافت این بسته‌ها بر اساس شماره پروتکل آن‌ها است یعنی ۵۰ برای ESP و ۵۱ برای AH.</para>
        <indexterm><primary>ESP، پروتکل</primary></indexterm>
        <indexterm><primary>AH، پروتکل</primary></indexterm>
        <indexterm><primary>پروتکل</primary><secondary>AH</secondary></indexterm>
        <indexterm><primary>پروتکل</primary><secondary>ESP</secondary></indexterm>
      </sidebar>
    </section>
    <section id="sect.pptp">
      <title>PPTP</title>

      <para>PPTP که مخفف <emphasis>Point-to-Point Tunneling Protocol</emphasis> است از دو کانال ارتباطی استفاده می‌کند، یکی برای کنترل داده و دیگری برای تبادل آن؛ کانال دوم از پروتکل GRE یا <emphasis>Generic Routing Encapsulation</emphasis> استفاده می‌کند. سپس یک پیوند استاندارد PPP از طریق کانال اول صورت می‌گیرد.</para>
      <indexterm><primary>PPTP</primary></indexterm>
      <indexterm><primary>Point-to-Point Tunneling Protocol</primary></indexterm>
      <indexterm><primary>GRE، پروتکل</primary></indexterm>
      <indexterm><primary>پروتکل</primary><secondary>GRE</secondary></indexterm>
      <section id="sect.pptp-config-client">
        <title>پیکربندی کلاینت</title>

	<para>بسته <emphasis role="pkg">pptp-linux</emphasis> شامل یک کلاینت PPTP است که به راحتی برای کلاینت تنظیم می‌گردد. دستورالعمل پیش رو بر اساس مستندات رسمی آن الهام گرفته شده است: <ulink type="block" url="http://pptpclient.sourceforge.net/howto-debian.phtml" /></para>
        <indexterm><primary><emphasis role="pkg">pptp-linux</emphasis></primary></indexterm>

	<para>مدیرسیستم‌های فالکوت فایل‌های متعددی ایجاد کرده‌اند: <filename>/etc/ppp/options.pptp</filename>، <filename>/etc/ppp/peers/falcot</filename>، <filename>/etc/ppp/ip-up.d/falcot</filename> و <filename>/etc/ppp/ip-down.d/falcot</filename>.</para>

        <example id="example.ppp-options.pptp">
          <title>فایل <filename>/etc/ppp/options.pptp</filename></title>

          <programlisting>
# PPP options used for a PPTP connection
lock
noauth
nobsdcomp
nodeflate</programlisting>
        </example>

        <example id="example.ppp-peers-falcot">
          <title>فایل <filename>/etc/ppp/peers/falcot</filename></title>

          <programlisting>
# vpn.falcot.com is the PPTP server
pty "pptp vpn.falcot.com --nolaunchpppd"
# the connection will identify as the "vpn" user
user vpn
remotename pptp
# encryption is needed
require-mppe-128
file /etc/ppp/options.pptp
ipparam falcot</programlisting>
        </example>

        <example id="example.ppp-ip-up.d-falcot">
          <title>فایل <filename>/etc/ppp/ip-up.d/falcot</filename></title>

          <programlisting>
# Create the route to the Falcot network
if [ "$6" = "falcot" ]; then
  # 192.168.0.0/24 is the (remote) Falcot network
  route add -net 192.168.0.0 netmask 255.255.255.0 dev $1
fi</programlisting>
        </example>

        <example id="example.ppp-ip-down.d-falcot">
          <title>فایل <filename>/etc/ppp/ip-down.d/falcot</filename></title>

          <programlisting>
# Delete the route to the Falcot network
if [ "$6" = "falcot" ]; then
  # 192.168.0.0/24 is the (remote) Falcot network
  route del -net 192.168.0.0 netmask 255.255.255.0 dev $1
fi</programlisting>
        </example>

        <sidebar>
          <title><emphasis>امنیت</emphasis> MPPE</title>

	  <para>امن‌کردن PPTP مستلزم استفاده از ویژگی MPPE یا <emphasis>Microsoft Point-to-Point Encryption</emphasis> است، که در کرنل‌های رسمی دبیان به عنوان یک ماژول موجود است.</para>
          <indexterm><primary>MPPE</primary></indexterm>
          <indexterm><primary>مایکروسافت</primary><secondary>رمزنگاری نقطه-به-نقطه</secondary></indexterm>
        </sidebar>
      </section>
      <section id="sect.pptp-config-serveur">
        <title>پیکربندی سرور</title>

        <sidebar>
          <title><emphasis>احتیاط</emphasis> PPTP و فایروال‌ها</title>

	  <para>فایروال‌های میانی باید طوری پیکربندی شوند که اجازه عبور بسته‌های IP با استفاده از پروتکل ۴۷ GRE را داشته باشند. علاوه بر این، درگاه ۱۷۲۳ از سرور PPTP به منظور برقراری کانال ارتباطی باید باز باشند.</para>
        </sidebar>

	<para><command>pptpd</command> سرور PPTP برای لینوکس است. فایل اصلی پیکربندی آن، <filename>/etc/pptpd.conf</filename>، نیاز به تغییرات اندکی دارد: <emphasis>localip</emphasis> (نشانی محلی) و <emphasis>remoteip</emphasis> (نشانی راه‌دور). در نمونه زیر، سرور PPTP همیشه از نشانی <literal>192.168.0.199</literal> استفاده می‌کند و کلاینت‌ها نیز نشانی خود را بین بازه <literal>192.168.0.200</literal> تا <literal>192.168.0.250</literal> دریافت می‌کنند.</para>

        <example id="example.pptpd.conf">
          <title>فایل <filename>/etc/pptpd.conf</filename></title>

          <programlisting>
# TAG: speed
#
#       Specifies the speed for the PPP daemon to talk at.
#
speed 115200

# TAG: option
#
#       Specifies the location of the PPP options file.
#       By default PPP looks in '/etc/ppp/options'
#
option /etc/ppp/pptpd-options

# TAG: debug
#
#       Turns on (more) debugging to syslog
#
# debug

# TAG: localip
# TAG: remoteip
#
#       Specifies the local and remote IP address ranges.
#
#       You can specify single IP addresses separated by commas or you can
#       specify ranges, or both. For example:
#
#               192.168.0.234,192.168.0.245-249,192.168.0.254
#
#       IMPORTANT RESTRICTIONS:
#
#       1. No spaces are permitted between commas or within addresses.
#
#       2. If you give more IP addresses than MAX_CONNECTIONS, it will
#          start at the beginning of the list and go until it gets
#          MAX_CONNECTIONS IPs. Others will be ignored.
#
#       3. No shortcuts in ranges! ie. 234-8 does not mean 234 to 238,
#          you must type 234-238 if you mean this.
#
#       4. If you give a single localIP, that's ok - all local IPs will
#          be set to the given one. You MUST still give at least one remote
#          IP for each simultaneous client.
#
#localip 192.168.0.234-238,192.168.0.245
#remoteip 192.168.1.234-238,192.168.1.245
#localip 10.0.1.1
#remoteip 10.0.1.2-100
localip 192.168.0.199
remoteip 192.168.0.200-250</programlisting>
        </example>

	<para>پیکربندی PPP مورد استفاده سرور PPTP نیازمند برخی تغییرات در <filename>/etc/ppp/pptpd-options</filename> است. پارامترهای مهم عبارتند از نام سرور (<literal>pptp</literal>)، نام دامنه (<literal>بشمزخف.زخپ</literal>) و نشانی‌های IP برای سرورهای DNS و WINS.</para>

        <example id="example.ppp-pptpd-options">
          <title>فایل <filename>/etc/ppp/pptpd-options</filename></title>

          <programlisting>
## turn pppd syslog debugging on
#debug

## change 'servername' to whatever you specify as your server name in chap-secrets
name pptp
## change the domainname to your local domain
domain falcot.com

## these are reasonable defaults for WinXXXX clients
## for the security related settings
# The Debian pppd package now supports both MSCHAP and MPPE, so enable them
# here. Please note that the kernel support for MPPE must also be present!
auth
require-chap
require-mschap
require-mschap-v2
require-mppe-128

## Fill in your addresses
ms-dns 192.168.0.1
ms-wins 192.168.0.1

## Fill in your netmask
netmask 255.255.255.0

## some defaults
nodefaultroute
proxyarp
lock</programlisting>
        </example>

	<para>آخرین گام ثبت کاربر <literal>vpn</literal> و گذرواژه مربوط به آن در فایل <filename>/etc/ppp/chap-secrets</filename> است. بر خلاف مواقعی که کاراکتر ستاره (<literal>*</literal>) کار می‌کرد، نام سرور مشخصا باید در این قسمت درج شود. علاوه بر این، کلاینت‌های PPTP در ویندوز خود را به صورت <literal><replaceable>DOMAIN</replaceable>\\<replaceable>USER</replaceable></literal> معرفی می‌کنند به جای اینکه تنها نام کاربری را نشان دهند. به همین دلیل است که فایل به کاربر <literal>FALCOT\\vpn</literal> اشاره کرده است. همچنین امکان اختصاص نشانی‌های IP انفرادی برای هر کاربر وجود دارد؛ یک کاراکتر ستاره در این قسمت به معنای استفاده از نشانی‌های پویا است.</para>

        <example id="example.ppp-chap-secrets">
          <title>فایل <filename>/etc/ppp/chap-secrets</filename></title>

          <programlisting>
# Secrets for authentication using CHAP
# client        server  secret      IP addresses
vpn             pptp    f@Lc3au     *
FALCOT\\vpn     pptp    f@Lc3au     *</programlisting>
        </example>

        <sidebar>
          <title><emphasis>امنیت</emphasis> آسیب‌پذیری‌های PPTP</title>

	  <para>اولین پیاده‌سازی PPTP از مایکروسافت باعث انتقادات بسیاری شد چرا که آسیب‌پذیری‌های امنیتی زیادی را شامل می‌شد؛ اکثر آن‌ها با انتشارهای بعدی برطرف شدند. پیکربندی که در این قسمت توضیح داده شد از آخرین نسخه این پروتکل استفاده می‌کند. آگاه باشید که حذف کردن برخی گزینه‌ها (مانند <literal>require-mppe-128</literal> و <literal>require-mschap-v2</literal>) به آسیب‌پذیری مجدد سروس منجر می‌شوند.</para>
        </sidebar>
      </section>
    </section>
  </section>
  <section id="sect.quality-of-service">
    <title>کیفیت سرویس</title>
    <section id="sect.qos-principe">
      <title>Principle and Mechanism</title>

      <para>عبارت <emphasis>QoS</emphasis> یا <emphasis>Quality of Service</emphasis> به برخی تکنیک‌ها اشاره می‌کند که کیفیت استفاده از یک سرویس را تضمین می‌کنند. محبوب‌ترین این تکنیک‌ها شامل طبقه‌بندی ترافیک شبکه به دسته‌های مختلف و تفاوت قائل‌شدن بین مدیریت هر دسته است. کارکرد اصلی مفهوم تفاوت‌ قائل‌شدن بین سرویس‌ها در <emphasis>traffic shaping</emphasis> است، که نرخ تبادل داده را برای برخی سرویس‌ها یا میزبان‌ها به منظور اشباع‌نشدن پهنای باند محدود می‌سازد. شکل‌دهی به ترافیک یک روش موثر در ترافیک TCP است، چرا که این پروتکل به صورت خودکار با پهنای باند موجود سازگار خواهد شد.</para>
      <indexterm><primary>QoS</primary></indexterm>
      <indexterm><primary>کیفیت سرویس</primary></indexterm>
      <indexterm><primary>کیفیت</primary><secondary>سرویس</secondary></indexterm>
      <indexterm><primary>سرویس</primary><secondary>کیفیت</secondary></indexterm>

      <para>همچنین امکان تغییر اولویت در ترافیک نیز وجود دارد، که به اولویت‌بندی بسته‌های مرتبط با سرویس‌های تعاملی (مانند <command>ssh</command> یا <command>telnet</command>) یا سرویس‌هایی که با تنها با حجم کوچکی از داده سر و کار دارند، می‌پردازد.</para>

      <para>کرنل‌های دبیان شامل قابلیت‌های مورد نیاز QoS با همراه ماژول‌های آن هستند. تعداد این ماژول‌ها زیاد است و هر یک سرویس مختلفی را ارائه می‌دهد، به خصوص به شیوه زمان‌بندی برای صف بسته‌های IP؛ بازه گسترده زمان‌بندی موجود از تمام بازه ممکن نیازمندی‌ها فراتر می‌رود.</para>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> LARTC — <emphasis>Linux Advanced Routing &amp; Traffic Control</emphasis></title>

	<para>راهنمای <emphasis>Linux Advanced Routing &amp; Traffic Control</emphasis> سندی جامع برای هر آنچه در مورد کیفیت سرویس شبکه است، می‌باشد. <ulink type="block" url="http://www.lartc.org/howto/" /></para>
        <indexterm><primary>مسیریابی</primary><secondary>پیشرفته</secondary></indexterm>
        <indexterm><primary>ترافیک</primary><secondary>کنترل</secondary></indexterm>
        <indexterm><primary>کنترل ترافیک</primary></indexterm>
      </sidebar>
    </section>
    <section id="sect.qos-config">
      <title>پیکربندی و پیاده‌سازی</title>

      <para>پارامترهای QoS از طریق دستور <command>tc</command> تنظیم می‌شوند (که توسط بسته <emphasis role="pkg">iproute</emphasis> فراهم شده است). از آنجا که شامل رابط به نسبت پیچیده‌ای است، استفاده از یک ابزار سطح-بالاتر توصیه می‌شود.</para>
      <indexterm><primary><emphasis>iproute</emphasis></primary></indexterm>
      <indexterm><primary><command>tc</command></primary></indexterm>
      <section id="sect.qos-wondershaper">
        <title>کاهش‌ تاخیر: <command>wondershaper</command></title>

	<para>هدف اصلی از <command>wondershaper</command> (در بسته‌ای مشابه همین نام) به حداقل رساندن تاخیر مستقل از بار موجود در شبکه است. اینکار با محدودکردن ترافیک کل به مقداری که کمی از مقدار اشباع شبکه کمتر باشد صورت می‌گیرد.</para>
        <indexterm><primary><command>wondershaper</command></primary></indexterm>
        <indexterm><primary>محدودسازی ترافیک</primary></indexterm>
        <indexterm><primary>ترافیک</primary><secondary>محدودسازی</secondary></indexterm>

	<para>زمانی که رابط شبکه پیکربندی شده باشد، تنظیم این محدودیت ترافیک با اجرای دستور <command>wondershaper <replaceable>interface</replaceable> <replaceable>download_rate</replaceable> <replaceable>upload_rate</replaceable></command> صورت می‌گیرد. برای نمونه، رابط می‌تواند <literal>eth0</literal> یا <literal>ppp0</literal> باشد و هر دو نرخ تبادل داده به صورت کلیوبیت بر ثانیه بیان می‌شوند. دستور <command>wondershaper remove <replaceable>interface</replaceable></command> محدودیت ترافیک روی رابط شبکه مشخص شده را حذف می‌کند.</para>

	<para>برای یک ارتباط Ethernet، بهتر است این اسکریپت پس از پیکربندی آن فراخوانی شود. اینکار با استفاده از عبارت‌های <literal>up</literal> و <literal>down</literal> در فایل <filename>/etc/network/interfaces</filename> که امکان فراخوانی دستورات دیگر پس از بالا آمدن رابط و قبل از قطع شدن آن است را، فراهم می‌آورد. برای نمونه:</para>

        <example id="example.network-interfaces">
          <title>تغییرات در فایل <filename>/etc/network/interfaces</filename></title>

          <programlisting>
iface eth0 inet dhcp
    up /sbin/wondershaper eth0 500 100
    down /sbin/wondershaper remove eth0</programlisting>
        </example>

	<para>در مورد PPP، ایجاد اسکریپتی که <command>wondershaper</command> را در فایل <filename>/etc/ppp/ip-up.d/</filename> فراخوانی کند، منجر به فعال‌سازی محدودیت ترافیک پس از برقراری ارتباط می‌گردد.</para>

        <sidebar>
          <title><emphasis>مطالعه بیشتر</emphasis> پیکربندی بهینه</title>

	  <para>فایل <filename>/usr/share/doc/wondershaper/README.Debian.gz</filename> شیوه پیکربندی توصیه شده توسط مدیر بسته را توضیح می‌دهد. به طور خاص، پیشنهاد می‌کند که نرخ دانلود و آپلود با مقادیر حقیقی آن‌ها همخوانی داشته باشد.</para>
        </sidebar>
      </section>
      <section id="sect.qos-config-standard">
        <title>پیکربندی استاندارد</title>

	<para>بجز پیکربندی‌های خاص QoS، کرنل لینوکس از یک زمان‌بند صف <literal>pfifo_fast</literal> استفاده می‌کند که شامل ویژگی‌های جالبی است. اولویت هر بسته IP پردازش شده بر اساس فیلد ToS یا <emphasis>Type of Service</emphasis> آن بسته مشخص می‌شود؛ تغییر این فیلد باعث می‌شود که از قابلیت‌های این زمان‌بند بتوانید به خوبی استفاده کنید. پنج مقدار ممکن برای آن وجود دارند؛</para>
        <itemizedlist>
          <listitem>
	    <para>سرویس-عادی (۰)؛</para>
          </listitem>
          <listitem>
	    <para>کاهش-هزینه (۲)؛</para>
          </listitem>
          <listitem>
	    <para>افزایش-قابلیت اعتماد (۴)؛</para>
          </listitem>
          <listitem>
	    <para>افزایش-قدرت خروجی (۸)؛</para>
          </listitem>
          <listitem>
	    <para>کاهش-تاخیر (۱۶).</para>
          </listitem>
        </itemizedlist>
        <indexterm><primary>ToS</primary></indexterm>
        <indexterm><primary>نوع سرویس</primary></indexterm>

	<para>فیلد ToS می‌تواند توسط برنامه‌هایی که بسته‌های IP را تولید می‌کنند ایجاد گردد یا به صورت درجا توسط <emphasis>netfilter</emphasis> تغییر یابد. قواعد پیش رو برای افزایش توان پاسخگویی سرویس SSH در یکی سرور کافی هستند:</para>

        <programlisting role="scale">
iptables -t mangle -A PREROUTING -p tcp --sport ssh -j TOS --set-tos Minimize-Delay
iptables -t mangle -A PREROUTING -p tcp --dport ssh -j TOS --set-tos Minimize-Delay</programlisting>
      </section>
    </section>
  </section>
  <section id="sect.dynamic-routing">
    <title>مسیریابی پویا</title>
    <indexterm><primary>مسیریابی</primary><secondary>پویا</secondary></indexterm>
    <indexterm><primary><command>quagga</command></primary></indexterm>
    <indexterm><primary><command>zebra</command></primary></indexterm>

    <para>ابزار مرجع برای کار با مسیریابی پویا <command>quagga</command> است، از بسته‌ای با نام مشابه؛ سابق بر این از <command>zebra</command> استفاده می‌شد تا زمانی که دیگر توسعه آن ادامه نیافت. اگرچه، <command>quagga</command> برای سازگاری با برنامه‌های دیگر از اصول نامگذاری <command>zebra</command> که در ادامه می‌آید تبعیت می‌کند.</para>

    <sidebar>
      <title><emphasis>بازگشت به مقدمات</emphasis> مسیریابی پویا</title>

      <para>مسیریابی پویا به مسیریاب‌ها اجازه می‌دهد که در کوچکترین بازه زمانی مسیر بسته‌های IP را تغییر دهند. هر پروتکل نیز شیوه خود را برای اینکار دارد (کوتاه‌ترین مسیر، استفاده از مسیرهای پیشنهادی و از این قبیل).</para>

      <para>در کرنل لینوکس، یک مسیر بین کارت شبکه و مجموعه‌ای از رایانه‌های قابل دسترس از طریق آن پیوند می‌زند. دستور <command>route</command> علاوه بر نمایش مسیرهای فعلی می‌تواند برای ایجاد مسیرهای جدید نیز استفاده شود.</para>
      <indexterm><primary><command>route</command></primary></indexterm>
    </sidebar>

    <para>Quagga مجموعه‌ای از فرآیندهای پس‌زمینه هستند که جدول‌های مسیریابی مورد نیاز کرنل لینوکس را فراهم می‌آورند؛ هر پروتکل مسیریابی (از جمله BGP، OSPF و RIP) فرآیند پس‌زمینه خود را ارائه می‌دهد. فرآیند پس‌زمینه <command>zebra</command> با جمع‌آوری اطلاعات از سایر فرآیندها به مدیریت جدول‌های مسیریابی ایستا می‌پردازد. سایر فرآیندهای پس‌زمینه عبارتند از <command>bgpd</command>، <command>ospfd</command>، <command>ospf6d</command>، <command>ripd</command>، <command>ripngd</command>، <command>isisd</command> و <command>babeld</command></para>
    <indexterm><primary>OSPF</primary></indexterm>
    <indexterm><primary>BGP</primary></indexterm>
    <indexterm><primary>RIP</primary></indexterm>
    <indexterm><primary>IS-IS</primary></indexterm>
    <indexterm><primary>BABEL wireless mesh routing</primary></indexterm>
    <indexterm><primary><command>bgpd</command></primary></indexterm>
    <indexterm><primary><command>ospfd</command></primary></indexterm>
    <indexterm><primary><command>ospf6d</command></primary></indexterm>
    <indexterm><primary><command>ripd</command></primary></indexterm>
    <indexterm><primary><command>ripngd</command></primary></indexterm>
    <indexterm><primary><command>isisd</command></primary></indexterm>
    <indexterm><primary><command>babeld</command></primary></indexterm>

    <para>فرآیندهای پس‌زمینه با ویرایش فایل <filename>/etc/quagga/daemons</filename> و ایجاد پیکربندی‌های مناسب در <filename>/etc/quagga/</filename> فعال می‌شوند؛ این فایل پیکربندی باید بر اساس فرآیند پس‌زمینه خود نامگذاری شود به همراه یک پسوند <filename>.conf</filename> به صورتی که به کاربر <literal>quagga</literal> و گروه <literal>quaggavty</literal> تعلق داشته باشد، به منظور اینکه اسکریپت <filename>/etc/init.d/quagga</filename> بتواند آن را فراخوانی کند.</para>

    <para>پیکربندی هر یک از این فرآیندهای پس‌زمینه نیازمند داشتن دانش مرتبط با پروتکل مسیریابی مرتبط با آن است. در اینجا نمی‌توان به توضیح این پروتکل‌ها پرداخت اما بسته <emphasis role="pkg">quagga-doc</emphasis> اطلاعات فراوانی را درباره هر یک به صورت فایل <command>info</command> شامل می‌شود. همین محتوا می‌تواند از طریق وبسایت رسمی Quagga مرور شود: <ulink type="block" url="http://www.nongnu.org/quagga/docs/docs-info.html" /></para>

    <para>علاوه بر این، شیوه دستوری آن بسیار نزدیک به پیکربندی استاندارد مسیریاب‌ها است و مدیریان شبکه به راحتی می‌توانند با <command>quagga</command> ارتباط برقرار کنند.</para>

    <sidebar>
      <title><emphasis>در عمل</emphasis> OSPF، BGP یا RIP؟</title>

      <para>OSPF به صورت عمومی بهترین پروتکل برای مسیریابی پویا در شبکه‌های خصوصی است، اما BGP بیشتر در شبکه‌های اینترنتی استفاده می‌شود. RIP نیز قدیمی شده و کمتر مورد استفاده قرار می‌گیرد.</para>
    </sidebar>
  </section>
  <section id="sect.ipv6">
    <title>IPv6</title>

    <para>IPv6، ادامه دهنده راه IPv4، نسخه جدیدی از پروتکل IP است که برای حل مشکلات قدیمی آن طراحی شده است، به خصوص محدودیت در تعداد نشانی‌های IP موجود. این پروتکل با لایه شبکه سر و کار دارد؛ هدف آن فراهم کردن راهی برای نشانی‌دهی به رایانه‌ها است به صورتی که داده را به مقصد خود هدایت و در صورت نیاز گسستگی داده را مدیریت کنند (به عبارت دیگر، کوجک‌کردن بسته‌ها متناسب با اندازه شبکه به صورتی که در مقصد به همان ترتیب ارسالی، دریافت گردند).</para>

    <para>کرنل‌های دبیان از IPv6 در هسته خود بهره می‌برند (به استثنا معماری‌هایی که آن را به صورت یک ماژول با نام <literal>ipv6</literal> قرار داده‌اند). ابزار پایه‌ای مانند <command>ping</command> و <command>traceroute</command> معادل IPv6 خود را با نام‌های <command>ping6</command> و <command>traceroute6</command> دارا هستند که این ابزارها در بسته‌های <emphasis role="pkg">iputils-ping</emphasis> و <emphasis role="pkg">iputils-tracepath</emphasis> قرار گرفته‌اند.</para>
    <indexterm><primary>IPv6</primary></indexterm>
    <indexterm><primary><emphasis role="pkg">iputils-ping</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="pkg">iputils-tracepath</emphasis></primary></indexterm>

    <para>شبکه IPv6 نیز مشابه با IPv4 در فایل <filename>/etc/network/interfaces</filename> پیکربندی می‌شود. اما اگر می‌خواهید این شبکه از خارج نیز قابل دسترس باشد به مسیریابی نیاز دارید که توانایی مدیریت بسته‌های IPv6 را دارا باشد.</para>

    <example id="example.network-interfaces-ipv6">
      <title>نمونه‌ای از پیکربندی IPv6</title>

      <programlisting>
iface eth0 inet6 static
    address 2001:db8:1234:5::1:1
    netmask 64
    # Disabling auto-configuration
    # autoconf 0
    # The router is auto-configured and has no fixed address
    # (accept_ra 1). If it had:
    # gateway 2001:db8:1234:5::1</programlisting>
    </example>

    <para>زیرشبکه‌های IPv6 معمولا netmask برابر با ۶۴ بیت دارند. این به معنی وجود 2<superscript>64</superscript> نشانی منحصربفرد در زیرشبکه است. Stateless Address Autoconfiguration یا <acronym>SLAAC</acronym> امکان انتخاب یک نشانی بر اساس نشانی MAC رابط شبکه داخلی را پیدا می‌کند. به صورت پیشفرض، اگر <acronym>SLAAC</acronym> روی شبکه شما و IPv6 روی رایانه شما فعال باشند، کرنل به صورت خودکار مسیریاب‌های IPv6 را پیدا کرده و رابط‌های شبکه را مطابق با آن پیکربندی می‌کند.</para>

    <para>این عملکرد ممکن است پیامدهای نقض حریم خصوصی داشته باشد. اگر به صورت مداوم بین شبکه‌ها سوئیچ می‌کنید، مانند یک لپ‌تاپ، شاید نخواهید که نشانی <acronym>MAC</acronym> شما بخشی از نشانی IPv6 باشد. اینکار به تشخیص دستگاه مشابه در همان شبکه کمک می‌کند. راه حل این مشکل افزونه‌های حریم‌خصوصی IPv6 هستند (که دبیان به صورت پیشفرض فعال دارد اگر ارتباط IPv6 طی فرآیند نصب اولیه تشخیص داده شود) که به صورت خودکار یک عدد تصادفی را به رابط شبکه اختصاص می‌دهند، آن‌ها را به صورت مداوم تغییر داده و برای ارتباطات ارسالی از آن‌ها استفاده می‌کنند. ارتباطات دریافتی نیز می‌توانند از نشانی تولید شده توسط SLACC استفاده کنند. نمونه پیش رو، برای استفاده در <filename>/etc/network/interfaces</filename>، این افزونه‌های حریم‌خصوصی را فعال می‌کند.</para>

    <example id="example.network-interface-ipv6-privext">
      <title>افزونه‌های حریم‌خصوصی IPv6</title>

      <programlisting>
iface eth0 inet6 auto
    # Prefer the randomly assigned addresses for outgoing connections.
    privext 2</programlisting>
    </example>

    <sidebar>
      <title><emphasis>نکته</emphasis> برنامه‌هایی که با IPv6 ساخته می‌شوند</title>

      <para>بسیاری از نرم‌افزارها نیازمند سازگاری با IPv6 هستند. اکثر بسته‌های موجود در دبیان با آن منطبق شده‌اند، اما نه همه آن‌ها. اگر بسته محبوب شما هم اکنون از IPv6 استفاده نمی‌کند، می‌توانید در فهرست-پستی <emphasis>debian-ipv6</emphasis> درخواست راهنمایی کنید. ممکن است این افراد جایگزین مناسبی برای آن بدانند یا راهنمایی‌های بیشتر به حل مشکل شما بپردازند. <ulink type="block" url="http://lists.debian.org/debian-ipv6/" /></para>
    </sidebar>

    <indexterm><primary>فایروال IPv6</primary></indexterm>
    <indexterm><primary>فایروال</primary><secondary>IPv6</secondary></indexterm>
    <indexterm><primary><command>ip6tables</command></primary></indexterm>
    <para>ارتباطات IPv6 می‌توانند محدود شوند، به همان شیوه IPv4: کرنل‌های استاندارد دبیان شامل یک برنامه منطبق بر <emphasis>netfilter</emphasis> هستند. این <emphasis>netfilter</emphasis> مبتنی بر IPv6 به شیوه‌ای مشابه با معادل IPv4 خودر پیکربندی می‌شود، بجز برنامه‌ای که از آن استفاده می‌کند <command>ip6tables</command> است و نه <command>iptables</command>.</para>

    <section id="sect.ipv6-tunneling">
      <title>تونل‌زنی</title>

      <sidebar>
        <title><emphasis>احتیاط</emphasis> تونل‌زنی IPv6 و فایروال‌ها</title>

        <para>تونل‌زنی IPv6 برفراز IPv4 (بر خلاف IPv6 اصلی) نیازمند قبول ترافیک دریافتی برای فایروال است که از پروتکل شماره ۴۱ مربوط به IPv4 استفاده می‌کند.</para>
      </sidebar>

      <para>اگر یک ارتباط واقعی IPv6 قابل برقراری نباشد، شیوه جایگزین آن استفاده از یک تونل مبتنی بر IPv4 است. Gogo6 یک ارائه دهنده (آزاد) چنین تونل‌هایی است: <ulink type="block" url="http://www.gogo6.com/freenet6/tunnelbroker" /></para>
      <indexterm><primary>Freenet6</primary></indexterm>
      <indexterm><primary>Gogo6</primary></indexterm>

      <para>برای استفاده از یک تونل Freenet6، نیاز دارید که یک حساب کاربری رسمی در وبسایت Freenet6 بسازید، سپس بسته <emphasis role="pkg">gogoc</emphasis> را نصب کرده و تونل را پیکربندی کنید. اینکار نیازمند ویرایش فایل <filename>/etc/gogoc/gogoc.conf</filename> است: <literal>userid</literal> و <literal>password</literal> که توسط ایمیل دریافت می‌گردند باید پر شوند و خط <literal>server</literal> باید با <literal>authenticated.freenet6.net</literal> جایگزین گردد.</para>

      <para>با افزودن سه دستور زیر در فایل <filename>/etc/gogoc/gogoc.conf</filename>، ارتباطات IPv6 به صورت خودکار روی رایانه‌های شبکه محلی تنظیم خواهد شد (با فرض اینکه شبکه محلی به رابط eth0 متصل باشد):</para>

      <programlisting>
host_type=router
prefixlen=56
if_prefix=eth0</programlisting>

      <para>رایانه به یک مسیریاب موجود برای زیرشبکه با پسوند ۵۶-بیت تبدیل خواهد شد. زمانی که تونل از این تغییر اطلاع یابد، اما شبکه محلی باید از این تغییر آگاه شود؛ اینکار نیازمند فرآیند پس‌زمینه <command>radvd</command> (از بسته‌ای مشابه همین نام) است. این پیکربندی فرآیند پس‌زمینه IPv6 نقش مشابهی مانند <command>dhcpd</command> در دنیای IPv4 دارد.</para>

      <para>فایل پیکربندی <filename>/etc/radvd.conf</filename> سپس باید ایجاد گردد (برای شروع به فایل <filename>/usr/share/doc/radvd/examples/simple-radvd.conf</filename> مراجعه کنید). در مورد ما، تنها تغییر مورد نیاز پیشوند است که باید با عبارت جایگزین ارائه شده توسط Freenet6 تغییر یابد؛ می‌تواند در خروجی دستور <command>ifconfig</command> پیدا شود، در بلاکی که مرتبط با رابط <literal>tun</literal> است.</para>
      <indexterm><primary><command>radvd</command></primary></indexterm>

      <para>سپس دستورات <command>service gogoc restart</command> و <command>service gogoc start</command> را اجرا کرده تا شبکه IPv6 به خوبی کار کند.</para>
    </section>

  </section>
  <section id="sect.domain-name-servers">
    <title>سرورهای نام دامنه (DNS)</title>
    <section id="sect.dns-principe">
      <title>Principle and Mechanism</title>
      <indexterm><primary>DNS</primary></indexterm>
      <indexterm><primary>سرور</primary><secondary>نام</secondary></indexterm>

      <para><emphasis>سرویس نام دامنه</emphasis> (DNS) یک جز اساسی از اینترنت به حساب می‌آید: کار آن نگاشت نام‌ دامنه به نشانی IP (و برعکس) است، به طوری که امکان استفاده <literal>www.debian.org</literal> بجای <literal>5.153.231.4</literal> یا <literal>2001:41c8:1000:21::21:4</literal> را فراهم می‌کند.</para>

      <para>رکوردهای DNS به صورت منطقه یا zone طبقه‌بندی می‌شوند؛ هر منطقه شامل یک دامنه (یا زیردامنه) یا یک نشانی IP (از آنجا که این نشانی‌ها به صورت متوالی تخصیص داده می‌شوند) است. یک سرور اصلی قابلیت مدیریت محتوای یک منطقه را دارد؛ سرورهای فرعی، که معمولا روی رایانه‌های جداگانه قرار می‌گیرند، رونوشت‌های تازه‌ای از منطقه اصلی را فراهم می‌آورند.</para>
      <indexterm><primary>منطقه</primary><secondary>DNS</secondary></indexterm>
      <indexterm><primary>DNS</primary><secondary>منطقه</secondary></indexterm>

      <para>هر منطقه می‌تواند شامل رکوردها با انواع گوناگونی باشد (<emphasis>Resource Records</emphasis>):</para>
      <itemizedlist>
        <listitem>
	  <para><literal>A</literal>: نشانی IPv4. <indexterm><primary>A، رکورد DNS</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>CNAME</literal>: نام مستعار (<emphasis>canonical name</emphasis>). <indexterm><primary>CNAME، DNS record</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>MX</literal>: <emphasis>mail exchange</emphasis>، یک سرور ایمیل. این اطلاعات توسط سایر سرورهای ایمیل برای یافتن مکان مورد نیاز جهت ارسال نشانی‌های ایمیل است. هر رکورد MX یک اولویت دارد. سرور اولویت-بالا (با کمترین عدد) ابتدا استفاده می‌شود (قسمت <xref linkend="sidebar.smtp" /> را مشاهده کنید)؛ در صورت عدم برقراری ارتباط با این سرور، سایر سرورها بر اساس اولویت خود مورد استفاده قرار می‌گیرند. <indexterm><primary>MX</primary><secondary>DNS record</secondary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>PTR</literal>: نگاشت یک نشانی IP به یک منطقه. چنین رکوردی در یک منطقه “DNS معکوس” نامگذاری شده با محدوده نشانی IP قرار می‌گیرد. برای نمونه، <literal>1.168.192.in-addr.arpa</literal> منطقه شامل نگاشت برعکس برای تمام نشانی‌های موجود در بازه <literal>192.168.1.0/24</literal> است. <indexterm><primary>PTR, DNS record</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>AAAA</literal>: نشانی‌های IPv6. <indexterm><primary>AAAA، رکورد DNS</primary></indexterm></para>
        </listitem>
        <listitem>
	  <para><literal>NS</literal>: یک نام را به یک سرور نام نگاشت می‌کند. هر دامنه حداقل باید یک رکورد NS داشته باشد. این رکوردها به سرور DNS اشاره می‌کنند که می‌توانند به درخواست‌های این دامنه پاسخ دهند؛ معمولا به سرورهای اصلی و فرعی این دامنه اشاره دارند. این رکوردها همچنین اجازه DNS Delegation را می‌دهند؛ برای نمونه، منطقه <literal>falcot.com</literal> می‌تواند شامل یک رکورد NS برای <literal>falcot.com</literal> باشد، که یعنی منطقه <literal>internal.falcot.com</literal> توسط سرور دیگری مدیریت می‌شود. البته، این سرور باید یک منطقه <literal>internal.falcot.com</literal> را تعریف کند. <indexterm><primary>NS, DNS record</primary></indexterm></para>
        </listitem>
      </itemizedlist>
      
      <indexterm><primary>رکورد</primary><secondary>DNS</secondary></indexterm>
      <indexterm><primary>رکورد DNS</primary></indexterm>

      <para>Bind، سرور نام مرجع، توسط ISC (<emphasis>Internet Software Consortium</emphasis>) توسعه یافته و مدیریت می‌شود. در دبیان توسط بسته <emphasis role="pkg">bind9</emphasis> ارائه می‌گردد. نسخه ۹ شامل دو تغییر بزرگ در مقایسه با نسخه‌های پیشین است. ابتدا، سرور DNS اکنون می‌تواند تحت فرمان یک کاربر عادی نیز کار کند، به منظور اینکه در زمان بروز آسیب‌پذیری امنیتی مجوزهای اصلی آن به فرد مهاجم منتقل نشود (طوری که در نسخه‌های ۸ دیده می‌شد).</para>

      <para>علاوه بر این، Bind از استاندارد DNSSEC برای امضا (و احراز هویت) رکوردهای DNS پشتیبانی می‌کند که حین حملات مرد میانی (MITM) امکان مسدودسازی داده‌های جعلی را فراهم می‌سازد.</para>
      <indexterm><primary><emphasis role="pkg">bind9</emphasis></primary></indexterm>
      <indexterm><primary>ISC</primary></indexterm>
      <indexterm><primary>Internet Software Consortium</primary></indexterm>

      <sidebar>
        <title><emphasis>فرهنگ</emphasis> DNSSEC</title>
        <indexterm><primary>DNSSEC</primary></indexterm>

	<para>مفهوم DNSSEC کمی پیچیده است؛ این امر نشان دهنده عدم استفاده گسترده آن است (حتی اگر به خوبی با سرورهای DNS ناآگاه از این ویژگی، سازگار باشد). برای درک تمام ویژگی‌های آن باید مقاله پیش رو را مطالعه کنید. <ulink type="block" url="http://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions" /></para>
      </sidebar>
    </section>
    <section id="sect.dns-config">
      <title>پیکربندی</title>

      <para>فایل‌های پیکربندی <command>bind</command>، صرف‌نظر از نسخه آن، ساختار مشابهی دارند.</para>

      <para>مدیرسیستم‌های فالکوت یک منطقه اصلی به نام <literal>falcot.com</literal> برای ذخیره اطلاعات مربوط به این دامنه و یک منطقه به نام <literal>168.192.in-addr.arpa</literal> برای نگاشت معکوس نشانی‌های IP در شبکه‌های محلی تعریف کرده‌اند.</para>

      <sidebar>
        <title><emphasis>احتیاط</emphasis> نامگذاری مناطق معکوس</title>
        <indexterm><primary>منطقه</primary><secondary>معکوس</secondary></indexterm>
        <indexterm><primary>منطقه معکوس</primary></indexterm>
        <indexterm><primary><literal>in-addr.arpa</literal></primary></indexterm>
        <indexterm><primary><literal>ip6.arpa</literal></primary></indexterm>
	<indexterm><primary>قالب چهار-بیتی</primary></indexterm>

	<para>مناطق معکوس نام ویژه‌ای دارند. منطقه‌ای که شبکه <literal>192.168.0.0/16</literal> را پوشش می‌دهد باید به صورت <literal>168.192.in-addr.arpa</literal> نامگذاری گردد: قسمت نشانی‌های IP معکوس شده و به همراه پسوند <literal>in-addr.arpa</literal> قرار می‌گیرد.</para>

	<para>برای شبکه‌های IPv6، پسوند عبارت است از <literal>ip6.arpa</literal> و قسمت نشانی IP که به صورت معکوس در آمده شامل کاراکترهای هگزادسیمال کامل برای نمایش نشانی IP است. بنابراین، شبکه <literal>2001:0bc8:31a0::/48</literal> می‌تواند از منطقه‌ای با نام <literal>0.a.1.3.8.c.b.0.1.0.0.2.ip6.arpa</literal> استفاده کند.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>نکته</emphasis> آزمایش‌کردن سرور DNS</title>

	<para>دستور <command>host</command> (در بسته <emphasis role="pkg">bind9-host</emphasis>) از یک سرور DNS پرس و جو می‌کند و می‌تواند برای آزمایش پیکربندی سرور استفاده شود. برای نمونه، <command>host machine.falcot.com localhost</command> به بررسی پاسخ سرور محلی از <literal>machine.falcot.com</literal> می‌پردازد. <command>host <replaceable>ipaddress</replaceable> localhost</command> عکس این عمل را انجام می‌دهد.</para>
	<indexterm><primary><command>host</command></primary></indexterm>
      </sidebar>

      <para>گزیده پیکربندی پیش رو، که از فایل‌های شرکت فالکوت برداشت شده، می‌تواند به عنوان نقطه آغازی برای پیکربندی سرور DNS استفاده شود:</para>
      <indexterm><primary><filename>named.conf</filename></primary></indexterm>
      <indexterm><primary><filename>/etc/bind/named.conf</filename></primary></indexterm>

      <example id="example.bind-named.conf.local">
        <title>گزیده‌ای از <filename>/etc/bind/named.conf.local</filename></title>

        <programlisting>
zone "falcot.com" {
        type master;
        file "/etc/bind/db.falcot.com";
        allow-query { any; };
        allow-transfer {
                195.20.105.149/32 ; // ns0.xname.org
                193.23.158.13/32 ; // ns1.xname.org
        };
};

zone "internal.falcot.com" {
        type master;
        file "/etc/bind/db.internal.falcot.com";
        allow-query { 192.168.0.0/16; };
};

zone "168.192.in-addr.arpa" {
        type master;
        file "/etc/bind/db.192.168";
        allow-query { 192.168.0.0/16; };
};</programlisting>
      </example>

      <example id="example.bind-db.falcot.com">
        <title>گزیده‌ای از <filename>/etc/bind/db.falcot.com</filename></title>

        <programlisting>; falcot.com Zone 
; admin.falcot.com. =&gt; zone contact: admin@falcot.com
$TTL    604800
@       IN      SOA     falcot.com. admin.falcot.com. (
                        20040121        ; Serial
                         604800         ; Refresh
                          86400         ; Retry
                        2419200         ; Expire
                         604800 )       ; Negative Cache TTL
;
; The @ refers to the zone name ("falcot.com" here)
; or to $ORIGIN if that directive has been used
;
@       IN      NS      ns
@       IN      NS      ns0.xname.org.

internal IN      NS      192.168.0.2

@       IN      A       212.94.201.10
@       IN      MX      5 mail
@       IN      MX      10 mail2

ns      IN      A       212.94.201.10
mail    IN      A       212.94.201.10
mail2   IN      A       212.94.201.11
www     IN      A       212.94.201.11

dns     IN      CNAME   ns</programlisting>
      </example>

      <sidebar>
        <title><emphasis>احتیاط</emphasis> شیوه نگارش یک نام</title>

	<para>شیوه نگارش نام رایانه‌ها از قواعد ثابتی پیروی می‌کند. برای نمونه، <literal>machine</literal> به معنی <literal>machine.<replaceable>domain</replaceable></literal> است. اگر نام دامنه نباید به نام افزوده شود، نام مورد نظر باید به صورت <literal>machine.</literal> (با یک نقطه در پسوند) نوشته شود. مشخص کردن یک نام DNS خارج از محدوده دامنه نیازمند شیوه نگارشی مشابه با <literal>machine.otherdomain.com.</literal> است (با یک نقطه در پسوند).</para>
      </sidebar>

      <example id="example.bind-db.192.168">
        <title>گزیده‌ای از <filename>/etc/bind/db.192.168</filename></title>

        <programlisting>; Reverse zone for 192.168.0.0/16
; admin.falcot.com. =&gt; zone contact: admin@falcot.com
$TTL    604800
@       IN      SOA     ns.internal.falcot.com. admin.falcot.com. (
                        20040121        ; Serial
                         604800         ; Refresh
                          86400         ; Retry
                        2419200         ; Expire
                         604800 )       ; Negative Cache TTL

        IN      NS      ns.internal.falcot.com.

; 192.168.0.1 -&gt; arrakis
1.0     IN      PTR     arrakis.internal.falcot.com.
; 192.168.0.2 -&gt; neptune
2.0     IN      PTR     neptune.internal.falcot.com.

; 192.168.3.1 -&gt; pau
1.3     IN      PTR     pau.internal.falcot.com.</programlisting>
      </example>
    </section>
  </section>
  <section id="sect.dhcp">
    <title>DHCP</title>

    <para>DHCP (مخفف <emphasis>Dynamic Host Configuration Protocol</emphasis>) پروتکلی است که رایانه از طریق آن اقدام به دریافت خودکار پیکربندی شبکه در زمان راه‌اندازی اولیه می‌کند. اینکار به فرآیند مدیریت مرکزی پیکربندی شبکه و اطمینان از اینکه تمام رایانه‌های رومیزی تنظیمات مشابهی دریافت می‌کنند کمک می‌کند.</para>
    <indexterm><primary>DHCP</primary></indexterm>
    <indexterm><primary>Dynamic Host Configuration Protocol</primary></indexterm>
    <indexterm><primary>شبکه</primary><secondary>پیکربندی DHCP</secondary></indexterm>

    <para>یک سرور DHCP پارامترهای بسیاری را درباره شبکه فراهم می‌کند. متداول‌ترین آن‌ها نشانی IP و شبکه‌ای است که رایانه به آن تغلق دارد، اما می‌تواند اطلاعات دیگری نیز ارائه دهد، مانند سرورهای DNS و WINS و NTP و از این قبیل.</para>

    <para>کنسرسیوم نرم‌افزار اینترنت (که در توسعه <command>bind</command> نیز مشارکت دارد) توسعه‌دهنده اصلی سرور DHCP است. بسته دبیان آن نیز <emphasis role="pkg">isc-dhcp-server</emphasis> است.</para>

    <section id="sect.dhcp-config">
      <title>پیکربندی</title>

      <para>اولین عناصری که باید در فایل پیکربندی سرور DHCP (<filename>/etc/dhcp/dhcpd.conf</filename>) ویرایش شوند عبارتند از نام دامنه و سرورهای DNS. اگر این سرور در شبکه محلی تنها باشد (که توسط broadcast مشخص می‌شود) عبارت <literal>authoritative</literal> نیز باید فعال (از حالت توضیح خارج) شود. همچنین نیاز است که قسمت <literal>subnet</literal> برای شبکه محلی و اطلاعات پیکربندی مربوط به آن فراهم شود. نمونه پیش رو شبکه محلی <literal>192.168.0.0/24</literal> را با مسیریاب <literal>192.168.0.1</literal> که به عنوان gateway عمل می‌کند، متصل می‌سازد. نشانی‌های IP قابل دسترس در محدوده <literal>192.168.0.128</literal> تا <literal>192.168.0.254</literal> قرار دارند.</para>

      <example id="example.dhcp-dhcpd.conf">
        <title>گزیده‌ای از <filename>/etc/dhcp/dhcpd.conf</filename></title>

        <programlisting>
#
# Sample configuration file for ISC dhcpd for Debian
#

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style interim;

# option definitions common to all supported networks...
option domain-name "internal.falcot.com";
option domain-name-servers ns.internal.falcot.com;

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# My subnet
subnet 192.168.0.0 netmask 255.255.255.0 {
    option routers 192.168.0.1;
    option broadcast-address 192.168.0.255;
    range 192.168.0.128 192.168.0.254;
    ddns-domainname "internal.falcot.com";
}</programlisting>
      </example>
    </section>
    <section id="sect.dhcp-dns">
      <title>DHCP و DNS</title>
      <indexterm><primary>DNS</primary><secondary>بروزرسانی‌های خودکار</secondary></indexterm>

      <para>یک ویژگی جالب امکان ثبت خودکار کلاینت‌های DHCP در منطقه DNS است، به طوری که هر رایانه یک نام مشخص دریافت کند (بجای چیزی غیرشخصی مانند <literal>machine-192-168-0-131.internal.falcot.com</literal>). استفاده از این ویژگی شامل پیکربندی سرور DNS برای پذیرش بروزرسانی منطقه <literal>internal.falcot.com</literal> از سرور DHCP و پیکربندی دیگری برای ارسال بروزرسانی هر قسمت می‌باشد.</para>

      <para>در مورد <command>bind</command>، عبارت <literal>allow-update</literal> باید به هر منطقه‌ای که سرور DHCP قصد ویرایش آن را دارد اضافه گردد (یکی برای دامنه <literal>internal.falcot.com</literal> و دیگری برای منطقه معکوس آن). این عبارت فهرستی از نشانی‌های IP مجاز برای اجرای عملیات بروزرسانی را مشخص می‌کند؛ بنابراین باید شامل نشانی‌های احتمالی سرور DHCP باشد (در صورت نیاز، هم نشانی محلی هم نشانی عمومی).</para>

      <programlisting>
allow-update { 127.0.0.1 192.168.0.1 212.94.201.10 !any };</programlisting>

      <para>آگاه باشید! منطقه‌ای که قابل ویرایش باشد توسط <command>bind</command> تغییر <emphasis>خواهد</emphasis> کرد و گزینه جدید فایل‌های پیکربندی موجود را از بین می‌برد. از آنجا که این فرآیند خودکارسازی فایل‌هایی را ایجاد می‌کند که برای خواندن دشوارتر از جایگزین‌های دستی خود هستند، مدیرسیستم‌های فالکوت دامنه <literal>internal.falcot.com</literal> را با یک سرور واگذارشده DNS مدیریت می‌کنند؛ یعنی فایل منطقه <literal>falcot.com</literal> با قدرت کامل در کنترل آن‌ها باقی خواهد ماند.</para>

      <para>گزیده پیکربندی سرور DHCP که در بالا مشاهده کردید هم اکنون شامل عبارت‌های مورد نیاز برای بروزرسانی منطقه DNS مورد نظر است: در بلوکی که به توضیح زیرشبکه می‌پردازد آن‌ها عبارتند از <literal>ddns-update-style interim;</literal> و <literal>ddns-domain-name "internal.falcot.com";</literal>.</para>
    </section>
  </section>
  <section id="sect.network-diagnosis-tools">
    <title>ابزار بررسی شبکه</title>

    <para>زمانی که یک برنامه تحت شبکه درست کار نمی‌کند، بسیار مهم است که از شیوه فعالیت آن اطلاع داشته باشیم. حتی در زمانی که همه چیزی بخوبی کار می‌کند، بررسی شبکه ما را از عملکرد صحیح آن با خبر می‌سازد. چندین ابزار مختلف در این زمینه وجود دارد که هر کدام در سطح جداگانه‌ای فعالیت می‌کند.</para>
    <section id="sect.netstat">
      <title>بررسی محلی: <command>netstat</command></title>
      <indexterm><primary><command>netstat</command></primary></indexterm>

      <para>بیایید ابتدا دستور <command>netstat</command> را بررسی کنیم (در بسته <emphasis role="pkg">net-tools</emphasis>)؛ این ابزار یک خلاصه وضعیت لحظه‌ای از فعالیت شبکه نمایش می‌دهد. زمانی که بدون آرگومان فراخوانی شود، این دستور فهرستی از تمام ارتباطات باز را نمایش می‌دهد؛ این فهرست می‌تواند بسیار طولانی باشد چرا که شامل بسیاری از سوکت‌های یونیکس (مورد استفاده فرآیندهای پس‌زمینه) است که اصلا کاری با شبکه ندارند (برای نمونه، ارتباطات <literal>dbus</literal> یا ترافیک <literal>X11</literal> ارتباطات بین فایل‌سیستم‌های مجازی و محیط گرافیکی هستند).</para>

      <para>فراخوانی‌های متداول شامل گزینه‌هایی است که عملکرد <command>netstat</command> را تغییر می‌دهند. متداول‌ترین گزینه‌ها عبارتند از:</para>
      <itemizedlist>
        <listitem>
	  <para><literal>-t</literal>، که با فیلترکردن خروجی تنها ارتباطات TCP را شامل می‌شود؛</para>
        </listitem>
        <listitem>
	  <para><literal>-u</literal>، که به شیوه‌ای مشابه برای ارتباطات UDP استفاده می‌شود؛ این گزینه‌ها با یکدیکر سازگار نبوده و استفاده یکی از آن‌ها کافی است تا ارتباطات دامنه یونیکس نمایش داده نشوند؛</para>
        </listitem>
        <listitem>
	  <para><literal>-a</literal>، برای فهرست کردن سوکت‌های منتظر (آن‌هایی که برای ارتباط دریافتی انتظار می‌کشند)؛</para>
        </listitem>
        <listitem>
	  <para><literal>-n</literal>، برای نمایش نتایج به صورت عددی: نشانی‌های IP (بدون دخالت DNS)، شماره‌های درگاه (بدون نام مستعار تعریف شده در <filename>/etc/services</filename>) و شناسه‌های کاربری (بدون نام کاربری)؛</para>
        </listitem>
        <listitem>
	  <para><literal>-p</literal>، برای فهرست‌کردن فرآیندهای درگیر؛ این گزینه زمانی مفید است که <command>netstat</command> به عنوان root اجرا شود، چرا که کاربران عادی تنها می‌توانند فرآیندهای خود را مشاهده کنند؛</para>
        </listitem>
        <listitem>
	  <para><literal>-c</literal>، برای تازه‌سازی فهرست خروجی به صورت مداوم.</para>
        </listitem>
      </itemizedlist>

      <para>سایر گزینه‌ها که در صفحه راهنمای <citerefentry><refentrytitle>netstat</refentrytitle> <manvolnum>8</manvolnum></citerefentry> مستندسازی شده‌اند، کنترل بسیار بیشتری را فراهم می‌کنند. در عمل، پنج گزینه اول به اندازه‌ای پرکاربرد هستند که مدیران شبکه و سیستم از عبارت <command>netstat -tupan</command> برای اشاره به آن‌ها استفاده می‌کنند. به طور معمول، نتایج قابل مشاهده در یک رایانه معمولی مانند زیر هستند:</para>

      <screen role="scale">
<computeroutput># </computeroutput><userinput>netstat -tupan</userinput>
<computeroutput>Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      397/rpcbind     
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      431/sshd        
tcp        0      0 0.0.0.0:36568           0.0.0.0:*               LISTEN      407/rpc.statd   
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      762/exim4       
tcp        0    272 192.168.1.242:22        192.168.1.129:44452     ESTABLISHED 1172/sshd: roland [
tcp6       0      0 :::111                  :::*                    LISTEN      397/rpcbind     
tcp6       0      0 :::22                   :::*                    LISTEN      431/sshd        
tcp6       0      0 ::1:25                  :::*                    LISTEN      762/exim4       
tcp6       0      0 :::35210                :::*                    LISTEN      407/rpc.statd   
udp        0      0 0.0.0.0:39376           0.0.0.0:*                           916/dhclient    
udp        0      0 0.0.0.0:996             0.0.0.0:*                           397/rpcbind     
udp        0      0 127.0.0.1:1007          0.0.0.0:*                           407/rpc.statd   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           916/dhclient    
udp        0      0 0.0.0.0:48720           0.0.0.0:*                           451/avahi-daemon: r
udp        0      0 0.0.0.0:111             0.0.0.0:*                           397/rpcbind     
udp        0      0 192.168.1.242:123       0.0.0.0:*                           539/ntpd        
udp        0      0 127.0.0.1:123           0.0.0.0:*                           539/ntpd        
udp        0      0 0.0.0.0:123             0.0.0.0:*                           539/ntpd        
udp        0      0 0.0.0.0:5353            0.0.0.0:*                           451/avahi-daemon: r
udp        0      0 0.0.0.0:39172           0.0.0.0:*                           407/rpc.statd   
udp6       0      0 :::996                  :::*                                397/rpcbind     
udp6       0      0 :::34277                :::*                                407/rpc.statd   
udp6       0      0 :::54852                :::*                                916/dhclient    
udp6       0      0 :::111                  :::*                                397/rpcbind     
udp6       0      0 :::38007                :::*                                451/avahi-daemon: r
udp6       0      0 fe80::5054:ff:fe99::123 :::*                                539/ntpd        
udp6       0      0 2001:bc8:3a7e:210:a:123 :::*                                539/ntpd        
udp6       0      0 2001:bc8:3a7e:210:5:123 :::*                                539/ntpd        
udp6       0      0 ::1:123                 :::*                                539/ntpd        
udp6       0      0 :::123                  :::*                                539/ntpd        
udp6       0      0 :::5353                 :::*                                451/avahi-daemon: r
</computeroutput></screen>

      <para>همانطور که انتظار می‌رفت، این فهرست شامل ارتباطات جاری سیستم است از جمله دو ارتباط SSH و برنامه‌هایی که منتظر دریافت ارتباطات هستند (که به عنوان <literal>LISTEN</literal> آمده‌اند)، مانند سرور ایمیل Exim4 که به درگاه ۲۵ گوش می‌کند.</para>
    </section>
    <section id="sect.nmap">
      <title>بررسی راه‌دور: <command>nmap</command></title>
      <indexterm><primary><command>nmap</command></primary></indexterm>

      <para><command>nmap</command> (در بسته‌ای با همین نام) به نوعی معادل راه‌دور <command>netstat</command> به حساب می‌آید. می‌تواند به پویش مجموعه‌ای از درگاه‌های “شناخته-شده” برای یک یا چند سرور راه‌دور بپردازد و درگاه‌هایی که برنامه‌های مختلف به آن‌ها پاسخ می‌دهند را نمایش می‌دهد. علاوه بر این، <command>nmap</command> می‌تواند برخی از این برنامه‌ها را نیز تشخیص دهد، گاهی اوقات حتی نسخه‌های آنان را. از آنجا که این ابزار به صورت راه‌دور کار می‌کند، نمی‌تواند اطلاعات مربوط به فرآیندها یا کاربران را نمایش دهد؛ با این حال می‌تواند به صورت همزمان روی چندین هدف اجرا شود.</para>

      <para>یک فراخوانی معمول <command>nmap</command> تنها از گزینه <literal>-A</literal> استفاده می‌کند (به منظور یافتن نسخه نرم‌افزار سرور که روی آن اجرا می‌شود) به همراه یک یا چند نشانی IP یا نام‌های DNS رایانه‌هایی که قصد پویش آن‌ها را دارد. بسیاری گزینه‌های مختلف وجود دارد که به کنترل بیشتر عملکرد <command>nmap</command> کمک می‌کنند؛ لطفا به مستندات صفحه راهنمای <citerefentry> <refentrytitle>nmap</refentrytitle> <manvolnum>1</manvolnum> </citerefentry> مراجعه کنید.</para>

      <screen role="scale" width="80">
<computeroutput># </computeroutput><userinput>nmap mirtuel</userinput>
<computeroutput>
Starting Nmap 6.47 ( http://nmap.org ) at 2015-03-09 16:46 CET
Nmap scan report for mirtuel (192.168.1.242)
Host is up (0.000013s latency).
rDNS record for 192.168.1.242: mirtuel.internal.placard.fr.eu.org
Not shown: 998 closed ports
PORT    STATE SERVICE
22/tcp  open  ssh
111/tcp open  rpcbind

Nmap done: 1 IP address (1 host up) scanned in 2.41 seconds
# </computeroutput><userinput>nmap -A localhost</userinput>
<computeroutput>
Starting Nmap 6.47 ( http://nmap.org ) at 2015-03-09 16:46 CET
Nmap scan report for localhost (127.0.0.1)
Host is up (0.000013s latency).
Other addresses for localhost (not scanned): 127.0.0.1
Not shown: 997 closed ports
PORT    STATE SERVICE VERSION
22/tcp  open  ssh     OpenSSH 6.7p1 Debian 3 (protocol 2.0)
|_ssh-hostkey: ERROR: Script execution failed (use -d to debug)
25/tcp  open  smtp    Exim smtpd 4.84
| smtp-commands: mirtuel Hello localhost [127.0.0.1], SIZE 52428800, 8BITMIME, PIPELINING, HELP, 
|_ Commands supported: AUTH HELO EHLO MAIL RCPT DATA NOOP QUIT RSET HELP 
111/tcp open  rpcbind 2-4 (RPC #100000)
| rpcinfo: 
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|   100000  2,3,4        111/udp  rpcbind
|   100024  1          36568/tcp  status
|_  100024  1          39172/udp  status
Device type: general purpose
Running: Linux 3.X
OS CPE: cpe:/o:linux:linux_kernel:3
OS details: Linux 3.7 - 3.15
Network Distance: 0 hops
Service Info: Host: mirtuel; OS: Linux; CPE: cpe:/o:linux:linux_kernel

OS and Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 11.54 seconds
</computeroutput></screen>

      <para>همانطور که انتظار می‌رفت، برنامه‌های SSH و Exim4 فهرست شده‌اند. نکته اینکه همه برنامه‌ها به همه نشانی‌های IP گوش فرا نمی‌دهند؛ از آنجا که Exim4 تنها از طریق رابط <literal>lo</literal> قابل دسترس است، تنها زمانی نمایش می‌یابد که تحلیل <literal>localhost</literal> صورت بگیرد و نه تحلیل <literal>mirtuel</literal> (که به رابط <literal>eth0</literal> در همان رایانه نگاشت شده است).</para>
    </section>
    <section id="sect.sniffers">
      <title>اسنیفرها: <command>tcpdump</command> و <command>wireshark</command></title>

      <para>بعضی وقت‌ها، نیاز است بدانیم چه چیزی به صورت بسته به بسته از شبکه عبور می‌کند. این موارد شامل یک “تحلیلگر فریم” هستند که به صورت کلی‌تر با نام <emphasis>sniffer</emphasis> شناخته می‌شوند. چنین ابزاری به مشاهده بسته‌های عبوری از یک رابط شبکه می‌پردازد و آن‌ها را به شیوه‌ای مرتب و خودمانی نمایش می‌دهد.</para>
      <indexterm><primary><command>tcpdump</command></primary></indexterm>

      <para>ابزار قدرتمند در این زمینه <command>tcpdump</command> است که به عنوان یک ابزار استاندارد در طیف گسترده‌ای از پلتفرم‌ها موجود است. این ابزار امکان بسیاری از فرآیندهای مرتبط با شبکه را می‌دهد، اما شیوه نمایش این ترافیک کمی عجیب و غریب است. بنابراین به توضیح بیشتر آن نمی‌پردازیم.</para>
      <indexterm><primary><command>wireshark</command></primary></indexterm>

      <para>یک ابزار جدیدتر، <command>wireshark</command> (در بسته <emphasis role="pkg">wireshark</emphasis>) به عنوان مرجع تحلیل ترافیک شبکه به دلیل ماژول‌های بسیاری که در فرآیند تحلیل بسته‌ها کمک می‌کنند، تبدیل شده است. بسته‌ها به صورت گرافیکی و به ترتیب قرار گرفتن در لایه‌های مختلف شبکه نمایش داده می‌شوند. این امر به کاربر کمک می‌کند تا به صورت بصری به بررسی بسته‌ها بپردازد. برای نمونه، بسته‌ای که شامل درخواست HTTP است، <command>wireshark</command> آن را به صورت جداگانه به همراه اطلاعات مرتبط با هر لایه شبکه نمایش می‌دهد و در نهایت به نمایش خود درخواست HTTP می‌رسد.</para>

      <figure id="figure.wireshark">
        <title>تحلیلگر ترافیک شبکه <command>wireshark</command></title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/wireshark.png" scalefit="1" width="75%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>در نمونه ما، بسته‌هایی که از طریق SSH انتقال می‌یابند فیلتر شده‌اند (با استفاده از فیلتر <literal>!tcp.port == 22</literal>). بسته‌ای که هم اکنون نمایش یافت در لایه HTTP قرار داشت.</para>

      <sidebar>
        <title><emphasis>نکته</emphasis> <command>wireshark</command> بدون هیچ رابط گرافیکی: <command>tshark</command></title>
        <indexterm><primary><command>tshark</command></primary></indexterm>

	<para>که زمانی امکان اجرای محیط گرافیکی نباشد، یا علاقه‌ای به اینکار وجود نداشته باشد، یک نسخه فقط-متنی از <command>wireshark</command> به نام <command>tshark</command> وجود دارد (در بسته <emphasis role="pkg">tshark</emphasis>). اکثر قابلیت‌های دریافت و رمزگشایی بسته‌ها هم‌اکنون وجود دارد، اما عدم وجود رابط گرافیکی کار با برنامه‌ را کمی دشوار می‌سازد (فیلترکردن بسته‌ها پس از اینکه ضبط شدند، ردیابی یک ارتباط مشخص و از این قبیل). به عنوان یک رویکرد اولیه می‌تواند مورد استفاده قرار گیرد. اگر تغییرات بعدی مستلزم وجود رابط گرافیکی بود، بسته‌ها می‌توانند در یک فایل ذخیره شده و آن فایل در <command>wireshark</command> گرافیکی رایانه‌ای دیگر اجرا گردد.</para>
      </sidebar>
    </section>
  </section>
</chapter>
