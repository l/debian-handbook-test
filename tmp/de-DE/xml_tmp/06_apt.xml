<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-apt.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>apt</keyword>
      <keyword>apt-get</keyword>
      <keyword>apt-cache</keyword>
      <keyword>aptitude</keyword>
      <keyword>synaptic</keyword>
      <keyword>sources.list</keyword>
      <keyword>apt-cdrom</keyword>
    </keywordset>
  </chapterinfo>
  <title>Wartung und Aktualisierung: Die APT-Tools</title>
  <highlights>
    <para>Dass Debian bei Administratoren so beliebt ist, liegt an der einfachen Installation von Software und daran, wie einfach es aktuell gehalten werden kann. Dieser einzigartige Vorteil rührt weitestgehend vom Programm <emphasis>APT</emphasis>, dessen Funktionen sich die Administratoren von Falcot Corp mit Begeisterung angeeignet haben.</para>
  </highlights>

  <para><indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm>APT ist die Abkürzung für Advanced Package Tool (fortschrittliches Paketierungstool). Den Begriff fortschrittlich verdient sich das Tool durch sein Herangehen an Pakete. Es bewertet diese nicht einfach individuell, sondern betrachtet die Pakete als Ganzes und erzeugt die bestmögliche Kombination von Paketen abhängig davon, welche (je nach Abhängigkeit) verfügbar und kompatibel sind.</para>

  <sidebar>
    <title><emphasis>WÖRTERVERZEICHNIS</emphasis> Paketquellen und Quellpakete</title>

    <para>Der Begriff <emphasis>Quelle</emphasis> wird mehrdeutig verwendet. Ein Quellpaket – ein Paket, das den Quelltext eines Programms enthält – sollte nicht mit mit einer Paketquelle verwechselt werden – einem Depot (Website, FTP Server, CD-ROM, lokales Verzeichnis, etc.), das Pakete zur Verfügung stellt .</para>
  </sidebar>

  <para>APT needs to be given a “list of package sources”: the file
  <filename>/etc/apt/sources.list</filename> will list the different
  repositories (or “sources”) that publish Debian packages. APT will
  then import the list of packages published by each of these
  sources. This operation is achieved by downloading
  <filename>Packages.xz</filename> or a variant using a different
  compression method (such as <filename>Packages.gz</filename> or
  <filename>.bz2</filename>) files (in
  case of a source of binary packages) and
  <filename>Sources.xz</filename> or a variant (in case of a source of
  source packages) and by analyzing their contents. When an old copy
  of these files is already present, APT can update it by only
  downloading the differences (see sidebar <xref linkend="sidebar.apt-pdiff" />).</para>
  <indexterm><primary><filename>Packages.xz</filename></primary></indexterm>
  <indexterm><primary><filename>Sources.xz</filename></primary></indexterm>

  <sidebar>
    <title><emphasis>ZURÜCK ZU DEN GRUNDLAGEN</emphasis> <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> und <command>XZ</command> Komprimierung</title>
    <indexterm><primary><command>gzip</command></primary></indexterm>
    <indexterm><primary><command>bzip2</command></primary></indexterm>
    <indexterm><primary><command>lzma</command></primary></indexterm>
    <indexterm><primary><command>xz</command></primary></indexterm>

    <para>Die Endung <filename>.gz</filename> kennzeichnet eine Datei, die mit dem Dienstprogramm <command>gzip</command> komprimiert wurde. <command>gzip</command> ist ein schnelles und effizientes traditionelles Unix-Dienstprogramm zum Komprimieren von Dateien. Neuere Werkzeuge erreichen bessere Komprimierungsraten, benötigen aber mehr Resourcen (Rechenzeit und Hauptspeicher), um eine Datei zu (de-)komprimieren. Dazu gehören, in der Reihenfolge ihrer Einführung, <command>bzip2</command> (erzeugt Dateien mit der Endung <filename>.bz2 </filename>) <command>lzma</command> (erzeugt <filename>.lzma</filename> Dateien) und <command>xz</command> (erzeugt <filename>.xz</filename> Dateien).</para>
  </sidebar>
  <section id="sect.apt-sources.list">
    <title>Befüllen der <filename>sources.list</filename> Datei</title>
    <indexterm><primary><filename>sources.list</filename></primary></indexterm>
    <indexterm><primary>Bezugsquelle</primary><secondary>für Pakete</secondary></indexterm>
    <indexterm><primary>Paket</primary><secondary>Quelle von</secondary></indexterm>
    <indexterm><primary><filename>/etc/apt/sources.list</filename></primary></indexterm>

    <section>
      <title>Syntax</title>

      <para>Jede aktive Zeile in der Datei <filename>/etc/apt/sources.list</filename> enthält die Beschreibung einer Quelle, bestehend aus drei, durch Kommata getrennten, Teilen.</para>

      <para>Das erste Feld bezeichnet die Art der Quelle:</para>
      <itemizedlist>
	<listitem>
	  <para>“<literal>deb</literal>” für Binärpakete,</para>
	</listitem>
	<listitem>
	  <para>“<literal>deb-src</literal>” für Quellpakete.</para>
	</listitem>
      </itemizedlist>

      <para>The second field gives the base URL of the source (combined with
      the filenames present in the <filename>Packages.gz</filename> files, it
      must give a full and valid URL): this can consist in a Debian mirror or
      in any other package archive set up by a third party. The URL can start
      with <literal>file://</literal> to indicate a local source installed in
      the system's file hierarchy, with <literal>http://</literal> to
      indicate a source accessible from a web server, or with
      <literal>ftp://</literal> for a source available on an FTP server. The
      URL can also start with <literal>cdrom:</literal> for CD-ROM/DVD-ROM/Blu-ray 
      disc based installations, although this is less frequent, since
      network-based installation methods are more and more common.</para>

      <para>Die Syntax des letzten Feldes richtet sich nach der Struktur des Repositoriums. Im einfachsten Fall kann man dort einfach das Unterverzeichnis (zwingend mit vorangestelltem Schrägstrich) der gewünschten Quelle angeben (oft nur einfach ein “<filename>./</filename>”, was das Fehlen eines Unterverzeichnisses anzeigt — die Pakete befinden sich dann direkt an der angegebenen URL). Aber üblicherweise sind die Repositorien wie ein Debian Spiegel gegliedert, bestehend aus mehreren Distributionen, jede mit mehreren Komponenten. In diesen Fällen gibt man die gewählte Distribution an (mit ihrem "Codenamen" — siehe die Liste in der Seitenleiste <xref linkend="sidebar.bruce-perens" /> — oder mit dem Namen der zugehörigen "Suite" — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), dann die Komponenten (oder Abschnitte), die aktiviert werden sollen (zur Auswahl stehen <literal>main</literal>, <literal>contrib</literal>, und <literal>non-free</literal> auf einem typischen Debian Spiegel).</para>

      <sidebar id="sidebar.sections">
	<title><emphasis>WÖRTERVERZEICHNIS</emphasis> Die <literal>main</literal>, <literal>contrib</literal> und <literal>non-free</literal> Archive</title>
	<indexterm><primary>Bereich</primary><secondary><literal>main</literal></secondary></indexterm>
	<indexterm><primary><literal>main</literal>, Bereich</primary></indexterm>
	<indexterm><primary>Bereich</primary><secondary><literal>contrib</literal></secondary></indexterm>
	<indexterm><primary><literal>contrib</literal>, Bereich</primary></indexterm>
	<indexterm><primary>Bereich</primary><secondary><literal>non-free</literal></secondary></indexterm>
	<indexterm><primary><literal>non-free</literal>, Bereich</primary></indexterm>
	<indexterm><primary>Komponente (eines Repositoriums)</primary></indexterm>

	<para>Das Debian-Archiv ist in drei Bereiche unterteilt. Die Unterscheidung basiert auf der vom Autor für sein Werk gewählten Lizenz. <literal>Main</literal> (das Main-Archiv) enthält alle Pakete, die den Anforderungen der Debian-Richtlinien für Freie Software vollständig genügen.</para>

	<para>Das <literal>non-free</literal> Archiv ist anders, da es Software umfasst, die diesen Richtlinien (nicht vollständig) entspricht, aber trotzdem ohne Einschränkungen verteilt werden darf. Dieses Archiv ist kein offizieller Bestandteil von Debian sondern ein Service für Anwender, die einige dieser Programme brauchen – allerdings empfiehlt Debian, freier Software immer den Vorzug zu geben. Die Existenz dieses Bereiches stellt ein beträchtliches Problem für Richard M. Stallman dar und hält die Free Software Foundation davon ab, Debian zu empfehlen.</para>

	<para><literal>Contrib</literal> (contributions) ist eine Sammlung von quelloffener Software, die für ihre Funktion auf nicht-freie Elemente angewiesen ist. Dabei kann es sich um Software aus dem <literal>non-free</literal> Bereich handeln, oder um nicht-freie Daten wie Spiele-ROMs, BIOS von Spielkonsolen usw. <literal>Contrib</literal> enthält auch freie Software, die proprietäre Bestandteile zur Übersetzung benötigt. Dies war anfänglich bei der OpenOffice.org Büro-Suite der Fall, die eine proprietäre Java Umgebung benötigte.</para>
      </sidebar>

      <sidebar>
	<title><emphasis>TIPP</emphasis> <filename>/etc/apt/sources.list.d/*.list</filename> Dateien</title>

	<para>Falls viele Paketquellen benannt werden, kann es nützlich sein, diese in mehrere Dateien aufzuteilen. Jeder Teil wird dann in <filename>/etc/apt/sources.list.d/<replaceable>Dateiname</replaceable>.list</filename> gespeichert (siehe die Seitenleiste <xref linkend="sidebar.directory.d" />).</para>
      </sidebar>

      <indexterm><primary><command>apt-cdrom</command></primary></indexterm>
      <para>The <literal>cdrom</literal> entries describe the CD/DVD-ROMs
      you have. Contrary to other entries, a CD-ROM is not always available
      since it has to be inserted into the drive and since only one disc
      can be read at a time. For those reasons, these sources are managed in a slightly different
      way, and need to be added with the
      <command>apt-cdrom</command> program, usually executed with the
      <literal>add</literal> parameter. The latter will then request the disc
      to be inserted in the drive and will browse its contents looking for
      <filename>Packages</filename> files. It will use these files to update
      its database of available packages (this operation is usually done by the
      <command>apt update</command> command). From then on, APT can
      require the disc to be inserted if it needs one of its packages.</para>

    </section>
    <section>
      <title>Repositorien für <emphasis role="distribution">Stable</emphasis> Benutzer</title>
      
      <para>Hier ist eine standardmäßige <filename>sources.list</filename> für ein System, auf welchem eine <emphasis role="distribution">Stable</emphasis>-Version von Debian läuft:</para>

      
      <example id="example.stable-sources-list">
	<title><filename>/etc/apt/sources.list</filename>-Datei für Debian Stable</title>

	<programlisting># Security updates
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

## Debian mirror

# Base repository
deb http://ftp.debian.org/debian jessie main contrib non-free
deb-src http://ftp.debian.org/debian jessie main contrib non-free

# Stable updates
deb http://ftp.debian.org/debian jessie-updates main contrib non-free
deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free

# Stable backports
deb http://ftp.debian.org/debian jessie-backports main contrib non-free
deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free
</programlisting>
      </example>

      <para>This file lists all sources of packages associated with the
      <emphasis role="distribution">Jessie</emphasis> version of Debian
      (the current <emphasis role="distribution">Stable</emphasis> as of
      this writing). We opted to name “jessie” explicitly instead of using
      the corresponding “stable“ alias (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) because we don't want to have the underlying
      distribution changed outside of our control when the next stable release
      comes out.</para>

      <para>Die meisten Pakete kommen aus dem "base repository", das alle Pakete enthält, aber selten aktualisiert wird (etwa alle 2 Monate mit einem "point release"). Die anderen Repositories sind Untermengen (sie enthalten nicht alle Pakete) und können Aktualisierungen beinhalten (Pakete mit neuerer Version) die APT installieren könnte. Die folgenden Abschnitte erläutern den Zweck und die Richtlinien, die jedes dieser Repositories regeln.</para>

      <para>Man muss wissen, dass, wenn die benötigte Version eines Paketes in mehreren Repositories verfügbar ist, das zuerst in der Liste <filename>sources.list</filename> aufgeführte verwendet wird. Aus diesem Grund werden nicht offizielle Bezugsquellen üblicherweise ans Ende der Liste gesetzt.</para>

      <para>Nebenbei bemerkt trifft das meiste in diesem Abschnitt über <emphasis role="distribution">Stable</emphasis> gesagte gleichermaßen auf <emphasis role="distribution">Oldstable</emphasis> zu, denn letztere ist ja nichts anderes als eine ältere <emphasis role="distribution">Stable</emphasis>, die parallel gepflegt wird.</para>

      <section id="sect.security-updates">
        <title>Sicherheitsaktualisierungen</title>
	<indexterm><primary><literal>security.debian.org</literal></primary></indexterm>
	<indexterm><primary>Sicherheitsaktualisierungen</primary></indexterm>
	<indexterm><primary>Aktualisierungen</primary><secondary>Sicherheitsaktualisierungen</secondary></indexterm>

	<para>Die Sicherheitsaktualisierungen werden nicht auf dem üblichen Netzwerk von Debianspiegeln vorgehalten, sondern auf <literal>security.debian.org</literal> (einer kleinen Gruppe von Maschinen, die von den <link linkend="dsa-team">Debian System Administratoren</link> betreut werden). Dieses Archiv enthält Sicherheitsaktualisierungen (erstellt vom Debian Security Team und/oder von den Paketbetreuern) für die <emphasis role="distribution">Stable</emphasis>-Distribution.</para>

	<para>Auf dem Server können auch Sicherheitsaktualsierungen für <emphasis role="distribution">Testing</emphasis> liegen, aber das kommt selten vor, weil diese auf dem üblichen Aktualisierungsweg über <emphasis role="distribution">Unstable</emphasis> auf auf <emphasis role="distribution">Testing</emphasis> gelangen.</para>
      </section>

      <section id="sect.stable-updates">
        <title>Stable-Aktualisierungen</title>
	<indexterm><primary>Stable-Aktualisierungen</primary></indexterm>
	<indexterm><primary><literal>stable-updates</literal></primary></indexterm>
	<indexterm><primary>Aktualisierungen</primary><secondary>Stable-Aktualisierungen</secondary></indexterm>

	<para>Stable-Aktualisierungen sind nicht sicherheitsrelevant, werden aber als wichtig genug erachtet, um sie den Anwendern vor der nächsten Stable Release aufzuspielen.</para>

	<para>This repository will typically contain fixes for critical
	bugs which could not be fixed before release or which have been
	introduced by subsequent updates. Depending on the urgency, it can
	also contain updates for packages that have to evolve over time…
	like <emphasis role="pkg">spamassassin</emphasis>'s spam detection
	rules, <emphasis role="pkg">clamav</emphasis>'s virus database, or
	the daylight-saving time rules of all timezones (<emphasis role="pkg">tzdata</emphasis>).</para>

	<para>Tatsächlich ist diese Repository ist eine Untermenge des <literal>proposed-updates</literal>-Repositories, sorgfältig ausgewählt von den Betreuern des Stable Release.</para>
      </section>

      <section id="sect.proposed-updates">
        <title>Proposed Updates</title>
        <indexterm><primary><literal>proposed-updates</literal></primary></indexterm>
        <indexterm><primary><literal>stable-proposed-updates</literal></primary></indexterm>

	<para>Einmal veröffentlicht, wird die Distribution <emphasis role="distribution">Stable</emphasis> nur noch etwa alle 2 Monate aktualisiert. Im <literal>proposed-updates</literal>-Repository werden die vorgesehenen Aktualisierungen vorbereitet (kontrolliert von den Stable-Release-Betreuern).</para>

	<para>Sowohl die Aktualisierungen von Stable als auch diejenigen zur Behebung von Sicherheitslücken, die in den voranstehenden Abschnitten beschrieben wurden, sind immer in diesem Repository enthalten, aber mehr noch, es bietet den Betreuern die Gelegenheit, wesentliche Fehler zu beheben, die kein sofortiges Release rechtfertigen.</para>
	
	<para>Anyone can use this repository
	to test those updates before their official publication. The
	extract below uses the <literal>jessie-proposed-updates</literal>
	alias which is both more explicit and more consistent since
	<literal>wheezy-proposed-updates</literal> also exists (for the
	<emphasis role="distribution">Oldstable</emphasis> updates):</para>

        <programlisting>deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free
</programlisting>
      </section>

      <section id="sect.backports">
        <title>Stable Backports</title>
        <indexterm><primary><literal>stable-backports</literal></primary></indexterm>
        <indexterm><primary>Rückportierung (Backport)</primary></indexterm>
	<indexterm><primary>Aktualisierungen</primary><secondary>Rückportierungen</secondary></indexterm>

	<para>Das <literal>stable-backports</literal>-Repository enthält "rückportierte Pakete". Der Ausdruck beschreibt ein Paket mit kürzlich erschienener Software, das für eine ältere Distribution neukompiliert wurde, im Allgemeinen für <emphasis role="distribution">Stable</emphasis>.</para>

	<para>Wenn eine Distribution älter wird, haben viele Software-Projekte bereits neuere Versionen veröffentlicht, die nicht in das gegenwärtige <emphasis role="distribution">Stable</emphasis> integriert werden (welches nur verändert wird, um die allerkritischsten Probleme, wie Sicherheitslücken, zu behandeln). Weil die Distributionen <emphasis role="distribution">Testing</emphasis> und <emphasis role="distribution">Unstable</emphasis> risikobehaftet sein können, bieten einige Paketbetreuer manchmal Rekompilierungen neuerer Software-Anwendungen für <emphasis role="distribution">Stable</emphasis> an, was den Vorteil hat, mögliche Instabilitäten auf eine kleine Anzahl ausgewählter Pakete zu begrenzen. <ulink type="block" url="http://backports.debian.org/" /></para>

	
	<para>Das <literal>stable-backports</literal>-Repository ist inzwischen auf den normalen Debian-Spielgeln verfübar. Die Rückportierungen für <emphasis role="distribution">Squeeze</emphasis> werden weiterhin auf dem dafür eingerichteten Server (<literal>backports.debian.org</literal>) vorgehalten und deshalb wird folgener Eintrag in <filename>sources.list</filename> benötigt:</para>

        <indexterm><primary><literal>backports.debian.org</literal></primary></indexterm>
        <programlisting>deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free
</programlisting>

	<para>Rückportierungen in <literal>stable-backports</literal> werden immer aus Paketen erzeugt, die in <emphasis role="distribution">Testing</emphasis> vorhanden sind. Das stellt sicher, dass alle installierten Rückportierungen auf die zugehörige Stable-Version aktualisierbar sind, sobald das nächste Stable-Release verfügbar ist.</para>

	<para>Obwohl dieses Repository neuere Versionen von Pakten zur Verfügung stellt, werden diese von APT nicht installiert, es sei denn, Sie geben ausdrückliche Anweisungen, das zu tun (oder haben das schon bei einer früheren Version der betreffenden Rückportierung gemacht):</para>

	<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/jessie-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>package</replaceable>
</userinput></screen>

      </section>
    </section>

    <section>
      <title>Repositories für <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis> Anwender</title>

      <para>Hier ist eine standardmäßige <filename>sources.list</filename> für ein System, auf welchem entweder die Version <emphasis role="distribution">Testing</emphasis> oder <emphasis role="distribution">Unstable</emphasis> läuft:</para>

      <example id="example.testing-sources-list">
	<title>Beispoieldatei <filename>/etc/apt/sources.list</filename> für Debian-Anwender von <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>

	<programlisting>
# Unstable
deb http://ftp.debian.org/debian unstable main contrib non-free
deb-src http://ftp.debian.org/debian unstable main contrib non-free

# Testing
deb http://ftp.debian.org/debian testing main contrib non-free
deb-src http://ftp.debian.org/debian testing main contrib non-free

# Stable
deb http://ftp.debian.org/debian stable main contrib non-free
deb-src http://ftp.debian.org/debian stable main contrib non-free

# Security updates
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free
</programlisting>
      </example>

      <para>Mit dieser <filename>sources.list</filename> wird APT Pakete von <emphasis role="distribution">Unstable</emphasis> installieren. Ist das nicht gewollt, verwenden Sie die Einstellung <literal>APT::Default-Release</literal> (siehe <xref linkend="sect.apt-upgrade" />) um APT anzuweisen, Pakete von einer anderen Distribution auszuwählen (in diesem Fall vermutlich <emphasis role="distribution">Testing</emphasis>).</para>

      <para>Es gibt gute Gründe alle diese Repositories vorzuhalten, obwohl ein einziges doch genügen sollte. <emphasis role="distribution">Testing</emphasis>-Anwender werden es schätzen, ein einzelnes Paket aus <emphasis role="distribution">Unstable</emphasis> herauspicken zu können, wenn die Version <emphasis role="distribution">Testing</emphasis> einen nervigen Fehler enthält. Und auf der anderen Seite haben Benutzer von <emphasis role="distribution">Unstable</emphasis>, die von einem unerwarteten Rückschlag betroffen sind, die Möglichkeit, Pakete auf die (vermutlich funktionierende) <emphasis role="distribution">Testing</emphasis>-Version zurückzusetzen.</para>

      <para>Die Bereitstellung von <emphasis role="distribution">Stable</emphasis> kann auch in Frage gestellt werden, doch ermöglicht sie den Zugriff auf einige Pakete, die seit der letzten "stable"-Release aus den Entwicklungsversionen entfernt wurden.</para>

      <section>
        <title>Das Paketdepot <emphasis role="distribution">Experimental</emphasis></title>
        <indexterm><primary><emphasis role="distribution">Experimental</emphasis></primary></indexterm>

	<para>The archive of <emphasis role="distribution">Experimental</emphasis> packages is present on
	all Debian mirrors, and contains packages which are not in the
	<emphasis role="distribution">Unstable</emphasis> version yet
	because of their substandard quality — they are often software
	development versions or pre-versions (alpha, beta, release
	candidate…). A package can also be sent there after undergoing
	subsequent changes which can generate problems. The maintainer then
	tries to uncover them with help from advanced users who can handle
	important issues. After this first stage, the package is moved into
	<emphasis role="distribution">Unstable</emphasis>, where it reaches
	a much larger audience and where it will be tested in much more
	detail.</para>

	<para>Generell wird <emphasis role="distribution">Experimental</emphasis> von Benutzern genutzt, denen es nichts ausmacht, wenn ihr System beschädigt wird und sie es reparieren müssen. Diese Distribution ermöglicht es, ein Paket einzubinden, das ein Benutzer ausprobieren möchte oder weil er es benötigt. Genau das ist die Vorgehensweise von Debian, da das Hinzufügen dieser in APTs <filename>sources.list</filename>-Datei nicht dazu führt, dass diese Pakete systematisch benutzt werden. Die hinzuzufügende Zeile ist:</para>
        <informalexample>
          <programlisting>deb http://ftp.debian.org/debian experimental main contrib non-free
</programlisting>
        </informalexample>
      </section>
    </section>

    <section>
      <title>Non-Official Resources: <literal>mentors.debian.net</literal></title>
      <indexterm><primary><literal>mentors.debian.net</literal></primary></indexterm>

      <para>There are numerous non-official sources of Debian packages set
      up by advanced users who have recompiled some software (Ubuntu made
      this popular with their Personal Package Archive service), by
      programmers who make their creation available to all, and even by
      Debian developers who offer pre-versions of their package online.</para>

      <para>The <literal>mentors.debian.net</literal> site is
      interesting (although it only provides source packages), since it
      gathers packages created by candidates to the status of
      official Debian developer or by volunteers who wish to create Debian
      packages without going through that process of integration. These
      packages are made available without any guarantee regarding their
      quality; make sure that you check their origin and integrity and
      then test them before you consider using them in production.</para>

      <sidebar>
        <title><emphasis>GEMEINSCHAFT</emphasis> Die <literal>debian.net</literal> Sites</title>
        <indexterm><primary><emphasis>debian.net</emphasis></primary></indexterm>

	<para>Die Domain <emphasis>debian.net</emphasis> ist kein offizieller Bestandteil des Debian-Projekts. Jeder Debian-Entwickler kann diesen Domainnamen für den Eigengebrauch nutzen. Diese (Unter-)Websites können inoffizielle Dienste enthalten (manchmal persönliche Seiten), die auf Servern beherbergt sind, die nicht zum Projekt gehören und von Debian-Entwicklern aufgesetzt wurden. Oder sogar Prototypen, die irgendwann nach <emphasis>debian.org</emphasis> umziehen sollen. Es gibt zwei Gründe, warum diese Prototypen unter <emphasis>debian.net</emphasis> bleiben: Entweder hat niemand die nötige Anstrengung unternommen, sie in einen offiziellen Dienst zu überführen (beherbergt unter der Domain <emphasis>debian.org</emphasis> und mit sichergestellter Wartung), oder der Dienst ist zu umstritten, um offiziell zu werden.</para>
      </sidebar>

      <para>Ein Paket zu installieren bedeutet, dessen Urheber Root-Rechte zu gewähren, da dieser über den Inhalt der Einrichtungsskripte entscheidet, die unter der Paket-Identität ausgeführt werden. Offizielle Debian-Pakete werden von Freiwilligen erstellt, die ausgewählt und überprüft wurden, und die ihre Pakete signieren können, so dass deren Herkunft und Integrität überprüft werden kann.</para>

      <para>Seien Sie generell misstrauisch bei einem Paket, dessen Herkunft Sie nicht kennen und das nicht auf einem der offiziellen Debian-Servern beherbergt ist: Erwägen Sie in welchem Maß Sie dem Ersteller vertrauen können, und überprüfen Sie die Integrität des Pakets. <ulink type="block" url="http://mentors.debian.net/" /></para>

      <sidebar id="sidebar.snapshot.debian.org">
        <title><emphasis>WEITERE SCHRITTE</emphasis> Alte Paketversionen: <literal>snapshot.debian.org</literal></title>
        <indexterm><primary><literal>snapshot.debian.org</literal></primary></indexterm>

	<para>The <literal>snapshot.debian.org</literal> service,
	introduced in April 2010, can be used to “go backwards in
	time” and to find an old version of a package. It can be used
	for example to identify which version of a package introduced
	a regression, and more concretely, to come back to the former
	version while waiting for the regression fix.</para>
      </sidebar>
    </section>
    <section>
      <title>Caching Proxy (Zwischenspeicher) für Debian Pakete</title>
      <indexterm><primary>Proxy-Cache</primary></indexterm>
      <indexterm><primary>Cache, Proxy</primary></indexterm>

      <para>Wenn für ein ganzes Netzwerk der gleiche Server für das Herunterladen der gleichen aktualisierten Pakete konfiguriert wird, weiß jeder Administrator, wie hilfreich ein dazwischengeschalteter Proxy ist, der als lokaler Zwischenspeicher im Netzwerk fungiert (siehe Seitenleiste <xref linkend="sidebar.cache" />).</para>

      <para>Sie können APT so konfigurieren, dass "standardmäßig" ein Proxy benutzt wird (siehe <xref linkend="sect.apt-config" /> für die APT-Seite und <xref linkend="sect.http-ftp-proxy" /> für die Proxy-Seite), aber das Debian-Ökosystem bietet noch bessere Möglichkeiten für diesen Zweck. Die speziellen Programme, die in diesem Abschnitt vorgestellt werden, sind intelligenter als ein einfacher Cache, denn sie können auf eine spezielle Struktur an APT-Repositories zurückgreifen (beispielsweise wissen sie, ob einzelne Dateien obsolet sind oder nicht, und können so die Vorhaltezeit anpassen).</para>

      <indexterm><primary><emphasis role="pkg">apt-cacher</emphasis></primary></indexterm>
      <indexterm><primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary></indexterm>
      <para><emphasis role="pkg">apt-cacher</emphasis> and <emphasis role="pkg">apt-cacher-ng</emphasis> arbeiten wie normale Proxy-Server. Die <filename>sources.list</filename> von APT bleibt unverändert, aber APT ist so konfiguriert, dass es diese als Proxies für ausgehende Anfragen nutzt.</para>
      
      <indexterm><primary><emphasis role="pkg">approx</emphasis></primary></indexterm>
      <para><emphasis role="pkg">approx</emphasis> auf der anderen Seite, arbeitet wie ein HTTP-Server, der alle im Netz verfügbaren Repositories unter seiner Top-Level-Domain zur Verfügung stellt. Die Verknüpfungen zwischen den entfernten URL's der Repositories und diesen Top-Level-Verzeichnissen sind in <filename>/etc/approx/approx.conf</filename> gespeichert:</para>

      <programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://ftp.debian.org/debian
security http://security.debian.org
</programlisting>

      <para><emphasis role="pkg">approx</emphasis> lauscht standardmäßig via inetd auf Port 9999 (siehe <xref linkend="sect.inetd" />) und erwartet von den Anwendern, <filename>sources.list</filename> anzupassen, so dass er auf den Server "approx" zeigt:</para>

      <programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free
deb http://apt.falcot.com:9999/debian jessie main contrib non-free
      </programlisting>
    </section>

  </section>
  <section id="sect.apt-get">
    <title><command>aptitude</command>, <command>apt-get</command>, and <command>apt</command> Commands</title>
    <indexterm><primary><command>apt</command></primary></indexterm>
    <indexterm><primary><command>apt-get</command></primary></indexterm>
    <indexterm><primary><command>aptitude</command></primary></indexterm>

    <para>APT is a vast project, whose original plans included a graphical
    interface. It is based on a library which contains the core
    application, and <command>apt-get</command> is the first front end —
    command-line based — which was developed within the project.
    <command>apt</command> is a second command-line based front end
    provided by APT which overcomes some design mistakes of
    <command>apt-get</command>.</para>

    <para>Numerous other graphical interfaces then appeared as external
    projects: <command>synaptic</command>, <command>aptitude</command>
    (which includes both a text mode interface and a graphical one — even
    if not complete yet), <command>wajig</command>, etc. The most
    recommended interface, <command>apt</command>, is the one that we will use
    in the examples given in this section. Note however that <command>apt-get</command> and
    <command>aptitude</command> have a very similar command line syntax.
    When there are major differences between <command>apt</command>,
    <command>apt-get</command> and <command>aptitude</command>, these
    differences will be detailed.</para>
    <section>
      <title>Initialisierung</title>

      
      <para>For any work with APT, the list of available packages needs to
      be updated; this can be done simply through <command>apt
      update</command>. Depending on the speed of your connection, the
      operation can take a while since it involves downloading a certain
      number of <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename> files, which have gradually become
      bigger and bigger as Debian has developed (at least 10 MB of data for the
      <literal>main</literal> section). Of course, installing from a CD-ROM
      set does not require any downloading — in this case, the operation
      is very fast.</para>
      <indexterm><primary><command>apt update</command></primary></indexterm>
      <indexterm><primary><command>apt-get update</command></primary></indexterm>
      <indexterm><primary><command>aptitude update</command></primary></indexterm>
    </section>
    <section>
      <title>Installieren und Entfernen</title>
      <indexterm><primary>Paket</primary><secondary>Installation</secondary></indexterm>
      <indexterm><primary>Paket</primary><secondary>Entfernen</secondary></indexterm>
      <indexterm><primary>Installation</primary><secondary>Paketinstallation</secondary></indexterm>
      <indexterm><primary>Entfernen eines Pakets</primary></indexterm>

      <para>With APT, packages can be added or removed from the system,
      respectively with <command>apt install
      <replaceable>package</replaceable></command> and <command>apt
      remove <replaceable>package</replaceable></command>. In both cases,
      APT will automatically install the necessary dependencies or delete
      the packages which depend on the package that is being removed. The
      <command>apt purge <replaceable>package</replaceable></command>
      command involves a complete uninstallation — the configuration files
      are also deleted.</para>
      <indexterm><primary><command>apt install</command></primary></indexterm>
      <indexterm><primary><command>apt remove</command></primary></indexterm>
      <indexterm><primary><command>apt purge</command></primary></indexterm>
      <indexterm><primary><command>apt-get install</command></primary></indexterm>
      <indexterm><primary><command>apt-get remove</command></primary></indexterm>
      <indexterm><primary><command>apt-get purge</command></primary></indexterm>
      <indexterm><primary><command>aptitude install</command></primary></indexterm>
      <indexterm><primary><command>aptitude remove</command></primary></indexterm>
      <indexterm><primary><command>aptitude purge</command></primary></indexterm>

      <sidebar>
        <title><emphasis>TIPP</emphasis> Die gleiche Paketauswahl mehrfach installieren</title>

	<para>Manchmal ist es wünschenswert, die gleiche Paketauswahl auf mehreren Computern zu installieren. Das ist sehr einfach möglich.</para>

	<para>Zuerst erzeugen Sie eine Liste der installierten Pakte auf dem Computer, der als "Kopiervorlage" dient.</para>

        <screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput>
</screen>

	<para>The <filename>pkg-list</filename> file then contains the list
	of installed packages. Next, transfer the
	<filename>pkg-list</filename> file onto the computers you want to
	update and use the following commands:</para>

        <screen>## bekannte Pakete in der Datenbank von dpkg aktualisieren
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## die Auswahl von dpkg aktualisieren
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## mit apt-get die gewählten Pakete installieren
# <userinput>apt-get dselect-upgrade</userinput>
</screen>

	<para>Der erste Befehl zeichnet die verfügbaren Pakete in der Datenbank dpkg auf und anschließend stellt  <command>dpkg --set-selections</command> die Liste der Pakete wieder her, die Sie installieren wollen und der Aufruf von <command>apt-get</command> führt die erforderlichen Operationen aus. Der Befehl <command>aptitude</command> hat diese Möglichkeit nicht.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>TIPP</emphasis> Entfernen und installieren in einem Durchgang</title>

        <para>It is possible to ask <command>apt</command> (or <command>apt-get</command>, or
	<command>aptitude</command>) to install certain packages and remove
	others on the same command line by adding a suffix. With an
	<command>apt install</command> command, add
	“<literal>-</literal>” to the names of the packages you wish to
	remove. With an <command>apt remove</command> command, add
	“<literal>+</literal>” to the names of the packages you wish to
	install.</para>

	<para>Das nächste Bespiel zeigt zwei verschiedene Wege, <replaceable>Paket1</replaceable> zu installieren und <replaceable>Paket2</replaceable> zu entfernen.</para>

        <screen># <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>
[...]
</screen>

	<para>Damit kann man auch Pakete ausschließen, die sonst installiert würden, beispielsweise aufgrund eines <literal>Recommends</literal>-Vorschlags. Normalerweise wird das Programm zur Auflösung von Abhängigkeiten aufgrund dieser Information nach alternativen Lösungen zu suchen.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>TIP</emphasis> <command>apt --reinstall</command> and <command>aptitude reinstall</command></title>
        <indexterm><primary>Reinstallation</primary></indexterm>

	<para>The system can sometimes be damaged after the removal or
	modification of files in a package. The easiest way to retrieve
	these files is to reinstall the affected package. Unfortunately,
	the packaging system finds that the latter is already installed and
	politely refuses to reinstall it; to avoid this, use the
	<literal>--reinstall</literal> option of the
        <command>apt</command> and <command>apt-get</command> commands. The following command
	reinstalls <emphasis role="pkg">postfix</emphasis> even if it is
	already present:</para>

        <screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput>
</screen>

	<para>Die Syntax von <command>aptitude</command>  ist ein wenig anders, erzielt aber dasselbe Ergebnis mit <command>aptitude reinstall postfix</command>.</para>

	<para>Das Problem tritt bei <command>dpkg</command> nicht auf, jedoch wird es selten direkt durch den Administrator genutzt.</para>

	<para>Be careful! Using <command>apt --reinstall</command> to
	restore packages modified during an attack will certainly not recover
	the system as it was. <xref linkend="sect.dealing-with-compromised-machine" /> details the
	necessary steps to take with a compromised system.</para>
      </sidebar>

      <para>If the file <filename>sources.list</filename> mentions several
      distributions, it is possible to give the version of the package to
      install. A specific version number can be requested with
      <command>apt install
      <replaceable>package</replaceable>=<replaceable>version</replaceable></command>,
      but indicating its distribution of origin (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>) — with <command>apt
      install
      <replaceable>package</replaceable>/<replaceable>distribution</replaceable></command>
      — is usually preferred. With this command, it is possible to go
      back to an older version of a package (if for instance you know that
      it works well), provided that it is still available in one of the
      sources referenced by the <filename>sources.list</filename> file.
      Otherwise the <literal>snapshot.debian.org</literal> archive can come
      to the rescue (see sidebar <xref linkend="sidebar.snapshot.debian.org" />).</para>

      <example>
        <title>Installation der <emphasis role="distribution">unstable</emphasis> Version von <emphasis role="pkg">spamassassin</emphasis></title>

        <screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput>
</screen>
      </example>

      <sidebar>
        <title><emphasis>NÄCHSTE SCHRITTE</emphasis> Der Zwischenspeicher für <filename>.deb</filename> Dateien</title>

	<para>APT keeps a copy of each downloaded
	<filename>.deb</filename> file in the directory
	<filename>/var/cache/apt/archives/</filename>. In case of
	frequent updates, this directory can quickly take a lot of
	disk space with several versions of each package; you should
	regularly sort through them. Two commands can be used:
	<command>apt-get clean</command> entirely empties the
	directory; <command>apt-get autoclean</command> only removes
	packages which can no longer be downloaded (because they have
	disappeared from the Debian mirror) and are therefore clearly
	useless (the configuration parameter
	<literal>APT::Clean-Installed</literal> can prevent the
	removal of <filename>.deb</filename> files that are currently
        installed). Note that <command>apt</command> does not support
        those commands.</para>
      </sidebar>
    </section>

    <section id="sect.apt-upgrade">
      <title>Das System aktualisieren</title>
      <indexterm><primary>Aktualisieren</primary><secondary>System Aktualisieren</secondary></indexterm>

      <indexterm><primary><command>apt upgrade</command></primary></indexterm>
      <indexterm><primary><command>apt-get upgrade</command></primary></indexterm>
      <indexterm><primary><command>aptitude safe-upgrade</command></primary></indexterm>
      <para>Regular upgrades are recommended, because they include the
      latest security updates. To upgrade, use <command>apt upgrade</command>,
      <command>apt-get upgrade</command> or <command>aptitude safe-upgrade</command> (of
      course after <command>apt update</command>). This command looks
      for installed packages which can be upgraded without removing any
      packages. In other words, the goal is to ensure the least intrusive
      upgrade possible. <command>apt-get</command> is slightly more
      demanding than <command>aptitude</command> or <command>apt</command>
      because it will refuse to install packages which were not installed
      beforehand.</para>

      <sidebar id="sidebar.apt-pdiff">
        <title><emphasis>TIPP</emphasis> Inkrementelle Aktualisierung</title>

	
	<para>As we explained earlier, the aim of the <command>apt
	update</command> command is to download for each package source the
	corresponding <filename>Packages</filename> (or
	<filename>Sources</filename>) file. However, even after a
	<command>bzip2</command> compression, these files can remain rather
	large (the <filename>Packages.xz</filename> for the
	<foreignphrase>main</foreignphrase> section of <emphasis role="distribution">Jessie</emphasis> takes more than 6 MB). If
	you wish to upgrade regularly, these downloads can take up a lot of
	time.</para>

	<para>To speed up the process APT can download “diff” files containing
	the changes since the previous update, as opposed to the entire
	file. To achieve this, official Debian mirrors distribute different
	files which list the differences between one version of the
	<filename>Packages</filename> file and the following version. They
	are generated at each update of the archives and a history of one
	week is kept. Each of these “diff” files only takes a few dozen
	kilobytes for <emphasis role="distribution">Unstable</emphasis>, so
	that the amount of data downloaded by a weekly <command>apt
	update</command> is often divided by 10. For distributions like
	<emphasis role="distribution">Stable</emphasis> and <emphasis role="distribution">Testing</emphasis>, which change less, the gain
	is even more noticeable.</para>

	<para>Manchmal jedoch kann es wünschenswert sein, das Herunterladen der gesamten <filename>Packages</filename>-Datei zu erzwingen, besonders wenn die letzte Aktualisierung lange zurück liegt oder die Gesamtgröße der inkrementellen Differenz-Dateien nur wenig geringer ist. Dies kann auch interessant sein, wenn der Netzwerkzugriff sehr schnell aber der Prozessor der zu aktualisierenden Maschine ziemlich langsam ist, weil das Herunterladen schneller geht, als wiederholt die neue Version dieser Dateien zu berechnen (immer wieder die Unterschiede der jeweils ältesten Differenz-Datei auf die Paketliste anzuwenden). Dazu setzen Sie den Konfigurationsparameter <literal>Acquire::Pdiff</literal> verwenden auf <literal>false</literal>.</para>
      </sidebar>

      <para><command>apt</command> will generally select the most
      recent version number (except for packages from <emphasis role="distribution">Experimental</emphasis> and
      <emphasis role="distribution">stable-backports</emphasis>, which are
      ignored by default whatever their version number). If you specified
      <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> in your
      <filename>sources.list</filename>, <command>apt
      upgrade</command> will switch most of your <emphasis role="distribution">Stable</emphasis> system to <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis>, which might not be what you
      intended.</para>

      <para>To tell <command>apt</command> to use a specific
      distribution when searching for upgraded packages, you need to use
      the <literal>-t</literal> or <literal>--target-release</literal>
      option, followed by the name of the
      distribution you want (for example: <command>apt -t stable
      upgrade</command>). To avoid specifying this option every time
      you use <command>apt</command>, you can add
      <literal>APT::Default-Release "stable";</literal> in the file
      <filename>/etc/apt/apt.conf.d/local</filename>.</para>

      <indexterm><primary><command>apt full-upgrade</command></primary></indexterm>
      <indexterm><primary><command>apt dist-upgrade</command></primary></indexterm>
      <indexterm><primary><command>apt-get dist-upgrade</command></primary></indexterm>
      <indexterm><primary><command>aptitude dist-upgrade</command></primary></indexterm>
      <indexterm><primary><command>aptitude full-upgrade</command></primary></indexterm>

      <para>For more important upgrades, such as the change from one major
      Debian version to the next, you need to use <command>apt
      full-upgrade</command>. With this instruction,
      <command>apt</command> will complete the upgrade even if it has to
      remove some obsolete packages or install new dependencies. This is
      also the command used by users who work daily with the Debian
      <emphasis role="distribution">Unstable</emphasis> release and follow its
      evolution day by day. It is so simple that it hardly needs
      explanation: APT's reputation is based on this great
      functionality.</para>

      <para>Unlike <command>apt</command> and <command>aptitude</command>,
      <command>apt-get</command> doesn't know the
      <command>full-upgrade</command> command. Instead,
      you should use <command>apt-get dist-upgrade</command>
      (”distribution upgrade”), the historical and well-known
      command that <command>apt</command> and <command>aptitude</command>
      also accept for the convenience of users who got used to it.
      </para>
    </section>

    <section id="sect.apt-config">
      <title>Konfigurationsoptionen</title>
      <indexterm><primary>APT</primary><secondary>Konfiguration</secondary></indexterm>
      <indexterm><primary><filename>apt.conf.d/</filename></primary></indexterm>
      <indexterm><primary><filename>/etc/apt/apt.conf.d/</filename></primary></indexterm>

      <para>Besides the configuration elements already mentioned, it is
      possible to configure certain aspects of APT by adding directives in
      a file of the <filename>/etc/apt/apt.conf.d/</filename> directory.
      Remember for instance that it is possible for APT to tell
      <command>dpkg</command> to ignore file conflict errors by specifying
      <literal>DPkg::options { "--force-overwrite"; }</literal>.</para>

      <para>Falls auf das Web nur über einen Web-Proxy zugegriffen werden kann, fügen Sie eine Zeile wie <literal>Acquire::http::proxy "http://<replaceable>IhrProxy</replaceable>:3128"</literal> hinzu. Für einen FTP-Proxy schreiben Sie <literal>Acquire::ftp::proxy "ftp://<replaceable>IhrProxy</replaceable>"</literal>. Um mehr über die Konfigurationsoptionen heraus zu finden, lesen Sie die Handbuchseite <citerefentry><refentrytitle>apt.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry> mit dem Befehl <command>man apt.conf</command> (für Einzelheiten zu Handbuchseiten siehe <xref linkend="sect.manual-pages" />).</para>

      <sidebar id="sidebar.directory.d">
        <title><emphasis>ZURÜCK ZU DEN GRUNDLAGEN</emphasis> Auf <filename>.d</filename> endende Verzeichnisse</title>
        <indexterm><primary><filename>.d</filename></primary></indexterm>

	<para>Verzeichnisse mit angehängtem <filename>.d</filename> werden immer häufiger benutzt. Jedes Verzeichnis steht für eine Konfigurationsdatei, die auf mehrere Dateien aufgeteilt ist. In diesem Sinne sind alle Dateien in <filename>/etc/apt/apt.conf.d</filename> Anweisungen für die Konfiguration von APT. APT bezieht sie in alphabetischer Reihenfolge ein, so dass Anweisungen aus den weiter hinten stehenden Dateien bereits zuvor definierte Konfigurationselemente verändern können.</para>

	<para>Diese Struktur gibt dem Administrator der Maschine und den Paket-Betreuern einiges an Flexibilität. Tatsächlich kann der Administrator  die Konfiguration der Software verändern, indem er dem fraglichen Verzeichnis eine ein gebrauchsfertige Datei hinzufügt, ohne eine bestehende Datei verändern zu müssen. Paket-Betreuer nutzen denselben Ansatz, wenn sie die Konfiguration einer anderen Software anpassen müssen, um sicher zu stellen, dass beide Konfigurationen friedlich koexistieren können. Die Debian-Richtlinien (policy) verbieten jedoch ausdrücklich das Verändern von Konfigurationsdateien anderer Pakete — nur den Anwendern wird dieses gestattet. Erinnern Sie sich, dass während einer Paketaktualisierung der Benutzer eine Auswahlmöglichkeit erhält, welche Version der Konfigurationsdatei verwendet werden soll, falls eine Veränderung erkannt wurde. Jede fremde Änderung würde eine solche Abfrage auslösen, zur Verwunderung des Administrators, der sich sicher ist, nichts verändert zu haben.</para>

	<para>Without a <filename>.d</filename> directory, it is impossible
	for an external package to change the settings of a program without
	modifying its configuration file. Instead it must invite the user
	to do it themselves and lists the operations to be done in the file
	<filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename>.</para>

	<para>Abhängig von der Anwendung wird das <filename>.d</filename>-Verzeichnis direkt benutzt oder von einem externen Skript verwaltet, welches alle Dateien zu der eigentlichen Konfigurationsdatei zusammenfügt. Wichtig ist, dieses Skript nach jeder Änderung in dem Verzeichnis auszuführen, so dass die jüngsten Änderungen angewendet werden. Ebenso wichtig ist es, die automatisch erzeugte Konfigurationsdatei nicht direkt zu bearbeiten, weil alle manuellen Änderungen bei der nächsten Ausführung des Skripts verloren gehen. Die gewählte Methode (das <filename>.d</filename>-Verzeichnis direkt zu nutzen oder eine aus dem Verzeichnis generierte Datei) wird üblicherweise bestimmt durch die Rahmenbedingungen bei der Entwicklung, in beiden Fällen aber macht die höhere Konfigurationsflexibilität die kleinen Komplikationen, die sie mit sich bringt, mehr als wett. Der Mailserver Exim4 ist ein Beispiel für die Methode der generierten Datei: er kann durch mehrere Dateien (<filename>/etc/exim4/conf.d/*</filename>) konfiguriert werden, die vom Befehl <command>update-exim4.conf</command> zu <filename>/var/lib/exim4/config.autogenerated</filename> verknüpft werden.</para>
      </sidebar>
    </section>
    <section id="sect.apt.priorities">
      <title>Paketprioritäten verwalten</title>

      <para>Einer der wichtigsten Aspekte bei der Konfiguration von APT ist die Verwaltung der Prioritäten, die jeder Paketquelle zugeordnet sind. Möchten Sie zum Beispiel eine stabile Distribution durch ein oder zwei neuere Pakete aus <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> oder <emphasis role="distribution">Experimental</emphasis> erweitern? Es ist möglich, jedem verfügbaren Paket eine Priorität zuzuweisen (dasselbe Paket kann mehrere Prioritäten haben, abhängig von seiner Version oder der Distribution, in der es vorkommt). Diese Prioritäten beeinflussen APTs Verhalten: Für jedes Paket wird die Version mit der höchsten Priorität ausgewählt (außer wenn diese Version älter ist, als die installierte und wenn ihre Priorität geringer als 1000 ist).</para>
      <indexterm><primary>APT</primary><secondary><foreignphrase>pinning</foreignphrase></secondary></indexterm>
      <indexterm><primary>pinning, APT pinning</primary></indexterm>
      <indexterm><primary>Paket</primary><secondary>Priorität</secondary></indexterm>
      <indexterm><primary>Priorität</primary><secondary>Paketpriorität</secondary></indexterm>
      <indexterm><primary>APT</primary><secondary>Voreinstellungen</secondary></indexterm>
      <indexterm><primary><filename>preferences</filename></primary></indexterm>
      <indexterm><primary><filename>/etc/apt/preferences</filename></primary></indexterm>

      <para>APT definiert verschiedene Standard-Prioritäten. Jede installierte Paketversion hat die Priorität 100. Eine nicht installierte Version erhält standardmäßig die Priorität 500, diese kann aber auf 990 angehoben werden, falls sie Teil der Ziel-Veröffentlichung ist (diese wird durch die Befehlszeilenoption <literal>-t</literal> oder die Konfigurationsanweisung <literal>APT::Default-Release</literal> festgelegt).</para>

      <para>Sie können die Prioritäten ändern, indem Sie der Datei <filename>/etc/apt/preferences</filename> Einträge mit den Namen der betroffenen Pakete, ihrer Version und Herkunft, sowie ihrer neuen Priorität hinzufügen.</para>

      <para>APT installiert keine ältere Version eines Pakets (das heißt, ein Paket, dessen Versionsnummer niedriger ist als die des gegenwärtig installierten Paketes), außer wenn deren Priorität höher als 1000 ist. APT installiert immer das Paket mit der höchsten Priorität, das dieser Bedingung entspricht. Falls zwei Pakete dieselbe Priorität haben, installiert APT das neuere (das, mit der höheren Versionsnummer). Falls zwei Pakete mit der derselben Version und derselben Priorität, unterschiedlichen Inhalt haben, installiert APT die Version, die nicht installiert ist. (Diese Regel wurde entworfen, um den Fall einer Paket-Aktualisierung ohne die eigentlich nötige Erhöhung der Revisionsnummer abzudecken).</para>

      <para>Konkret wird ein Paket mit einer Priorität kleiner als 0 niemals installiert. Ein Paket mit einer Priorität zwischen 0 und 100 wird nur dann installiert, wenn keine andere Version des Pakets bereits installiert ist. Bei einer Priorität zwischen 100 und 500 wird das Paket nur dann installiert, wenn keine neuere Version installiert oder in einer anderen Distribution verfügbar ist.  Zwischen einer Priorität von 501 und 990 wird ein Paket nur dann installiert, wenn keine neuere Version installiert oder in der Zieldistribution verfügbar ist. Liegt die Priorität zwischen 990 und 1000 wird das Paket nur dann installiert, wenn keine neuere Version installiert ist. Mit einer Priorität größer 1000 wird das Paket in jedem Fall installiert, selbst wenn dies APT zu einem Downgrade auf eine ältere Version zwingt.</para>

      <para>When APT checks <filename>/etc/apt/preferences</filename>, it
      first takes into account the most specific entries (often those
      specifying the concerned package), then the more generic ones
      (including for example all the packages of a distribution). If
      several generic entries exist, the first match is used. The available
      selection criteria include the package's name and the source
      providing it. Every package source is identified by the information
      contained in a <filename>Release</filename> file that APT downloads
      together with the <filename>Packages</filename> files. It
      specifies the origin (usually “Debian” for the packages of
      official mirrors, but it can also be a person's or an organization's
      name for third-party repositories). It also gives the name of the
      distribution (usually <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> or <emphasis role="distribution">Experimental</emphasis> for the standard
      distributions provided by Debian) together with its version (for
      example 8 for Debian <emphasis role="distribution">Jessie</emphasis>). Let's have a look at its
      syntax through some realistic case studies of this mechanism.</para>

      <sidebar>
        <title><emphasis>SPEZIFISCHER FALL</emphasis> Priorität von <emphasis role="distribution">experimental</emphasis></title>
        <indexterm><primary><emphasis role="distribution">Experimental</emphasis></primary></indexterm>

	<para>Auch wenn Sie <emphasis role="distribution">Experimental</emphasis> zu Ihrer <filename>sources.list</filename>-Datei hinzugefügt haben, werden die darin enthaltenen Pakete wahrscheinlich niemals installiert, da deren Priorität auf 1 voreingestellt ist. Dabei handelt es sich um eine Sicherheitsvorkehrung, die verhindern soll, dass Anwender <emphasis role="distribution">Experimental</emphasis> Pakete aus Versehen installieren. Diese Pakete lassen sich nur mittels <command>aptitude install <replaceable>Paket</replaceable>/experimental</command> installieren – Anwender, die diesen Befehl eingeben, müssen sich der Risiken bewusst sein, die sie damit eingehen. Es ist dennoch möglich (wenn auch <emphasis>nicht</emphasis> empfohlen), Pakete aus <emphasis role="distribution">Experimental</emphasis> wie Pakete anderer Distributionen zu behandeln, indem Sie ihnen eine Priorität von 500 zuweisen. Sie erreichen dies über einen Eintrag in <filename>/etc/apt/preferences</filename>:</para>
        <informalexample>
          <programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500
</programlisting>
        </informalexample>
      </sidebar>

      <para>Angenommen, Sie wollen nur Pakete aus der stable-Version von Debian verwenden. Pakete anderer Versionen sollen nicht installiert werden, es sei denn, dies wird explizit gewünscht. In dem Falle können Sie folgenden Eintrag in der Datei <filename>/etc/apt/preferences</filename> vornehmen:</para>
      <informalexample>
        <programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10
</programlisting>
      </informalexample>

      <para><literal>a=stable</literal> bestimmt den Namen der ausgewählten Distribution. <literal>o=Debian</literal> beschränkt den Umfang auf Pakete mit der Herkunft "Debian".</para>

      <para>Let's now assume that you have a server with several local
      programs depending on the version 5.14 of Perl and that you want to
      ensure that upgrades will not install another version of it. You
      could use this entry:</para>
      <informalexample>
        <programlisting>Package: perl
Pin: version 5.14*
Pin-Priority: 1001
</programlisting>
      </informalexample>

      <para>Die Referenzdokumentation für diese Konfigurationsdatei finden Sie auf der Handbuchseite <citerefentry><refentrytitle>apt_preferences</refentrytitle><manvolnum>5</manvolnum></citerefentry>, die Sie mit <command>man apt_preferences</command> anzeigen lassen können.</para>

      <sidebar>
        <title><emphasis>TIPP</emphasis> Kommentare in <filename>/etc/apt/preferences</filename></title>
        <indexterm><primary><literal>Explanation</literal></primary></indexterm>
        <indexterm><primary><literal>Pin</literal></primary></indexterm>
        <indexterm><primary><literal>Pin-Priority</literal></primary></indexterm>

	<para>Es existiert keine offzielle Syntax für Kommentare in der <filename>/etc/apt/preferences</filename> Datei, aber Beschreibungen lassen sich mittels einer oder mehrerer “<literal>Explanation</literal>” Felder zu Beginn jedes Eintrags einfügen:</para>
        <informalexample>
          <programlisting>Explanation: The package xserver-xorg-video-intel provided
Explanation: in experimental can be used safely
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500
</programlisting>
        </informalexample>
      </sidebar>
    </section>
    <section id="sect.apt-mix-distros">
      <title>Mit mehreren Distributionen arbeiten</title>

      <para><command>apt</command> being such a marvelous tool, it is
      tempting to pick packages coming from other distributions. For
      example, after having installed a <emphasis role="distribution">Stable</emphasis> system, you might want to try
      out a software package available in <emphasis role="distribution">Testing</emphasis> or <emphasis role="distribution">Unstable</emphasis> without diverging too much
      from the system's initial state.</para>

      <para>Even if you will occasionally encounter problems while mixing
      packages from different distributions, <command>apt</command>
      manages such coexistence very well and limits risks very effectively.
      The best way to proceed is to list all distributions used in
      <filename>/etc/apt/sources.list</filename> (some people always put
      the three distributions, but remember that <emphasis role="distribution">Unstable</emphasis> is reserved for experienced
      users) and to define your reference distribution with the
      <literal>APT::Default-Release</literal> parameter (see <xref linkend="sect.apt-upgrade" />).</para>

      <para>Let's suppose that <emphasis role="distribution">Stable</emphasis> is your reference distribution
      but that <emphasis role="distribution">Testing</emphasis> and
      <emphasis role="distribution">Unstable</emphasis> are also listed in
      your <filename>sources.list</filename> file. In this case, you can
      use <command>apt install
      <replaceable>package</replaceable>/testing</command> to install a
      package from <emphasis role="distribution">Testing</emphasis>. If the
      installation fails due to some unsatisfiable dependencies, let it
      solve those dependencies within <emphasis role="distribution">Testing</emphasis> by adding the <literal>-t
      testing</literal> parameter. The same obviously applies to <emphasis role="distribution">Unstable</emphasis>.</para>

      <para>In this situation, upgrades (<command>upgrade</command>
      and <command>full-upgrade</command>) are done within <emphasis role="distribution">Stable</emphasis> except for packages already
      upgraded to another distribution: those will follow updates
      available in the other distributions. We will explain this behavior
      with the help of the default priorities set by APT below. Do not
      hesitate to use <command>apt-cache policy</command> (see sidebar <xref linkend="sidebar.apt-cache-policy" />) to
      verify the given priorities.</para>

      <para>Alles beruht auf der Tatsache, dass APT nur Pakete gleich oder höher der installierten Version in Betracht zieht (unter der Annahme das <filename>/etc/apt/preferences</filename> für kein Paket eine Priorität größer als 1000 erzwingt).</para>

      <sidebar id="sidebar.apt-cache-policy">
        <title><emphasis>TIPP</emphasis> <command>apt-cache policy</command></title>

	<para>Zögern Sie nicht, sich die mit einer Paketquelle verbundenen Standardprioritäten mittels <command>apt-cache policy</command> anzeigen zu lassen, um ein besseres Verständnis des Prioritäten-Mechanismus zu gewinnen. Sie können ebenfalls <command>apt-cache policy <replaceable>Paket</replaceable></command> verwenden, um sich die Prioritäten aller verfügbaren Versionen eines gegebenen Paketes anzeigen zu lassen.</para>
      </sidebar>

      <para>Lassen Sie uns annehmen, Sie hätten Version 1 eines ersten Pakets aus <emphasis role="distribution">Stable</emphasis> installiert und Version 2 und 3 wären in <emphasis role="distribution">Testing</emphasis> bzw. in <emphasis role="distribution">Unstable</emphasis> verfügbar. Die installierte Version hat eine Priorität von 100 aber die Version aus <emphasis role="distribution">Stable</emphasis> (genau die gleiche) hat eine Priorität von 990 (weil sie Bestandteil der Zieldistribution ist). Pakete in <emphasis role="distribution">Testing</emphasis> und <emphasis role="distribution">Unstable</emphasis> haben eine Priorität von 500 (die Standardpriorität einer nicht installierten Version). Der Gewinner ist daher die Version 1 mit der Priorität 990. Das Paket "bleibt in <emphasis role="distribution">Stable</emphasis>”.</para>

      <para>Nehmen wir ein anderes Beispiel: Die Version 2 eines Pakets wurde aus  <emphasis role="distribution">Testing</emphasis> installiert. Version 1 ist in <emphasis role="distribution">Stable</emphasis> verfügbar und Version 3 in <emphasis role="distribution">Unstable</emphasis>. Version 1 (mit der Priorität 990 – also niedriger als 1000) wird verworfen, da die Versionsnummer geringer als die der installierten Version ist. Bleiben nur Version 2 und 3, beide mit einer Priorität von 500. Mit dieser Alternative konfrontiert, wählt APT die neueste Version aus, die Version aus <emphasis role="distribution">Unstable</emphasis>. Wenn Sie nicht wollen, das ein installiertes Paket aus <emphasis role="distribution">Testing</emphasis> nach <emphasis role="distribution">Unstable</emphasis> migriert, müssen Sie Paketen aus <emphasis role="distribution">Unstable</emphasis> eine Priorität kleiner als 500 (490 zum Beispiel) zuweisen. Dazu können Sie <filename>/etc/apt/preferences</filename> anpassen:</para>

      <programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490
</programlisting>
    </section>
    <section id="sect.automatic-tracking">
      <title>Automatisch installierte Pakete nachverfolgen</title>

      <para>One of the essential functionalities of
      <command>apt</command> is the tracking of packages installed
      only through dependencies. These packages are called “automatic”,
      and often include libraries for instance.</para>
      
      <para>With this information, when packages are removed, the package
      managers can compute a list of automatic packages that are
      no longer needed (because there is no “manually installed” packages
      depending on them). <command>apt-get autoremove</command> will get
      rid of those packages. <command>aptitude</command> and <command>apt</command> do not have
      this command: the former because it removes them automatically as
      soon as they are identified, and the latter probably because the
      user should not have to manually run such a command.
      In all cases, the tools display a clear message listing the affected
      packages.</para>

      <indexterm><primary><command>apt-mark auto</command></primary></indexterm>
      <indexterm><primary><command>apt-mark manual</command></primary></indexterm>
      <indexterm><primary><command>aptitude markauto</command></primary></indexterm>
      <indexterm><primary><command>aptitude unmarkauto</command></primary></indexterm>
      <para>Es ist eine gute Idee, jedes Paket als automatisch zu markieren, das man nicht direkt benötigt, damit diese automatisch entfernt werden, wenn sie nicht weiter benötigt werden. <command>apt-mark auto <replaceable>Paket</replaceable></command> markiert das betreffenbde Paket als automatisch, während <command>apt-mark manual <replaceable>Paket</replaceable></command> das Gegenteil tut. <command>aptitude markauto</command> und <command>aptitude unmarkauto</command> arbeiten gleichermaßen, obwohl sie mehr Möglichkeiten bieten, viele Pakete auf einmal zu markieren (siehe <xref linkend="sect.aptitude" />). Die konsolenbasierte interaktive Benutzerschnittstelle von <command>aptitude</command> macht es ebenfalls leicht, das "automatisch"-Flag zu überprüfen.</para>

      <indexterm><primary><command>aptitude why</command></primary></indexterm>
      <para>People might want to know why an automatically installed
      package is present on the system. To get this information from the
      command line, you can use <command>aptitude why
        <replaceable>package</replaceable></command>
      (<command>apt</command> and <command>apt-get</command> have no
      similar feature):</para>

      <screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>

      <sidebar>
	<title><emphasis>ALTERNATIVE</emphasis> <command>deborphan</command> und <command>debfoster</command></title>

	<indexterm><primary><command>bzip2</command></primary></indexterm>
	<indexterm><primary><command>debfoster</command></primary></indexterm>
        <para>In days where <command>apt</command>,
        <command>apt-get</command> and <command>aptitude</command> were
        not able to track automatic packages, there were two utilities
	producing lists of unnecessary packages:
	<command>deborphan</command> and
	<command>debfoster</command>.</para>

	<para><command>deborphan</command> is the most rudimentary of
	both. It simply scans the <literal>libs</literal> and
	<literal>oldlibs</literal> sections (in the absence of
	supplementary instructions) looking for the packages that are
	currently installed and that no other package depends on. The
	resulting list can then serve as a basis to remove unneeded
	packages.</para>

	<para><command>debfoster</command> verfolgt einen komplexeren Ansatz, ähnlich dem von APT: Es verwaltet eine Liste von Paketen, die ausdrücklich installiert wurden und merkt sich, welche Pakete zwischen zwei Aufrufen wirklich benötigt wurden. Wenn neue Pakete im System auftauchen und wenn <command>debfoster</command> diese nicht als benötigte Pakete kennt, werden diese zusammen mit ihren Abhängigkeiten angezeigt. Das Programm bietet dann die Wahl: Entfernen der Pakete (wenn möglich mit den Abhängigkeiten), als explizit benötigt markieren oder temporär ignorieren.</para>
      </sidebar>
    </section>
  </section>

  <section id="sect.apt-cache">
    <title>Der Befehl <command>apt-cache</command></title>
    <indexterm><primary><command>apt-cache</command></primary></indexterm>
    <indexterm><primary>APT</primary><secondary>Paketsuche</secondary></indexterm>
    <indexterm><primary>APT</primary><secondary>Kopfzeilen anzeigen</secondary></indexterm>
    <indexterm><primary>Pakete suchen</primary></indexterm>
    <indexterm><primary>Paket</primary><secondary>Suche</secondary></indexterm>

    <para>The <command>apt-cache</command> command can display much of the
    information stored in APT's internal database. This information is a
    sort of cache since it is gathered from the different sources listed in
    the <filename>sources.list</filename> file. This happens during the
    <command>apt update</command> operation.</para>

    <sidebar id="sidebar.cache">
      <title><emphasis>WÖRTERVERZEICHNIS</emphasis> Cache</title>

      <para>Ein Cache (Zwischenspeicher) ist ein temporäres Speichersystem, das benutzt wird, um den Zugriff auf häufig genutzte Daten zu beschleunigen, wenn die üblichen Zugriffsmethoden sehr zeitaufwendig sind. Dieses Konzept kann auf vielfältige Situationen und in unterschiedlichen Dimensionen angewendet werden, vom Mikroprozessorkern bis zum High-End Speichersystem.</para>

      <para>Im Falle von APT sind die Referenz-<filename>Packages</filename> Dateien diejenigen, die auf den Debian Spiegelservern liegen. Nichtsdestoweniger wäre es sehr uneffektiv, bei jeder Suche in der Datenbank verfügbarer Pakete über das Netzwerk zu gehen. Darum hält APT lokale Kopien dieser Dateien (in <filename>/var/lib/apt/lists/</filename>) vor, und führt eine Suche in diesen lokalen Dateien durch. Entsprechend enthält <filename>/var/cache/apt/archives/</filename> einen Zwischenspeicher von bereits heruntergeladenen Paketen, damit diese nicht noch einmal heruntergeladen werden müssen, falls sie nach einer Deinstallation erneut installiert werden sollen.</para>
    </sidebar>

    <indexterm><primary><command>apt show</command></primary></indexterm>
    <indexterm><primary><command>apt search</command></primary></indexterm>
    <indexterm><primary><command>apt-cache show</command></primary></indexterm>
    <indexterm><primary><command>apt-cache search</command></primary></indexterm>
    <indexterm><primary><command>aptitude show</command></primary></indexterm>
    <indexterm><primary><command>aptitude search</command></primary></indexterm>
    <para>The <command>apt-cache</command> command can do keyword-based
    package searches with <command>apt-cache search
    <replaceable>keyword</replaceable></command>. It can also display the
    headers of the package's available versions with <command>apt-cache
    show <replaceable>package</replaceable></command>. This command
    provides the package's description, its dependencies, the name of its
    maintainer, etc. Note that <command>apt search</command>, <command>apt
    show</command>, <command>aptitude search</command>,
    <command>aptitude show</command> work in the same way.
    </para>

    <sidebar>
      <title><emphasis>ALTERNATIVE</emphasis> <command>axi-cache</command></title>
      <indexterm><primary><command>axi-cache</command></primary></indexterm>
      <indexterm><primary><emphasis role="pkg">apt-xapian-index</emphasis></primary></indexterm>

      <para><command>apt-cache search</command> ist ein sehr rudimentäres Werkzeug, das im Wesentlichen aus einem <command>grep</command> auf die Paketbeschreibungen besteht. Oft gibt es zu viele Treffer zurück oder aber gar keine, wenn man zu viele Schlüsselwörter angibt.</para>

      <para><command>axi-cache search <replaceable>Ausdruck</replaceable></command> liefert dagegen bessere Ergebnisse, nach Relevanz geordnet. Es benutzt die <emphasis>Xapian</emphasis>-Suchmaschine und gehört zum Paket <emphasis role="pkg">apt-xapian-index</emphasis>, das alle Paketinformationen indiziert (mehr noch, wie z.B. die <filename>.desktop</filename>-Dateien aller Debian Pakete). Es kennt Schlagwörter ("tags") (see sidebar <xref linkend="sidebar.debtags" />) und die Antwortzeiten liegen in der Größenordnung von Millisekunden.</para>

      <screen>$ <userinput>axi-cache search package use::searching</userinput>
105 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
98% debtags - Enables support for package tags
94% debian-goodies - Small toolbox-style utilities 
93% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
93% goplay - games (and more) package browser using DebTags
[...]
87% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
[...]
More terms: search debian searching strigi debtags bsearch libbsearch
More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing
`axi-cache more' will give more results
      </screen>
    </sidebar>

    <indexterm><primary><command>apt-cache policy</command></primary></indexterm>
    <indexterm><primary><command>apt-cache dumpavail</command></primary></indexterm>
    <indexterm><primary><command>apt-cache pkgnames</command></primary></indexterm>
    <para>Einige Merkmale werden seltener genutzt. Zum Beispiel  <command>apt-cache policy</command>, das sowohl die Prioritäten von Paketquellen als auch die invidueller Pakete anzeigt. Ein weiteres Beispiel ist <command>apt-cache dumpavail</command>, welches die Kopfzeilen aller verfügbaren Versionen aller Pakete anzeigt. <command>apt-cache pkgnames</command> zeigt eine Liste aller Pakete an, die wenigstens einmal im Cache enthalten sind.</para>
  </section>

  <section id="sect.apt-frontends">
    <title>Benutzeroberflächen: <command>aptitude</command>, <command>synaptic</command></title>
    <indexterm><primary><command>aptitude</command></primary></indexterm>
    <indexterm><primary><command>synaptic</command></primary></indexterm>
    <indexterm><primary>APT</primary><secondary>Schnittstellen</secondary></indexterm>

    <para>APT ist ein C++ Programm, dessen Programmcode hauptsächlich in der Laufzeit-Bibliothek <command>libapt-pkg</command> enthalten ist. Die Nutzung einer Laufzeit-Bibliothek vereinfacht die Schaffung von Benutzerschnittstellen (Oberflächen), da der in der Bibliothek enthaltene Code einfach wiederverwendet werden kann. Historisch betrachtet war <command>apt-get</command> nur als Test-Benutzerschnittstelle für <command>libapt-pkg</command> gedacht, aber der Erfolg neigt dazu, diese Tatsache zu verschleiern.</para>
    <section id="sect.aptitude">
      <title><command>aptitude</command></title>

      <para><command>aptitude</command> ist ein interaktives Programm, das im Pseudo-Grafikmodus der Console benutzt werden kann. Sie können durch eine Liste der installierten und der verfügbaren Pakete blättern, die verfügbaren Informationen einsehen und Pakete zur Installation oder Deinstallation auswählen. Das Programm wurde für die Nutzung durch Administratoren entworfen, so dass die Standardverhaltensweisen intelligenter als die von <command>apt-get</command> sind und die Oberfläche einfacher zu verstehen ist.</para>

      <figure>
        <title>Das <command>aptitude</command> Paketverwaltungsprogramm</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/aptitude.png" scalefit="1" width="75%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Nach dem Start zeigt <command>aptitude</command> eine Paketliste, sortiert nach Status (installiert, nicht installiert, installiert aber nicht auf den Spiegelservern verfügbar, andere Anzeigeoptionen, virtuelle Pakete und neue Pakete, die kürzlich auf den Spiegelservern entdeckt wurden). Sie können verschiedene Ansichten nutzen, um die Liste thematisch zu durchsuchen. In jedem Fall zeigt <command>aptitude</command> eine Liste, die Kategorien und Pakete kombiniert. Kategorien sind in einer Baumstruktur organisiert, deren Äste mit den Tastenkombinationen <keycombo><keycap>Eingabe</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> und <keycombo><keycap>]</keycap></keycombo> auf- und zugeklappt werden können. <keycombo><keycap>+</keycap></keycombo> wählt ein Paket zur Installation aus, <keycombo><keycap>-</keycap></keycombo> wählt es zum Entfernen aus und <keycombo><keycap>_</keycap></keycombo> zum vollständigen Löschen (Hinweis: Diese Tastenkombinationen können auch auf Kategorien angewendet werden, wobei die jeweilige Aktion dann auf alle Pakete der Kategorie angewendet wird). <keycombo><keycap>u</keycap></keycombo> aktualisiert die Liste der verfügbaren Pakete und <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> bereitet eine globale Systemaktualisierung vor. <keycombo><keycap>g</keycap></keycombo> wechselt in eine Übersicht der anstehenden Änderungen (ein weiterer Druck auf <keycombo><keycap>g</keycap></keycombo> führt die Änderungen durch) und <keycombo><keycap>q</keycap></keycombo> beendet die aktuelle Ansicht. Wenn Sie dies in der initialen Ansicht tun, beendet dies <command>aptitude</command>.</para>

      <sidebar>
        <title><emphasis>DOKUMENTATION</emphasis> <command>aptitude</command></title>

	<para>Dieser Abschnitt beschäftigt sich nicht mit den Feinheiten der Benutzung von <command>aptitude</command>, stattdessen liegt der Schwerpunkt darin, Ihnen ein "Überlebenspaket" für dessen Benutzung an die Hand zu geben. <command>aptitude</command> ist ziemlich umfassend dokumentiert, deswegen legen wir Ihnen die Nutzung des umfassenden Handbuches, verfügbar unter <emphasis role="pkg">aptitude-doc-en</emphasis> package (<filename>/usr/share/doc/aptitude/html/en/index.html</filename>), ans Herz (Anm. d. Übers.: Aktuell leider nicht auf Deutsch verfügbar).</para>
      </sidebar>

      <para>Um nach einem Paket zu suchen, tippen Sie <keycombo><keycap>/</keycap></keycombo>, gefolgt von einem Suchmuster. Dieses Muster wird mit den Paketnamen verglichen, kann aber auch auf die Beschreibung angewendet werden (durch ein vorangestelltes <literal>~d</literal>), auf den Bereich (durch ein vorangestelltes <literal>~s</literal>) oder auf ein anderes Kriterium, wie in der Dokumentation genauer beschrieben. Mit den gleichen Mustern können Sie die Liste der angezeigten Pakete filtern: Drücken Sie die <keycombo><keycap>l</keycap></keycombo>-Taste (wie in <foreignphrase>limit</foreignphrase>) und geben Sie das Muster ein.</para>

      <para>Managing the “automatic flag” of Debian packages (see <xref linkend="sect.automatic-tracking" />) is a breeze with
      <command>aptitude</command>. It is possible to browse the list of
      installed packages and mark packages as automatic with <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo>
      or to remove the mark with the
      <keycombo><keycap>m</keycap></keycombo> key. “Automatic packages”
      are displayed with an “A” in the list of packages. This feature also
      offers a simple way to visualize the packages in use on a machine,
      without all the libraries and dependencies that you don't really
      care about. The related pattern that can be used with
      <keycombo><keycap>l</keycap></keycombo> (to activate the filter
      mode) is <literal>~i!~M</literal>. It specifies that you only want
      to see installed packages (<literal>~i</literal>) not marked as
      automatic (<literal>!~M</literal>).</para> 
      
      <sidebar>
	<title><emphasis>PROGRAMM</emphasis> <command>aptitude</command> auf der Befehlszeile nutzen</title>

	<para>Die meisten Eigenschaften von <command>aptitude</command> sind sowohl über die interaktive Schnittstelle als auch über die Kommandozeile verfügbar. Diese Kommandos werden regelmäßigen Nutzern von <command>apt-get</command> und <command>apt-cache</command> bekannt vorkommen.</para>

	<para>Die fortgeschrittenen Eigenschaften von <command>aptitude</command> sind auch auf der Kommandozeile verfügbar. Sie können die selben Paket-Suchmuster wie in der interaktiven Version nutzen. Wenn Sie beispielsweise die Liste der manuell installierten Paketen bereinigen wollen und wenn Sie wissen, dass keines der lokal installierten Programme bestimmte Bibliotheken oder Perl-Module benötigt, dann können Sie diese Pakete mit einem einzigen Kommando als "automatisch installiert" markieren:</para>

	<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput>
</screen>

	<para>Hier offenbart sich die Mächtigkeit der Mustersuche von <command>aptitude</command>, durch die es möglich ist, alle Pakete der Sektionen <literal>libs</literal> und <literal>perl</literal> gleichzeitig auszuwählen.</para>

	<para>Beachten Sie: Wenn Pakete als automatisch markiert sind und kein anderes Paket von ihnen abhängt, werden sie bei der nächsten Gelegenheit (nach einer Rückfrage) entfernt.</para>
      </sidebar>

      <section>
        <title>Verwalten von Empfehlungen, Vorschläge und Aufgaben</title>

	<para>Eine weitere interessante Eigenschaft von <command>aptitude</command> ist, dass es die Empfehlungen zwischen Paketen berücksichtigt und dabei dem Benutzer trotzdem gestattet von Fall zu Fall die Wahl zu treffen, ausgewählte Pakete nicht zu installieren. Zum Beispiel empfiehlt das Paket <emphasis role="pkg">gnome</emphasis> (neben anderen) <emphasis role="pkg">gdebi</emphasis>. Wenn Sie das erste zur Installation auswählen, wird das zweite ebenfalls ausgewählt (und als automatisch installiert markiert, falls es nicht bereits installiert ist). Drücken Sie <keycombo><keycap>g</keycap></keycombo>, wird dies deutlich: <emphasis role="pkg">gdebi</emphasis> taucht in der Vorschau der der anstehenden Aktionen auf, unter "Pakete, die von anderen Paketen vorgeschlagen werden". Trotzdem bleibt Ihnen die Wahl, das Paket nicht zu installieren, indem Sie es abwählen, bevor Sie die anstehenden Aktionen ausführen lassen.</para>

	<para>Beachten Sie, dass die Verfolgung von Empfehlungen nicht bei Aktualisierungen greift. Wenn beispielsweise eine neue Version von <emphasis role="pkg">gnome</emphasis> ein Paket vorschlägt, das es vorher nicht vorgeschlagen hat, wird dieses neue Paket nicht zur Installation ausgewählt. Es wird allerdings in der Aktualisierungsliste angezeigt, damit der Administrator es trotzdem zur Installation auswählen kann.</para>

	<para>Vorschläge zwischen Paketen werden ebenfalls in Betracht gezogen, allerdings angepasst an ihren jeweiligen Status. Beispielsweise schlägt <emphasis role="pkg">gnome</emphasis> <emphasis role="pkg">dia-gnome</emphasis> vor, welches dann in der Vorschau (in der Kategorie "Pakete, die von anderen Paketen vorgeschlagen werden") angezeigt wird. Auf diesem Weg ist es für den Administrator sichtbar und er kann entscheiden, ob er den Vorschlag annimmt, oder nicht. Da es sich nur um einen Vorschlag und nicht um eine Abhängigkeit handelt, wird das Paket nicht automatisch ausgewählt – seine Auswahl bedarf eines manuellen Eingriffs seitens des Benutzers (aus diesem Grund wird das Paket auch nicht als automatisch installiert markiert).</para>

	<para>Im gleichen Sinn: Beachten Sie, dass <command>aptitude</command> intelligenten Gebrauch vom Aufgaben-Konzept macht (Aufgaben in diesem Kontext sind Programmgruppen für dedizierte Zwecke/Aufgaben). Da Aufgaben (Tasks) als Kategorien in den Paketlisten-Darstellungen angezeigt werden, können Sie entweder eine vollständige Aufgabe zur Installation oder zum Entfernen auswählen, oder Sie können die Paketliste der Aufgabe durchgehen, um eine Untermenge auszuwählen.</para>
      </section>
      <section>
        <title>Bessere Problemlösungs-Algorithmen</title>

	<para>Um diesen Abschnitt zu beschließen, lassen Sie uns festhalten, dass <command>aptitude</command> im Vergleich zu <command>apt-get</command> über raffiniertere Algorithmen verfügt, wenn es darum geht, schwierige Situationen aufzulösen. Wenn eine Folge von gewünschten Aktionen in Kombination zu einem inkohärenten System führen würde, wertet <command>aptitude</command> verschiedene mögliche Szenarien aus und schlägt diese in absteigender Relevanz vor. Trotzdem sind diese Algorithmen nicht unfehlbar. Glücklicherweise besteht immer die Möglichkeit, die auszuführenden Aktionen von Hand auszuwählen. Wenn die aktuell ausgewählten Aktionen zu Widersprüchen führen, wird im oberen Teil des Bildschirms eine Anzahl von beschädigten Paketen angezeigt (Sie können mit <keycombo><keycap>b</keycap></keycombo> direkt zu diesen Paketen navigieren). Dann können Sie manuell eine Lösung für die gefundenen Probleme zusammenstellen. Im Besonderen haben Sie Zugang zu den verschiedenen verfügbaren Versionen, indem Sie das Paket mit <keycombo><keycap>Enter</keycap></keycombo> anwählen. Löst die Auswahl einer der verfügbaren Versionen das Problem, sollten Sie sich nicht scheuen, Gebrauch von dieser Funktion zu machen. Sinkt die Anzahl der beschädigten Pakete auf Null können Sie beruhigt in die Zusammenfassung der anstehenden Aktionen springen und diese ein letztes Mal prüfen, bevor Sie sie ausführen.</para>

        <sidebar>
          <title><emphasis>HINWEIS</emphasis> Die Protokolldatei von <command>aptitude</command></title>

	  <para>Ebenso wie <command>dpkg</command> führt <command>aptitude</command> Buch über ausgeführte Aktionen – in seiner Protokolldatei (<filename>/var/log/aptitude</filename>). Da beide Programme auf sehr unterschiedlichen Ebenen arbeiten,  finden sich in den Protokolldateien beider Programme unterschiedliche Informationen. Während <command>dpkg</command> alle auf individuelle Pakete angewendeten Operationen Schritt für Schritt protokolliert, stellt <command>aptitude</command> eine breitere Sicht auf einer höheren Ebene, wie zum Beispiel eine systemweite Aktualisierung, dar.</para>

	  <para>Beachten Sie, dass die Protokolldatei nur eine Zusammenfassung der von <command>aptitude</command> ausgeführten Operationen umfasst. Wenn gelegentlich andere Benutzeroberflächen (oder gar <command>dpkg</command> selbst) benutzt werden, enthält die Protokolldatei von <command>aptitude</command> nur eine unvollständige Ansicht der durchgeführten Operationen, so dass Sie sich nicht auf diese Informationen verlassen können, um einen verlässlichen Verlauf des Systems wiederzugeben.</para>
        </sidebar>
      </section>
    </section>
    <section>
      <title><command>synaptic</command></title>

      <para><command>synaptic</command> ist eine grafische Paketverwaltung für Debian mit einer klaren und effizienten Benutzeroberfläche auf Basis von GTK+/GNOME. Die vielen gebrauchsfertigen Filter bieten einen schnellen Zugriff auf neu verfügbare Pakete, installierte Pakete, aktualisierbare Pakete, überflüssige Pakete usw. Während Sie diese Listen durchgehen, können sie Operationen auswählen, die auf die Pakete angewendet werden (installieren, aktualisieren, entfernen, vollständig löschen). Diese Operationen werden nicht umgehend ausgeführt, sondern in eine Aufgabenliste aufgenommen. Ein einzelner Klick auf eine Schaltfläche bestätigt die Operationen, die dann in einem Rutsch ausgeführt werden.</para>

      <figure>
        <title><command>synaptic</command> Paketverwaltungsprogramm</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/synaptic.png" scalefit="1" width="75%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>
  <section id="sect.package-authentication">
    <title>Die Echtheit eines Paketes prüfen</title>
    <indexterm><primary>Paket</primary><secondary>Authentizitätsprüfung</secondary></indexterm>
    <indexterm><primary>Paket</primary><secondary>Siegel</secondary></indexterm>
    <indexterm><primary>Paket</primary><secondary>Signatur</secondary></indexterm>
    <indexterm><primary>Signatur</primary><secondary>Paketsignatur</secondary></indexterm>
    <indexterm><primary>Authentifizierung</primary><secondary>Paketauthentifizierung</secondary></indexterm>

    <para>Sicherheit ist für die Administratoren der Falcot Corp sehr wichtig. Dementsprechend müssen sie sicherstellen, dass sie ausschließlich Pakete installieren, die garantiert von Debian stammen und die unterwegs nicht verändert wurden. Ein Cracker könnte versuchen, Schadcode in ein ansonsten rechtmäßiges Paket einzuschleusen. Ein solches Paket, falls installiert, könnte alles tun, was der Cracker vorgesehen hat, einschließlich der Preisgabe von Passwörtern oder vertraulichen Informationen. Um dies zu verhindern, stellt Debian fälschungssichere Siegel bereit, die – zum Zeitpunkt der Installation – gewährleisten, dass ein Paket wirklich von seinem offiziellen Betreuer stammt und nicht durch einen Dritten verändert wurde.</para>

    <para>The seal works with a chain of cryptographical hashes and a
    signature. The signed file is the <filename>Release</filename> file,
    provided by the Debian mirrors. It contains a list of the
    <filename>Packages</filename> files (including their compressed forms,
    <filename>Packages.gz</filename> and <filename>Packages.xz</filename>,
    and the incremental versions), along with their MD5, SHA1 and SHA256
    hashes, which ensures that the files haven't been tampered with. These
    <filename>Packages</filename> files contain a list of the Debian
    packages available on the mirror, along with their hashes, which
    ensures in turn that the contents of the packages themselves haven't
    been altered either.</para>

    <indexterm><primary><command>apt-key</command></primary></indexterm>
    <indexterm><primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary></indexterm>
    <indexterm><primary><filename>/etc/apt/trusted.gpg.d/</filename></primary></indexterm>
    <indexterm><primary><filename>Release.gpg</filename></primary></indexterm>
    <para>Die vertrauenswürdigen Schlüssel werden mit dem Befehl <command>apt-key</command> aus dem Paket <emphasis role="pkg">apt</emphasis> verwaltet. Dieses Programm pflegt einen Schlüsselbund mit öffentlichen GnuPG Schlüsseln, mit denen die Signaturen in den <filename>Release.gpg</filename>-Dateien der Spiegelserver geprüft werden können. Es kann dazu benutzt werden, von Hand neue Schlüssel hinzuzufügen (wenn nicht-offizielle Spiegelserver benötigt werden). Im Allgemeinen werden aber nur die offiziellen Debian Schlüssel benötigt. Diese Schlüssel werden automatisch durch das <emphasis role="pkg">debian-archive-keyring</emphasis>-Paket aktuell gehalten (welches die entsprechenden Schlüsselbunde (keyrings) in <filename>/etc/apt/trusted.gpg.d</filename> speichert). Dennoch erfordert die Erstinstallation dieses speziellen Paketes Aufmerksamkeit: Auch wenn dieses Paket wie alle anderen signiert ist, kann dessen Signatur nicht von außen überprüft werden. Vorsichtige Administratoren sollten deshalb die Fingerabdrücke importierter Schlüssel überprüfen, bevor sie ihnen zur Installation neuer Pakete vertrauen:</para>

    <screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   4096R/2B90D010 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = 126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid                  Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   4096R/C857C906 2014-11-21 [expires: 2022-11-19]
      Key fingerprint = D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid                  Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   4096R/518E17E1 2013-08-17 [expires: 2021-08-15]
      Key fingerprint = 75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid                  Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-automatic.gpg
-----------------------------------------------------------
pub   4096R/473041FA 2010-08-27 [expires: 2018-03-05]
      Key fingerprint = 9FED 2BCB DCD2 9CDF 7626  78CB AED4 B06F 4730 41FA
uid                  Debian Archive Automatic Signing Key (6.0/squeeze) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-stable.gpg
--------------------------------------------------------
pub   4096R/B98321F9 2010-08-07 [expires: 2017-08-05]
      Key fingerprint = 0E4E DE2C 7F3E 1FC0 D033  800E 6448 1591 B983 21F9
uid                  Squeeze Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   4096R/46925553 2012-04-27 [expires: 2020-04-25]
      Key fingerprint = A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid                  Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   4096R/65FFB764 2012-05-08 [expires: 2019-05-07]
      Key fingerprint = ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid                  Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;
</screen>

    <sidebar>
      <title><emphasis>IN DER PRAXIS</emphasis> Vertrauenswürdige Schlüssel hinzufügen</title>
      <indexterm><primary>Vertrauenswürdiger Schlüssel</primary></indexterm>
      <indexterm><primary>Schlüssel</primary><secondary>APT's Authentifizierungs-Schlüssel</secondary></indexterm>

      <para>When a third-party package source is added to the
      <filename>sources.list</filename> file, APT needs to be told to trust
      the corresponding GPG authentication key (otherwise it will keep complaining
      that it can't ensure the authenticity of the packages coming from
      that repository). The first step is of course to get the public key.
      More often than not, the key will be provided as a small text file,
      which we will call <filename>key.asc</filename> in the following
      examples.</para>

      <para>Um einen Schlüssel zum Schlüsselbund vertrauenswürdiger Schlüssel hinzuzufügen, kann der Administrator <command>apt-key add &lt; key.asc</command> ausführen. Ein anderer Weg ist, die grafische Benutzeroberfläche <command>synaptic</command> zu nutzen: Im Reiter "Authentifizierung" im <menuchoice><guimenu>Einstellungen</guimenu> <guisubmenu>Paketquellen</guisubmenu></menuchoice> Menü besteht die Möglichkeit, Schlüssel aus der <filename>key.asc</filename>-Datei zu importieren.</para>

      <indexterm><primary><emphasis role="pkg">gui-apt-key</emphasis></primary></indexterm>
      <para>Anwender, die eine eigenständige Anwendung und mehr Details über vertrauenswürdige Schlüssel wünschen, steht mit <command>gui-apt-key</command> (im Paket gleichen Namens) eine grafische Benutzeroberfläche zur Verwaltung des Schlüsselbundes vertrauenswürdiger Schlüssel zur Verfügung.</para>
    </sidebar>

    <para>Sobald die richtigen Schlüssel im Schlüsselbund sind, prüft APT die Signaturen vor jeder riskanten Operation, damit Benutzeroberflächen eine Warnung einblenden können, falls bei der Installation eines Pakets die Authentizität nicht bestätigt werden kann.</para>
  </section>
  <section id="sect.dist-upgrade">
    <title>Von einer Stable Distribution auf die nächste aktualisieren</title>

    <para>Eine der bekanntesten Eigenschaften von Debian ist die Fähigkeit, ein installiertes System von einer Stable Veröffentlichung auf die nächste aktualisieren zu können: <foreignphrase>dist-upgrade</foreignphrase> – ein wohlbekannter Ausdruck – hat erheblich zum Ansehen des Projekts beigetragen. Mit ein paar Vorkehrungen dauert die Aktualisierung eines Computers zwischen wenigen Minuten bis zu einigen Duzend Minuen, abhängig von der Downloadgeschwindigkeit der Paketquellen.</para>
    <section>
      <title>Empfohlene Vorgehensweise</title>

      <para>Da Debian einiges an Zeit zur Weiterentwicklung zwischen den Stable Veröffentlichungen hat, sollten Sie vor einer Aktualisierung die Veröffentlichungshinweise lesen.</para>

      <sidebar>
        <title><emphasis>ZURÜCK ZU DEN GRUNDLAGEN</emphasis> Veröffentlichungshinweise</title>

	<para>Die Veröffentlichungshinweise für ein Betriebssystem (oder generell für jede Software) geben einen Überblick über die Software mit Details zu den Besonderheiten der Version. Im Vergleich mit der vollständigen Dokumentation sind diese Dokumente eher kurz und sie führen die seit der letzten Version neu hinzugekommenen Eigenschaften auf. Ebenfalls enthalten sie Einzelheiten zur Aktualisierungsvorgehensweise, Warnungen für Benutzer von vorigen Versionen und manchmal ein Fehlerverzeichnis.</para>

	
	<para>Release notes are available online: the release notes for the
	current stable release have a dedicated URL, while older release
	notes can be found with their codenames:
	<ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" />
	<ulink type="block" url="http://www.debian.org/releases/wheezy/releasenotes" /></para>
      </sidebar>

      
      <para>In this section, we will focus on upgrading a <emphasis role="distribution">Wheezy</emphasis> system to <emphasis role="distribution">Jessie</emphasis>. This is a major operation on
      a system; as such, it is never 100% risk-free, and should not be
      attempted before all important data has been backed up.</para>

      <para>Eine weitere gute Eigeschaft, die das Aktualisieren erleichtert (und verkürzt), ist das Aufräumen der installierten Pakete und dadurch nur die zu behalten, die wirklich gebraucht werden. Hilfreiche Werkzeuge dazu sind unter anderem <command>aptitude</command>, <command>deborphan</command> und <command>debfoster</command> (siehe <xref linkend="sect.automatic-tracking" />). Sie können beispielsweise untenstehenden Befehl absetzen und anschließend im interaktiven Modus von <command>aptitude</command> die geplanten Aufräumarbeiten genau zu überprüfen und Feineinstellungen vornehmen:</para>

      <screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput>
</screen>

      <para>Now for the upgrading itself. First, you need to change the
      <filename>/etc/apt/sources.list</filename> file to tell APT to get
      its packages from <emphasis role="distribution">Jessie</emphasis>
      instead of <emphasis role="distribution">Wheezy</emphasis>. If the
      file only contains references to <emphasis role="distribution">Stable</emphasis> rather than explicit codenames,
      the change isn't even required, since <emphasis role="distribution">Stable</emphasis> always refers to the latest
      released version of Debian. In both cases, the database of available
      packages must be refreshed (with the <command>apt
      update</command> command or the refresh button in
      <command>synaptic</command>).</para>

      <para>Once these new package sources are registered, you should
      first do a minimal upgrade with <command>apt upgrade</command>.
      By doing the upgrade in two steps, we ease the job of the
      package management tools and often ensure that we have the latest
      versions of those, which might have accumulated bugfixes and
      improvements required to complete the full distribution upgrade.
      </para>

      <para>Once this first upgrade is done, it is time to handle the
      upgrade itself, either with <command>apt full-upgrade</command>,
      <command>aptitude</command>, or
      <command>synaptic</command>. You should carefully check the suggested
      actions before applying them: you might want to add suggested
      packages or deselect packages which are only recommended and known
      not to be useful. In any case, the front-end should come up with a
      scenario ending in a coherent and up-to-date <emphasis role="distribution">Jessie</emphasis> system. Then, all you need is
      to do is wait while the required packages are downloaded, answer the
      Debconf questions and possibly those about locally modified
      configuration files, and sit back while APT does its magic.</para>
    </section>
    <section>
      <title>Problembehandlung nach einer Aktualisierung</title>

      <para>Trotz der Anstrengungen der Debian-Betreuer verläuft eine größere Systemaktualisierung nicht immer so problemlos, wie man es sich wünschen würde. Neue Softwareversionen könnten inkompatibel zu ihren Vorgängern sein (beispielsweise, weil sich Standardverhaltensweisen oder Datenformate geändert haben). Auch könnten sich Fehler durch die, jeder Debian Veröffentlichung vorangehende, Testphase hindurch gemogelt haben.</para>

      <para>Um solche Probleme vorwegzunehmen, können Sie das Paket <emphasis role="pkg">apt-listchanges</emphasis> installieren, welches Informationen über mögliche Probleme zu Beginn jeder Paketaktualisierung einblendet. Diese Informationen werden von den Paketbetreuern zusammen- und in <filename>/usr/share/doc/<replaceable>Paket</replaceable>/NEWS.Debian</filename> Dateien zum Nutzen der Anwender bereitgestellt. Das Lesen dieser Dateien (möglicherweise mittels <emphasis role="pkg">apt-listchanges</emphasis>) sollte helfen, Sie vor bösen Überraschungen zu bewahren.</para>

      <para>You might sometimes find that the new version of a software
      doesn't work at all. This generally happens if the application isn't
      particularly popular and hasn't been tested enough; a last-minute
      update can also introduce regressions which are only found after the
      stable release. In both cases, the first thing to do is to have a
      look at the bug tracking system at
      <literal>https://bugs.debian.org/<replaceable>package</replaceable></literal>,
      and check whether the problem has already been reported. If it
      hasn't, you should report it yourself with
      <command>reportbug</command>. If it is already known, the bug report
      and the associated messages are usually an excellent source of
      information related to the bug:</para>
      <itemizedlist>
        <listitem>
	  <para>manchmal existiert bereits ein Patch und ist im Fehlerbericht verfügbar. Sie können dann die korrigierte Version des defekten Pakets lokal übersetzen (siehe <xref linkend="sect.rebuilding-package" />);</para>
        </listitem>
        <listitem>
	  <para>in anderen Fällen könnten andere Anwender bereits eine Übergangslösung für das Problem gefunden und ihre Erkenntnisse in den Antworten zum Fehlerbericht geteilt haben;</para>
        </listitem>
        <listitem>
	  <para>und in wieder anderen Fällen könnte der Paketbetreuer bereits ein korrigiertes Paket gebaut und veröffentlicht haben.</para>
        </listitem>
      </itemizedlist>

      <para>Depending on the severity of the bug, a new version of the
      package may be prepared specifically for a new revision of the stable
      release. When this happens, the fixed package is made available in
      the <literal>proposed-updates</literal> section of the Debian mirrors
      (see <xref linkend="sect.proposed-updates" />). The corresponding
      entry can then be temporarily added to the
      <filename>sources.list</filename> file, and updated packages can be
      installed with <command>apt</command> or
      <command>aptitude</command>.</para>

      <para>Sometimes the fixed package isn't available in this section yet
      because it is pending a validation by the Stable Release Managers.
      You can verify if that's the case on their web page. Packages listed
      there aren't available yet, but at least you know that the
      publication process is ongoing. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" /></para>
    </section>
  </section>
  <section id="sect.regular-upgrades">
    <title>Ein System aktuell halten</title>

    <para>Die Debian Veröffentlichung ist dynamisch ständigen Änderungen unterworfen. Die meisten Änderungen werden in den <emphasis role="distribution">Testing</emphasis> und <emphasis role="distribution">Unstable</emphasis> Versionen vorgenommen, aber selbst <emphasis role="distribution">Stable</emphasis> wird ab und an aktualisiert, hauptsächlich handelt es sich dabei um sicherheitsrelevante Korrekturen. Egal, welche Debian-Version auf dem System läuft, es ist immer ratsam sie aktuell zu halten, um von den letzten Enwicklungen und Korrekturen zu profitieren.</para>

    <para>Natürlich ist es möglich, regelmäßig ein Programm auszuführen, das nach verfügbaren Aktualisierungen sucht und diese installiert. Allerdings ist eine solch wiederkehrende Aufgabe mühsam, speziell dann, wenn sie auf vielen Maschinen ausgeführt werden muss. Glücklicherweise lassen sich solch lästige Aufgaben teilweise automatisieren, eine Reihe von Werkzeugen dazu wurde bereits entwickelt.</para>

    <para>Das erste dieser Werkzeuge ist <command>apticron</command> im Paket gleichen Namens. Seine Hauptaufgabe ist, täglich ein Skript (via <command>cron</command>) auszuführen. Das Skript aktualisiert die Liste der verfügbaren Pakete und schickt, falls ein installiertes Paket nicht in der aktuellsten Version vorliegt, eine E-Mail mit der Liste dieser Pakete zusammen mit den Änderungen in den neuen Versionen. Offenkundig richtet sich dieses Paket an Anwender von Debian <emphasis role="distribution">Stable</emphasis>, da tägliche E-Mails für die sich häufiger ändernden Versionen von Debian doch sehr lang würden. Sind Aktualisierungen verfügbar, lädt <command>apticron</command> sie automatisch herunter. Es installiert sie nicht – das ist dem Administrator überlassen – aber dass die Pakete bereits heruntergeladen und lokal verfügbar (im Zwischenspeicher von APT) sind, beschleunigt die Aufgabe.</para>

    <para>Administratoren, die für viele Computer zuständig sind, werden es ohne Zweifel schätzen, über anstehende Aktualisierungen informiert zu werden, das Durchführen der Aktualisierungen selbst bleibt aber weiterhin mühsam. An dieser Stelle wird das Skript <filename>/etc/cron.daily/apt</filename> (aus dem <emphasis role="pkg">apt</emphasis> Paket) interessant. Dieses Skript wird ebenfalls täglich durch <command>cron</command> ausgeführt (nicht-interaktiv). Um sein Verhalten zu bestimmen, verwenden Sie APT Konfigurationsvariablen (gespeichert in einer Datei unter <filename>/etc/apt/apt.conf.d/</filename>). Die Hauptvariablen sind:</para>
    <variablelist>
      <varlistentry>
        <term><literal>APT::Periodic::Update-Package-Lists</literal></term>
        <listitem>
	  <para>Diese Option erlaubt es Ihnen, die Frequenz (in Tagen) festzulegen mit der die Paketlisten aktualisiert werden. Anwender von <command>apticron</command> benötigen  diese Variable nicht, da <command>apticron</command> diese Aufgabe selbst übernimmt.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
        <listitem>
	  <para>Auch diese Option legt die Frequenz (in Tagen) fest, diesmal für das Herunterladen der Pakete. Und wieder benötigen Anwender von <command>apticron</command> sie nicht.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>APT::Periodic::AutocleanInterval</literal></term>
        <listitem>
	  <para>Die Option deckt ein Merkmal ab, über das <command>apticron</command> nicht verfügt. Sie bestimmt, wie häufig veraltete Pakete (die von keiner Veröffentlichung mehr referenziert werden) aus dem Zwischenspeicher von APT entfernt werden. Dies hält den Zwischenspeicher von APT auf einer sinnvollen Größe und entlastet Sie davon, sich Gedanken um diese Aufgabe machen zu müssen.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
        <listitem>
	  <indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm>
	  <para>Wenn diese Option ausgewählt wurde führt das tägliche Script (aus <emphasis role="pkg">unattended-upgrades</emphasis>) den Befehl <command>unattended-upgrade</command> aus. Wie der Name erwarten lässt, automatisiert sie den Updat-Prozess für einige Pakete. (In der Voreinstellung sind dies die Security-Pakete; kann aber über <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename> bestimmt werden. Beachte, dass dies auch über <command>dpkg-reconfigure -plow unattended-upgrades</command> konfiguriert werden kann.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Andere Optionen gestatten es Ihnen, das Aufräumen des Zwischenspeichers gezielter zu steuern. Diese Optionen werden hier nicht aufgeführt, werden aber im Skript <filename>/etc/cron.daily/apt</filename> beschrieben.</para>

    <indexterm><primary><emphasis role="pkg">gnome-packagekit</emphasis></primary></indexterm>
    <para>These tools work very well for servers, but desktop users
    generally prefer a more interactive system. That is why the “Debian
    desktop environment” task installs <emphasis role="pkg">gnome-packagekit</emphasis> (at least when you select GNOME
    as desktop environment). It provides an icon in the
    notification area of desktop environments when updates are available;
    clicking on this icon then runs <command>gpk-update-viewer</command>,
    a simplified interface to perform updates. You can browse through
    available updates, read the short description of the relevant packages
    and the corresponding <filename>changelog</filename> entries, and
    select whether to apply the update or not on a case-by-case
    basis.</para>

    <figure>
      <title>Aktualisieren mit <command>gpk-update-viewer</command></title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/gnome-packagekit.png" scalefit="1" width="70%" />
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section id="sect.automatic-upgrades">
    <title>Automatische Aktualisierungen</title>
    <indexterm><primary>upgrade</primary><secondary>automatic system upgrade</secondary></indexterm>
    <indexterm><primary>automatisches Upgrade</primary></indexterm>

    <para>Da Falcot Corp über viele Rechner aber nur über wenig IT-Personal verfügt, versuchen die Administratoren alles so weit wie möglich zu automatisieren. Die für diese Prozesse verantwortlichen Programme müssen deshalb ohne Benutzereingriffe ablaufen.</para>
    <section>
      <title><command>dpkg</command> konfigurieren</title>

      <para>Wie bereits erwähnt (siehe Seitenleiste <xref linkend="sidebar.questions-conffiles" />), kann <command>dpkg</command> angewiesen werden, keine Bestätigung vor dem  Ersetzen einer Konfigurationsdatei einzuholen (mittels der <literal>--force-confdef --force-confold</literal> Option). Indes können Interaktionen drei andere Ursachen haben: Einige kommen von APT selbst, andere handhabt <command>debconf</command> und wieder andere kommen von der Befehlszeile ausgelöst durch Paket-Konfigurationsskripte.</para>
    </section>
    <section>
      <title>APT konfigurieren</title>

      <para>Im Falle von APT ist es einfach: die <literal>-y</literal> Option (oder <literal>--assume-yes</literal>) weist APT an, "yes" als Antwort auf alle Rückfragen anzunehmen.</para>
    </section>
    <section>
      <title><command>debconf</command> konfigurieren</title>

      <para>Für <command>debconf</command> Bedarf es mehr Details. Das Programm war von Beginn an ausgelegt, die Relevanz und die Menge der Rückfragen an den Anwender sowie die Art, wie sie ihm präsentiert werden, zu kontrollieren. Aus diesem Grund fordert seine Konfiguration minimale Priorität für Rückfragen, nur Fragen oberhalb der minimalen Priorität werden eingeblendet. Für Rückfragen, die übersprungen werden, nimmt <command>debconf</command> die (vom Paketbetreuer festgelegte) Standardantwort an.</para>

      <para>Das andere relevante Konfigurationselement ist die von der Benutzeroberfläche genutzte Schnittstelle. Wenn Sie <literal>noninteractive</literal> auswählen, wird jede Benutzerinteraktion unterbunden. Versucht ein Paket, eine Information einzublenden, wird diese per E-Mail an den Administrator gesendet.</para>

      <para>Um <command>debconf</command> umzukonfigurieren, nutzen Sie das Werkzeug <command>dpkg-reconfigure</command> aus dem Paket <emphasis role="pkg">debconf</emphasis>; das passende Kommando ist <command>dpkg-reconfigure debconf</command>. Beachten Sie, dass Werte aus der Konfigurationsdatei bei Bedarf  mit Umgebungsvariablen temporär übersteuert werden können (beispielsweise steuert <varname>DEBIAN_FRONTEND</varname> die Schnittstelle, wie auf der <citerefentry><refentrytitle>debconf</refentrytitle><manvolnum>7</manvolnum></citerefentry> Handbuchseite beschrieben).</para>
    </section>
    <section>
      <title>Interaktiver Umgang mit der Kommandozeile</title>

      <para>Die letzte Interaktionsquelle, die am schwersten los zu werdende, sind die von <command>dpkg</command> ausgeführten Konfigurationsskripte. Unglücklicherweise gibt es dafür keine Standardlösung.</para>

      <para>The common approach is to suppress the standard input by
      redirecting the empty content of <filename>/dev/null</filename> into
      it with <command><replaceable>command</replaceable>
      &lt;/dev/null</command>, or to feed it with an endless stream of
      newlines. None of these methods is 100 % reliable, but they
      generally lead to the default answers being used, since most scripts
      consider a lack of reply as an acceptance of the default
      value.</para>
    </section>
    <section>
      <title>Die Wunderkombination</title>

      <para>Indem die vorangegangenen Elemente miteinander kombiniert werden, ist es möglich, ein kleines aber ziemlich zuverlässiges Skript zu entwerfen, das automatische Aktualisierungen durchführt.</para>

      <example id="example.non-interactive-upgrade">
        <title>Automatisches Aktualisierungs-Skript</title>

        <programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade
</programlisting>
      </example>

      <sidebar>
        <title><emphasis>IN DER PRAXIS</emphasis> Der Fall Falcot Corp</title>

	<para>Die Rechner von Falcot haben vielfältige Aufgaben und bilden ein heterogenes System. Aus diesem Grund wählen die Administratoren die am besten geeignete Lösung für jeden Rechner.</para>

	<para>In practice, the servers running <emphasis role="distribution">Jessie</emphasis> are configured with the
	“miracle combination” above, and are kept up to date
	automatically. Only the most critical servers (the firewalls, for
	instances) are set up with <command>apticron</command>, so that
	upgrades always happen under the supervision of an
	administrator.</para>

	<para>The office workstations in the administrative services also
	run <emphasis role="distribution">Jessie</emphasis>, but they are
	equipped with <emphasis role="pkg">gnome-packagekit</emphasis>,
	so that users trigger the upgrades themselves. The
	rationale for this decision is that if upgrades happen without an
	explicit action, the behavior of the computer might change
	unexpectedly, which could cause confusion for the main
	users.</para>

	<para>Die Rechner, die im Labor unter <emphasis role="distribution">Testing</emphasis> laufen  – um von den neusten Programmversionen zu profitieren – , werden nicht automatisch aktualisiert. Die Administratoren konfigurieren APT, die Aktualisierungen vorzubereiten aber nicht durchzuführen. Wenn sich sich entschließen (manuell) zu aktualsieren, ist der lästige Teil des Paketlisteaktualisierens und Herunterladens der Pakete bereits erledigt und die Administratoren können sich auf das Wesentliche konzentrieren.</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.searching-packages">
    <title>Pakete suchen</title>

    <para>Mit der großen und immer weiter wachsenden Menge von Software in Debian entsteht ein Paradoxon: Debian hat normalerweise ein Werkzeug für fast jede Aufgabe, aber es kann sehr schwer sein, es unter der Unzahl anderer Pakete zu finden. Der Mangel an geeigneten Wegen das richtige Werkzeug zu suchen (und zu finden) war lange Zeit ein Problem. Glücklicherweise ist dieses Problem mittlerweile fast vollständig gelöst.</para>

    <para>The most trivial search possible is looking up an exact package
    name. If <command>apt show
    <replaceable>package</replaceable></command> returns a result, then the
    package exists. Unfortunately, this requires knowing or even guessing
    the package name, which isn't always possible.</para>

    <sidebar>
      <title><emphasis>TIPP</emphasis> Namenskonventionen für Pakete</title>

      <para>In einigen Kategorien folgen Paketnamen festgelegten Namensschemen, diese Schemen zu kennen erlaubt es oft, den exakten Paketnamen zu erahnen. Beispielsweise besagt die Namenskonvention für Perl Module, dass ein Modul namens <literal>XML::Handler::Composer</literal> als <emphasis role="pkg">libxml-handler-composer-perl</emphasis> paketiert werden sollte. Die Bibliothek, die Python die Nutzung des <command>gconf</command> Systems ermöglicht, ist als <emphasis role="pkg">python-gconf</emphasis> paketiert. Leider ist es nicht möglich, ein einheitliches Namensschema für alle Pakete festzulegen, obwohl die Paketbetreuer normalerweise der Wahl der vorgelagerten Entwickler folgen.</para>
    </sidebar>

    <para>Eine etwas erfolgreicheres Suchschema ist die Volltextsuche über die Paketnamen, wenn auch immer noch stark beschränkt. Im Allgemeinen lassen sich Resultate durch die Suche in den Paketbeschreibungen erzielen: Da jedes Paket über eine mehr oder weniger detailierte Beschreibung verfügt, wird eine Schlagwortsuche in diesen Beschreibungen oftmals erfolgreich sein. <command>apt-cache</command> und <command>axi-cache</command> sind das Mittel der Wahl für diese Art der Suche; beispielsweise liefert <command>apt-cache search video</command> eine Liste aller Pakete deren Name oder Beschreibung das Schlagwort "video" enthält.</para>

    <para>Komplexere Suchen erfordern ein mächtigeres Werkzeug wie <command>aptitude</command>. <command>aptitude</command> erlaubt es Ihnen, nach logischen Ausdrücken, basierend auf den Metadatenfeldern der Pakete zu suchen. Beispielsweise sucht der folgende Befehl nach Paketen, deren Name <literal>kino</literal> enthält, deren Beschreibung <literal>video</literal> enthält und deren Betreuernamen <literal>paul</literal> enthält:</para>

    <screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
State: not installed
Version: 1.3.4-2.1+b1
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8,472 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=
         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=
         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=
         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,
         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=
         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),
         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=
         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),
         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),
         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),
         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,
         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus
Replaces: kino-dvtitler, kino-timfx, kinoplus
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV
 camcorders. This program uses many keyboard commands for fast navigating and
 editing inside the movie. 
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly
 distributed as separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/

Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::x11, role::program, scope::application, suite::gnome,
      uitoolkit::gtk, use::editing, use::learning, works-with::video,
      x11::application
</screen>

    <para>Die Suche liefert nur ein Ergebnis, <emphasis role="pkg">kino</emphasis>, auf das alle drei Kriterien zutreffen.</para>

    <para>Selbst die Mehrfachkriterien Suchen sind unhandlich, was erklärt, warum sie seltener genutzt werden, als sie eigentlich genutzt werden könnten. Aus diesem Grund wurde ein neues Markierungssystem entwickelt, das einen neuen Suchansatz zur Verfügung stellt. Pakete erhalten Markierungen aus einer thematischen Gliederung über verschiedene Anwendungsbereiche, bekannt als "Facettenklassifikation". Im Falle von <emphasis role="pkg">kino</emphasis> wie oben, besagen die Markierungen, dass Kino eine Gnome-basierte Software  ist, die Videodaten verarbeitet und deren Hauptzweck die Bearbeitung ist.</para>

    <para>Das Durchsuchen der Gliederung kann bei der Suche nach dem Paket, das bekannten Anforderungen entspricht, helfen. Selbst wenn sie eine moderate Anzahl an Treffern liefert, kann der Rest der Suche manuell fortgesetzt werden. Dazu können Sie das <literal>~G</literal> Suchmuster in <command>aptitude</command> nutzen. Es ist aber wahrscheinlich einfacher, zu der Site zu navigieren, wo die Markierungen verwaltet werden: <ulink type="block" url="http://debtags.alioth.debian.org/cloud/" /></para>

    <indexterm><primary><emphasis role="pkg">debtags</emphasis></primary></indexterm>
    <indexterm><primary>Schlagwort (tag)</primary></indexterm>
    <para>Die Schlagworte <literal>works-with::video</literal> and <literal>use::editing</literal> liefern eine handvoll Pakete, unter anderem die Video-Bearbeitungsprogramme <emphasis role="pkg">kino</emphasis> und <emphasis role="pkg">pitivi</emphasis>. Dieses Klassifizierungssystem wird immer stärker genutzt werden und die Paket-Verantwortlichen werden nach und nach effiziente Suchen auf dieser Grundlage zur Verfügung stellen.</para>

    <para>Zusammenfassend wird das geeignetste Werkzeug für die Aufgabe durch die Komplexität der durchzuführenden Suche  bestimmt:</para>
    <itemizedlist>
      <listitem>
	<para><command>apt-cache</command> sucht nur in Paketnamen und Beschreibungen, was sehr bequem ist, wenn Sie nach bestimmten Paketen suchen, auf die wenige Schlagworte passen;</para>
      </listitem>
      <listitem>
	<para>wenn die Suche ebenfalls Beziehungen zwischen Paketen und andere Metadaten wie den Betreuernamen umfasst, wird <command>synaptic</command> nützlicher sein;</para>
      </listitem>
      <listitem>
	<para>wenn eine Markierungs-basierte Suche nötig ist, ist <command>packagesearch</command> ein gutes Werkzeug: eine grafische Oberfläche zur Suche verfügbarer Pakete neben verschiedenen anderen Kriterien (inklusive der Namen der enthaltenen Dateien). Auf der Kommandozeile erledigt <command>axi-cache</command> diese Aufgabe.</para>
        <indexterm><primary><emphasis role="pkg">Paketsuche</emphasis></primary></indexterm>
	<indexterm><primary><command>axi-cache</command></primary></indexterm>
      </listitem>
      <listitem>
	<para>schlussendlich, wenn die Suche komplexe Ausdrücke mit logischen Operatoren erfordert, wird <command>aptitude</command> mit seiner etwas obskuren aber mächtigen Suchmuster-Syntax das Mittel der Wahl sein; es funktioniert auf der Kommandozeile ebenso wie im interaktiven Modus.</para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
