<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="existing-setup" lang="nl-NL">
	<chapterinfo>
		 <keywordset>
			<keyword>Bestaande Installatie</keyword>
			 <keyword>Hergebruik</keyword>
			 <keyword>Migratie</keyword>

		</keywordset>

	</chapterinfo>
	 <title>De Bestaande Installatie Analyseren en Migreren</title>
	 <highlights> <para>
		Iedere revisie van een computer systeem moet rekening houden met het bestaande systeem. Dit laat het hergebruiken van beschikbare middelen zo mogelijk toe en garandeert interoperabiliteit tussen verschillende elementen waaruit het systeem bestaat. Deze studie zal een algemeen kaderwerk te volgen in iedere migratie van een computer infrastructuur naar Linux introduceren.
	</para>
	 </highlights> <section id="sect.heterogeneous-environments">
		<title>Co-existentie en Heterogene Omgevingen</title>
		 <indexterm>
			<primary>omgeving</primary>
			<secondary>heterogene omgeving</secondary>
		</indexterm>
		 <para>
			Debian integreert zeer goed in alle soorten van bestaande omgevingen en werkt goed samen met ieder ander besuringssysteem. Deze bijna-perfecte harmonie komt van deuk vanuit de markt welke eist dat software uitgevers programma's ontwikkelen die standaarden volgen. Nakoming van deze standaarden laat beheerders toe om programma's uit te wisselen: cliënt of server, hetzij vrij of niet.
		</para>
		 <section>
			<title>Integratie met Windows Machines</title>
			 <para>
				Samba's SMB/CIFS ondersteuning verzekert excellente communicatie binnen een Windows context. Het deelt bestanden en printer-wachtrijen naar Windows cliënten en bevat software die Linux machines toelaat om middelen beschikbaar op Windows servers te gebruiken.
			</para>
			 <sidebar> <title><emphasis>GEREEDSCHAP</emphasis> Samba</title>
			 <indexterm>
				<primary>Samba</primary>
			</indexterm>
			 <para>
				De laatste versie van Samba kan de meeste Windows functies vervangen: deze van een simpele Windows NT server (authenticatie, bestanden, printer wachtrijen, printer drivers downloaden, DFS, enz.) tot de meest geavanceerde (een domein controller compatibel met Active Directory).
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Integratie met OS X Machines</title>
			 <indexterm>
				<primary>Zeroconf</primary>
			</indexterm>
			 <indexterm>
				<primary>Bonjour</primary>
			</indexterm>
			 <indexterm>
				<primary>Avahi</primary>
			</indexterm>
			 <para>
				OS X machines bieden, en zijn in staat tot gebruik van, netwerk diensten zoals bestand servers and printer delen. Deze diensten zijn gepubliceerd op het lokale network, welke andere machine toestaat ze te ontdekken en er gebruik van te maken zonder enige manuele configuratie, door de Bonjour implementatie van het Zeroconf protocol pakket te gebruiken. Debian bevat een andere implementatie, Avahi genoemd, welke de zelfde functionaliteit biedt.
			</para>
			 <indexterm>
				<primary>AFP</primary>
			</indexterm>
			 <indexterm>
				<primary>AppleShare</primary>
			</indexterm>
			 <para>
				In de andere richting kan de Netatalk daemon gebruikt worden om bestand servers te bieden aan OS X machines op het netwerk. Het implementeert het AFP (AppleShare) protocol als de nodige meldingen so dat de servers automatisch ontdekt kunnen worden door de OS X cliënten.
			</para>
			 <indexterm>
				<primary>AppleTalk</primary>
			</indexterm>
			 <para>
				Oudere Mac OS netwerken (voor OS X) gebruiken een ander protocol AppleTalk genaamd. Voor omgevingen waarbij machines die dit protocol betrokken zijn biedt Netatalk ook het AppleTalk protocol (eigenlijk begon het als een her-implementatie van dat protocol). Het verzekert de werking van de bestand server en de printer wachtrijen, als een tijd server (klok synchronisatie) Zijn router functie laat interconnectie met AppleTalk netwerken toe.
			</para>

		</section>
		 <section>
			<title>Integratie met Andere Linux/Unix Machines</title>
			 <para>
				Tenslotte, NFS en NIS, beide inbegrepen, garanderen interactie met Unix systemen. NFS verzekert bestand server functionaliteit terwijl NIS gebruiker directory's creëert. De BSD printer laag, gebruikt door de meeste Unix systemen, laat ook ket delen van printer wachtrijen toe.
			</para>
			 <figure>
				<title>Co-existentie van Debian met OS X, Windows en Unix systemen</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-1.png" format="PNG" width="25%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.how-to-migrate">
		<title>Hoe Migreren</title>
		 <indexterm>
			<primary>migratie</primary>
		</indexterm>
		 <para>
			Om continuïteit van de diensten te garanderen moet iedere computer migratie gepland en uitgevoerd worden volgens het plan. Dit principe geldt altijd, wat het gebruikte besturingssysteem ook is.
		</para>
		 <section>
			<title>Onderzoek en Diensten Identificeren</title>
			 <para>
				Hoe simpel het lijkt, deze stap is essentieel. Een serieuze beheerder weet echt de principiële rol van iedere server, maar zulke rollen kunnen veranderen en soms hebben gebruikers met ervaring bepaalde “wilde” diensten geïnstalleerd. Weten dat deze bestaan zal je ten minste laten beslissen wat ermee te doen, in tegenstelling tot ze halsoverkop te verwijderen.
			</para>
			 <para>
				Voor dit doel is het verstandig jouw gebruikers te informeren over het project voor de server te migreren. Om hen te betrekken in het project kan het goed zijn om de meest algemene vrij software programma's op hun desktops te installeren voor de migratie, met welke ze weer in aanraking komen na de migratie naar Debian; Libre Office en het Mozilla Pakket zijn hier de beste voorbeelden.
			</para>
			 <section>
				<title>Netwerk en Processen</title>
				 <indexterm>
					<primary><command>nmap</command></primary>
				</indexterm>
				 <para>
					Het <command>nmap</command> gereedschap (in het pakket met dezelfde naam) zal Internet diensten snel identificeren geherbergd door een machine verbonden aan het netwerk zelfs zonder er op te moeten inloggen. geef simpelweg het volgende commando op een andere machine verbonden met hetzelfde netwerk:
				</para>
				 
<screen>
<computeroutput>$ </computeroutput><userinput>nmap mirwiz</userinput>
<computeroutput>Starting Nmap 6.47 ( http://nmap.org ) at 2015-03-24 11:34 CET
Nmap scan report for mirwiz (192.168.1.104)
Host is up (0.0037s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE
22/tcp open  ssh

Nmap done: 1 IP address (1 host up) scanned in 0.13 seconds</computeroutput></screen>
				 <sidebar> <title><emphasis>ALTERNATIEF</emphasis> Gebruik <command>netstat</command> om een lijst van beschikbare diensten te vinden</title>
				 <para>
					On a Linux machine, the <command>netstat -tupan</command> command will show the list of active or pending TCP sessions, as well UDP ports on which running programs are listening. This facilitates identification of services offered on the network.
				</para>
				 </sidebar> <sidebar> <title><emphasis>GOING FURTHER</emphasis> IPv6</title>
				 <para>
					Some network commands may work either with IPv4 (the default usually) or with IPv6. These include the <command>nmap</command> and <command>netstat</command> commands, but also others, such as <command>route</command> or <command>ip</command>. The convention is that this behavior is enabled by the <parameter>-6</parameter> command-line option.
				</para>
				 </sidebar> <para>
					If the server is a Unix machine offering shell accounts to users, it is interesting to determine if processes are executed in the background in the absence of their owner. The command <command>ps auxw</command> displays a list of all processes with their user identity. By checking this information against the output of the <command>who</command> command, which gives a list of logged in users, it is possible to identify rogue or undeclared servers or programs running in the background. Looking at <filename>crontabs</filename> (tables listing automatic actions scheduled by users) will often provide interesting information on functions fulfilled by the server (a complete explanation of <command>cron</command> is available in <xref linkend="sect.task-scheduling-cron-atd" />).
				</para>
				 <para>
					In any case, it is essential to backup your servers: this allows recovery of information after the fact, when users will report specific problems due to the migration.
				</para>

			</section>

		</section>
		 <section>
			<title>Backing up the Configuration</title>
			 <para>
				It is wise to retain the configuration of every identified service in order to be able to install the equivalent on the updated server. The bare minimum is to make a backup copy of the configuration files.
			</para>
			 <para>
				For Unix machines, the configuration files are usually found in <filename>/etc/</filename>, but they may be located in a sub-directory of <filename>/usr/local/</filename>. This is the case if a program has been installed from sources, rather than with a package. In some cases, one may also find them under <filename>/opt/</filename>.
			</para>
			 <para>
				For data managing services (such as databases), it is strongly recommended to export the data to a standard format that will be easily imported by the new software. Such a format is usually in text mode and documented; it may be, for example, an SQL dump for a database, or an LDIF file for an LDAP server.
			</para>
			 <figure>
				<title>Database backups</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-2.png" format="PNG" width="50%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Each server software is different, and it is impossible to describe all existing cases in detail. Compare the documentation for the existing and the new software to identify the exportable (thus, re-importable) portions and those which will require manual handling. Reading this book will clarify the configuration of the main Linux server programs.
			</para>

		</section>
		 <section>
			<title>Taking Over an Existing Debian Server</title>
			 <indexterm>
				<primary>recovering a Debian machine</primary>
			</indexterm>
			 <indexterm>
				<primary>exploring a Debian machine</primary>
			</indexterm>
			 <indexterm>
				<primary>taking over a Debian server</primary>
			</indexterm>
			 <para>
				To effectively take over its maintenance, one may analyze a machine already running with Debian.
			</para>
			 <para>
				The first file to check is <filename>/etc/debian_version</filename>, which usually contains the version number for the installed Debian system (it is part of the <emphasis>base-files</emphasis> package). If it indicates <literal><replaceable>codename</replaceable>/sid</literal>, it means that the system was updated with packages coming from one of the development distributions (either testing or unstable).
			</para>
			 <para>
				The <command>apt-show-versions</command> program (from the Debian package of the same name) checks the list of installed packages and identifies the available versions. <command>aptitude</command> can also be used for these tasks, albeit in a less systematic manner.
			</para>
			 <para>
				A glance at the <filename>/etc/apt/sources.list</filename> file (and <filename>/etc/apt/sources.list.d/</filename> directory) will show where the installed Debian packages likely came from. If many unknown sources appear, the administrator may choose to completely reinstall the computer's system to ensure optimal compatibility with the software provided by Debian.
			</para>
			 <para>
				The <filename>sources.list</filename> file is often a good indicator: the majority of administrators keep, at least in comments, the list of APT sources that were previously used. But you should not forget that sources used in the past might have been deleted, and that some random packages grabbed on the Internet might have been manually installed (with the <command>dpkg</command> command). In this case, the machine is misleading in its appearance of “standard” Debian. This is why you should pay attention to any indication that will give away the presence of external packages (appearance of <filename>deb</filename> files in unusual directories, package version numbers with a special suffix indicating that it originated from outside the Debian project, such as <literal>ubuntu</literal> or <literal>lmde</literal>, etc.)
			</para>
			 <para>
				Likewise, it is interesting to analyze the contents of the <filename>/usr/local/</filename> directory, whose purpose is to contain programs compiled and installed manually. Listing software installed in this manner is instructive, since this raises questions on the reasons for not using the corresponding Debian package, if such a package exists.
			</para>
			 <sidebar> <title><emphasis>QUICK LOOK</emphasis> <emphasis role="pkg">cruft</emphasis></title>
			 <para>
				The <emphasis role="pkg">cruft</emphasis> package proposes to list the available files that are not owned by any package. It has some filters (more or less effective, and more or less up to date) to avoid reporting some legitimate files (files generated by Debian packages, or generated configuration files not managed by <command>dpkg</command>, etc.).
			</para>
			 <para>
				Be careful to not blindly delete everything that <command>cruft</command> might list!
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Installing Debian</title>
			 <para>
				Once all the required information on the current server is known, we can shut it down and begin to install Debian on it.
			</para>
			 <indexterm>
				<primary>architectuur</primary>
			</indexterm>
			 <para>
				To choose the appropriate version, we must know the computer's architecture. If it is a reasonably recent PC, it is most likely to be amd64 (older PCs were usually i386). In other cases, we can narrow down the possibilities according to the previously used system.
			</para>
			 <para>
				<xref linkend="tab-corresp" xrefstyle="select: label nopage" /> is not intended to be exhaustive, but may be helpful. In any case, the original documentation for the computer is the most reliable source to find this information.
			</para>
			 <table colsep="1" id="tab-corresp">
				<title>Matching operating system and architecture</title>
				 <tgroup cols="2">
					<thead>
						<row>
							<entry>Operating System</entry>
							 <entry>Architecture(s)</entry>

						</row>

					</thead>
					 <tbody>
						<row>
							<entry>DEC Unix (OSF/1)</entry>
							 <entry>alpha, mipsel</entry>

						</row>
						 <row>
							<entry>HP Unix</entry>
							 <entry>ia64, hppa</entry>

						</row>
						 <row>
							<entry>IBM AIX</entry>
							 <entry>powerpc</entry>

						</row>
						 <row>
							<entry>Irix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>OS X</entry>
							 <entry>amd64, powerpc, i386</entry>

						</row>
						 <row>
							<entry>z/OS, MVS</entry>
							 <entry>s390x, s390</entry>

						</row>
						 <row>
							<entry>Solaris, SunOS</entry>
							 <entry>sparc, i386, m68k</entry>

						</row>
						 <row>
							<entry>Ultrix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>VMS</entry>
							 <entry>alpha</entry>

						</row>
						 <row>
							<entry>Windows 95/98/ME</entry>
							 <entry>i386</entry>

						</row>
						 <row>
							<entry>Windows NT/2000</entry>
							 <entry>i386, alpha, ia64, mipsel</entry>

						</row>
						 <row>
							<entry>Windows XP / Windows Server 2008</entry>
							 <entry>i386, amd64, ia64</entry>

						</row>
						 <row>
							<entry>Windows Vista / Windows 7 / Windows 8</entry>
							 <entry>i386, amd64</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <sidebar> <title><emphasis>HARDWARE</emphasis> 64 bit PC vs 32 bit PC</title>
			 <indexterm>
				<primary>amd64</primary>
			</indexterm>
			 <indexterm>
				<primary>i386</primary>
			</indexterm>
			 <para>
				Most recent computers have 64 bit Intel or AMD processors, compatible with older 32 bit processors; the software compiled for “i386” architecture thus works. On the other hand, this compatibility mode does not fully exploit the capabilities of these new processors. This is why Debian provides the “amd64” architecture, which works for recent AMD chips as well as Intel “em64t” processors (including most of the Core series), which are very similar to AMD64.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Installing and Configuring the Selected Services</title>
			 <para>
				Once Debian is installed, we must install and configure one by one all of the services that this computer must host. The new configuration must take into consideration the prior one in order to ensure a smooth transition. All the information collected in the first two steps will be useful to successfully complete this part.
			</para>
			 <figure>
				<title>Install the selected services</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-4.png" format="PNG" width="66%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Prior to jumping into this exercise with both feet, it is strongly recommended that you read the remainder of this book. After that you will have a more precise understanding of how to configure the expected services.
			</para>
			 <para>
			</para>

		</section>

	</section>
</chapter>

