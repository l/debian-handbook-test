<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="packaging-system" lang="nl-NL">
	<chapterinfo>
		 <keywordset>
			<keyword>Binair pakket</keyword>
			 <keyword>Bron pakket</keyword>
			 <keyword>dpkg</keyword>
			 <keyword>afhankelijkheden</keyword>
			 <keyword>conflict</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Pakketten Systeem: Gereedschap en Fundamentele Principes</title>
	 <highlights> <para>
		Als een Debian systeem beheerder, zal je routinematig <filename>.deb</filename> pakketten behandelen, omdat ze consistente functionele eenheden bevatten (applicaties, documentatie, enz.), wiens installatie en onderhoud ze faciliteren. Het is daarom een goed idee om te weten wat ze zijn en hoe ze te gebruiken.
	</para>
	 </highlights> <para>
		Dit hoofdstuk beschrijft de structuur en inhoud van “binaire” en “bron” pakketten. De eerste zijn <filename>.deb</filename> bestanden, rechtstreeks bruikbaar door <command>dpkg</command>, terwijl de laatste de bron code bevatten en instructies om het binaire pakket te bouwen.
	</para>
	 <section id="sect.binary-package-structure">
		<title>Structuur van een Binair Pakket</title>
		 <indexterm>
			<primary>pakket</primary>
			<secondary>binair pakket</secondary>
		</indexterm>
		 <indexterm>
			<primary><command>ar</command></primary>
		</indexterm>
		 <para>
			Het Debian pakket formaat is ontworpen zo dat de inhoud ge-extraheert kan worden op ieder Unix systeem dat de klassieke commando's <command>ar</command>, <command>tar</command> en <command>gzip</command> (soms <command>xz</command> of <command>bzip2</command>) heeft. Dit lijkt een triviale eigenschap maar is belangrijk, vooral voor draagbaarheid en ramphestel.
		</para>
		 <para>
			Beeld je in, bij voorbeeld, dat je per ongeluk het <command>dpkg</command> programma wist en dat je dus geen Debian pakketten meer kunt installeren. <command>dpkg</command> wat zelf een Debian pakket is, zou je doen denken dat je systeem er aan is... Gelukkig ken je het formaat van een pakket en kan daarom het <filename>.deb</filename> bestand van het <emphasis role="pkg">dpkg</emphasis> pakket downloaden en handmatig installeren (zie marge <xref linkend="sidebar.dpkg-apt-ar" />). Indien door ongeluk meerdere van de programma's zoals <command>ar</command>, <command>tar</command> of <command>gzip</command>/<command>xz</command>/<command>bzip2</command> zijn verdwenen, moet je enkel het ontbrekende programma van een ander systeem kopieren (omdat ieder handeling hier volledig onafhankelijk is, zonder afhankelijkheden, is een simpele kopie voldoende). Als jouw systeem last heeft van buitensporig ongeluk en zelfs deze niet werken (misschien ontbreken de diepste systeem bibliotheken?) zou je de statische versie van <command>busybox</command> moeten proberen (aangeboden in het <emphasis role="pkg">busybox-static</emphasis> pakket), welke zelfs meer op zichzelf staand is, en sub commando's aanbied zoals <command>busybox ar</command>, <command>busybox- tar</command> en <command>busybox gunzip</command>.
		</para>
		 <sidebar id="sidebar.dpkg-apt-ar"> <title><emphasis>GEREEDSCHAP</emphasis> <command>dpkg</command>, <command>APT</command> en <command>ar</command></title>
		 <indexterm>
			<primary><command>dpkg</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>ar</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
		</indexterm>
		 <para>
			<command>dpkg</command> is een programma dat <filename>.deb</filename> bestanden behandeld, vooral extraheren, analyseren en uitpakken.
		</para>
		 <para>
			<command>APT</command> is een groep van programma's welke het uitvoeren van hogere-niveau aanpassingen aan het systeem toelaat: Installeren of verwijderen van een pakket (terwijl de afhankelijkheden tevreden worden gehouden), het systeem updaten, de beschikbare pakketten weergeven, enz.
		</para>
		 <indexterm>
			<primary><command>ar</command></primary>
		</indexterm>
		 <para>
			het <command>ar</command> programma laat het behandelen van bestanden met dezelfde naam toe: <command>ar t <replaceable>archief</replaceable></command> toont een lijst van bestanden die zo'n archief bevat, <command>ar x <replaceable>archief</replaceable></command> extraheert de bestanden uit het archief naar de huidige directory, <command>ar d <replaceable>archief</replaceable> <replaceable>bestand</replaceable></command> wist een bestand uit een archief, enz. Zijn man pagina's (<citerefentry><refentrytitle>ar</refentrytitle>
			<manvolnum>1</manvolnum></citerefentry>) documenteren al zijn andere eigenschappen. <command>ar</command> is een heel rudimentair gereedschap dat een Unix beheerder maar zeldzaam zal gebruiken, maar beheerders gebruiken routinematig <command>tar</command>, een geëvalueerd archief en bestandsbeheer programma. Dit is waarom het gemakkelijk is om <command>dpkg</command> te restaureren in het geval van foutieve verwijdering. Je moet enkel het Debian pakket downloaden en de inhoud van het <filename>data.tar.eg</filename> archief extraheren in de root (<filename>/</filename>) van het systeem:
		</para>
		 
<screen>
<computeroutput># </computeroutput><userinput>ar x dpkg_1.17.23_amd64.deb</userinput>
<computeroutput># </computeroutput><userinput>tar -C / -p -xzf data.tar.gz</userinput></screen>
		 </sidebar> <sidebar> <title><emphasis>TERUG NAAR DE BASIS</emphasis> Man pagina notatie</title>
		 <para>
			Het kan verwarrend zijn voor beginners om referenties naar “<citerefentry><refentrytitle>ar</refentrytitle>
			<manvolnum>1</manvolnum></citerefentry>” te vinden in de literatuur. Dit is meestal een handige manier om te verwijzen naar de man pagina's genaamd <literal>ar</literal> in sectie 1.
		</para>
		 <para>
			Deze notiatie wordt soms ook gebruikt om dubbelzinnigheden te voorkomen. Bij voorbeeld om het verschil tussen het <command>printf</command> commando dat ook kan aangegeven worden door <citerefentry><refentrytitle>printf</refentrytitle>
			<manvolnum>1</manvolnum></citerefentry> en de <function>printf</function> functie in de C programmeertaal, naar welke ook gerefereerd kan worden as <citerefentry><refentrytitle>printf</refentrytitle>
			<manvolnum>3</manvolnum></citerefentry>.
		</para>
		 <para>
			<xref linkend="solving-problems" /> bespreekt manual pagina's in meer detail (zie <xref linkend="solving-problems" />).
		</para>
		 </sidebar> <para>
			Kijk naar de inhoud van een <filename>.deb</filename> bestand:
		</para>
		 
<screen><computeroutput>$ </computeroutput><userinput>ar t dpkg_1.17.23_amd64.deb</userinput>
<computeroutput>debian-binary
control.tar.gz
data.tar.gz
$ </computeroutput><userinput>ar  dpkg_1.17.23_amd64.deb</userinput>
<computeroutput>$ </computeroutput><userinput>ls</userinput>
<computeroutput>control.tar.gz  data.tar.gz  debian-binary  dpkg_1.17.23_amd64.deb
$ </computeroutput><userinput>tar tzf data.tar.gz | head -n 15</userinput>
<computeroutput>./
./var/
./var/lib/
./var/lib/dpkg/
./var/lib/dpkg/parts/
./var/lib/dpkg/info/
./var/lib/dpkg/alternatives/
./var/lib/dpkg/updates/
./etc/
./etc/logrotate.d/
./etc/logrotate.d/dpkg
./etc/dpkg/
./etc/dpkg/dpkg.cfg.d/
./etc/dpkg/dpkg.cfg
./etc/alternatives/
$ </computeroutput><userinput>tar tzf control.tar.gz</userinput>
<computeroutput>./
./conffiles
./postinst
./md5sums
./prerm
./preinst
./control
./postrm
$ </computeroutput><userinput>cat debian-binary</userinput>
<computeroutput>2.0</computeroutput></screen>
		 <para>
			Zoals je kunt zien bestaat het <command>ar</command> archief van een Debian pakket drie bestanden:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<filename>debian-binary</filename>. Dit is een tekst bestand welke simpel de versie van het gebruikte <filename>.deb</filename> bestand aangeeft (in 2015: versie 2.0).
				</para>

			</listitem>
			 <listitem>
				<para>
					<filename>control.tar.gz</filename>. Dit archief bestand bevat al de beschikbare meta-informatie, zoals de naam en versie van het pakket. Sommige van deze meta-informatie laat pakket beheersprogramma's toe om vast te stellen of het mogelijk is of het mogelijk is het te installeren of verwijderen, bij voorbeeld volgens de lijst van pakketten reeds op de machine.
				</para>

			</listitem>
			 <listitem>
				<para>
					<filename>data.tar.gz</filename>. Dit archief bevat al de programma's die ge-extraheert moeten worden uit het pakket; dit is waar de uitvoerbare bestanden, documenten, enz. zijn opgeslagen. Bepaalde pakketten kunnen andere compressie formaten gebruiken, in dat geval zal de naam van het bestand anders zijn (<filename>data.tar.bz2</filename> voor bzip2, <filename>data.tar.xz</filename> voor XZ).
				</para>

			</listitem>

		</itemizedlist>

	</section>
	 <section id="sect.package-meta-information">
		<title>Pakket Meta Informatie</title>
		 <indexterm>
			<primary>pakket meta-informatie</primary>
		</indexterm>
		 <indexterm>
			<primary>pakket</primary>
			<secondary>meta-informatie</secondary>
		</indexterm>
		 <para>
			Het Debian pakket is niet enkel een archief van bestanden bedoelt voor installatie. Het is een onderdeel van een groter geheel en het beschrijft haar relatie met andere Debian pakketten (afhankelijkheden, conflicten, suggesties). Het biedt ook scripts die het uitvoeren van commando's in verschillende stadia van de levenscyclus van het pakket mogelijk maken (installatie, verwijdering, upgrades). Deze gegevens worden gebruikt door het pakketbeheerders-programma maar zijn geen onderdeel van de ingepakte software; ze zijn, binnen het pakket, wat zijn “meta-informatie” (informatie over andere informatie) heet.
		</para>
		 <section id="sect.control">
			<title>Omschrijving: het <filename>control</filename> Bestand</title>
			 <indexterm>
				<primary>pakket meta-informatie</primary>
			</indexterm>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>meta-informatie</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>control</filename></primary>
			</indexterm>
			 <para>
				Dit bestand gebruikt een structuur gelijkaardig aan email headers (zoals gedefinieerd door RFC 2822). Bij voorbeeld, voor <emphasis role="pkg">apt</emphasis>, ziet het <filename>control</filename> bestand er zo uit:
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>apt-cache show apt</userinput>
<computeroutput>Package: apt
Version: 1.0.9.6
Installed-Size: 3788
Maintainer: APT Development Team &lt;deity@lists.debian.org&gt;
Architecture: amd64
Replaces: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)
Depends: libapt-pkg4.12 (&gt;= 1.0.9.6), libc6 (&gt;= 2.15), libgcc1 (&gt;= 1:4.1.1), libstdc++6 (&gt;= 4.9), debian-archive-keyring, gnupg
Suggests: aptitude | synaptic | wajig, dpkg-dev (&gt;= 1.17.2), apt-doc, python-apt
Conflicts: python-apt (&lt;&lt; 0.7.93.2~)
Breaks: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)
Description-en: commandline package manager
 This package provides commandline tools for searching and
 managing as well as querying information about packages
 as a low-level access to all features of the libapt-pkg library.
 .
 These include:
  * apt-get for retrieval of packages and information about them
    from authenticated sources and for installation, upgrade and
    removal of packages together with their dependencies
  * apt-cache for querying available information about installed
    as well as installable packages
  * apt-cdrom to use removable media as a source for packages
  * apt-config as an interface to the configuration settings
  * apt-key as an interface to manage authentication keys
Description-md5: 9fb97a88cb7383934ef963352b53b4a7
Tag: admin::package-management, devel::lang:ruby, hardware::storage,
 hardware::storage:cd, implemented-in::c++, implemented-in::perl,
 implemented-in::ruby, interface::commandline, network::client,
 protocol::ftp, protocol::http, protocol::ipv6, role::program,
 role::shared-lib, scope::application, scope::utility, sound::player,
 suite::debian, use::downloading, use::organizing, use::searching,
 works-with::audio, works-with::software:package, works-with::text
Section: admin
Priority: important
Filename: pool/main/a/apt/apt_1.0.9.6_amd64.deb
Size: 1107560
MD5sum: a325ccb14e69fef2c50da54e035a4df4
SHA1: 635d09fcb600ec12810e3136d51e696bcfa636a6
SHA256: 371a559ce741394b59dbc6460470a9399be5245356a9183bbeea0f89ecaabb03</computeroutput></screen>
			 <sidebar> <title><emphasis>TERUG NAAR DE BASIS</emphasis> RFC —Internet standaarden</title>
			 <indexterm>
				<primary>RFC</primary>
			</indexterm>
			 <indexterm>
				<primary>Request For Comments</primary>
			</indexterm>
			 <para>
				RFC is de afkorting van “Request For Comments” (verzoek voor opmerkingen) een RFC is in het algemeen een technisch document dat beschrijft wat een Internet standaard zal worden. Voor gestandaardiseerd en bevroren te worden worden deze standaarden ingediend voor publieke beoordeling (vandaar hun naam). De IETF (Internet Engineering Task Force) beslist over de evolutie van de status van deze documenten (voorgestelde standaarden, ontwerp standaard or standaard).
			</para>
			 <para>
				RFC 2026 definieert het proces voor standaardisatie van Internet Protocollen. <ulink type="block" url="http://www.faqs.org/rfcs/rfc2026.html" />
			</para>
			 </sidebar> <section>
				<title>Afhankelijkheden: het <literal>Depends</literal> Veld</title>
				 <indexterm>
					<primary>afhankelijkheid</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Depends</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary>pakket</primary>
					<secondary>afhankelijkheid</secondary>
				</indexterm>
				 <para>
					De afhankelijkheden worden gedefinieerd in het <literal>Depends</literal> veld in de header van het pakket. Dit is een lijst van voorwaarden waaraan voldaan moet worden om het programma correct te laten werken — deze informatie wordt gebruikt door gereedschappen zoals <command>apt</command> om de nodige bibliotheken te installeren, in de geschikte versies van de afhankelijkheden van het te installeren pakket. Voor iedere afhankelijkheid is het mogelijk het bereik van versies die aan deze eisen voldoen te beperken. In andere woorden, het is mogelijk om uit te drukken dat we een pakket <emphasis role="pkg">libc6</emphasis> in een versie gelijk aan of groter dan “2.15” (geschreven als “<command>libc6 (&gt;= 2.15)</command>”). vergelijking operaties zijn als volgt:
				</para>
				 <itemizedlist>
					<listitem>
						<para>
							<command>&lt;&lt;</command>: kleiner dan;
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>&lt;=</command>: kleiner dan of gelijk aan;
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>=</command>: gelijk aan (merk op dat “<literal>2.6.1</literal>” niet gelijk is aan “<literal>2.6.1-1</literal>”);
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>&gt;=</command>: groter dan of gelijk aan;
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>&gt;&gt;</command>: groter dan.
						</para>

					</listitem>

				</itemizedlist>
				 <para>
					In een lijst met voorwaarden waaraan te voldoen, gescheiden door een komma. Het moet geïnterpreteerd worden als een logische “en”. in voorwaarden, betekend een verticale lijn (“|”) een logische “of” (het is een inclusieve “of”, geen exclusieve “één van beide/of”). Meer meer prioriteit dan “en”, het kan zo veel als nodig gebruikt worden. Dus, de afankeleikheid (“A of B) en C” is geschreven als <command>A | B, C</command>. In contrast, de uitdrukking “A of (B en C)” zou geschreven moeten worden als “(A of B) en (A of C)” omdat het <literal>Hangt af van</literal> veld laat geen haakjes toe de de volgorde van de prioriteiten tussen logische opperatoren “of” en “en” toe. Het zou dus geschreven moeten worden als <command>A | B, A | C</command>. <ulink type="block" url="http://www.debian.org/doc/debian-policy/ch-relationships.html" />
				</para>
				 <indexterm>
					<primary>meta-pakket</primary>
				</indexterm>
				 <para>
					Het afhankelijkheidssysteem is een goed mechanisme om de werking een programma te garanderen, maar het heeft een ander gebruikt met “meta-pakketten”. Dit zijn lege pakketten die enkel afhankelijkheden beschrijven. Ze vergemakkelijken de installatie van een consistente groep programma's voorgeselecteerd door de meta-pakket onderhouder; zo zal, <command>apt install <replaceable>meta-pakket</replaceable></command> al de programma's die gebruik maken van de meta-pakketten afhankelijkheden. De <emphasis role="pkg">gnome</emphasis>, <emphasis role="pkg">kde-full</emphasis> en <emphasis role="pkg">linux-image-amd64</emphasis> pakketten zijn voorbeelden van meta-pakketten.
				</para>
				 <sidebar> <title><emphasis>DEBIAN BELEID</emphasis> <literal>Pre-Depends</literal>, een veeleisender <literal>Depends</literal></title>
				 <indexterm>
					<primary><literal>Pre-Depends</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary>pre-depends</primary>
				</indexterm>
				 <para>
					“Pre-dependencies”, welke opgelijst staan in het “<literal>Pre-Depends</literal>” veld in de pakket headers, vervolledigen de normale afhankelijkheden; hun syntaxis is identiek. Een normale afhankelijkheid geeft aan dat het pakket in kwestie moet uitgepakt en geconfigureerd wirden voor de configuratie van het pakket dat de afhankelijkheid aangeeft. Een pre-dependency geeft aan dat het pakket in kwestie uitgepakt en geconfigureerd moet worden voor het uitvoeren van het pre-installatie script van het pakket dat de pre-dependency aangeeft, dat is voor zijn installatie.
				</para>
				 <para>
					Een pre-dependency is zeer veeleisend voor <command>apt</command>, omdat het strikte beperkingen toevoegt aan de volgorde van de pakketten die geïnstalleerd moeten worden. Als zo, pre-dependencies worden afgeraden tenzij absoluut noodzakelijk. Het is zelf aangeraden om andere ontwikkelaars te consulteren op <email>debian-devel@lists.debian.org</email> voor een pre-dependency toe te voegen. Het is meestal mogelijk om een andere oplossing of omweg te gebruiken.
				</para>
				 </sidebar> <sidebar> <title><emphasis>DEBIAN BELEID</emphasis> <literal>Reccomends</literal>, <literal>Suggests</literal> en <literal>Enhances</literal> velden</title>
				 <indexterm>
					<primary><literal>Recommends</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Suggests</literal>, header veld</primary>
				</indexterm>
				 <para>
					De <literal>Recommends</literal> en <literal>Suggests</literal> velden beschrijven afhankelijkheden die niet verplicht zijn. De “recommended” afhankelijkheid, de meest belangrijke, verbeteren de functionaliteit aangeboden door het pakket aanzienlijk, maar zijn niet noodzakelijk om te kunnen werken. De “suggested” afhenkelijkheid, van een secundair belang, geeft aan dat bepaalde pakketten het respectievelijke programma complementeren en verbeteren, maar het is perfect redelijk om het ene te installeren met of zonder de ander.
				</para>
				 <para>
					Je zou altijd de “recommended” pakketten moeten installeren, tenzij je weet precies waarom je ze niet nodig hebt. Omgekeerd, is het niet noodzakelijk om de “suggested” pakketten te installeren tenzij je weer waarom je ze nodig hebt.
				</para>
				 <indexterm>
					<primary><literal>Enhances</literal>, headers veld</primary>
				</indexterm>
				 <para>
					Het <literal>Enhances</literal> veld beschrijft ook een voorstel, maar in een andere context. Het is inderdaad gelokaliseerd in aanbevolen pakket, en niet in het pakket dat voordeel heeft van de suggestie. Het belang ligt er in dat het mogelijk is om iets te suggereren zonder het in kwestie te moeten aanpassen. Dus, alle add-ons, plug-ins en andere extensies van een programma kan dan weergegeven worden in de lijst van suggesties gerelateerd aan de software. Hoewel het al enkele jaren bestond, wordt dit laatste veld nog steeds grotendeels genegeerd door programma's zoals <command>apt</command> of <command>synaptic</command>. Het doel is een suggestie te doen gemaakt door het <literal>Enhanced</literal> veld die wordt weergegeven aan de gebruiken samen met de traditionele suggesties — gevonden in het <literal>Suggests</literal> veld.
				</para>
				 </sidebar>
			</section>
			 <section>
				<title>Conflict: het <literal>Conflict</literal> veld</title>
				 <indexterm>
					<primary>conflict</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Conflict</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary>pakket</primary>
					<secondary>conflict</secondary>
				</indexterm>
				 <para>
					Het <literal>Conflict</literal> veld geeft aan wanneer een pakket niet geïnstalleerd kan worden gelijktijdig met een ander. De meest voorkomende reden voor dit is dat beide pakketten een bestand bevatten met dezelfde naam of dezelfde dienst of dezelfde TCP poort, of elkaars werking zouden verhinderen.
				</para>
				 <para>
					<command>dpkg</command> zal weigeren om een pakket te installeren als het een conflicteert met een reeds geïnstalleerd pakket, behalve als het nieuwe pakket aangeeft het geïnstalleerde pakket te “vervangen”, in welk geval <command>dpkg</command> ervoor zal kiezen om het oude pakket te vervangen door het nieuwe. <command>apt</command> volgt altijd jouw instructies: als je ervoor kiest om een nieuw pakket te installeren, zal het automatisch aanbieden het pakket dat voor problemen zorgt te verwijderen.
				</para>

			</section>
			 <section>
				<title>Incompatibiliteiten: het <literal>Breaks</literal> Veld</title>
				 <indexterm>
					<primary>incompatibiliteiten</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Breekt</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary>pakket</primary>
					<secondary>incompatibiliteit</secondary>
				</indexterm>
				 <para>
					Het <literal>Breekt</literal> veld heeft een effect gelijkaardig als het <literal>Conficts</literal> veld, maar met een speciale betekenis. Het geeft aan dat de installatie van een pakket een ander pakket “breekt” (of bepaalde versies ervan). In het algemeen is deze incompatibiliteit tussen twee pakketten van voorbijgaande aard, en de <literal>Breekt</literal> relatie refereert specifiek naar een incompatibele versie.
				</para>
				 <para>
					<command>dpkg</command> zal weigeren om een pakket te installeren dat een reeds geïnstaleerd programma breekt en <command>apt</command> zal proberen om het probleem op te lossen door het pakket dat gebroken zou worden te upgraden naar een nieuwere versie (van welke wordt aangenomen dat het gerepareerd is en dus, opnieuw compatibel).
				</para>
				 <para>
					Dit soort situatie kan voorkomen in het geval van updates zonder achterwaartse compatibiliteit: dit is het geval als de nieuwe versie niet langer werkt met de oudere versie en een fout in een ander programma veroorzaakt zonder speciale voorzorgen te nemen. Het <literal>Breekt</literal> veld voorkomt dat de gebruiker deze problemen tegenkomt.
				</para>

			</section>
			 <section>
				<title>Aangeboden Items: het <literal>Biedt aan</literal> Veld</title>
				 <indexterm>
					<primary><literal>Bied aan</literal>, header veld</primary>
				</indexterm>
				 <para>
					Dit veld introduceert de zeer interessante concepten van een “virtueel pakket”. Het heeft vele rollen, maar er zijn er twee van een bepaald belang. De eerste rol bestaat er uit om een virtueel pakket te associëren met een algemene dienst (het pakket “biedt” de dienst aan). De tweede geeft aan dat een pakket een ander volledig vervangt en dat het hiervoor ook de afhankelijkheden kan voldoen die dat ander zou voldoen. Het is dus mogelijk om een vervangings-pakket te maken zonder dezelfde naam voor het pakket te gebruiken.
				</para>
				 <sidebar> <title><emphasis>WOORDENSCHAT</emphasis> Meta-pakket en virtueel pakket</title>
				 <indexterm>
					<primary>meta-pakket</primary>
				</indexterm>
				 <indexterm>
					<primary>pakket</primary>
					<secondary>virtueel pakket</secondary>
				</indexterm>
				 <indexterm>
					<primary>virtueel pakket</primary>
				</indexterm>
				 <para>
					Het is essentieel om meta-pakketten duidelijk te onderscheiden van virtuele pakketten. De eerste zijn echte paketten (inclusief echte <filename>.deb</filename> bestanden), wiens enige doel het is om afhankelijkheden uit te drukken.
				</para>
				 <para>
					Virtuele pakketten, echter, bestaan niet fysiek; ze zijn enkel methoden om echte pakketten te identificeren gebaseerd op algemene, logische criteria (aangeboden dienst, compatibiliteit met een standaard programma of een reeds bestaand pakket, enz.).
				</para>
				 </sidebar> <section>
					<title>Een "Dienst" aanbieden</title>
					 <para>
						Laten we het eerste geval wat nader bekijken met een voorbeeld: Alle email servers, zoals <emphasis role="pkg">postfix</emphasis> of <emphasis role="pkg">sendmail</emphasis> “bieden” het <emphasis role="pkg">mail-transport-agent</emphasis> virtueel pakket. Dus ieder pakket dat deze dienst nodig heeft om te kunnen werken (bijv. email lijst beheerder, zoasl <emphasis role="pkg">smartlist</emphasis> of <emphasis role="pkg">sympa</emphasis>) geven simpelweg aan in zijn afhankelijkheden aan dat een <emphasis role="pkg">mail-transport-agent</emphasis> nodig heeft in plaats van een lange, doch onvolledige lijst van mogelijke oplossingen (bijv. <command>postfix | sendmail | exim4 | …</command>). Verder is het nutteloos om twee email servers op dezelfde machine te installeren, daarom geeft ieder van deze pakketten aan dat ze conflicteren met het <emphasis role="pkg">mail-transport-agent</emphasis> virtueel pakket. Een conflict tussen een pakket en zichzelf wordt genegeerd door het systeem, maar deze techniek zal de installatie van twee email servers naarst elkaar verhinderen.
					</para>
					 <sidebar> <title><emphasis>DEBIAL BELEID</emphasis> Lijst van virtuele pakketten</title>
					 <indexterm>
						<primary>pakket</primary>
						<secondary>virtueel pakket</secondary>
					</indexterm>
					 <para>
						Om een bruikbaar virtueel pakket te zijn met iedereen het eens zijn over zijn naam. Dit is waarom ze gestandaardiseerd zijn in het Debian Beleid. De lijst bevat onder anderen <emphasis role="pkg">mail-transport-agent</emphasis> voor email servers, <emphasis role="pkg">c-compiler</emphasis> voor C programmeer taak compilers, <emphasis role="pkg">www-browser</emphasis> voor web browsers, <emphasis role="pkg">httpd</emphasis> voor web servers, <emphasis role="pkg">ftp-server</emphasis> voor FTP servers, <emphasis role="pkg">x-terminal-emulator</emphasis> voor terminal emulators in grafische modus (<command>xterm</command>) en <emphasis role="pkg">x-window-manager</emphasis> voor window managers.
					</para>
					 <para>
						De volledig lijst van gevonden worden op het web. <ulink type="block" url="http://www.debian.org/doc/packaging-manuals/virtual-package-names-list.txt" />
					</para>
					 </sidebar>
				</section>
				 <section>
					<title>Uitwisselbaarheid met Andere Pakketten</title>
					 <para>
						Het <literal>Biedt aan</literal> veld is ook interessant wanneer de inhoudt van een pakket wordt geleverd in een groter pakket. Bij voorbeeld, de <emphasis role="pkg">libdigest-md5-perl</emphasis> Perl module was een optionele module in Perl 5.6 en is as standaard geïntegreerd in Perl 5.8 (en nieuwere versies zoals 5.20 momenteel in <emphasis role="distribution">Jessie</emphasis>). Als zodanig heeft het <emphasis role="pkg">perl</emphasis> pakket sinds versie 5.8 aangegeven <literal>Biedt aan: libdigest-md5-perl</literal> zodat de afhankelijkheden van dit pakket voldaan zijn als de gebruiker Perl versie 5.8 (of nieuwer) heeft. Het <emphasis role="pkg">libdigest-md5-perl</emphasis> pakket zelf is uiteindelijk verwijderd, omdat het geen belang meer had sinds oude versies van Perl verwijderd werden.
					</para>
					 <figure>
						<title>Gebruik van een <literal>Biedt aan</literal> veld om afhankelijkheden niet te breken</title>
						 <mediaobject>
							<imageobject>
								<imagedata fileref="images/virtual-package.png" format="PNG" width="50%" />
							</imageobject>

						</mediaobject>

					</figure>
					 <para>
						Dit kenmerk is zeer handig, omdat het nooit mogelijk is op te anticiperen op de grillen van ontwikkeling en het is noodzakelijk om aan te passen aan overblijvende, en andere automatische vervangingen, van verouderde software.
					</para>
					 <sidebar> <title><emphasis>TERUG NAAR DE BASIS</emphasis> Perl, een programmeertaal</title>
					 <indexterm>
						<primary>Perl</primary>
					</indexterm>
					 <indexterm>
						<primary>CPAN</primary>
					</indexterm>
					 <para>
						Perl (Practical Extraction and Report Language) is een heel populaire programmeertaal. Het heeft veel klaar-om-te-gebruiken modules die een breed spectrum van applicaties beslaat en er zijn er gedistribueerd door het CPAN (Comprehensive Perl Archive Network) servers, een onuitputbaar netwerk van Perl pakketten. <ulink type="block" url="http://www.perl.org/" /> <ulink type="block" url="http://www.cpan.org/" />
					</para>
					 <para>
						Omdat het een geïnterpreteerde taal is, moet een programma dat in Perl is geschreven niet gecompileerd worden voor het uit te voeren. Daarom worden ze “Perl scripts” genoemd.
					</para>
					 </sidebar>
				</section>
				 <section>
					<title>Eerdere Beperkingen</title>
					 <para>
						Virtuele pakketten hadden last van bepaalde beperkingen, de meest significante was het ontbreken van een versie nummer. Om naar het vorige voorbeeld terug te gaan, een afhankelijkheid zoals <literal>Depends: libdigest-md5-perl (&gt;= 1.6)</literal>, zal, ondanks de aanwezigheid van Perl 5.10, door het pakketbeheersysteem nooit beschouwd worden als voldaan — terwijl het in feite hoogst waarschijnlijk voldaan is. Dit niet beseffende, zal het pakketbeheersysteem de minst riskante optie kiezen, er van uit gaan dat de versies niet overeenkomen.
					</para>
					 <para>
						Deze beperking is opgelost in <emphasis role="pkg">dpkg</emphasis> 1.17.11, en is niet meer relevant in Jessie. Pakketten kunnen een versie nummer toewijzen aan een virtueel pakket dat zij aanbieden met een afhankelijkheid zoals <literal>Biedt aan: libdigest-md5-perl (=1.8)</literal>.
					</para>

				</section>

			</section>
			 <section>
				<title>Bestanden Vervangen: Het <literal>Vervangt</literal> Veld</title>
				 <indexterm>
					<primary>vervanging</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>Vervangr</literal>, header veld</primary>
				</indexterm>
				 <indexterm>
					<primary>pakket</primary>
					<secondary>vervanging</secondary>
				</indexterm>
				 <para>
					Het <literal>Vervangt</literal> veld geeft aan dat het pakket bestanden bevat die ook aanwezig zijn in een ander pakket, maar dat het pakket rechtmatig gerecht is om ze te vervangen. Zonder deze specificatie zal <command>dpkg</command> falen, aangevend dat het de bestanden van een ander pakket niet kan overschrijven (technisch gezien, is hte mogelijk om dit af te dwingen met de <literal>--force-overwrite</literal> optie, maar dat wordt niet gezien als de standaard handeling). Dit laat de identificatie van potentiële problemen toe en verijst dat de onderhouders de zaak voor het al-dan-niet gebruiken van zo'n veld.
				</para>
				 <para>
					Het gebruik van dit veld is gerechtvaardigd wanneer pakket namen veranderen of wanneer een pakket is inbegrepen in een ander. Dit gebeurt ook wanneer de onderhouder beslist om bestanden de verdelen over verschillende binaire pakketten gemaakt van het zelfde bron code pakket: een vervangen bestand hoort niet langen bij het oude pakket, maar enkel het nieuwe.
				</para>
				 <para>
					Als alle bestanden in een geïnstalleerd pakket vervangen zijn, zal het pakket als verwijderd beschouwd worden. Tenslotte moedigt dit veld <command>dpkg</command> aan om het vervangen pakket te verwijderen wanneer er een conflict is.
				</para>
				 <sidebar id="sidebar.debtags"> <title><emphasis>VERDER GAAN</emphasis> Het <literal>Tag</literal> veld</title>
				 <para>
					In het <emphasis role="pkg">apt</emphasis> voorbeel hierboven, kunnen we de aanwezigheid van een veld zien dat we nog niet omschreven hebben, het <literal>Tag</literal> veld. Dit veld beschrijft geen relatie tussen pakketten, maar is simpelweg een mannier om een pakket thematisch te categoriseren. Deze classificatie van pakketten volgens bepaalde criteria (type van interface, programmeertaal, domein of toepassing, enz.) is al heel lang beschikbaar. Desondanks hebben niet alle pakketten correcte tags en is het nog niet geïntegreerd in alle Debian gereedschappen; <command>aptitude</command> geeft deze tag's weer en laat toe ze te gebruiken als zoek criteria. Voor zij die afgeschrikt worden door de zoek criteria van <command>aptitude</command>, laar de volgende website toe om door de tag databank te navigeren: <ulink type="block" url="http://debtags.alioth.debian.org/" />
				</para>
				 </sidebar>
			</section>

		</section>
		 <section id="sect.configuration-scripts">
			<title>Configuratie Scripts</title>
			 <indexterm>
				<primary><filename>postinst</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>preinst</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>postrm</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>prerm</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>control.tar.gz</filename></primary>
			</indexterm>
			 <para>
				Naast het <filename>control</filename> bestand en het <filename>control.tar.gz</filename> archief voor ieder Debian pakket, kunnen Debian pakketten ook een aantal scripts bevatten, ingeroepen door <command>dpkg</command> tijdens verschillende stadia van het verwerken van een pakket. Het Debian Beleid beschrijft de mogelijke gevallen in detail, het specificeert de scripts die worden aangeroepen en de argumenten die ze kunnen ontvangen. Deze volgorde kan complex zijn, omdat indien één script faalt, <command>dpkg</command> zal proberen om naar een voldane staat terug te keren door de installatie of verwijdering die aan de gang is te annuleren (voor zover dit mogelijk is).
			</para>
			 <sidebar> <title><emphasis>VERDER GAAN</emphasis> de databank van <command>dpkg</command></title>
			 <indexterm>
				<primary><filename>/var/lib/dpkg/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary>dpkg</primary>
				<secondary>databank</secondary>
			</indexterm>
			 <para>
				Alle configuratie scripts voor de installatie van pakketten zijn opgeslagen in de <filename>/var/lib/dpkg/info/</filename> directory, in de vorm van een bestand voorafgaand door de naam van het pakket. Deze directory bevat ook bestanden met de <filename>.list</filename> extensie voor ieder pakket, welke een lijst met de bestanden die bij dat pakket horen bevat.
			</para>
			 <para>
				Het <filename>/var/lib/dpkg/status</filename> bestand bevat een reeks van data blokken (in het formaat van de beroemde email headers, RFC 2822) welke de status van ieder pakket beschrijven. De informatie van het <filename>control</filename> bestand met de geïnstalleerde pakketten is hier ook gerepliceerd.
			</para>
			 </sidebar> <para>
				In het algemeen, wordt het <filename>preinst</filename> script uitgevoerd voor de installatie van het pakket, terwijl het <filename>postinst</filename> erna komt. Hetzelfde voor <filename>prerm</filename> wat aangeroepen wordt voor de verwijdering van een pakket en <filename>postrm</filename> erna. Een update van een pakket is hetzelfde als de vorige versie verwijderen en de installatie van het nieuwe. Het is niet mogelijk om alle mogelijke scenario's hier in detail te beschrijven, maar we zullen de meest voorkomende twee bespreken: een installatie/update en een verwijdering.
			</para>
			 <sidebar> <title><emphasis>LET OP</emphasis> Symbolische naam van de scripts</title>
			 <para>
				De volgorde beschreven in dit deel noemen configuratie scripts bij hun specifieke namen, zoals <command>Old-prem</command> of <command>new-postinst</command>. Zij zijn, respectievelijk, het <command>prem</command> script wat in de oude versie van het pakket zit (geïnstalleerd voor de update) en het <command>postinst</command> script dat in de nieuwe versie zit (geïnstalleerd door de update).
			</para>
			 </sidebar> <sidebar> <title><emphasis>TIP</emphasis> Status diagrammen</title>
			 <para>
				Manoj Srivastava heeft deze diagrammen gemaakt die uitleggen hoe de configuratie scripts worden aangeroepen door <command>dpkg</command>. Gelijkaardige diagrammen zijn ook ontworpen door het Debian Women project; ze zijn iets simpeler om te begrijpen, maar minder volledig. <ulink type="block" url="https://people.debian.org/~srivasta/MaintainerScripts.html" /> <ulink type="block" url="https://wiki.debian.org/MaintainerScripts" />
			</para>
			 </sidebar> <section>
				<title>Installatie en Upgrade</title>
				 <indexterm>
					<primary><command>dpkg</command></primary>
					<secondary>interne operatie</secondary>
				</indexterm>
				 <para>
					Dit is wat er gebeurd tijdens een installatie (of een update):
				</para>
				 <orderedlist>
					<listitem>
						<para>
							Voor een update roept <command>dpkg</command> het <command>old-perm upgrade <replaceable>new-version</replaceable></command> aan.
						</para>

					</listitem>
					 <listitem>
						<para>
							Nog steeds voor een update, voert <command>dpkg</command> dan <command>new-preinst upgrade <replaceable>old-version</replaceable></command> aan; voor een eerste installatie, voert het <command>new-preinst install</command> uit. Het kan het oude versie nummer in de laatste parameter toevoegen, als het pakket in tussentijd geïnstalleerd en verwijderd is (maar niet purged blijven de configuratie bestanden behouden).
						</para>

					</listitem>
					 <listitem>
						<para>
							De nieuwe pakket bestanden worden dan uitgepakt. Als een bestand al bestaat, wordt het vervangen, maar er wordt een tijdelijke back-up gemaakt.
						</para>

					</listitem>
					 <listitem>
						<para>
							Voor een update voert <command>dpkg</command> het <command>old-postrm upgrade <replaceable>new-version</replaceable></command> bestand uit.
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>dpkg</command> update al de interne gegevens (bestandslijst, configuratie scripts, enz.) en verwijderd de back-up's van de vervangen bestanden. Vanaf nu is er geen weg terug: <command>dpkg</command> heeft niet langer toegang tot all de elementen noodzakelijk om naar de vorige staat terug te keren.
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>dpkg</command> zal de configuratiebestanden updaten, de gebruiker vragen om te beslissen indien het niet mogelijk is om deze taak manueel af te handelen. De details van deze procedure worden besproken in <xref linkend="sect.conffiles" />.
						</para>

					</listitem>
					 <listitem>
						<para>
							Tenslotte, configureert <command>dpkg</command> hte pakket door <command>new-postinst configure<replaceable> last)version-configured</replaceable></command>. uit te voeren.
						</para>

					</listitem>

				</orderedlist>

			</section>
			 <section>
				<title>Pakket verwijdering</title>
				 <para>
					Dit is wat er gebeurd tijdens een verwijdering van een pakket:
				</para>
				 <orderedlist>
					<listitem>
						<para>
							<command>dpkg</command> roept <command>prerm remove</command> aan.
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>dpkg</command> verwijderd all de bestanden van het pakket, met uitzondering van de configuratie bestanden en configuratie scripts.
						</para>

					</listitem>
					 <listitem>
						<para>
							<command>dpkg</command> voert <command>postrm remove</command> uit. All de configuratie scripts, behalve <filename>postrm</filename>, worden verwijderd. Als de gebruiker de “purge” optie niet gebruikt stopt het proces hier.
						</para>

					</listitem>
					 <listitem>
						<para>
							Voor een complete zuivering van het pakket (commando uitgevoerd met <command>dpkg --purge</command> of <command>dpkg -P</command>, worden de configuratiebestanden ook gewist, samen met een bepaald aantal kopie's (<filename>*.dpkg-tmp</filename>, <filename>*.dpkg-old</filename>, <filename>*.dpkg-new</filename>) en tijdelijke bestanden; <command>dpkg</command> voert dan <command>postrm-purge</command> uit.
						</para>

					</listitem>

				</orderedlist>
				 <sidebar> <title><emphasis>WOORDENSCHAT</emphasis> Wissen, een volledige verwijdering</title>
				 <indexterm>
					<primary>een pakket wissen</primary>
				</indexterm>
				 <para>
					Wanneer een Debian pakket wordt verwijderd, blijven de configuratiebestanden behouden om de mogelijke her-installatie te vergemakkelijken. Hetzelfde voor de gegevens gegenereerd door een daemon (zoals de inhoud van een LDAP server directory, of de inhoud van een databank voor een SQL server), deze worden meestal ook behouden.
				</para>
				 <para>
					Om al de gegevens verbonden aan een pakket te wissen, is het noodzakelijk om het pakket te “wissen” met het commando, <command>dpkg -P <replaceable>pakket</replaceable></command>, <command>apt-get remove --purge <replaceable>pakket</replaceable></command> of <command>aptitude purge <replaceable>pakket</replaceable></command>.
				</para>
				 <para>
					Aangezien de destructieve aard van zo'n gegevens verwijdering, moet wissen niet licht genomen worden.
				</para>
				 </sidebar> <indexterm>
					<primary><filename>config</filename>, <command>debconf</command> script</primary>
				</indexterm>
				 <para>
					De vier scripts hierboven beschreven worden aangevuld door een <filename>config</filename> script, voorzien door pakketen die <command>debconf</command> gebruiken om informatie van de gebruiker voor de configuratie te bekomen. Tijdens de installatie, definieert dit script in detail de vragen van <command>debconf</command>. De antwoorden worden opgeslagen in de <command>debconf</command> databank voor toekomstige verwijzingen. Het script wordt in het algemeen uitgevoerd door <command>apt</command> voor de installatie van de pakketten één-voor-één om al de vragen te groeperen en ze te stellen aan de gebruiker aan het begin van het proces. De pre- en post-installatie scripts kunnen deze informatie dan gebruiken om te werken volgens de wensen van de gebruiker.
				</para>
				 <sidebar> <title><emphasis>GEREEDSCHAP</emphasis> <command>debconf</command></title>
				 <indexterm>
					<primary><command>debconf</command></primary>
				</indexterm>
				 <para>
					<command>debconf</command> was gemaakt om een terugkerend probleem in Debian op te lossen. Alle Debian pakketten die niet kunnen werken zonder een minimale configuratie stelde deze vragen met aanroepen van het <command>echo</command> en <command>read</command> commando's in <filename>postinst</filename> shell scripts (en andere gelijkaardige scripts). Maar dit betekende ook dat tijdens een grote installatie of update de gebruiker aan hun computer most blijven om de verschillende vragen die op ieder moment kunnen verschijnen te beantwoorden. Deze manuele interactie is nu bijna helemaal afgehandeld, dankzij het <command>debconf</command> gereedschap.
				</para>
				 <para>
					<command>debconf</command> heeft veel interessante eigenschappen: het verijst dat de ontwikkelaar gebruikers interactie specificeert; het staat lokalisatie toe van alle regels die aan de gebruiker worden weergegeven (alle vertalingen zijn opgeslagen in het <filename>templates</filename> bestand dat de interacties beschrijft-; het heeft diverse frontends om de vragen aan de gebruiker te tonen (tekst modus, grafische modus, non-interactieve); en het laat de creatie van een centrale databank mogelijk om al de vragen in een rij te stellen aan de gebruiker, voordat een lang installatie of update proces start. De gebruiker kan verder gaan waar hij mee bezig was terwijl het systeem de installatie op zichzelf afhandelt, zonder daar te moeten blijven staren naar het scherm, wachtende op de vragen.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section id="sect.conffiles">
			<title>Checksums, Lijsten van Configuratie Bestanden</title>
			 <indexterm>
				<primary><filename>md5sum</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>conffiles</filename></primary>
			</indexterm>
			 <indexterm>
				<primary>checksum</primary>
			</indexterm>
			 <indexterm>
				<primary>bestanden</primary>
				<secondary>configuratie bestanden</secondary>
			</indexterm>
			 <indexterm>
				<primary>configuratie</primary>
				<secondary>bestanden</secondary>
			</indexterm>
			 <para>
				Naast de onderhouder scripts en controle data al genoemd in het vorige deel, kan het <filename>control.tar.gz</filename> archief van een Debian pakket ook nog andere interessante bestanden bevatten. De eerste <filename>md5sum</filename>, bevat de MD5 checksum voor al de bestanden in het pakket. Het grote voordeel is dat het <command>dpkg --verify</command> toestaat (wat ze in <xref linkend="sect.dpkg-verify" /> zullen bespreken) om de controleren of de bestanden zijn aangepast sinds hun installatie. Merk op dat indien dit bestand niet bestaat <command>dpkg</command> het dynamisch tijdens de installatie zal genereren (en het opslaan in de dpkg databank net zoals andere control bestanden).
			</para>
			 <para>
				<filename>conffiles</filename> een lijst van pakketten die moeten behandeld worden als configuratie bestanden. Configuratiebestanden kunnen aangepast worden door de beheerder en <command>dpkg</command> wal proberen deze veranderingen te behouden bij een pakket update.
			</para>
			 <para>
				In dit geval probeert <command>dpkg</command> zich zo intelligent mogelijk te gedragen: als de standaard configuratie bestand niet is veranderd tussen de twee versies, zal het niks doen. Hoewel als het bestand veranderd is, zal het proberen dit bestand up te daten. Twee gevallen zijn mogelijk: ofwel heeft de beheerder dit configuratie bestand niet aangepast, in welk geval zal <command>dpkg</command> automatisch de nieuwe versie installeren; of het bestand is aangepast, in dat geval zal <command>dpkg</command> de beheerder vragen welke versie hij wenst te gebruiken (de oude met aanpassingen of het nieuwe bestand bij het pakket). Om bij deze beslissing te assisteren zal <command>dpkg</command> aanbieden een “<command>diff</command>”, dat de verschillen tussen de twee versies laat zien, weer te geven. Als de gebruiker kiest om de oude versie te behouden,zal het nieuwe bestand opgeslagen worden op dezelfde locatie in een bestand met de <filename>.dpkg-dist</filename> extensie. Als de gebruiker de nieuwe versie kiest, zal het oude behouden blijven in een bestand met de <filename>dpkg-old</filename> extensie. Een andere beschikbare actie bestaat uit het tijdelijk onderbreken van <command>dpkg</command> om het bestand te bewerken en de relevante aanpassingen (eerder weergegeven met <command>diff</command>) te reconstrueren.
			</para>
			 <sidebar id="sidebar.questions-conffiles"> <title><emphasis>VERDER GAAN</emphasis> De configuratie bestand vragen voorkomen</title>
			 <para>
				<command>dpkg</command> handelt de updates configuratie bestanden af, maar dit proces zal regelmatig onderbroken worden om input te vragen aan de beheerder. Dit maakt het minder plezierig voor mensen die de updates wensen uit te voeren op een niet-interactieve manier. Dit is waarom die programma een optie biedt die het systeem automatisch laat antwoorden volgens dezelfde logica: <command>--force-confold</command> behoudt de oude versies van de bestanden; <command>--force-confnew</command> zal de nieuwe versies van bestanden gebruiken (deze keuze wordt gerespecteerd, zelfs indien het bestand is veranderd door de beheerder, wat soms een ongevraagd effect heeft). het commando <command>--coconfdef</command> toevoegen verteld <command>dpkg</command> dat het zelf, indien mogelijk, de beslissingen moet nemen. (in andere woorden, wanneer het orginele configuratie bestand ongewijzigd is) en enkel <command>--force-confnew</command> of <command>--force-conf-old</command> moet gebruiken in de andere gevallen.
			</para>
			 <para>
				Deze opties zijn van toepassing op <command>dpkg</command>, maar de beheerder zal meestal rechtstreeks werken met de <command>aptitude</command> of <command>apt-get</command> programma's. Het is dus noodzakelijk om de syntaxis die gebruikt wordt om de opties aan <command>dpkg</command> worden doorgegeven te kennen (hun commando-regel interface zijn zeer gelijkaardig).
			</para>
			 
<screen>
<computeroutput># </computeroutput><userinput>apt -o DPkg::options::="--force-confdev" -o DPkg::options::="--force-confold" full-upgrade</userinput></screen>
			 <para>
				Deze opties kunnen rechtstreeks worden opgeslagen in het configuratie bestand van <command>apt</command>. Om dit te doen, voeg de volgende regel toe aan het <filename>/etc/apt/apt.conf.d/local</filename> bestand:
			</para>
			 <informalexample> 
<programlisting>
DPkg::options { "--force-confdef"; "--force-confold"; }</programlisting>
			 </informalexample> <para>
				Deze optie in het configuratie bestand toevoegen betekend dat het ook een grafische interface zoals <command>aptitude</command> zal gebruiken.
			</para>
			 </sidebar> <sidebar id="sidebar.questions-conffiles-bis"> <title><emphasis>VERDER GAAN</emphasis> dpkg dwingen om naar een configuratie bestand te vragen</title>
			 <para>
				De <command>--force-confask</command> optie verijst van <command>dpkg</command> om de vraag naar de configuratie bestanden weer te geven, zelfs indien ze normaal niet nodig zouden zijn. Dus, bij het her-installeren van een pakket met deze optie, zal <command>dpkg</command> de vraag voor alle configuratie bestanden aangepast door de beheerder opnieuw vragen. Dit is zeer handig, vooral voor het her-installeren van het originele configuratie bestand indien het verwijderd is en er geen andere kopie van beschikbaar is: een normale her-installatie zal niet werken, want <command>dpkg</command> beschouwd verwijdering als een soort van legitieme aanpassing en zal dus het gewenste configuratiebestand niet installeren.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.source-package-structure">
		<title>Structuur van een Bron Pakket</title>
		 <indexterm>
			<primary>pakket</primary>
			<secondary>bron pakket</secondary>
		</indexterm>
		 <indexterm>
			<primary>bron</primary>
			<secondary>pakket</secondary>
		</indexterm>
		 <section>
			<title>Vorm</title>
			 <indexterm>
				<primary>DSC bestand</primary>
			</indexterm>
			 <indexterm>
				<primary><filename>diff.gz</filename> bestand</primary>
			</indexterm>
			 <indexterm>
				<primary><filename>debian.tar.gz</filename> bestand</primary>
			</indexterm>
			 <indexterm>
				<primary><filename>orig.tar.gz</filename> bestand</primary>
			</indexterm>
			 <para>
				Een bron pakket bestaat meestal uit drie bestanden, een <filename>.dsc</filename>, een <filename>.orig.tar.gz</filename> en een <filename>.debian.tar.gz</filename> (of <filename>diff.gz</filename>) bestand. Ze laten het maken van binaire pakketten (<filename>.deb</filename> bestanden zoals hierboven beschreven) van de bron code bestanden van het programma toe, welke in een bepaalde programmeertaal zijn geschreven.
			</para>
			 <para>
				Het <filename>.dsc</filename> (Debian Source Control) bestand is een kort tekst bestand dat een RFC 2822 header bevat (net zoals het <filename>control</filename> bestand bestudeert in <xref linkend="sect.control" />) welke het bron pakket omschrijft en aangeeft welke andere bestanden er deel van uitmaken. Het is gesigneerd door de onderhouder, welke de authenticiteit garandeert. Zie <xref linkend="sect.package-authentication" /> voor meer details over dit onderwerp.
			</para>
			 <example>
				<title>Een <filename>.dsc</filename> bestand</title>
				 
<programlisting>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: zim
Binary: zim
Architecture: all
Version: 0.62-3
Maintainer: Emfox Zhou &lt;emfox@debian.org&gt;
Uploaders: Raphaël Hertzog &lt;hertzog@debian.org&gt;
Homepage: http://zim-wiki.org
Standards-Version: 3.9.6
Vcs-Browser: http://anonscm.debian.org/gitweb/?p=collab-maint/zim.git
Vcs-Git: git://anonscm.debian.org/collab-maint/zim.git
Build-Depends: debhelper (&gt;= 9), xdg-utils, python (&gt;= 2.6.6-3~), libgtk2.0-0 (&gt;= 2.6), python-gtk2, python-xdg
Package-List:
 zim deb x11 optional arch=all
Checksums-Sha1:
 ad8de170826682323c10195b65b9f1243fd75637 1772246 zim_0.62.orig.tar.gz
 a4f70d6f7fb404022c9cc4870a4e62ea3ca08388 14768 zim_0.62-3.debian.tar.xz
Checksums-Sha256:
 19d62aebd2c1a92d84d80720c6c1dcdb779c39a2120468fed01b7f252511bdc2 1772246 zim_0.62.orig.tar.gz
 fc2e827e83897d5e33f152f124802c46c3c01c5158b75a8275a27833f1f6f1de 14768 zim_0.62-3.debian.tar.xz
Files:
 43419efba07f7086168442e3d698287a 1772246 zim_0.62.orig.tar.gz
 725a69663a6c2961f07673ae541298e4 14768 zim_0.62-3.debian.tar.xz

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
Comment: Signed by Raphael Hertzog

iQEcBAEBCAAGBQJUR2jqAAoJEAOIHavrwpq5WFcH/RsdzCHc1oXXxHitU23hEqMj
T6ok29M1UFDJDowMXW75jQ1nT4WPUtvEGygkCHeoO/PvjEvB0sjU8GQlX+N9ddSB
aHfqfAYmVhADNGxrXQT5inZXUa8qGeeq2Sqf6YcWtsnuD56lDbvxkyf/XYopoIEl
oltfl05z/AI+vYsW482YrCz0fxNAKAvkyuPhDebYI8jnKWeAANoqmKpsNc/HYyvT
+ZiA5o57OiGdOKT6XGy3/FiF3dkHiRY8lXW7xdr1BbIgulwl9UmiUNwuxwOYbQO7
edtjiTJqOaFUA0x1zB/XGv5tHr1MjP8naT+kfVoVHTOox51CDbeu5D3DZY4imcY=
=Wtoa
-----END PGP SIGNATURE-----</programlisting>

			</example>
			 <indexterm>
				<primary><literal>Build-Depends</literal>, header veld</primary>
			</indexterm>
			 <para>
				Merk op dat het bron pakket ook afhankelijkheden (<literal>Build-Depends</literal>) heeft. Volledig gescheiden van deze van binaire pakketten, omdat ze het nodige gereedschap om de software in kwestie te compileren en haar binaire bestand te maken aangeeft.
			</para>
			 <sidebar> <title><emphasis>LET OP</emphasis> Onderscheidende namen</title>
			 <para>
				Het is belangrijk om hier te melden dat er geen vereiste correspondentie tussen de naam van het bron pakket en dat van het binaire pakket(ten) welke het genereert noodzakelijk is. Het is gemakkelijk te begrijpen als je weet dat ieder bron pakket verschillende binaire pakketten kan genereren. Dit is waarom het <filename>.dsc</filename> bestand de <literal>Source</literal> en <literal>Binary</literal> velden om de naam van het bron pakket expliciet uit te drukken en een lijst te bewaren met binaire pakketten die het genereert.
			</para>
			 </sidebar> <sidebar> <title><emphasis>CULTUUR</emphasis> Waarom onderverdelen in meerdere pakketten</title>
			 <para>
				Redelijk frequent kan een bron pakket (voor bepaalde software) meerdere binaire pakketten genereren. De opsplitsing is verantwoord door de mogelijkheid de software (of onderdelen ervan) te gebruiken in een andere context. Neen een gedeelde bibliotheek, het kan geïnstalleerd worden om een programma te laten werken (bij voorbeeld, <emphasis role="pkg">libc6</emphasis>), of het kan geïnstalleerd worden om een nieuw programma te ontwikkelen (<emphasis role="pkg">libc6-dev</emphasis> zal dan het correcte pakket zijn). We zien dezelfde logica voor cliënt/server diensten waar we het server gedeelte willen installeren op één machine en het cliënt gedeelte op anderen (dit is zo, bij voorbeeld, bij <emphasis role="pkg">openssh-server</emphasis> en <emphasis role="pkg">openssh-client</emphasis>.
			</para>
			 <para>
				Net zo vaak, wordt de documentatie voorzien in een toegewijd pakket: de gebruiker kan het onafhankelijk van de software installeren en kan het op ieder moment naar keuze verwijderen om schijfruimte vrij te besparen. Aanvullend bespaart dit ook schijfruimte op de Debian spiegels, aangezien de documentatie pakketten gedeeld zullen worden over alle architecturen (in plaats van de documentatie gedupliceerd te hebben in de pakketen voor iedere architectuur).
			</para>
			 </sidebar> <sidebar> <title><emphasis>RESPECTIEVELIJK</emphasis> Verschillende formaten van bron pakketten</title>
			 <para>
				In het begin was er enkel één formaat van bron pakket. Dit is het <literal>1.0</literal> formaat, welke een <filename>.orig.tar.gz</filename> archief verbind aan een <filename>.digg.gz</filename> “debianization” patch (er is ook een variant die bestaat uit een enkel <filename>.tar.gz</filename> archief, welke automatische gebruikt wordt als er geen <filename>.orig.tar.gz</filename> beschikbaar is).
			</para>
			 <para>
				Sinds Debian <emphasis role="distribution">Squeeze</emphasis> hebben Debian ontwikkelaars de mogelijkheid om nieuwe formaten, die problemen van het historische corrigeren, te gebruiken. Formaat <literal>3.0 (quilt)</literal> kan meerdere upstream archieven in het zelfde bron pakket bevatten: bovenop het gebruikelijke <filename>orig.tar.gz</filename> kunnen aanvullende <filename>.orig-<replaceable>component</replaceable>.tar.gz</filename> archieven bijgevoegd worden. Dit is handig met software die in verschillende upstream componenten verdeeld wordt, maar voor welke een enkel bron pakket gewenst is. Deze archieven kunnen ook gecomprimeerd zijn met <command>bzip2</command> of <command>xz</command> in plaats van <command>gzip</command>, welke schijfruimte en netwerk middelen besparen. Tenslotte het monolithische patch, <filename>.diff.gz</filename> is vervangen door een <filename>debian.tar.gz</filename> archief dat de compileer instructies en een set van upstream patches bijgedragen door de pakket beheerder bevat. Deze laatste zijn opgenomen in een formaat compatibel met <command>quilt</command> — een tool die het beheren van een reeks pakketten faciliteert.
			</para>
			 </sidebar> <para>
				Het <filename>.orig.tar.gz</filename> bestand is een archief dat de bron code zoals voorzien door de originele ontwikkelaar bevat.Debian pakket onderhouders worden gevraagd om deze niet aan te passen om zo de mogelijkheid te hebben om de origine en integriteit van het pakket te controleren (door eenvoudige vergelijking met een checksum) en om de wensen van bepaalde auteurs te respecteren.
			</para>
			 <para>
				Het <filename>.debian.tar.gz</filename> bestand bevat all de aanpassingen gemaakt door de Debian onderhouder, vooral de toevoeging ven een <filename>debian</filename> directory die de instructies om een Debian pakket uit te voeren en te construeren bevat.
			</para>
			 <sidebar> <title><emphasis>GEREEDSCHAP</emphasis> Decompressie van een bron pakket</title>
			 <indexterm>
				<primary><command>dpkg-source</command></primary>
			</indexterm>
			 <indexterm>
				<primary>decomprimeren, bron pakket</primary>
			</indexterm>
			 <indexterm>
				<primary>decomprimeren, bron pakket</primary>
			</indexterm>
			 <indexterm>
				<primary>uitpakken</primary>
				<secondary>bron pakket</secondary>
			</indexterm>
			 <para>
				Als je een bron pakket hebt, kun je het <command>dpkg-source</command> commando (van het <emphasis role="pkg">dpkg-dev</emphasis> pakket) gebruiken om het te decomprimeren:
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg-source -x package_0.7-1.dsc</userinput></screen>
			 <para>
				Je kunt ook <command>apt-get</command> gebruiken om een bron pakket te downloaden en op de juiste manier uit te pakken. Dit vereist wel dat de geschikte <literal>deb-src</literal> regels in het <filename>/etc/apt/sources.list</filename> bestand aanwezig zijn (voor meer informatie zie <xref linkend="sect.apt-sources.list" />). Deze worden gebruikt om een lijst van “bronnen” van bron pakketten te maken (dit betekent de servers waarop een groep van bron pakketten geherbergd worden).
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>apt-get source <replaceable>package</replaceable></userinput></screen>
			 </sidebar>
		</section>
		 <section>
			<title>Gebruik binnen Debian</title>
			 <para>
				Het bron pakket is het fundament van alles in Debian. Alle Debian pakketten komen van een bron pakket en iedere aanpassing in een Debian pakket is het gevolg van een aanpassing gemaakt aan het bron pakket. De Debian onderhouders werken met het bron pakket, zich bewust van de gevolgen van hun acties op het binaire pakket. De vruchten van hun arbeid kunnen daarom gevonden worden in het bron pakket beschikbaar vanaf Debian: je kunt er gemakkelijk naar terug gaan en alles stamt er vanaf.
			</para>
			 <para>
				Wanneer er een nieuwe versie van en pakket (bron pakket en één of meer binaire pakketten) op de Debian server aankomt, is het bron pakket het belangrijkste. Inderdaad, het zal dan gebruikt worden door een netwerk van machines van verschillende architecturen voor compilatie op de verschillende architecturen die door Debian ondersteund worden. Het feit dan de ontwikkelaar ook één of meer binaire pakketten voor een bepaalde architectuur (meestal i386 of amd64) is relatief onbelangrijk, omdat deze net zo goed automatisch gegenereerd zou worden.
			</para>

		</section>

	</section>
	 <section id="sect.manipulating-packages-with-dpkg">
		<title>Pakketten Manipuleren met <command>dpkg</command></title>
		 <indexterm>
			<primary><command>dpkg</command></primary>
		</indexterm>
		 <para>
			<command>dpkg</command> is het basis commando om Debian pakketten op het systeem te behandelen. als je een <filename>.deb</filename> pakket hebt, is het <command>dpkg</command> dat de installatie of analyse van hun inhoud toelaat. Maar dit programma heeft slechts een gedeeltelijk zocht op het Debian universum: het weet wat er geïnstalleerd is op het systeem, en wat er wordt gegeven op de commando regel, maar het weet niks over de andere beschikbare pakketten. Zodoende zal het falen als een afhankelijkheid niet voldaan is. Gereedschappen zoals <command>apt</command>, in het tegendeel, zullen een lijst met afhankelijkheden maken om alles zo automatisch mogelijk te installeren.
		</para>
		 <sidebar> <title><emphasis>NOTITIE</emphasis> <command>dpkg</command> of <command>apt</command>?</title>
		 <para>
			<command>dpkg</command> zou als een systeem gereedschap beschouwd moeten worden (backend) en <command>apt</command> als een gereedschap dichter bij de gebruiker, welke de beperktheden van het vorige overwint. Deze gereedschappen werken samen, iedereen met zijn eigenaardigheden, passend voor specifieke taken.
		</para>
		 </sidebar> <section>
			<title>Pakketten Installeren</title>
			 <indexterm>
				<primary>installatie</primary>
				<secondary>pakket installatie</secondary>
			</indexterm>
			 <indexterm>
				<primary>pakkett</primary>
				<secondary>installatie</secondary>
			</indexterm>
			 <para>
				<command>dpkg</command> is, bovenal, het gereedschap voor het installeren van reeds beschikbare Debian pakketen (omdat het niks download). Om dit te doen, gebruiken we de <literal>-i</literal> of <literal>--install</literal> optie.
			</para>
			 <example>
				<title>Installatie van een pakket met <command>dpkg</command></title>
				 
<screen role="scale">
<computeroutput># </computeroutput><userinput>dpkg -i man-db_2.7.0.2-5_amd64.deb</userinput>
<computeroutput>((Database wordt ingelezen ... 86425 bestanden en mappen momenteel geïnstalleerd.)
Uitpakken van man-db_2.7.0.2-5_amd64.deb wordt voorbereid...
Bezig met uitpakken van ipscan ((2.7.0.2-5) over (2.7.0.2-4) ...
Instellen van man-db (2.7.0.2-5) ...
Updating database of manual pages ...
Bezig met afhandelen van triggers voor mime-support (3.58) ...</computeroutput></screen>

			</example>
			 <para>
				We kunnen de verschillende stappen zien die <command>dpkg</command> uitvoert; we weten dus op welk punt iedere fout kan gebeuren. De installatie kan ook uitgevoerd worden in twee fasen: eerst uitpakken, dan configuratie. <command>apt-get</command> maakt hier gebruik van, door het aantal aanroepen van <command>dpkg</command> te beperken (omdat ieder oproep kostbaar is, door het laden van de databank ik het geheugen), vooral de lijst van al geïnstalleerde bestanden).
			</para>
			 <example>
				<title>Individueel uitpakken en configuratie</title>
				 
<screen role="scale">
<computeroutput># </computeroutput><userinput>dpkg --unpack man-db_2.7.0.2-5_amd64.deb</userinput>
<computeroutput>(Database wordt ingelezen ... 86425 bestanden en mappen momenteel geïnstalleerd.)
Uitpakken van man-db_2.7.0.2-5_amd64.deb wordt voorbereid...
Bezig met uitpakken van man-db (2.7.0.2-5) over (2.7.0.2-5) ...
Bezig met afhandelen van triggers voor mime-support (3.58) ...
# </computeroutput><userinput>dpkg --configure man-db</userinput>
<computeroutput>Instellen van man-db (2.7.0.2-5) ...
Updating database of manual pages ...
</computeroutput></screen>

			</example>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>uitpakken</secondary>
			</indexterm>
			 <indexterm>
				<primary>uitpakken</primary>
				<secondary>binair pakket</secondary>
			</indexterm>
			 <para>
				Soms zal <command>dpkg</command> falen om een pakket te installeren en een foutmelding geven; als de gebruiker beveelt om dit te negeren, zal het enkel een waarschuwing geven; het is de reden dat we de verschillende <literal>--force-*</literal> opties. Het <command>dpkg --force-help</command> commando, of de documentatie voor dit commando, zal een volledige lijst van deze opties geven. De meest voorkomende fout, welke je vroeger of later zal tegenkomen, is een file collision. Wanneer een pakket een bestand bevat dat al geïnstalleerd is door een ander pakket, <command>dpkg</command> zal weigeren om dit te installeren. De volgende melding zal dan worden weergegeven:
			</para>
			 
<screen>
<computeroutput>Bezig met uitpakken van libgdm1 van .../libgdm_3.8.3-2_amd64 ...
dpkg: fout bij verwerken van /var/cache/apt/archives/libgdm_3.8.3-2_amd64.deb (--unpack):
 proberen om '/usr/bin/gdmflexiserver' te overschrijven, welke ook in pakket gdm3 3.4.1-9 zit</computeroutput></screen>
			 <para>
				In dit geval, als je denkt dat het vervangen van dit bestand geen significant risico voor de stabiliteit van jouw systeem is (wat meestal het geval is), kun je de optie <literal>--fore-overwrite</literal> gebruiken, welke <command>dpkg</command> verteld deze foutmelding te negeren en het bestand te overschrijven.
			</para>
			 <para>
				Terwijl er veel <literal>--force-*</literal> opties beschikbaar zijn, wordt enkel <literal>--force-overwrite</literal> waarschijnlijk vaak gebruikt. Deze optie bestaat enkel voor uitzonderlijke situaties en het is beter om ze zo veel mogelijk met rust te laten om de regels opgelegd door het pakketten mechanisme te respecteren. Vergeet niet, deze regels zorgen voor de consistentie en stabiliteit van jouw systeem.
			</para>
			 <sidebar> <title><emphasis>LET OP</emphasis> Effectief gebruik van <literal>--force-*</literal></title>
			 <indexterm>
				<primary>gebroken dependency</primary>
			</indexterm>
			 <para>
				Als je niet voorzichtig bent, kan het gebruik van een <literal>--force-*</literal> optie lijden tot een systeem waar de APT familie van commando's zal weigeren te functioneren. Deze opties laten de installatie van een pakket toe wanneer aan een afhankelijkheid niet voldaan kan worden of wanneer er een conflict is. Het resultaat is een inconsistent systeem vanuit het opzicht van afhankelijkheden en de APT commando's zullen weigeren iedere actie uit te voeren behalve deze die het systeem terug naar een consistente staat brengen. (Dit bestaat meestal uit het installeren van ontbrekende afhankelijkheden of het verwijderen van problematische pakketten). Dit resulteert vaan in een bericht als dit, verkregen na installatie van een nieuwe versie van <emphasis role="pkg">rdesktop</emphasis> terwijl zijn afhankelijkheden van een nieuwere versie van <emphasis role="pkg">libc6</emphasis> genegeerd wordt:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt full-upgrade
</userinput><computeroutput>[...]
You might want to run 'apt-get -f install' to correct these.
The following packages have unmet dependencies:
  rdesktop: Depends: libc6 (&gt;= 2.5) but 2.3.6.ds1-13etch7 is installed
E: Unmet dependencies. Try using -f.</computeroutput></screen>
			 <para>
				Een heldhaftige beheerder die zeker is van de correctheid van zijn analyse kan ervoor kiezen om een afhankelijkheid of conflict te negeren en de corresponderende optie <literal>--force-*</literal> te gebruiken. In dit geval, als ze willen doorgaan met het gebruik van <command>apt</command> of <command>aptitude</command>, moeten ze <filename>/var/lib/dpkg/status</filename> bewerken om de afhankelijkheid of het conflict die ze willen overschrijven te wissen of aan te passen.
			</para>
			 <para>
				Deze manipulatie is een lelijke hack, en zou nooit gebruikt moeten worden, behalve in de meest extreem noodzakelijke gevallen. Heel vaak is een meer passende oplossing het pakket dat het probleem veroorzaakt te her-compileren (zie <xref linkend="sect.rebuilding-package" />) of gebruik een nieuwe (mogelijk gecorrigeerde) versie van een opslagplaats als <literal>stable-backports</literal> (zie <xref linkend="sect.backports" />).
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Pakket verwijdering</title>
			 <indexterm>
				<primary>een pakket verwijderen</primary>
			</indexterm>
			 <indexterm>
				<primary>een pakket zuiveren</primary>
			</indexterm>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>verwijdering</secondary>
			</indexterm>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>zuiveren</secondary>
			</indexterm>
			 <para>
				<command>dpkg</command> aanroepen met de <literal>-r</literal> of <literal>--remove</literal> optie, gevolgd door de naam van een pakket, verwijderd dat pakket. Deze verwijdering is niet volledig: all de configuratie bestanden, onderhouders scripts, log bestanden (system logs) en andere gebruikers gegevens behandeld door het pakket blijven achter. Op deze manier is het uitschakelen van een programma simpel gedaan door het te verijderen en steeds de mogelijk te hebben om het snel te herinstalleren met dezelfde configuratie. Om alles verbonden aan een pakket met het pakket te wissen gebruikt de <literal>-P</literal> of <literal>--purge</literal> optie, gevolgd door de naam van het pakket.
			</para>
			 <example>
				<title>Verwijdering en zuivering van het <emphasis role="pkg">debian-cd</emphasis> pakket</title>
				 
<screen><computeroutput># </computeroutput><userinput>dpkg -r debian-cd</userinput>
<computeroutput>(Database wordt ingelezen ... 97747 bestanden en mappen momenteel geïnstalleerd.)
debian-cd (3.1.17) wordt verwijderd ...
# </computeroutput><userinput>dpkg -P debian-cd</userinput>
<computeroutput>(Database wordt ingelezen ... 97747 bestanden en mappen momenteel geïnstalleerd.)
debian-cd (3.1.17) wordt verwijderd ...
Configuratiebestanden voor debian-cd (3.1.17) worden gewist ...</computeroutput></screen>

			</example>

		</section>
		 <section>
			<title>De Databank van <command>dpkg</command> bevragen en <filename>.deb</filename> bestanden inspecteren</title>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>status</secondary>
			</indexterm>
			 <indexterm>
				<primary>pakket</primary>
				<secondary>bestandslijst</secondary>
			</indexterm>
			 <indexterm>
				<primary>paket</primary>
				<secondary>inhoudt inspectie</secondary>
			</indexterm>
			 <sidebar> <title><emphasis>TERUG NAAR DE BASIS</emphasis> Optie syntaxis</title>
			 <para>
				De meeste opties zijn beschikbaar in een “lange” versie (één of meer relevante woorden, voorafgegaan door een dubbel streepje) en een “korte” versie (een enkele letter, meestal het initiaal van één woord van de lange versie, en voorafgegaan door een enkel streepje). Deze conventie is zo algemeen dat het een POSIX standaard is.
			</para>
			 </sidebar> <para>
				Voordat we dit hoofdstuk afsluiten, zullen we de <command>dpkg</command> opties die het navragen van de interne databank, om informatie te bekomen, bestuderen. We geven eerst de lange optie en dan die corresponderende korte optie (welke natuurlijk dezelfde mogelijke argumenten aanneemt) we citeren <literal>--listfiles <replaceable>pakket</replaceable></literal> (of <literal>-L</literal>), welke een lijst geeft van alle bestanden geïnstalleerd door dit pakket; <literal>--search <replaceable>file</replaceable></literal> (of <literal>-S</literal>), welke de/het pakket(ten) vindt die dit bestand bevat(ten); <literal>--status <replaceable>pakket</replaceable></literal> (of <literal>-s</literal>), welke de headers van een geïnstalleerd pakket weergeeft; <literal>--list</literal> (of <literal>-l</literal>), welke de lijst van pakketten die het systeem kent en hun installatie status laat zien; <literal>--contents <replaceable>bestand.deb</replaceable></literal> (of <literal>-c</literal>), welke een lijst geeft van bestanden in het aangegeven Debian pakket; <literal>--info<replaceable> bestand.deb </replaceable></literal> (of <literal>-I</literal>), welke de headers van dit Debian pakket laat zien.
			</para>
			 <example>
				<title>Verschillende navragen met <command>dpkg</command></title>
				 
<screen role="scale" width="80">
<computeroutput>$ </computeroutput><userinput>dpkg -L base-passwd</userinput>
<computeroutput>/.
/usr
/usr/sbin
/usr/sbin/update-passwd
/usr/share
/usr/share/lintian
/usr/share/lintian/overrides
/usr/share/lintian/overrides/base-passwd
/usr/share/doc-base
/usr/share/doc-base/users-and-groups
/usr/share/base-passwd
/usr/share/base-passwd/group.master
/usr/share/base-passwd/passwd.master
/usr/share/man
/usr/share/man/pl
/usr/share/man/pl/man8
/usr/share/man/pl/man8/update-passwd.8.gz
/usr/share/man/ru
/usr/share/man/ru/man8
/usr/share/man/ru/man8/update-passwd.8.gz
/usr/share/man/ja
/usr/share/man/ja/man8
/usr/share/man/ja/man8/update-passwd.8.gz
/usr/share/man/fr
/usr/share/man/fr/man8
/usr/share/man/fr/man8/update-passwd.8.gz
/usr/share/man/es
/usr/share/man/es/man8
/usr/share/man/es/man8/update-passwd.8.gz
/usr/share/man/de
/usr/share/man/de/man8
/usr/share/man/de/man8/update-passwd.8.gz
/usr/share/man/man8
/usr/share/man/man8/update-passwd.8.gz
/usr/share/doc
/usr/share/doc/base-passwd
/usr/share/doc/base-passwd/users-and-groups.txt.gz
/usr/share/doc/base-passwd/changelog.gz
/usr/share/doc/base-passwd/copyright
/usr/share/doc/base-passwd/README
/usr/share/doc/base-passwd/users-and-groups.html
$ </computeroutput><userinput>dpkg -S /bin/date</userinput>
<computeroutput>coreutils: /bin/date
$ </computeroutput><userinput>dpkg -s coreutils</userinput>
<computeroutput>Package: coreutils
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 13855
Maintainer: Michael Stone &lt;mstone@debian.org&gt;
Architecture: amd64
Multi-Arch: foreign
Version: 8.23-3
Replaces: mktemp, realpath, timeout
Pre-Depends: libacl1 (&gt;= 2.2.51-8), libattr1 (&gt;= 1:2.4.46-8), libc6 (&gt;= 2.17), libselinux1 (&gt;= 2.1.13)
Conflicts: timeout
Description: GNU core utilities
 This package contains the basic file, shell and text manipulation
 utilities which are expected to exist on every operating system.
 .
 Specifically, this package includes:
 arch base64 basename cat chcon chgrp chmod chown chroot cksum comm cp
 csplit cut date dd df dir dircolors dirname du echo env expand expr
 factor false flock fmt fold groups head hostid id install join link ln
 logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt
 od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm
 rmdir runcon sha*sum seq shred sleep sort split stat stty sum sync tac
 tail tee test timeout touch tr true truncate tsort tty uname unexpand
 uniq unlink users vdir wc who whoami yes
Homepage: http://gnu.org/software/coreutils
$ </computeroutput><userinput>dpkg -l 'b*'</userinput>
<computeroutput>Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend
|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)
||/ Name                    Version          Architecture     Description
+++-=======================-================-================-====================================================
un  backupninja             &lt;none&gt;           &lt;none&gt;           (no description available)
ii  backuppc                3.3.0-2          amd64            high-performance, enterprise-grade system for backin
un  base                    &lt;none&gt;           &lt;none&gt;           (no description available)
un  base-config             &lt;none&gt;           &lt;none&gt;           (no description available)
ii  base-files              8                amd64            Debian base system miscellaneous files
ii  base-passwd             3.5.37           amd64            Debian base system master password and group files
[...]
$ </computeroutput><userinput>dpkg -c /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>
<computeroutput>drwxr-xr-x root/root         0 2014-12-04 23:03 ./
drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/
drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/udev/
drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/udev/rules.d/
-rw-r--r-- root/root      2711 2014-12-04 23:03 ./lib/udev/rules.d/60-gnupg.rules
drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/
drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/lib/
drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/lib/gnupg/
-rwxr-xr-x root/root     39328 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_ldap
-rwxr-xr-x root/root     92872 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_hkp
-rwxr-xr-x root/root     47576 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_finger
-rwxr-xr-x root/root     84648 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_curl
-rwxr-xr-x root/root      3499 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_mailto
drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/bin/
-rwxr-xr-x root/root     60128 2014-12-04 23:03 ./usr/bin/gpgsplit
-rwxr-xr-x root/root   1012688 2014-12-04 23:03 ./usr/bin/gpg
[...]
$ </computeroutput><userinput>dpkg -I /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>
<computeroutput> new debian package, version 2.0.
 size 1148362 bytes: control archive=3422 bytes.
    1264 bytes,    26 lines      control              
    4521 bytes,    65 lines      md5sums              
     479 bytes,    13 lines   *  postinst             #!/bin/sh
     473 bytes,    13 lines   *  preinst              #!/bin/sh
 Package: gnupg
 Version: 1.4.18-6
 Architecture: amd64
 Maintainer: Debian GnuPG-Maintainers &lt;pkg-gnupg-maint@lists.alioth.debian.org&gt;
 Installed-Size: 4888
 Depends: gpgv, libbz2-1.0, libc6 (&gt;= 2.15), libreadline6 (&gt;= 6.0), libusb-0.1-4 (&gt;= 2:0.1.12), zlib1g (&gt;= 1:1.1.4)
 Recommends: gnupg-curl, libldap-2.4-2 (&gt;= 2.4.7)
 Suggests: gnupg-doc, libpcsclite1, parcimonie, xloadimage | imagemagick | eog
 Section: utils
 Priority: important
 Multi-Arch: foreign
 Homepage: http://www.gnupg.org
 Description: GNU privacy guard - a free PGP replacement
  GnuPG is GNU's tool for secure communication and data storage.
  It can be used to encrypt data and to create digital signatures.
  It includes an advanced key management facility and is compliant
  with the proposed OpenPGP Internet standard as described in RFC 4880.
[...]</computeroutput></screen>

			</example>
			 <sidebar> <title><emphasis>VERDER GAAN</emphasis> Versies vergelijken</title>
			 <indexterm>
				<primary>versie, vergelijken</primary>
			</indexterm>
			 <indexterm>
				<primary>vergelijken van versies</primary>
			</indexterm>
			 <para>
				Omdat <command>dpkg</command> het programma is voor het afhandelen van Debian pakketten, biedt het de referentie implementatie van de logica voor het vergelijken van versie nummers. Daarom heeft het een <literal>--compare-versions</literal> optie, bruikbaar voor externe programma's (vooral configuratie scripts uitgevoerd door <command>dpkg</command> zelf). Deze optie vereist drie parameters: een versie nummer, een vergelijkings-operator en een tweede versie nummer. De verschillende mogelijke operatoren zijn <literal>lt</literal> (strikt minderdan), <literal>le</literal> (minder dan of gelijk aan), <literal>eq</literal> (gelijk aan), <literal>ne</literal> (niet gelijk aan), <literal>ge</literal> (groter dan of gelijk aan) en <literal>gt</literal> (strikt groter dan). Als de vergelijking correct is zal <command>dpkg</command> 0 (success) weergeven; indien niet, geeft het een andere waarde (indicatie van de fout).
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 gt 1.1-4</userinput>
<computeroutput>$ </computeroutput><userinput>echo $?</userinput>
<computeroutput>0
$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 lt 1.1-4</userinput>
<computeroutput>$ </computeroutput><userinput>echo $?</userinput>
<computeroutput>1
$ </computeroutput><userinput>dpkg --compare-versions 2.6.0pre3-1 lt 2.6.0-1</userinput>
<computeroutput>$ </computeroutput><userinput>echo $?</userinput>
<computeroutput>1</computeroutput></screen>
			 <para>
				Merk de onverwachte fout op in de laatste vergelijking: voor <command>dpkg</command> heeft <literal>pre</literal>, wat meestal duid op een pre-release, geen specifieke betekenis en dit programma vergelijkt de alfabetische karakters op dezelfde manier als de nummers (a &lt; b &lt; c ...), in alfabetische volgorde. Dit is waarom “<literal>0pre3</literal>” als groter beschouwd wordt dan “<literal>0</literal>”. Wanneer we willen dat het versie nummer van een Pakket aangeeft dat het een pre-release is, gebruiken we het tilde karakter, “<literal>~</literal>”:
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 2.6.0~pre3-1 lt 2.6.0-1</userinput>
<computeroutput>$ </computeroutput><userinput>echo $?</userinput>
<computeroutput>0</computeroutput></screen>
			 </sidebar>
		</section>
		 <section>
			<title>Het log bestand van <command>dpkg</command></title>
			 <para>
				<command>dpkg</command> houdt in <filename>/var/log/dpkg.log</filename> een log bij van al zijn acties. Dit log is extreem uitgebreid, omdat het details bevat van ieder stadium waarin pakketten behandeld orden door <command>dpkg</command>. Buiten een manier om het gedrag van dpkg te volgen, helpt het bovenal, om een historiek van de ontwikkeling van het systeem bij te houden: men kan het exacte moment van installatie of update van ieder pakket zien en deze informatie kan extreem behulpzaam zijn in het begrijpen van recente veranderingen in het gedrag. Verder, door het bijhouden van alle versies, is het kruiscontrole met <filename>changelog.Debian.gz</filename> voor de pakketten in kwestie gemakkelijk of zelfs met online fouten rapporten.
			</para>

		</section>
		 <section id="sect.multi-arch">
			<title>Multi-Arch Ondersteuning</title>
			 <indexterm>
				<primary>Multi-Arch</primary>
			</indexterm>
			 <indexterm>
				<primary>archittectuur</primary>
				<secondary>multi-arch ondersteuning</secondary>
			</indexterm>
			 <para>
				Alle Debian pakketten hebben een <literal>Architectuur</literal> veld in hun controle informatie. Dit veld kan ofwel “<literal>all</literal>” bevatten (voor pakketten die architectuur onafhankelijk zijn) of de naam van de doel architectuur (zoals “amd64”, “armhf”, …). In het laatste geval, zal <command>dpkg</command>, als standaard, enkel de installatie van het pakket toestaan als de architectuur overeenkomt met de architectuur van de gastheer zoals gerapporteerd door <command>dpkg --print-architecture</command>.
			</para>
			 <para>
				Deze beperking verzekerd dat de gebruiker niet zal eindigen met binaire pakketten die gecompileerd zijn voor een foute architectuur. Alles zou perfect zijn behalve dat (sommige) computers binaire programma's voor meerdere architecturen, ofwel natuurlijk (een “amd64“ systeem kan “i386“ binaire programma's draaien) of via emulatoren.
			</para>
			 <section>
				<title>Multi-Arch activeren</title>
				 <para>
					De multi-arch ondersteuning van <command>dpkg</command> laat de gebruikers toe “vreemde architecturen” die op het huidige systeem geïnstalleerd kunnen worden te definiëren. Dis is simpelweg gedaan met <command>dpkg --add-architecture</command> zoals in het voorbeeld hieronder. Er is een overeenkomstig commando <command>dpkg --remove-architecture</command> om de ondersteuning voor een vreemde architectuur te laten vallen, maar het kan enkel gebruikt worden wanneer er geen pakketten voor deze architectuur over zijn.
				</para>
				 
<screen>
<computeroutput># </computeroutput><userinput>dpkg --print-architecture</userinput>
<computeroutput>amd64
# </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>
<computeroutput># </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>
<computeroutput>dpkg: error processing archive gcc-4.9-base_4.9.1-19_armhf.deb (--install):
 package architecture (armhf) does not match system (amd64)
Errors were encountered while processing:
 gcc-4.9-base_4.9.1-19_armhf.deb
# </computeroutput><userinput>dpkg --add-architecture armhf</userinput>
<computeroutput># </computeroutput><userinput>dpkg --add-architecture armel</userinput>
<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>
<computeroutput>armhf
armel
# </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>
<computeroutput>Selecting previously unselected package gcc-4.9-base:armhf.
(Reading database ... 86425 files and directories currently installed.)
Preparing to unpack gcc-4.9-base_4.9.1-19_armhf.deb ...
Unpacking gcc-4.9-base:armhf (4.9.1-19) ...
Setting up gcc-4.9-base:armhf (4.9.1-19) ...
# </computeroutput><userinput>dpkg --remove-architecture armhf</userinput>
<computeroutput>dpkg: error: cannot remove architecture 'armhf' currently in use by the database
# </computeroutput><userinput>dpkg --remove-architecture armel</userinput>
<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>
<computeroutput>armhf</computeroutput></screen>
				 <sidebar> <title><emphasis>NOTITIE</emphasis> De multi-arch ondersteuning van APT</title>
				 <para>
					APT zal automatisch detecteren wanneer dpkg geconfigureerd is om vreemde architecturen te ondersteunen en zal de corresponderende <filename>Pakketten</filename> downloaden tijden het update proces.
				</para>
				 <para>
					Vreemde pakketten kunnen dan geïnstalleerd worden met <command>apt install <replaceable>pakket</replaceable>:<replaceable>architectuur</replaceable></command>.
				</para>
				 </sidebar> <sidebar> <title><emphasis>IN DE PRAKTIJK</emphasis> Gepatenteerde i396 binaire programma's gebruiken op amp64</title>
				 <para>
					Er zijn meerdere gevallen voor het gebruik van multi-arch, maar de populairste is de mogelijkheid om 32 bit binaire programma's (i386) uit te voeren op 64 bit systemen (amd64), vooral omdat enkele populaire gepatenteerde programma's (zoals Skype) enkel in 32 bit versie worden aangeboden.
				</para>
				 </sidebar>
			</section>
			 <section>
				<title>Multi-Arch Gerelateerde Veranderingen</title>
				 <para>
					Om multi-arch werkelijk nuttig en mogelijk te maken moesten bibliotheken herpakt te worden en verplaatst naar een architectuur-specifieke directory zodat meerdere kopieën (bedoeld voor verschillende architecturen) naast elkaar geïnstalleerd kunnen worden. Dergelijk ge-updatet pakketten bevatten de “<literal>Multi-Arch: same</literal>” header veld om het pakkettensysteem te vertellen dat de verschillende architecturen versies van hetzelfde pakket veilig naast-elkaar geïnstalleerd te worden (en dat deze pakketten enkel afhankelijkheden kunnen voldaan worden door pakketten van dezelfde architectuur). Omdat multi-arch zijn debuut heeft gemaakt in Debian <emphasis role="distribution">Wheezy</emphasis>, zijn nog niet alle bibliotheken geconverteerd.
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>dpkg -s gcc-4.9-base
</userinput><computeroutput>dpkg-query: error: --status needs a valid package name but 'gcc-4.9-base' is not: ambiguous package name 'gcc-4.9-base' with more than one installed instance

Use --help for help about querying packages.
$ </computeroutput><userinput>dpkg -s gcc-4.9-base:amd64 gcc-4.9-base:armhf | grep ^Multi
</userinput><computeroutput>Multi-Arch: same
Multi-Arch: same
$ </computeroutput><userinput>dpkg -L libgcc1:amd64 |grep .so
</userinput><computeroutput>/lib/x86_64-linux-gnu/libgcc_s.so.1
$ </computeroutput><userinput>dpkg -S /usr/share/doc/gcc-4.9-base/copyright
</userinput><computeroutput>gcc-4.9-base:amd64, gcc-4.9-base:armhf: /usr/share/doc/gcc-4.9-base/copyright
</computeroutput></screen>
				 <para>
					Het is noemenswaardig dat dezelfde <literal>Multi-Arch: same</literal> pakketten hun met gekwalificeerde architectuur genoemd moeten worden om ondubbelzinnig identificeerbaar te zijn. Ze hebben ook de mogelijkheid om bestanden te delen met andere instanties van hetzelfde pakket; <command>dpkg</command> verzekerd dat alle pakketten bit-voor-bit identieke bestanden hebben als ze gedeeld worden. Last but not least, alle instanties van een pakket moeten dezelfde versie hebben, Ze moeten dus samen ge-upgrade worden.
				</para>
				 <para>
					Multi-Arch ondersteuning brengt ook enkele interessante uitdagingen mee in de manier waarop afhankelijkheden worden behandeld. Voldoen aan een afhankelijkheid vereist een pakket gemarkeerd met “<literal>Multi-Arch: foreign</literal>” of een pakket wiens architectuur overeenkomt met een van de pakketten die de afhankelijkheid aangeeft (bij het afhandelen van afhankelijkheden worden architectuur-onafhankelijke pakketten beschouwd als van dezelfde architectuur als de gastheer). Een afhankelijkheid kan ook afgezwakt worden om ieder architectuur toe te staan om het af te handelen, met de <literal><replaceable>package</replaceable>:any</literal> syntaxis, maar vreemde pakketten kunnen enkel zo'n afhankelijkheid oplossin als ze gemarkeerd zijn als “<literal>Multi-Arch: allowed</literal>”.
				</para>

			</section>

		</section>

	</section>
	 <section id="sect.coexistence-with-other-packaging-systems">
		<title>Gelijktijdig bestaan met Andere Besturingssystemen</title>
		 <indexterm>
			<primary>RPM</primary>
		</indexterm>
		 <indexterm>
			<primary>Red Hat Package Manager</primary>
		</indexterm>
		 <indexterm>
			<primary><command>alien</command></primary>
		</indexterm>
		 <para>
			Debian pakketten zijn niet de enige software paketten in gebruik in de vrije software wereld. De grootste concurrent is het RPM formaat van de Red Hat Linux Distributie en zijn vele afgeleide systemen. Red Hat is een zeer populaire, commerciële distributie. Het is dus gewoon voor software aangeboden door andere partijen om als een RPM pakket aangeboden te worden in plaats van een Debian pakket.
		</para>
		 <para>
			In dit geval zou je moeten weten dat het programma <command>rpm</command>, welke RPM pakketten afhandelt, beschikbaar is als een Debian pakket, zo is het mogelijk om dit pakket formaat te gebruiken op Debian. Hoewel voorzichtigheid op zijn plaats is, en deze manipulaties worden best beperkt tot het uitpakken van de informatie van een pakket om de integriteit te controleren. Het is onredelijk om <command>rpm</command> te gebruiken om een RPM pakket te installeren op een Debian systeem; RPM gebruikt zijn eigen databank, gescheiden van deze van inheemse software (zoals <command>dpkg</command>). Op deze manier is het niet mogelijk om een stabiele co-existentie van twee pakketsystemen te verzekeren.
		</para>
		 <para>
			Aan de andere kant, het <emphasis role="pkg">alien</emphasis> gereedschap kan RPM pakketten converteren naar Debian pakketten, en vice versa.
		</para>
		 <sidebar> <title><emphasis>GEMEENSCHAP</emphasis> De adoptie van <filename>.deb</filename> aanmoedigen</title>
		 <para>
			Als je het <command>alien</command> programma regelmatig gebruikt om RPM pakketten afkomstig van een van jou aanbieders te installeren, twijfel dan niet om ze te schrijven en uit vriendelijk jou sterke voorkeur voor het <filename>.deb</filename> formaat. Merk op dat het formaat van de pakketten niet alles is: een <filename>.deb</filename> pakket gemaakt met <command>alien</command> of voorbereid voor een versie van Debian anders dan diegene die je gebruikt, of zelfs voor een afgeleide distributie zoals Ubuntu, zouden waarschijnlijk niet hetzelfde kwaliteitsniveau en integratie bieden zoals een pakket specifiek ontwikkeld voor Debizn <emphasis role="distribution">Jessie</emphasis>.
		</para>
		 </sidebar> 
<screen>
<computeroutput>$ </computeroutput><userinput>fakeroot alien --to-deb phpMyAdmin-2.0.5-2.noarch.rpm</userinput> 
<computeroutput>phpmyadmin_2.0.5-2_all.deb generated
$ </computeroutput><userinput>ls -s phpmyadmin_2.0.5-2_all.deb</userinput>
<computeroutput>  64 phpmyadmin_2.0.5-2_all.deb</computeroutput></screen>
		 <para>
			Je zal merken dat dit proces extreem gemakkelijk is. Hoewel je wel moet weten dat het gegenereerde pakket geen afhankelijkheidsinformatie bevat, omdat de afhankelijkheden in de twee pakketten formaten geen geen systematische correspondentie hebben. De beheerder moet dus handmatig verzekeren dat het geconverteerde pakket correct zal functioneren en dit is waarom Debian pakketten die op deze manier gegenereerd worden best zo veel mogelijk gemeden moeten worden. Gelukkig heeft Debian de grootste collectie van software pakketten van alle distributies en is het waarschijnlijk dat wat je ook zoekt het daar al is.
		</para>
		 <para>
			Kijkend naar de man page van het <command>alien</command> commando, zal je ook merken dat dit programma ook andere pakketformaten verwerkt, vooral diegene gebruikt door de Slackware distributie (het is gemaakt van een simpel <filename>tar.gz</filename> archief).
		</para>
		 <para>
			De stabiliteit van de software ingezet met gebruik van het <command>dpkg</command> gereedschap draagt bij aan de faam van Debian. De APT suite van gereedschap, beschreven in het volgende hoofdstuk, behouden dit voordeel terwijl ze de beheerder zijn werk van beheren van de status van pakketten, een noodzakelijke maar moeilijke taak, verlichten.
		</para>

	</section>
</chapter>

