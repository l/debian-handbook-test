<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="the-debian-project">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-the-debian-project.png" scalefit="1" />
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>Doel</keyword>
      <keyword>Middelen</keyword>
      <keyword>Werking</keyword>
      <keyword>Vrijwilliger</keyword>
    </keywordset>
  </chapterinfo>
  <title>Het Debian Project</title>
  <highlights>
    <para>Voordat we recht in de technologie duiken, nemen we even een kijkje naar wat het Debian Project is, wat zijn doelen zijn, wat het betekend en hoe het werkt.</para>
  </highlights>
  <section id="sect.what-is-debian">
    <title>Wat is Debian?</title>
    <indexterm><primary>vereniging</primary></indexterm>

    <sidebar>
      <title><emphasis>CULTUUR</emphasis> Oorsprong van de naam Debian</title>

      <para>Zoek niet verder: Debian is geen acroniem. De naam is, in werkelijkheid, een samenvoeging van twee voornamen: die van Ian Murdock en zijn toenmalige vriendin Debra. Debra + Ian = Debian.</para>
    </sidebar>

    <para>Debian is een GNU/Linux distributie. We zullen later in detail bespreken bespreken wat een distributie is in <xref linkend="sect.role-of-distributions" />, maar voorlopig zullen we simpelweg zeggen dat het een volledig besturingssysteem is, inclusief software en systemen voor installatie en beheer. Allemaal gebaseerd op de Linux kernel en vrije software (hoofdzakelijke deze van het GNU Project).</para>

    <para>Toen hij in 1993 Debian creëerde, onder leiderschap van de FSF, had Ian Murdock een duidelijk doel, welke hij duidelijk maakte in het <emphasis>Debian Manifest</emphasis>. Het vrije besturingssysteem dat hij zocht zou twee principiële eigenschappen moeten hebben. Ten eerste Kwaliteit: Debian zou ontwikkeld worden met de grootste zorg, om de Linux kernel waardig te zijn. Het zou ook een niet-commerciële distributie zijn met voldoende geloofwaardigheid om het op te nemen met grote commerciële distributies. Deze dubbele ambitie zou, in zijn ogen, enkel behaald kunnen worden door het ontwikkelings-proces Debian open te maken, hetzelfde als dat van Linux en het GNU Project. Dus controle door gelijken zou het product continu verbeteren.</para>

    <sidebar>
      <title><emphasis>CULTUUR</emphasis> GNU, het project van de FSF</title>
      <indexterm><primary>GNU</primary></indexterm>
      <indexterm><primary>GNU</primary><secondary>Is Niet Unix</secondary></indexterm>

      <para>Het GNU Project is een groep van vrije software ontwikkeld of gesponsord door de Free Software Foundation (FSF), ontstaan door zijn iconische leider, Dr. Richard M. Stallman. GNU is een recursief acroniem, wat "GNU is Not Unix" betekend.</para>
    </sidebar>

    <sidebar>
      <title><emphasis>CULTUUR</emphasis> Richard Stallman</title>
      <indexterm><primary>Stallman, Richard</primary></indexterm>
      <indexterm><primary>RMS</primary></indexterm>

      <para>Stichten van de <acronym>FSF</acronym> en auteur van de GPL Licentie, Richard M. Stallman (vaak naar verwezen bij zijn initialen, RMS) is een charismatische leider van de Free Software beweging. Als gevolg van zijn niet compromitteren positie word hij niet unaniem bewonderd, maar zijn niet-technische bijdragen aan Vrije Software (vooral op juridisch en filosofisch niveau) worden door iedereen gerespecteerd.</para>
    </sidebar>
    <section>
      <title>Een Multi-Platform Besturingssysteem</title>
      <indexterm><primary>meta-distributie</primary></indexterm>

      <sidebar>
        <title><emphasis>GEMEENSCHAP</emphasis> de reis van Ian Murdock</title>
        <indexterm><primary>Ian Murdock</primary></indexterm>
        <indexterm><primary>Murdock, Ian</primary></indexterm>
        <indexterm><primary>Progeny</primary></indexterm>

	<para>Ian Murdock, stichter van het Debian project, was de eerste leider, van 1993 tot 1996. Nadat hij het stokje had doorgegeven aan Bruce Perens nam Ian een minder publieke rol op zich. Hij keerde terug naar het achter de schermen werken van de Vrije Software Gemeenschap, creëerde het bedrijf Progeny met de intentie om een van Debian afgeleide distributie op de markt te brengen. Deze onderneming was, helaas, een commerciële mislukking en de ontwikkeling werd in de steek gelaten. Het bedrijf, na verschillende jaren worstelen als een diensten aanbieder vroeg in April 2007 het faillissement aan. Van de verschillende projecten opgestart door Progeny  blijft enkel <emphasis>discover</emphasis> nog over. Het is een gereedschap om automatisch hardware te detecteren.</para>
      </sidebar>

      
      <para>Debian dat trouw bleef aan zijn eerste principes, had veel meer succes dan dat. Vandaag heeft het een enorme grote bereikt. De 12 architecturen aangeboden beslaan 10 hardware architecturen en 2 kernels (Linux en FreeBSD, hoewel de op FreeBSD gebaseerde versies geen onderdeel zijn van de officiële ondersteunde architecturen). Verder met meer dan 21.000 bron pakketten, voldoet de aangeboden software aan bijna alle vereisten die men maar zou kunnen hebben, zowel thuis als in de onderneming.</para>

      <para>De enorme grote van de distributie kan lastig zijn: het is echt onredelijk om 84 CD-ROM's te verspreiden om een volledige versie op een standaard PC te installeren... Daarom wordt Debian steeds meer beschouwd als een "meta-distributie", waarvan me meer specifieke distributies afleid bedoeld voor een bepaald publiek: Debian-Desktop voor traditioneel kantoor gebruik, Debian-Edu voor educatief en pedagogisch gebruik in een academische omgeving, Debian-Med voor Medische toepassingen, Debian-Junior voor jonge kinderen, enz. Een meer volledige lijst van sub-projecten kan gevonden worden in het deel toegewijd aan dat doel zie <xref linkend="sect.sub-projects" />.</para>

      <para>Deze gedeeltelijke visies op Debian zijn georganiseerd in een goed gedefinieerd kader en garandeert dus een probleemloze compatibiliteit tussen de verschillende "sub-distributies". Ze volgen allemaal een algemene planning voor de vrijgave van nieuwe versies. En omdat ze gebouwd zijn op dezelfde fundamenten kunnen ze gemakkelijk uitgebreid, vervolledigd en gepersonaliseerd worden met toepassingen in de Debian repositories.</para>
      <indexterm><primary>sub-project</primary></indexterm>

      <para>Alle Debian gereedschappen werken in deze richting: <command>debian-cd</command> heeft voor een lange tijd toegestaan om een CD-ROM set te creëren die enkel een vooraf-geselecteerde groep van pakketten bevat; <command>debian-installer</command> is ook een modulair installatie programma dat gemakkelijk aangepast kan worden aan speciale noden. <command>APT</command> zal pakketten van verschillende oorsprong installeren, terwijl het de algemene consistentie van het systeem garandeert.</para>

      <sidebar>
        <title><emphasis>GEREEDSCHAP</emphasis> Een Debian CD-ROM maken</title>
        <indexterm><primary><command>debian-cd</command></primary></indexterm>

	<para><command>debian-cd</command> maakt ISO afbeeldingen van installatie media (CD, DVD, Blue-Ray, enz.) klaar voor gebruik. Alles met betrekking tot deze software wordt besproken (in het Engels) op de <email>debian-cd@lists.debian.org</email>mail lijst. Dit team wordt aangevoerd door Steve McIntyre die de creatie van de officiële Debian ISO bestanden voor zijn rekening neemt.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>TERUG NAAR DE BASIS</emphasis> Voor iedere computer zijn architectuur</title>

	<para>De term "architectuur" duidt op het type computer (Mac of PC zijn de meest bekende). Iedere architectuur is hoofdzakelijk gedifferentieerd naar zijn processor, meestal onverenigbaar met andere processoren. Deze verschillen in hardware betrekken verschillende manieren van werking, dus vereisen dat de software speciaal voor iedere architectuur gecompileerd wordt.</para>
        <indexterm><primary>architectuur</primary></indexterm>
        <indexterm><primary>processor</primary></indexterm>

	<para>De meeste software beschikbaar in Debian is geschreven in draagbare programmeer talen: dezelfde bron code kan gecompileerd worden voor verschillende architecturen. In werkelijkheid zal een uitvoerbare "binary", altijd gecompileerd voor een specifieke architectuur, meestal niet werken op een andere architectuur.</para>

	<para>Herinner dat ieder programma is gemaakt door bron code te schrijven; deze bron code is een tekst bestand samengesteld uit instructies in een bepaalde programmeer taal. Voordat je dit programma kunt gebruiken is het nodig om de bron code te compileren, wat betekend dat de code wordt omgezet naar "binary" (een reeks machine instructies die de processor kan uitvoeren). Iedere programmeer taal heeft een specifieke compiler om deze opdracht uit te voeren (bij voorbeeld, <command>gcc</command> for de C programmeer taal).</para>
        <indexterm><primary>bron</primary><secondary>code</secondary></indexterm>
        <indexterm><primary>binaire code</primary></indexterm>
        <indexterm><primary>compileren</primary></indexterm>
        <indexterm><primary>compiler</primary></indexterm>
      </sidebar>

      <sidebar>
        <title><emphasis>GEREEDSCHAP</emphasis> Installatie programma</title>
        <indexterm><primary><command>debian-installer</command></primary></indexterm>

	<para><command>debian-installer</command> is de naam van het Debian installatie programma. Het modulaire ontwerp staat toe om het in een breed gebied van scenario's te gebruiken. Het ontwikkel werk wordt gecoördineerd op de <email>debian-boot@lists.debian.org</email> mail list onder leiding van Cyril Brulebois.</para>
      </sidebar>
    </section>
    <section>
      <title>De kwaliteit van Vrije Software</title>

      <para>Debian volgt alle principes van Vrije Software en nieuwe versies worden niet vrijgegeven voor ze klaar zijn. Ontwikkelaars worden niet gedwongen en opgejaagd door een vaste planning om een arbitraire deadline te halen. Mensen klagen vaak over de lange tijd tussen de verschillende stabiele versies, maar dit draagt ook bij tot de legendarische betrouwbaarheid van Debian: er zijn inderdaad lange maanden van testen nodig voor de volledige distributie het label "stabiel" krijgt.</para>

      <para>Debian neemt geen compromissen met betrekking tot kwaliteit: alle bekende kritieke bugs worden opgelost in iedere nieuwe versie, zelfs als dit de initiële verwachte release datum naar achter schuift.</para>
    </section>
    <section>
      <title>Het wettelijke Kader: Een non-Profit Organisatie</title>

      <para>Wettelijk gezien is Debian een project onder leiding van een Amerikaanse non-profit vrijwilligers vereniging. Het project heeft zo'n duizend <emphasis>Debian ontwikkelaart</emphasis>, maar brengt een veel groter aantal bijdragers samen (vertalers, mensen die fouten (bugs) melden, artiesten, vrijetijds-ontwikkelaars, enz.).</para>

      <para>Om zijn missie succesvol te volbrengen heeft Debian een grote infrastructuur met vele servers, aangeboden door sponsoren,  verbonden doorheen het Internet.</para>

      <sidebar>
        <title><emphasis>GEMEENSCHAP</emphasis> Achter Debian, de SPI vereniging en lokale takken</title>
        <indexterm><primary>vereniging</primary></indexterm>
        <indexterm><primary>SPI</primary></indexterm>
        <indexterm><primary>Debian Frankrijk</primary></indexterm>
        <indexterm><primary>Software in the Public Interest</primary></indexterm>

	<para>Debian bezit zelf geen server, omdat het slechts een project is binnen de <emphasis>Software in the Public Interest</emphasis> vereniging en de SPI beheert de hardware en financiële aspecten (donaties, aankopen van hardware, enz.). Hoewel het initieel is opgericht voor Debian alleen, beheert de vereniging nu ook andere vrije software projecten, in het bijzonder de PostgreSQL databank, Freedesktop.org (een project voor de standaardisatie van verschillende onderdelen van moderne grafische desktop omgevingen, zoals GNOME en KDE), en het Libre Office kantoor pakket.<ulink type="block" url="http://www.spi-inc.org/" /></para>

	<para>Samen met SPI werken verschillende lokale verenigingen nauw samen met Debian on fondsen te werven voor Debian, zonder alles in the VS te centraliseren: zij staan bekend als "Trusted Organizations" (Vertrouwde Organisaties) in het Debian jargon. Deze instelling vermeid belemmerende internationale overdracht kosten en past goed in de gedecentraliseerde aard van het project.</para>

	<para>Hoewel de lijst van vertrouwde organisaties vrij kort is zijn er veel meer aan Debian gerelateerde verenigingen wiens doel het is om Debian te promoten: <emphasis>Debian France</emphasis>, <emphasis>Debian-ES</emphasis>, <emphasis>debian.ch</emphasis> en andere over de hele wereld. Aarzel niet om je aan te sluiten bij jouw lokale vereniging en steun het project! <ulink type="block" url="http://wiki.debian.org/Teams/Auditor/Organizations" /> <ulink type="block" url="http://france.debian.net/" /><ulink type="block" url="http://www.debian-es.org/" /><ulink type="block" url="http://debian.ch/" /></para>
      </sidebar>
    </section>
  </section>
  <section id="sect.foundation-documents">
    <title>De Oprichtings-Documenten</title>
    <indexterm><primary>Oprichtings-Documenten</primary></indexterm>

    <para>Enkele jaren na de initiële start formuleerde Debian de principes die het, als een vrije software project, zou moeten volgen. Deze doelbewuste activisten beslissing zorgde voor een orderlijke en vredevolle groei door er voor te zorgen dat alle leden dezelfde weg volgen. Om een Debian ontwikkelaar te worden moet iedere kandidaat bevestigen en bewijzen dat ze de principes van de Oprichtings-Documenten van het project volgen.</para>

    <para>Het ontwikkel proces wordt constant besproken, maar deze Oprichtings-Documenten worden wijd gedragen en gesteund en dus zelden aangepast. De grondwet van Debian staat ook garant voor deze stabiliteit: er is een drie-vierde meerderheid nodig om ieder amendement goed te keuren.</para>

    <section id="sect.social-contract">
      <title>De verbintenis tegenover de gebruikers</title>
      <indexterm><primary>sociaal contract</primary></indexterm>
      <indexterm><primary>contract, sociaal</primary></indexterm>

      <para>Het project heeft ook een "sociaal contract", Wat voor een plaats heeft zo'n document in een project dat enkel bestemd is voor de ontwikkeling van een besturingssysteem? Dat is heel simpel: Debian werkt voor zijn gebruikers en dus bij uitbreiding voor de gemeenschap. Dit contract van de verbintenissen samen die het project onderneemt. Laat ons deze in wat meer detail bekijken:</para>

      <orderedlist>
        <listitem>
	  <para>Debian zal 100% vrij blijven.</para>

	  <para>Dit is regel Nr. 1. Debian is en zal volledig en uitsluiten bestaan uit vrije software. Aanvullend zal alle software ontwikkeling binnen het Debian project zelf ook vrij zijn. </para>

          <sidebar>
            <title><emphasis>PERSPECTIEF</emphasis> Voorbij software</title>

	    <para>De eerste versie van het Debian Sociaal Contract zei "Debian zal 100% vrije <emphasis>Software</emphasis> blijven". De verdwijning van dit woord (met de bekrachtiging van Versie 1.1 van het contract in April 2004) geeft de wil aan om vrijheid te bereiken, niet enkel in de software maar ook in de documentatie en ieder ander element dat Debian wenst te bieden binnen zijn besturingssysteem.</para>

	    <para>Deze kans, die eigenlijk enkel was bedoeld als kleine aanpassing had in werkelijkheid verschillende consequenties. Vooral met de verwijdering van wat problematische documentatie. Verder veroorzaakte het stijgende gebruik van firmware in drivers problemen: velen zijn niet-vrij, hoewel ze noodzakelijk zijn voor een correctie werking van de betrokken hardware.</para>
          </sidebar>
        </listitem>
        <listitem>
	  <para>Wij zullen terug geven aan de vrije software gemeenschap.</para>

	  <para>Iedere verbetering bijgedragen door het Debian project aan een werk inbegrepen in de distributie wordt terug gezonden naar de auteur van het werk ("upstream" genoemd). In het algemeen zal Debian samen met de gemeenschap werken in tegenstelling tot in isolement te werken.</para>

          <sidebar>
            <title><emphasis>GEMEENSCHAP</emphasis> Upstream auteur of Debian ontwikkelaar?</title>
            <indexterm><primary>upstream auteur</primary></indexterm>
            <indexterm><primary>auteur, upstream</primary></indexterm>
            <indexterm><primary>upstream</primary></indexterm>

	    <para>De term “upstream auteur” betekend de auteur(s)/ontwikkelaar(s) van een werk, zij die het schrijven en ontwikkelen. Aan de andere kant een "Debian ontwikkelaar" gebruikt een bestaand werk om er een Debian pakket van te maken (de term "Debian maintainer" is beter geschikt).</para>

	    <para>In de praktijk is het onderscheid meestal niet zo duidelijk te zien. De Debian maintainer kan een patch scrijven, waar alle gebruikers van dat werk profiteren. In het algemeen moedigt Debian hen die de leiding hebben over een pakket in Debian om zich ook betrekken in de "upstream" ontwikkeling (zij worden dan, bijdragers, zonder beperkt te zijn tot enkel simpele gebruiker van een programma). </para>
          </sidebar>
        </listitem>
        <listitem>
	  <para>We zullen geen problemen verbergen.</para>

	  <para>Debian is niet perfect en we zullen iedere dan problemen vinden om op lossen. We zullen ten alle tijden onze volledige fouten rapportage databank open laten voor het publiek om er in te kijken. Rapporten die mensen on-line indienen zullen prompt zichtbaar worden voor anderen.</para>
        </listitem>
        <listitem>
	  <para>Onze prioriteit zijn onze gebruikers en vrije software.</para>

	  <para>Deze toewijding is moeilijk te definiëren. Debian dringt daarom een vooroordeel op wanneer een beslissing genomen moet worden, en zal een simpele oplossing voor de ontwikkelaars verwerpen als deze de gebruikservaring in gedrang brengt en kiezen voor een meer elegante oplossing ook al is deze moeilijker te implementeren. Dit betekend dat de belangen van de gebruiker en van vrije software een prioriteit zijn.</para>
        </listitem>
        <listitem>
	  <para>Werken die niet voldoen aan onze vrije software standaarden.</para>

	  <para>Debian accepteert en begrijpt dat gebruikers misschien enkele niet-vrije programma's willen gebruiken. Daarom staat het project toe om delen van zijn infrastructuur te gebruiken om niet-vrije Debian pakketten te verspreiden welke veilig verdeeld kunnen worden.</para>

          <sidebar>
            <title><emphasis>GEMEENSCHAP</emphasis> Voor of tegen de niet-vrije onderdelen?</title>
            <indexterm><primary>niet-vrij</primary></indexterm>
            <indexterm><primary>onderdeel</primary><secondary>niet-vrij</secondary></indexterm>

	    <para>De inzet om een structuur van niet-vrije software te onderhouden (bijv. het "niet-vrije" onderdeel, zie de marge <xref linkend="sidebar.sections" /> is vaak een onderwerp voor debat binnen de Debian gemeenschap.</para>

	    <para>Tegenstanders argumenteren dat het de mensen weg houdt van vrije software equivalenten, en het principe van enkel vrije software te bieden tegenspreekt. Voorstanders zeggen botweg dat de meerderheid van de niet-vrije pakketten "bijna vrij" zijn en achter blijven omdat er slechts één of twee vervelende beperkingen hebben (het meest voorkomende verbod is tegen het commercieel gebruik van de software). Door deze te verspreiden in de niet-vrij tak vertellen we de auteur, indirect, dat hun creatie beter bekend zou zijn en meer gebruikt als ze het aan het hoofd tak (main) konden toevoegen. Dus ze vriendelijk vragen om hun licentie aan te passen om dit doel te dienen. </para>

	    <para>Na een eerste, mislukte poging, om het niet-vrije onderdeel volledig te verwijderen in 2004 is de kans zeer klein dat dit nog eens op de agenda komt. Vooral omdat het veel bruikbare documenten bevat die gewoonweg verplaatst zijn omdat ze niet voldeden aan de nieuwe vereisten van het hoofd onderdeel. Dit is vooral het geval voor bepaalde software documentatie bestanden die zijn uitgegeven door het GNU project (in het bijzonder, Emacs en Make).</para>

	    <para>Het blijvende voortbestaan van het niet-vrije onderdeel is af en toe de bron van wrijvingen met de Free Software Foundation en is de hoofd reden waarom ze weigeren om Debian officieel aan te bevelen als besturingssysteem.</para>
          </sidebar>
        </listitem>
      </orderedlist>
    </section>
    <section id="sect.dfsg">
      <title>De Debian Vrije Software Richtlijnen</title>
      <indexterm><primary>princiepes van vrije software</primary></indexterm>
      <indexterm><primary>DFSG</primary></indexterm>
      <indexterm><primary>Debian Vrije Software Richtlijnen</primary></indexterm>
      <indexterm><primary>vrije</primary><secondary>software</secondary></indexterm>

      <para>Dit document ter referentie definieert welke software "vrij genoeg" is om aan Debian toe te voegen. Als de licentie van een programma overeenstemt met deze principes kan het toegevoegd worden aan het hoofd onderdeel; langs de andere kant, en indien vrije distributie is toegestaan, kan het terug worden gevonden in het niet-vrije onderdeel. Het niet-vrije onderdeel is geen officieel deel van Debian, het is een toegevoegde dienst geboden aan de gebruikers.</para>

      <para>Mer dan een selectie criterium voor Debian is deze tekst een autoriteit geworden op het gebied van vrije software en heeft gediend als basis voor de "Open Source Definition". Historisch gezien is het daarom een van de eerste formele definities op het gebied van "vrije software".</para>

      <para>De GNU Algemene Publieke Licentie (GNU General Public License), de BSD Licentie en de Artistieke Licentie zijn voorbeelden van traditionele vrije licenties die de 9 punten, genoemd in deze tekst, volgen. Hieronder vind je deze tekst zoals het op de Debian website is gepubliceerd. <ulink type="block" url="http://www.debian.org/social_contract#guidelines" /></para>
      <orderedlist>
        <listitem>
          <formalpara>
            <title>Vrije herverdeling</title>

	    <para>De licentie van een component van Debian mag geen enkele partij beperken om de software, als onderdeel van een samengevoegde software distributie doe programma's van verschillende bronnen bevat, te verkopen of weg te geven. De licentie mag geen auteursrechten of andere vergoeding vereisen voor zo'n verkoop.</para>
          </formalpara>

          <sidebar>
            <title><emphasis>TERUG NAAR DE BASIS</emphasis> Vrije Licenties</title>
            <indexterm><primary>licentie</primary><secondary>BSD</secondary></indexterm>
            <indexterm><primary>BSD licentie</primary></indexterm>
            <indexterm><primary>licentie</primary><secondary>GPL</secondary></indexterm>
            <indexterm><primary>GPL</primary></indexterm>
            <indexterm><primary>GNU</primary><secondary>Algemene Publieke Licentie</secondary></indexterm>
            <indexterm><primary>Algemene Publieke Licentie</primary></indexterm>
            <indexterm><primary>licentie</primary><secondary>artistiek</secondary></indexterm>
            <indexterm><primary>artistieke licentie</primary></indexterm>

	    <para>De GNU GPL, de BSD licentie en de Artistieke licentie voldoen allemaal aan de Debian Vrije Software Richtlijnen, hoewel ze zeer verschillend zijn.</para>

	    <para>De GNU GPL, gebruikt en gepromoot door de FSF (Free Software Foundation of Vrije Software Stichting), is het meest voorkomende. Het belangrijkste onderdeel is dat het ook geldt op afgeleid werk dat herverdeeld wordt: een programma dat GPL code bevat kan enkel verdeeld worden onder deze richtlijnen. Het verbied dus ieder gebruik binnen gepatenteerde programma's. Dit vormt een serieus probleem voor het her-gebruiken van GPL code in vrije software die niet voldoet aan deze licentie. Daarom is het soms onmogelijk om een programma uit te geven, onder een andere licentie dan de GPL, dat gebruik maakt van een bibliotheek die is vrijgegeven onder de GPL. Aan de andere kant is deze licentie wel goed gegrondvest binnen de Amerikaanse wetgeving: Advocaten van de FSF hebben samengewerkt tijden het opstellen hiervan en hebben vaak met overtreders een goede overeenkomst bereikt zonder naar de rechter te moeten stappen. <ulink type="block" url="http://www.gnu.org/copyleft/gpl.html" /></para>

	    <para>De BSD licentie heeft de minste beperkingen: alles is toegestaan, inclusief het gebruik van aangepaste BSD code in een gepatenteerd programma. Zelfs Microsoft gebruikt het door de TCP/IP laag van Windows NT te baseren op die van de BSD kernel. <ulink type="block" url="http://www.opensource.org/licenses/bsd-license.php" /></para>

	    <para>Tenslotte de Artistieke licentie, deze is een compromis tussen de twee anderen: code gebruiken in een gepatenteerd programma is toegestaan, maar iedere aanpassing moet gepubliceerd worden.<ulink type="block" url="http://www.opensource.org/licenses/artistic-license-2.0.php" /></para>

	    <para>De volledige tekst van deze licenties is beschikbaar in <filename>/usr/share/common-licenses/</filename> op ieder Debian systeem.</para>
          </sidebar>
        </listitem>
        <listitem>
          <formalpara>
            <title>Bron code.</title>

	    <para>Het programma moet de bron code bevatten en moet toestaan deze zowel in bron code als gecompileerde vorm te verspreiden.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Afgeleid werk.</title>

	    <para>De licentie moet aanpassingen en afgeleid werk toestaan en moet toestaan deze te verspreiden onder de zelfde eisen als de licentie van de officiële software.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Integriteit van de bron code van de auteur.</title>

	    <para>De licentie mag de verspreiding van de bron code begrenzen <emphasis>enkel</emphasis> indien de licentie toestaat om "patch bestanden" te verspreiden met het doel om de software aan te passen tijdens het compileren. De licentie moet het verspreiden van software gebaseerd op aangepaste code expliciet toestaan. De licentie kan eisen dat afgeleide werken een andere naam of versie nummer dan het orgineel hebben. (<emphasis>dit is een compromis. De Debian groep adviseert alle auteurs om geen enkel bestand, bron of binair te beperken om aan te passen</emphasis>). </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Geen discriminatie tegen personen of groepen.</title>

	    <para>De licentie mag geen persoon of groep van personen discrimineren.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Geen discriminatie tegen ieder vorm van streven.</title>

	    <para>De licentie mag niemand beperken om het programma te gebruiken in een specifiek gebied of streven. Bij voorbeeld: het mag het gebruik binnen een bedrijf of voor gebruik voor genetisch onderzoek niet beperken.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Distributie van licentie.</title>

	    <para>De rechten verbonden aan het programma moet van toepassing zijn op iedereen waarnaar het programma ge-herdistribueert wordt zonder de nood om een bijkomende licentie uit te voeren door deze partijen. </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Licentie mag niet specifiek van toepassing zijn op Debian.</title>

	    <para>De rechten van toepassing op een programma mogen niet rekenen dat het een onderdeel is van een Debian systeem. Als het programma ge-extraheert is uit Debian en gebruikt of verspreid zonder Debian maar anderzijds binnen de voorwaarden van de licentie van het programma, zouden all partijen aan wie het programma ge-redistribueert wordt dezelfde rechten moeten hebben zoals wanneer het samen komt met een Debian systeem.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Licentie mag geen andere software besmetten.</title>

	    <para>De licentie mag geen beperkingen opleggen aan andere software die er samen mee ge-distribueert worden. Bij voorbeeld: de licentie mag niet eisen dat alle andere programma's op hetzelfde medium vrije software zijn.</para>
          </formalpara>

          <sidebar>
            <title><emphasis>TERUG NAAR DE BASIS</emphasis> Copyleft</title>
            <indexterm><primary>copyleft</primary></indexterm>
            <indexterm><primary>copyrights</primary></indexterm>

	    <para>Copyleft is een principe dat eruit bestaat dat copyrights worden gebruikt om de vrijheid van een werk en zijn afgeleiden te garanderen, in tegenstelling tot het beperken van de rechten zoals in het geval van gepatenteerde software. Het is ook een woordspeling op "copyright". Richard Stallman ontdekte het idee wanneer een vriend van hem, die hield van grappen, op een enveloppe aan hem geadresseerd "copyleft: all rights reversed". had geschreven. Copyleft legt het behouden van alle initiële vrijheden vanaf de verdeling van een origineel of een aangepaste versie van een werk (meestal een programma) op. Het is dus niet mogelijk om het programma te her-distribueren als gepatenteerde software als het is afgeleid van code van een onder copyleft vrijgegeven programma.</para>

	    <para>De meest bekende familie van copyleft licenties is, natuurlijk, de GNU GPL en zijn afgeleiden, de GNU LGPG of GNU Lesser General Public License en de GNU FDL of GNU Free Documentation License. Helaas zijn copyleft licenties in het algemeen niet compatibel met elkaar. Bij gevolg is het best om er maar één van te gebruiken.</para>
          </sidebar>
        </listitem>
      </orderedlist>

      <sidebar id="sidebar.bruce-perens">
        <title><emphasis>GEMEENSCHAP</emphasis> Bruce Perens, een controversieel leider</title>
        <indexterm><primary>Bruce Perens</primary></indexterm>
        <indexterm><primary>Perens, Bruce</primary></indexterm>
        <indexterm><primary>Open Bron</primary></indexterm>

	<para>Bruce Perens was de tweede leider van het Debian project, net na Ian Murdock. Hij was zeer controversieel door zijn dynamische en autoritaire methodologie. Desondanks blijft hij een belangrijke bijdrager aan Debian, aan wie Debian in het speciaal in het krijt staat voor het bewerken van de beroemde "Debian Free Software Guidelines" (DFSG), een origineel idee van Ean Schuessler.Bruce zou er de beroemde "Open Source Definition" van afleiden en alle verwijzingen naar Debian er uit verwijderen. <ulink type="block" url="http://www.opensource.org/" /></para>

	<para>Zijn vertrek uit het project was vrij emotioneel, maar Bruce bleef sterk verbonden aan Debian, aangezien hij deze distributie blijft promoten in politieke en economische kringen. Hij verschijnt sporadisch op de email lijst om zijn advies te geven en zijn laatste initiatieven ten voordele van Debian te presenteren.</para>
        <indexterm><primary>codenaam</primary></indexterm>
        <indexterm><primary>naam</primary><secondary>codenaam</secondary></indexterm>
        <indexterm><primary><emphasis role="distribution">Red</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Buzz</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Bo</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Hamm</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Slink</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Potato</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Woody</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Sarge</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Etch</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Lenny</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Squeeze</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Wheezy</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Jessie</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Stretch</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Buster</emphasis></primary></indexterm>
        <indexterm><primary><emphasis role="distribution">Sid</emphasis></primary></indexterm>
        <indexterm><primary>Toy Story</primary></indexterm>
        <indexterm><primary>Pixar</primary></indexterm>

	<para>Een laatste anekdote, het is Bruce die verantwoordelijk was voor de inspiratie van de verschillende "codenamen" voor Debian versies (1.1 — <emphasis role="distribution">Red</emphasis>, 1.2 — <emphasis role="distribution">Buzz</emphasis>, 1.3 — <emphasis role="distribution">Bo</emphasis>, 2.0 — <emphasis role="distribution">Hamm</emphasis>, 2.1 — <emphasis role="distribution">Slink</emphasis>, 2.2 — <emphasis role="distribution">Potato</emphasis>, 3.0 - <emphasis role="distribution">Woody</emphasis>, 3.1 — <emphasis role="distribution">Sarge</emphasis>, 4.0 — <emphasis role="distribution">Etch</emphasis>, 5.0 — <emphasis role="distribution">Lenny</emphasis>, 6.0 — <emphasis role="distribution">Squeeze</emphasis>, 7.0 — <emphasis role="distribution">Wheezy</emphasis>, 8 — <emphasis role="distribution">Jessie</emphasis>, 9 (nog niet vrijgegeven) — <emphasis role="distribution">Stretch</emphasis>, 10 (nog niet vrijgegeven) — <emphasis role="distribution">Buster</emphasis>, <emphasis role="distribution">Unstable</emphasis> — <emphasis role="distribution">Sid</emphasis>). Ze zijn genomen van de namen van personages in de Toy Story films. Deze animatie film, volledig gemaakt van computer afbeeldingen, was geproduceerd door Pixar Studios waar Bruce werkte in die tijd dat hij het Debian project leide. De naam "Sid" behelst een speciale status, aangezien het voor altijd geaccocieert worden met de <emphasis role="distribution">Unstable</emphasis> tak. In de film is dit personage het kind van de buren, die steeds het speelgoed kapot maakte — dus pas op voor het te dichtbij komen van <emphasis role="distribution">Unstable</emphasis>. Anderzijds, <emphasis role="distribution">Sid</emphasis> is ook een acroniem voor "Still In Development" (steeds in ontwikkeling).</para>
      </sidebar>
    </section>
  </section>
  <section id="sect.debian-internals">
    <title>Het Binnen Werk van het Debian Project</title>
    <indexterm><primary>Werking, intern</primary></indexterm>
    <indexterm><primary>organisatie, intern</primary></indexterm>

    <para>Het overvloedig resultaat geproduceerd door het Debian project leiden gelijktijdig af van het werk aan de infrastructuur uitgevoerd door ervaren Debian ontwikkelaars, van individueel of collectief werkt of ontwikkelaars van Debian pakketten en van feedback van gebruikers.</para>
    <section>
      <title>De Debian Ontwikkelaars</title>
      <indexterm><primary>ontwikkelaars</primary><secondary>Debian ontwikkelaars</secondary></indexterm>

      <para>Debian ontwikkelaars hebben verschillende verantwoordelijkheden, en als officiële project leden, hebben ze een grote invloed op de richting die het project uitgaat. Een Debian ontwikkelaar is gewoonlijk verantwoordelijk voor ten minste één pakket, maar afhankelijk van hun beschikbare tijd en wens, zijn ze vrij om betrokken te worden in meerdere teams en dus meer verantwoordelijkheid te krijgen binnen het project.<ulink type="block" url="http://www.debian.org/devel/people" /><ulink type="block" url="http://www.debian.org/intro/organization" /><ulink type="block" url="http://wiki.debian.org/Teams" /></para>

      <sidebar>
        <title><emphasis>GEREEDSCHAP</emphasis>Ontwikkelaars databank</title>
        <indexterm><primary>ontwikkelaars</primary><secondary>ontwikkelaars databank</secondary></indexterm>
        <indexterm><primary>databank</primary><secondary>ontwikkelaars databank</secondary></indexterm>

	<para>Debian heeft een databank met al de ontwikkelaars geregistreerd binnen het project en hun relevante informatie (adres, telefoon, geografische coördinaten zoals lengt- en breedtegraad, enz.). Bepaalde informatie (voor- en achternaam, land, gebruikersnaam binnen het project, IRC gebruikersnaam, GnuPG sleutel, enz.) is publiek en beschikbaar op het Web. <ulink type="block" url="http://db.debian.org/" /></para>

	<para>De geografische coördinaten laten toe om een kaart te maken met de locatie van al de ontwikkelaars over de hele wereldbol. Debian is werkelijk een internationaal project: zijn ontwikkelaars kunnen gevonden worden op ieder continent, hoewel de meerderheid zich in de "Westelijke landen" bevindt </para>

        
        <figure>
          <title>Wereldwijde verspreiding van Debian ontikkelaars</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/developers-map.png" scalefit="1" width="70%" />
            </imageobject>
          </mediaobject>
          <indexterm><primary>wereld-wijde-verspreiding</primary></indexterm>
        </figure>
      </sidebar>

      <para>Pakketten onderhouden is een relatieve gedisciplineerde bezigheid, heel gedocumenteerd of zelf gereguleerd. Het moet, in werkelijkheid, voldoen aan al de standaarden die zijn opgesteld in het <emphasis>Debian Beleid</emphasis> (Debian Policy). Gelukkig zijn er veel gereedschappen die het werk van de onderhouders vergemakkelijken. De ontwikkelaar kan dus focussen op de specifieke eisen van het pakket en de meer complexe taken, zoals fouten (bugs) oplossen. <ulink type="block" url="http://www.debian.org/doc/debian-policy/" /></para>

      <sidebar>
        <title><emphasis>TERUG NAAR DE BASIS</emphasis> Pakket onderhoud, het werk van de ontwikkelaar</title>
        <indexterm><primary>onderhoud</primary><secondary>pakket onderhoud</secondary></indexterm>
        <indexterm><primary>pakket</primary><secondary>onderhoud</secondary></indexterm>

	<para>Het onderhouden van een pakket houdt in, ten eerst een programma "inpakken". In het bijzonder betekent de manier van installatie definiëren zodat, eenmaal geïnstalleerd, het programma werkt en voldoet aan de regels die het Debian project zichzelf oplegt. Het resultaat van deze bewerking is opgeslagen in een <filename>.deb</filename> bestand. Het effectief installeren van het programma zal dan niet meer vereisen dan het uitpakken van dit gecomprimeerde archief en wat pre-installatie of post-installatie scripts uitvoeren die er inzitten. </para>

	<para>Na deze initiële fase begint de cyclus van onderhoud pas echt: updates voorbereiden zodat ze de laatste versie van het Debian Beleid volgen, fouten die door gebruikers gemeld zijn oplossen en inclusief nieuwe "upstream" versies van het programma die natuurlijk continu tegelijkertijd worden ontwikkeld. Bij boorbeeld, tijdens het initiële inpakken was het programma aan versie 1.2.3. Na enkele maanden van ontwikkelen geeft de auteur een nieuwe stabiele versie vrij, nummer 1.4.0 op dit moment, zou de Debian onderhouder het programma moeten updaten, zodat de gebruikers de voordelen genieten van de laatste stabiele versie.</para>
      </sidebar>
      <indexterm><primary>Debian Beleid</primary></indexterm>
      <indexterm><primary>Debian Beleid</primary></indexterm>
      <indexterm><primary>beleid</primary></indexterm>

      <para>Het beleid, een essentieel element van het Debian Project, bepaald de normen die de kwaliteit van de pakketten en een perfecte interoperabiliteit van de distributie verzekeren. Dankzij dit beleid blijft Debian consistent ondanks zijn gigantische grootte. Dit Beleid is niet vastgezet in steen maar evolueert continu dankzij voorstellen ingediend op de <email>policy@lists.debian.org</email> mailing lijst. Amendementen waarmee alle betrokken partijen akkoord gaan worden geaccepteerd en toegepast op de tekst door een kleine groep van onderhouders welke geen redactionele verantwoordelijkheid (zij voegen elke de aanpassingen waarmee de Debian ontwikkelaars die lid zijn van bovengenoemde lijst akkoord me gaan toe). Ja kunt de huidige amendementen voorstellen volgen op het fouten volg systeem: <ulink type="block" url="http://bugs.debian.org/debian-policy" /></para>

      <sidebar>
        <title><emphasis>GEMEENSCHAP</emphasis>Beleid redactioneel proces</title>

	<para>Iedereen van een amendement voorstellen aan het Debian Beleid, gewoon door een fout rapport (bug report) met een niveau van "Wishlist" tegen het <emphasis role="pkg">debian-policy</emphasis> pakket.Het proces dat dan start is gedocumenteerd in <filename>usr/share/doc/debian-policy/Process.html</filename>: Als men besluit dat het aangebrachte probleem opgelost moet worden door een nieuwe regel toe te voegen aan het Debian Beleid, volgt er een discussie op de <email>debian-policy@lists.debian.org</email> mail lijst totdat er een consensus bereikt is en een voorstel is ingediend. Iemand stelt dan een concept op en stuurt het voor goedkeuring (in de vorm van een patch ter nazicht). Zo snel als twee andere ontwikkelaars akkoord gaan met het feit dat het voorgestelde concept de bereikte consensus van de vorige discussie behelst (zullen zij het "second-en"), het voorstel kan dan toegevoegd worden aan het officiële document door één van de <emphasis role="pkg">debian-policy</emphasis> pakket beheerders. Als het proces faalt bij één van deze stappen, sluiten de onderhouders de fout en classificeren het voorstel als geweigerd.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>DEBIAN BELEID</emphasis> De documentatie</title>
        <indexterm><primary>documentatie</primary><secondary>locatie</secondary></indexterm>
        <indexterm><primary>locatie van de documentatie</primary></indexterm>
        <indexterm><primary><filename>/usr/share/doc/</filename></primary></indexterm>
        <indexterm><primary><filename>README.Debian</filename></primary></indexterm>
        <indexterm><primary><filename>NEWS.Debian.gz</filename></primary></indexterm>

	<para>Documentatie voor ieder pakket is opgeslagen in <filename>/usr/share/doc<replaceable>pakket</replaceable>/</filename>. Deze directory bevat vaak een <filename>README.Debian</filename> bestand dat de Debian specifieke aanpassingen gemaakt door de pakket onderhouder beschrijft. Het is dus wijs om dit te leven voor iedere configuratie om profijt te hebben van hun ervaring. We vinden ook een <filename>changelog.Debian.gz</filename> bestand dat de aanpassingen gemaakt van een versie naar een andere gemaakt door de Debian onderhouder beschrijft. Dit is niet te verwarren met het <filename>changelog.gz</filename> bestand (of equivalent) welke de veranderingen gemaakt door de upstream ontwikkelaar beschrijft. Het <filename>copyright</filename> bestand bevat informatie over de auteurs en de licentie van de software. Tenslotte kunnen we ook een bestand met de naam <filename>NEWS.Debian.gz</filename> vinden, welke Debian ontwikkelaars toestaat met elkaar te communiceren met betrekking tot updates; als <emphasis>apt-listchanges</emphasis> geïnstalleerd is worden deze berichten automatisch weergegeven. Alle andere bestanden zijn specifiek aan de software in kwestie. We willen zeker duiden op de <filename>examples</filename> sub-directory welke vaak voorbeelden van configuratie bestanden bevat.</para>
      </sidebar>

      <para>Het Beleid bied een aanzienlijke dekking van de technische aspecten van pakketbeheer. De grote van het project brengt ook organisatorische problemen. Deze worden behandeld in de Debian Grondwet, welke een structuur en manier van beslissingen nemen tot stand brengt. In andere woorden een formele overheidsstructuur.establish\t</para>
      <indexterm><primary>grondwet</primary></indexterm>
      <indexterm><primary>Debian Project Leider</primary></indexterm>
      <indexterm><primary>DLP</primary></indexterm>
      <indexterm><primary>leider</primary><secondary>rol</secondary></indexterm>
      <indexterm><primary>leider</primary><secondary>verkiezing</secondary></indexterm>

      <para>Deze grondwet definieert een aantal rollen en posities plus verantwoordelijkheden en autoriteiten voor ieder. Het is vooral noemenswaardig dat de Debian ontwikkelaars altijd de beslissing-nemende autoriteit hebben bij een stemming of resolutie, waarin een gekwalificeerde meerderheid van drie kwart (75%) van de stemmen vereist is om significantie wijzigingen te maken (zoals al deze met een impact op de Oprichtings-Documenten). Hoewel ontwikkelaars jaarlijks een "leider" verkiezen die hen vertegenwoordigt bij meetings en interne coördinatie tussen verschillende teams verzekert. Deze verkiezing is altijd een periode van intensieve discussies. De rol van deze leider is niet formeel gedefinieerd in enig document: kandidaten voor deze positie stellen meestal hun eigen definitie van deze positie voor. In de praktijk bevat de rol van de leider het zijn van een vertegenwoordiger tegenover de media, "interne" teams coördineren en algemene leiding bieden over het project, waarin de ontwikkelaar kan meegaan: De visies van de DLP zijn impliciet goedgekeurd door de meerderheid van de project leden.</para>

      <para>specifiek heeft de leider echter autoriteit; hun stem lost gelijke-stemmingen op, ze kunnen iedere beslissing nemen welke niet al onder de autoriteit van iemand anders vallen en kunnen delen van hun verantwoordelijkheid delegeren.</para>
      <indexterm><primary>Murdock, Ian</primary></indexterm>
      <indexterm><primary>Perens, Bruce</primary></indexterm>
      <indexterm><primary>Jackson, Ian</primary></indexterm>
      <indexterm><primary>Akkerman, Wichert</primary></indexterm>
      <indexterm><primary>Collins, Ben</primary></indexterm>
      <indexterm><primary>Garbee, Bdale</primary></indexterm>
      <indexterm><primary>Michlmayr, Martin</primary></indexterm>
      <indexterm><primary>Robinson, Branden</primary></indexterm>
      <indexterm><primary>Towns, Anthony</primary></indexterm>
      <indexterm><primary>Hocevar, Sam</primary></indexterm>
      <indexterm><primary>McIntyre, Steve</primary></indexterm>
      <indexterm><primary>Zacchiroli, Stefano</primary></indexterm>
      <indexterm><primary>Nussbaum, Lucas</primary></indexterm>

      <para>Sinds zijn oprichting was het project onder de opeenvolgende leiding van Ian Murdock, Bruce Perens, Ian Jackson, Wichert Akkerman, Ben Collins, Bdale Garbee, Martin Michlmayr, Branden Robinson, Anthony Towns, Sam Hocevar, Steve McIntyre, Stefano Zacchiroli en Lucas Nussbaum.</para>
      <indexterm><primary>technische commissie</primary></indexterm>

      <para>De grondwet definieert ook een "technische commissie". de essentiële rol van deze commissie is beslissingen nemen op technisch niveau wanneer de betrokken ontwikkelaars het niet eens kunnen worden waarvoor zijn verantwoordelijk zijn. Het is belangrijk te vermelden dat zij enkel optreden nadat ze zijn gevraagd door één van de partijen in kwestie.</para>
      <indexterm><primary>de project secretaris</primary></indexterm>

      <para>Tenslotte, de grondwet definieert de positie van "project secretaris" welke de leiding heeft over stemmingen in verband met de verschillende verkiezingen en algemene resoluties.</para>

      <para>De "algemene resolutie" procedure is volledig gedetailleerd in de grondwet, van de initiële discussie periode tot het uiteindelijke tellen van de stemmen. Voor meer details zie: <ulink type="block" url="http://www.debian.org/devel/constitution.en.html" /></para>
      <indexterm><primary>algemene resolutie</primary></indexterm>
      <indexterm><primary>stem</primary></indexterm>

      <sidebar>
        <title><emphasis>CULTUUR</emphasis> Flamewar, de discussie die vuur vat</title>
        <indexterm><primary>flamewar</primary></indexterm>
        <indexterm><primary>verhit debat</primary></indexterm>

	<para>Een "flamewar" is een verergerend gepassioneerd debat, welke regelmatig uitloopt op een punt waar mensen elkaar aanvallen wanneer alle redelijke argumentatie aan beide kanten is uitgeput. Bepaalde thema's zijn frequenter het onderwerp van polemiek dan andere (de keuze van tekst verwerker, "verkies je <command>vi</command> of <command>emacs</command>?" is een oude favoriet). Dit provoceert vaak snelle email uitwisselingen door het grote aantal mensen met een mening (iedereen) en de zeer persoonlijke aard van zo'n vraag.</para>

	<para>Niets bruikbaars komt gewoonlijk uit zo'n discussie; de algemene aanbeveling is om deze debatten te mijden en misschien snel door de inhoud te lezen aangezien ze volledig doorlezen zou te veel tijd kosten.</para>
      </sidebar>

      <para>Zelfs indien deze grondwet een schijn van democratie vast stelt is de dagelijkse realiteit zeer verschillend: Debian volgt natuurlijk de vrije software regels van de doe-ocratie: diegene die iets doet mag beslissen hoe het te doen. Er kan veel tijd verspild worden tijdens het debatteren van respectievelijke voordelen van verschillende manieren va aanpak van een probleem; de gekozen oplossing zal de eerste zij die zowel functioneel is en voldoet... welke er uit zal komen hangt af van de tijd die een competent persoon er insteekt.</para>

      <para>This is the only way to earn one's stripes: do something
      useful and show that one has worked well. Many Debian
      “administrative” teams operate by co-optation, preferring
      volunteers who have already effectively contributed and proved their
      competence. The public nature of the work of those teams makes
      it possible for new contributors to observe and start helping
      without any special privilege. This is why Debian is often
      described as a “meritocracy”.</para>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> Meritocracy, the reign of knowledge</title>
        <indexterm><primary>meritocracy</primary></indexterm>

	<para>Meritocracy is a form of government in which authority is
	exercised by those with the greatest merit. For Debian, merit is a
	measure of competence, which is, itself, assessed by observation of
	past actions by one or more others within the project (Stefano
	Zacchiroli, a former project leader, speaks of “do-ocracy”,
	meaning “power to those who get things done”). Their simple
	existence proves a certain level of competence; their achievements
	generally being free software, with available source code, which
	can easily be reviewed by peers to assess their quality.</para>
      </sidebar>

      <para>This effective operational method guarantees the quality of
      contributors in the “key” Debian teams. This method is by no
      means perfect and occasionally there are those who do not accept this
      way of operating. The selection of developers accepted in the teams
      may appear a bit arbitrary, or even unfair. Furthermore, not
      everybody has the same definition of the service expected from these
      teams. For some, it is unacceptable to have to wait eight days for
      inclusion of a new Debian package, while others will wait patiently
      for three weeks without a problem. As such, there are regular
      complaints from the disgruntled about the “quality of service”
      from some teams.</para>

      <sidebar>
        <title><emphasis>COMMUNITY</emphasis> Integration of new maintainers</title>
        <indexterm><primary>maintainer</primary><secondary>new maintainer</secondary></indexterm>

	<para>The team in charge of admitting new developers is the most
	regularly criticized. One must acknowledge that, throughout the
	years, the Debian project has become more and more demanding of the
	developers that it will accept. Some people may see some injustice
	in that, but we must confess that what were only little challenges
	at the beginning have become much greater in a community of over
	1,000 people, when it comes to ensuring the quality and integrity
	of everything that Debian produces for its users.</para>
        <indexterm><primary>DAM</primary></indexterm>
        <indexterm><primary>Debian Account Managers</primary></indexterm>

	<para>Furthermore, the acceptance procedure is concluded by review
	of the candidacy by a small team, the Debian Account Managers.
	These managers are, thus, particularly exposed to criticism, since
	they have final say in the inclusion or rejection of a volunteer
	within the Debian developers community. In practice, sometimes they
	must delay the acceptance of a person until they have learned more
	about the operations of the project. One can, of course, contribute
	to Debian before being accepted as an official developer, by being
	sponsored by current developers.</para>
      </sidebar>
    </section>
    <section>
      <title>The Active Role of Users</title>

      <para>One might wonder if it is relevant to mention the users
      among those who work within the Debian project, but the answer
      is a definite yes: they play a critical role in the project.
      Far from being “passive”, some users run development
      versions of Debian and regularly file bug reports to indicate
      problems. Others go even further and submit ideas for
      improvements, by filing a bug report with a severity level of
      “wishlist”, or even submit corrections to the source code,
      called “patches” (see sidebar <xref linkend="sidebar.patch" />).</para>

      <sidebar id="sidebar.bts">
        <title><emphasis>TOOL</emphasis> Bug tracking system</title>
        <indexterm><primary>system</primary><secondary>Bug Tracking System</secondary></indexterm>
        <indexterm><primary>BTS</primary></indexterm>
        <indexterm><primary>Bug Tracking System</primary></indexterm>
        <indexterm><primary><literal>bugs.debian.org</literal></primary></indexterm>

	<para>The Debian Bug Tracking System (Debian BTS) is used by
	large parts of the
	project. The public part (the web interface) allows users to view
	all bugs reported, with the option to display a sorted list of bugs
	selected according to various criteria, such as: affected package,
	severity, status, address of the reporter, address of the
	maintainer in charge of it, tag, etc. It is also possible to browse
	the complete historical listing of all discussions regarding each
	of the bugs.</para>

	<para>Below the surface, the Debian BTS is e-mail based:
	all information that it stores comes from messages sent by the
	various persons involved. Any e-mail sent to
	<email>12345@bugs.debian.org</email> will, thus, be assigned to the
	history for bug number 12345. Authorized persons may “close” a bug
	by writing a message describing the reasons for the decision to
	close to <email>12345-done@bugs.debian.org</email> (a bug is closed
	when the indicated problem is resolved or no longer relevant). A
	new bug is reported by sending an e-mail to
	<email>submit@bugs.debian.org</email> according to a specific
	format which identifies the package in question. The address
	<email>control@bugs.debian.org</email> allows editing of all the
	“meta-information” related to a bug.</para>

	<para>The Debian BTS has other functional features, as well, such as
	the use of tags for labeling bugs. For more information, see <ulink type="block" url="http://www.debian.org/Bugs/" /></para>
      </sidebar>

      <sidebar>
        <title><emphasis>VOCABULARY</emphasis> Severity of a bug</title>
        <indexterm><primary>severity</primary></indexterm>
        <indexterm><primary>bug</primary><secondary>severity</secondary></indexterm>

	<para>The severity of a bug formally assigns a degree of
	gravity to the reported problem. Effectively, not all bugs
	have the same importance; for instance, a typo in a manual
	page is not comparable to a security vulnerability in server
	software.</para>

	<para>Debian uses an extended scale to describe the severity
	of a bug. Each level is defined precisely in order to
	facilitate the selection thereof. <ulink type="block" url="http://www.debian.org/Bugs/Developer#severities" /></para>
      </sidebar>

      <para>Additionally, numerous satisfied users of the service offered
      by Debian like to make a contribution of their own to the project. As
      not everyone has appropriate levels of expertise in programming, they
      may choose to assist with the translation and review of
      documentation. There are language-specific mailing lists to coordinate
      this work.
      <ulink type="block" url="https://lists.debian.org/i18n.html" />
      <ulink type="block" url="http://www.debian.org/international/" />
      </para>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> What are i18n and l10n?</title>
        <indexterm><primary>internationalization</primary></indexterm>
        <indexterm><primary>localization</primary></indexterm>
        <indexterm><primary>i18n</primary></indexterm>
        <indexterm><primary>l10n</primary></indexterm>

	<para>“i18n” and “l10n” are the abbreviations for the words
	“internationalization” and “localization”, respectively,
	preserving the initial and last letter of each word, and the number
	of letters in the middle.</para>

	<para>To “internationalize” a program consists of modifying it
	so that it can be translated (localized). This involves partially
	rewriting a program initially written to work in one language in
	order to be able to open it to all languages.</para>

	<para>To “localize” a program consists of translating the
	original messages (frequently in English) to another language. For
	this, it must have already been internationalized.</para>

	<para>In summary, internationalization prepares the software for
	translation, which is then executed by localization.</para>
      </sidebar>

      <sidebar id="sidebar.patch">
        <title><emphasis>BACK TO BASICS</emphasis> Patch, the way to send a fix</title>
        <indexterm><primary><command>patch</command></primary></indexterm>
        <indexterm><primary>patch</primary></indexterm>
        <indexterm><primary><command>diff</command></primary></indexterm>

	<para>A patch is a file describing changes to be made to one or
	more reference files. Specifically, it will contain a list of lines
	to be removed or added to the code, as well as (sometimes) lines
	taken from the reference text, replacing the modifications in
	context (they allow identification of the placement of the changes
	if the line numbers have changed).</para>

	<para>The tool used for applying the modifications given in such a
	file is simply called <command>patch</command>. The tool that
	creates it is called <command>diff</command>, and is used as
	follows:</para>

        <screen><computeroutput>$ </computeroutput><userinput>diff -u file.old file.new &gt;file.patch</userinput>
</screen>

	<para>The <filename>file.patch</filename> file contains the
	instructions for changing the content of
	<filename>file.old</filename> into <filename>file.new</filename>.
	We can send it to someone, who can then use it to recreate
	<filename>file.new</filename> from the two others, like
	this:</para>

        <screen><computeroutput>$ </computeroutput><userinput>patch -p0 file.old &lt;file.patch</userinput>
</screen>

	<para>The file, <filename>file.old</filename>, is now identical to
	<filename>file.new</filename>.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>TOOL</emphasis> Report a bug with <command>reportbug</command></title>
        <indexterm><primary><command>reportbug</command></primary></indexterm>
        <indexterm><primary>bug</primary><secondary>report a bug</secondary></indexterm>
        <indexterm><primary>report a bug</primary></indexterm>

	<para>The <command>reportbug</command> tool facilitates sending bug
	reports on a Debian package. It helps making sure the bug in
	question hasn't already been filed, thus preventing redundancy in the
	system. It reminds the user of the definitions of the severity
	levels, for the report to be as accurate as possible (the developer
	can always fine-tune these parameters later, if needed). It helps
	writing a complete bug report without the user needing to know the
	precise syntax, by writing it and allowing the user to edit it.
	This report will then be sent via an e-mail server (local, by
	default, but <command>reportbug</command> can also use a remote
	server).</para>

	<para>This tool first targets the development versions, which
	is where the bugs will be fixed. Effectively, changes are not
	welcome in a stable version of Debian, with very few exceptions
	for security updates or other important updates (if, for example,
	a package is not working at all). A correction of a minor bug in a
	Debian package must, thus, wait for the next stable version.</para>
      </sidebar>

      <para>All of these contribution mechanisms are made more
      efficient by users' behavior. Far from being a collection of
      isolated persons, users are a true community within which
      numerous exchanges take place. We especially note the impressive
      activity on the user discussion mailing list,
      <email>debian-user@lists.debian.org</email> (<xref linkend="solving-problems" /> discusses this in greater
      detail).</para>

      <para>Not only do users help themselves (and others) on
      technical issues that directly affect them, but they also
      discuss the best ways to contribute to the Debian project and
      help it move forward — discussions that frequently result in
      suggestions for improvements.</para>

      <para>Since Debian does not expend funds on any self-promoting
      marketing campaigns, its users play an essential role in its
      diffusion, ensuring its fame via word-of-mouth.</para>

      <para>This method functions quite well, since Debian fans are found
      at all levels of the free software community: from install parties
      (workshops where seasoned users assist newcomers to install the
      system) organized by local LUGs or “Linux User Groups”, to
      association booths at large tech conventions dealing with Linux,
      etc.</para>

      <para>Volunteers make posters, brochures, stickers, and other
      useful promotional materials for the project, which they make
      available to everyone, and which Debian provides freely on its
      website: <ulink type="block" url="http://www.debian.org/events/material" /></para>
    </section>
    <section>
      <title>Teams and Sub-Projects</title>

      <para>Debian has been organized, right from the start, around
      the concept of source packages, each with its maintainer or
      group of maintainers. Many work teams have emerged over time,
      ensuring administration of the infrastructure, management of
      tasks not specific to any package in particular (quality
      assurance, Debian Policy, installer, etc.), with the latest
      series of teams growing up around sub-projects.</para>
      <section id="sect.sub-projects">
        <title>Existing Debian Sub-Projects</title>

	<para>To each their own Debian! A sub-project is a group of
	volunteers interested in adapting Debian to specific
	needs. Beyond the selection of a sub-group of programs
	intended for a particular domain (education, medicine,
	multimedia creation, etc.), sub-projects are also involved in
	improving existing packages, packaging missing software,
	adapting the installer, creating specific documentation, and
	more.</para>

        <sidebar>
          <title><emphasis>VOCABULARY</emphasis> Sub-project and derivative distribution</title>
          <indexterm><primary>sub-project</primary></indexterm>
          <indexterm><primary>derivative distribution</primary></indexterm>

	  <para>The development process for a derivative distribution
	  consists in starting with a particular version of Debian and
	  making a number of modifications to it. The infrastructure used
	  for this work is completely external to the Debian project. There
	  isn't necessarily a policy for contributing improvements. This
	  difference explains how a derivative distribution may
	  “diverge” from its origins, and why they have to regularly
	  resynchronize with their source in order to benefit from
	  improvements made upstream.</para>

	  <para>On the other hand, a sub-project can not diverge, since all
	  the work on it consists of directly improving Debian in order to
	  adapt it to a specific goal.</para>

	  <para>The most known distribution derived from Debian is, without
	  a doubt, Ubuntu, but there are many. See <xref linkend="derivative-distributions" /> to learn about their
	  particularities and their positioning in relationship to
	  Debian.</para>
        </sidebar>

        
	<para>Here is a small selection of current sub-projects:</para>
        <itemizedlist>
          <listitem>
	    <para>Debian-Junior, by Ben Armstrong, offering an appealing
	    and easy to use Debian system for children;</para>
          </listitem>
          <listitem>
	    <para>Debian-Edu, by Petter Reinholdtsen, focused on the
	    creation of a specialized distribution for the academic
	    world;</para>
          </listitem>
          <listitem>
	    <para>Debian Med, by Andreas Tille, dedicated to the medical
	    field;</para>
          </listitem>
          <listitem>
            <para>Debian Multimedia which deals with audio and multimedia
            work;</para>
          </listitem>
          <listitem>
            <para>Debian-Desktop which focuses on the desktop and coordinates
            artwork for the default theme;</para>
          </listitem>
          <listitem>
            <para>Debian GIS which takes care of Geographical Information Systems
            applications and users;</para>
          </listitem>
          <listitem>
            <para>Debian Accessibility, finally, improving Debian to match the
            requirements of people with disabilities.</para>
          </listitem>
        </itemizedlist>

	<para>This list will most likely continue to grow with time and
	improved perception of the advantages of Debian sub-projects. Fully
	supported by the existing Debian infrastructure, they can, in
	effect, focus on work with real added value, without worrying about
	remaining synchronized with Debian, since they are developed within
	the project.</para>
      </section>
      <section>
        <title>Administrative Teams</title>

	<para>Most administrative teams are relatively closed and recruit
	only by cooptation. The best means to become a part of one is to
	intelligently assist the current members, demonstrating that you
	have understood their objectives and methods of operation.</para>

	<para>The ftpmasters are in charge of the official archive of
	Debian packages. They maintain the program that receives packages
	sent by developers and automatically stores them, after some
	checks, on the reference server
	(<literal>ftp-master.debian.org</literal>).</para>

	<para>They must also verify the licenses of all new packages,
	in order to ensure that Debian may distribute them, prior to
	including them in the corpus of existing packages. When a
	developer wishes to remove a package, they address this team
	through the bug tracking system and the
	<emphasis>ftp.debian.org</emphasis> “pseudo-package”.</para>
        <indexterm><primary>ftpmaster</primary></indexterm>

        <sidebar>
          <title><emphasis>VOCABULARY</emphasis> The pseudo-package, a monitoring tool</title>
          <indexterm><primary>pseudo-package</primary></indexterm>

	  <para>The bug tracking system, initially designed to
	  associate bug reports with a Debian package, has proved very
	  practical to manage other matters: lists of problems to be
	  resolved or tasks to manage without any link to a particular
	  Debian package. The “pseudo-packages” allow, thus, certain
	  teams to use the bug tracking system without associating a
	  real package with their team. Everyone can, thus, report
	  issues that needs to be dealt with. For instance, the BTS
	  has a <emphasis>ftp.debian.org</emphasis> entry that is used
	  to report and track problems on the official package archive
	  or simply to request removal of a package. Likewise, the
	  <emphasis>www.debian.org</emphasis> pseudo-package refers to
	  errors on the Debian website, and
	  <emphasis>lists.debian.org</emphasis> gathers all the
	  problems concerning the mailing lists.</para>
        </sidebar>

        <sidebar id="sidebar.fusionforge">
          <title><emphasis>TOOL</emphasis> FusionForge, the Swiss Army Knife of collaborative development</title>
          <indexterm><primary><literal>alioth</literal></primary></indexterm>
          <indexterm><primary>FusionForge</primary></indexterm>

	  <para>FusionForge is a program that enables creation of
	  sites similar to <literal>www.sourceforge.net</literal>,
	  <literal>alioth.debian.org</literal>, or even
	  <literal>savannah.gnu.org</literal>. It hosts projects and
	  provides a range of services that facilitate collaborative
	  development. Each project will have a dedicated virtual
	  space there, including a web site, several “ticketing”
	  systems to track — most commonly — bugs and patches, a survey
	  tool, file storage, forums, version control system
	  repositories, mailing lists and various other related
	  services.</para>

	  <para><literal>alioth.debian.org</literal> is Debian's
	  FusionForge server, administered by Tollef Fog Heen, Stephen
	  Gran, and Roland Mas. Any project involving one or more
	  Debian developers can be hosted there. <ulink type="block" url="http://alioth.debian.org/" /></para>

	  <para>Although rather complex internally, due to the broad
	  range of services that it provides, FusionForge is otherwise
	  relatively easy to install, thanks to the exceptional work
	  of Roland Mas and Christian Bayle on the <emphasis role="pkg">fusionforge</emphasis> Debian package.</para>
        </sidebar>

	<para id="dsa-team">The <emphasis>Debian System Administrators</emphasis> (DSA) team
	(<email>debian-admin@lists.debian.org</email>), as one might
	expect, is responsible for system administration of the many
	servers used by the project. They ensure optimal functioning of all
	base services (DNS, Web, e-mail, shell, etc.), install software
	requested by Debian developers, and take all precautions in regards
        to security.
        <ulink type="block" url="https://dsa.debian.org" /></para>
        <indexterm><primary><emphasis>debian-admin</emphasis></primary></indexterm>
	<indexterm><primary>DSA (Debian System Administrators)</primary></indexterm>

        <sidebar>
          <title><emphasis>TOOL</emphasis> Debian Package Tracker</title>
          <indexterm><primary>package tracking system</primary></indexterm>
          <indexterm><primary>system</primary><secondary>package tracking system</secondary></indexterm>
          <indexterm><primary>Debian Package Tracker</primary></indexterm>
          <indexterm><primary>tracker</primary><secondary>Debian Package Tracker</secondary></indexterm>
          <indexterm><primary>package</primary><secondary>Debian Package Tracker</secondary></indexterm>
          <indexterm><primary>PTS</primary></indexterm>
          <indexterm><primary>DDPO</primary></indexterm>
          <indexterm><primary>Debian Developer's Packages Overview</primary></indexterm>

	  <para>This is one of Raphaël's creations. The basic idea is, for
	  a given package, to centralize as much information as possible on
	  a single page. Thus, one can quickly check the status of a
	  program, identify tasks to be completed, and offer one's
	  assistance. This is why this page gathers all bug statistics,
	  available versions in each distribution, progress of a package in
	  the <emphasis role="distribution">Testing</emphasis>
	  distribution, the status of translations of descriptions and
	  debconf templates, the possible availability of a new upstream
	  version, notices of noncompliance with the latest version of the
	  Debian Policy, information on the maintainer, and any other
          information that said maintainer wishes to include.
          <ulink type="block" url="https://tracker.debian.org/" /></para>

	  <para>An e-mail subscription service completes this web
	  interface. It automatically sends the following selected
	  information to the list: bugs and related discussions,
	  availability of a new version on the Debian servers, new
	  translations available for proofreading, etc.</para>

	  <para>Advanced users can, thus, follow all of this information
	  closely and even contribute to the project, once they've got a
	  good enough understanding of how it works.</para>

	  <para>Another web interface, known as <emphasis>Debian
	  Developer's Packages Overview</emphasis> (DDPO), provides each
	  developer a synopsis of the status of all Debian packages placed
          under their charge.
          <ulink type="block" url="https://qa.debian.org/developer.php" /></para>

	  <para>These two websites are tools developed and managed by
          the group responsible for quality assurance within Debian (known as
          Debian QA).</para>
          <indexterm><primary>assurance</primary><secondary>quality assurance</secondary></indexterm>
          <indexterm><primary>quality</primary><secondary>assurance</secondary></indexterm>
        </sidebar>

	<para>The <emphasis>listmasters</emphasis> administer the e-mail
	server that manages the mailing lists. They create new lists,
	handle bounces (delivery failure notices), and maintain spam
	filters (unsolicited bulk e-mail).</para>
        <indexterm><primary>listmaster</primary></indexterm>

        <sidebar>
          <title><emphasis>CULTURE</emphasis> Traffic on the mailing lists: some figures</title>
          <indexterm><primary>lists</primary><secondary>mailing lists</secondary></indexterm>
	  <indexterm><primary>mailing lists</primary></indexterm>

          
	  <para>The mailing lists are, without a doubt, the best testimony to
	  activity on a project, since they keep track of everything that
	  happens. Some statistics (from 2015) regarding our mailing lists
	  speak for themselves: Debian hosts more than 240 lists, totaling
	  212,000 individual subscriptions. The 27,000 messages sent each
	  month generate 476,000 e-mails daily.</para>
        </sidebar>

	<para>Each specific service has its own administration team,
	generally composed of volunteers who have installed it (and also
	frequently programmed the corresponding tools themselves). This is
	the case of the bug tracking system (BTS), the package tracker,
	<literal>alioth.debian.org</literal> (FusionForge
	server, see sidebar <xref linkend="sidebar.fusionforge" />), the services available on
	<literal>qa.debian.org</literal>,
	<literal>lintian.debian.org</literal>,
	<literal>buildd.debian.org</literal>,
	<literal>cdimage.debian.org</literal>, etc.</para>
      </section>
      <section>
        <title>Development Teams, Transversal Teams</title>

	<para>Unlike administrative teams, the development teams are rather
	widely open, even to outside contributors. Even if Debian does not
	have a vocation to create software, the project needs some specific
	programs to meet its goals. Of course, developed under a free
	software license, these tools make use of methods proven elsewhere
	in the free software world.</para>

        <sidebar id="cadre-cvs">
          <title><emphasis>CULTURE</emphasis> Git</title>
          <indexterm><primary>Git</primary></indexterm>
          <indexterm><primary>configuration management</primary></indexterm>

	  <para>Git is a tool for
	  collaborative work on multiple files, while maintaining a history
	  of modifications. The files in question are generally text files,
	  such as a program's source code. If several people work together
	  on the same file, <command>git</command> can only merge the
	  alterations made if they were made to different portions of the
	  file. Otherwise, these “conflicts” must be resolved by hand.
	  </para>

          <para>Git is a distributed system where each user has a repository
          with the complete history of changes. Central repositories are
          used to download the project (<command>git clone</command>)
          and to share the work done with others (<command>git push</command>).
          The repository can contain multiple versions of the files
          but only one version can be worked on at a given time: it's
          called the working copy (it can be changed to point to another
          version with <command>git checkout</command>).
          Git can show you the modifications made to the working copy
          (<command>git diff</command>), can store them in the repository
          by creating a new entry in the versions history
          (<command>git commit</command>), can update the working copy
          to include modifications made in parallel by other users
          (<command>git pull</command>), and can record a particular
          configuration in the history in order to be able to easily
          extract it later on (<command>git tag</command>).
          </para>

	  <para>Git makes it easy to handle
	  multiple concurrent versions of a project in development without
	  them interfering with each other. These versions are called
	  <emphasis>branches</emphasis>. This metaphor of a tree is fairly
	  accurate, since a program is initially developed on a common
	  trunk. When a milestone has been reached (such as version 1.0),
	  development continues on two branches: the development branch
	  prepares the next major release, and the maintenance branch
	  manages updates and fixes for version 1.0.</para>

          <indexterm><primary>Version Control System (VCS)</primary></indexterm>
          <para>Git is, nowadays, the most popular version control system but
          it is not the only one. Historically, CVS (Concurrent Versions System)
          was the first widely used tool but its numerous limitations
          contributed to the appearance of more modern free alternatives.
          These include, especially, <command>subversion</command>
	  (<command>svn</command>), <command>git</command>,
	  <command>bazaar</command> (<command>bzr</command>), and
          <command>mercurial</command> (<command>hg</command>).
          <ulink type="block" url="http://www.nongnu.org/cvs/" />
          <ulink type="block" url="http://subversion.apache.org/" />
          <ulink type="block" url="http://git-scm.com/" />
          <ulink type="block" url="http://bazaar.canonical.com/" />
          <ulink type="block" url="http://mercurial.selenic.com/" /></para>
          <indexterm><primary><command>subversion</command></primary></indexterm>
          <indexterm><primary><command>svn</command></primary></indexterm>
          <indexterm><primary><command>git</command></primary></indexterm>
          <indexterm><primary><command>bzr</command></primary></indexterm>
          <indexterm><primary><command>hg</command></primary></indexterm>
          <indexterm><primary><command>mercurial</command></primary></indexterm>
          <indexterm><primary><command>cvs</command></primary></indexterm>
        </sidebar>

	<para>Debian has developed little software of its own, but certain
	programs have assumed a starring role, and their fame has spread
	beyond the scope of the project. Good examples are
	<command>dpkg</command>, the Debian package management program (it
	is, in fact, an abbreviation of Debian PacKaGe, and generally
	pronounced as “dee-package”), and
	<command>apt</command>, a tool to automatically install any Debian
	package, and its dependencies, guaranteeing the consistency of the
	system after an upgrade (its name is an acronym for Advanced Package
	Tool). Their teams are, however, much smaller, since a rather high
	level of programming skill is required to gain an overall understanding of
	the operations of these types of programs.</para>

	<para>The most important team is probably that for the Debian
	installation program, <command>debian-installer</command>, which
	has accomplished a work of momentous proportions since its
	conception in 2001. Numerous contributors were needed, since it is
	difficult to write a single program able to install Debian on a
	dozen different architectures. Each one has its own mechanism for
	booting and its own bootloader. All of this work is coordinated on
	the <email>debian-boot@lists.debian.org</email> mailing list, under
        the direction of Cyril Brulebois.
        <ulink type="block" url="http://www.debian.org/devel/debian-installer/" />
        <ulink type="block" url="http://joeyh.name/blog/entry/d-i_retrospective/" /></para>

	<para>The (very small) <command>debian-cd</command> program team
	has an even more modest objective. Many “small” contributors
	are responsible for their architecture, since the main developer
	can not know all the subtleties, nor the exact way to start the
	installer from the CD-ROM.</para>

	<para>Many teams must collaborate with others in the activity of
	packaging: <email>debian-qa@lists.debian.org</email> tries, for
	example, to ensure quality at all levels of the Debian project. The
	<email>debian-policy@lists.debian.org</email> list develops Debian
	Policy according to proposals from all over the place. The teams in
	charge of each architecture
	(<email>debian-<replaceable>architecture</replaceable>@lists.debian.org</email>)
	compile all packages, adapting them to their particular
	architecture, if needed.</para>

	<para>Other teams manage the most important packages in order to
	ensure maintenance without placing too heavy a load on a single
	pair of shoulders; this is the case with the C library and
	<email>debian-glibc@lists.debian.org</email>, the C compiler on the
	<email>debian-gcc@lists.debian.org</email> list, or Xorg on the
	<email>debian-x@lists.debian.org</email> (this group is also known
	as the X Strike Force).</para>
      </section>
    </section>
  </section>

  <section id="sect.follow-debian-news">
    <title>Follow Debian News</title>

    <para>As already mentioned, the Debian project evolves in a very
    distributed, very organic way.  As a consequence, it may be
    difficult at times to stay in touch with what happens within the
    project without being overwhelmed with a never-ending flood of
    notifications.</para>

    <para>If you only want the most important news about Debian, you
    probably should subscribe to the
    <email>debian-announce@lists.debian.org</email> list.  This is a
    very low-traffic list (around a dozen messages a year), and only
    gives the most important announcements, such as the availability
    of a new stable release, the election of a new Project Leader, or
    the yearly Debian Conference.
    <ulink type="block" url="https://lists.debian.org/debian-announce/" />
    </para>

    <indexterm><primary>Debian Project News</primary></indexterm>
    <para>More general (and regular) news about Debian are sent to the
    <email>debian-news@lists.debian.org</email> list.  The traffic on
    this list is quite reasonable too (usually around a handful of
    messages a month), and it includes the semi-regular “Debian
    Project News”, which is a compilation of various small bits of
    information about what happens in the project.  Since all Debian
    developers can contribute these news when they think they have
    something noteworthy to make public, the DPN gives a valuable
    insight while staying rather focused on the project as a whole.
    <ulink type="block" url="https://lists.debian.org/debian-news/" />
    </para>

    <sidebar>
      <title><emphasis>COMMUNITY</emphasis> The publicity and press teams</title>
      <para>Debian's official communication channels are managed by volunteers
      of the Debian publicity team and of the press team. Members of the latter
      are delegates of the Debian Project Leader and handle official press releases.
      The publicity team is much less formal and welcomes contributions from
      everybody, be it to write articles for “Debian Project News” or to animate
      the <emphasis>@debian</emphasis> Identi.ca microblogging account.
      <ulink type="block" url="http://wiki.debian.org/Teams/Press" />
      <ulink type="block" url="http://wiki.debian.org/Teams/Publicity" />
      </para>
    </sidebar>

    <para>For more information about the evolution of Debian and
    what is happening at some point in time in various teams,
    there's also the
    <email>debian-devel-announce@lists.debian.org</email> list.  As
    its name implies, the announcements it carries will probably be
    more interesting to developers, but it also allows interested
    parties to keep an eye on what happens in more concrete terms
    than just when a stable version is released.  While
    <email>debian-announce@lists.debian.org</email> gives news about the user-visible
    results, <email>debian-devel-announce@lists.debian.org</email> gives news about
    how these results are produced.  As a side note, “d-d-a” (as it
    is sometimes referred to) is the only list that
    Debian developers must be subscribed to.
    <ulink type="block" url="https://lists.debian.org/debian-devel-announce/" />
    </para>

    <indexterm><primary>Planet Debian</primary></indexterm>
    <para>A more informal source of information can also be found on
    Planet Debian, which aggregates articles posted by Debian
    contributors on their respective blogs.  While the contents do not
    deal exclusively with Debian development, they provide a view into
    what is happening in the community and what its members are up to.
    <ulink type="block" url="http://planet.debian.org/" />
    </para>

    <indexterm><primary>microblog</primary></indexterm>
    <indexterm><primary>Identi.ca</primary></indexterm>
    <indexterm><primary>Twitter</primary></indexterm>
    <indexterm><primary>Facebook</primary></indexterm>
    <indexterm><primary>Google+</primary></indexterm>
    <indexterm><primary>social networks</primary></indexterm>
    <indexterm><primary>network</primary><secondary>social networks</secondary></indexterm>
    <para>The project is also well represented on social networks.
    While Debian only has an official presence on platforms
    built with free software (like the Identi.ca microblogging
    platform, powered by <emphasis>pump.io</emphasis>),
    there are many Debian contributors who are
    animating Twitter accounts, Facebook pages, Google+ pages,
    and more.
    <ulink type="block" url="https://identi.ca/debian" />
    <ulink type="block" url="https://twitter.com/debian" />
    <ulink type="block" url="https://www.facebook.com/debian" />
    <ulink type="block" url="https://plus.google.com/111711190057359692089" />
    </para>
  </section>

  <section id="sect.role-of-distributions">
    <title>The Role of Distributions</title>
    <indexterm><primary>Linux distribution</primary><secondary>role</secondary></indexterm>

    <para>A GNU/Linux distribution has two main objectives: install a free
    operating system on a computer (either with or without an existing
    system or systems), and provide a range of software covering all of the
    users' needs.</para>
    <section>
      <title>The Installer: <command>debian-installer</command></title>

      <para>The <command>debian-installer</command>, designed to be
      extremely modular in order to be as generic as possible, targets the
      first objective. It covers a broad range of installation situations and in
      general, greatly facilitates the creation of a derivative installer
      corresponding to a particular case.</para>

      <para>This modularity, which also makes it very complex, may be
      daunting for the developers discovering this tool; but whether
      used in graphical or text mode, the user's experience is still
      similar. Great efforts have been made to reduce the number of
      questions asked at installation time, in particular thanks to
      the inclusion of automatic hardware detection software.</para>

      <para>It is interesting to note that distributions derived from
      Debian differ greatly on this aspect, and provide a more limited
      installer (often confined to the i386 or amd64 architectures), but more
      user-friendly for the uninitiated. On the other hand, they usually
      refrain from straying too far from package contents in order to
      benefit as much as possible from the vast range of software offered
      without causing compatibility problems.</para>
    </section>
    <section>
      <title>The Software Library</title>

      
      <para>Quantitatively, Debian is undeniably the leader in this
      respect, with over 21,000 source packages. Qualitatively,
      Debian’s policy and long testing period prior to releasing a new
      stable version justify its reputation for stability and
      consistency. As far as availability, everything is available
      on-line through many mirrors worldwide, with updates pushed out
      every six hours.</para>

      <para>Many retailers sell CD-ROMs on the Internet at a very low price
      (often at cost), the “images” for which are freely available for
      download. There is only one drawback: the low frequency of releases
      of new stable versions (their development sometimes takes more than
      two years), which delays the inclusion of new software.</para>

      <para>Most new free software programs quickly find their way into the
      development version which allows them to be installed. If this
      requires too many updates due to their dependencies, the program can
      also be recompiled for the stable version of Debian (see <xref linkend="debian-packaging" /> for more information on this
      topic).</para>
    </section>
  </section>
  <section id="sect.release-lifecycle">
    <title>Lifecycle of a Release</title>
    <indexterm><primary>lifecycle</primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Unstable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Testing</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Stable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Experimental</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Oldstable</emphasis></primary></indexterm>
    <indexterm><primary><emphasis role="distribution">Oldoldstable</emphasis></primary></indexterm>

    <para>The project will simultaneously have three to six different
    versions of each program, named <emphasis role="distribution">Experimental</emphasis>, <emphasis role="distribution">Unstable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Oldstable</emphasis>, and even <emphasis role="distribution">Oldoldstable</emphasis>. Each one corresponds to a
    different phase in development. For a good understanding, let us take a
    look at a program's journey, from its initial packaging to inclusion in
    a stable version of Debian.</para>

    <sidebar>
      <title><emphasis>VOCABULARY</emphasis> Release</title>
      <indexterm><primary>release</primary></indexterm>

      <para>The term “release”, in the Debian project, indicates a
      particular version of a distribution (e.g., “unstable release”
      means “the unstable version”). It also indicates the public
      announcement of the launch of any new version (stable).</para>
    </sidebar>
    <section>
      <title>The <emphasis role="distribution">Experimental</emphasis> Status</title>

      <para>First let us take a look at the particular case of the
      <emphasis role="distribution">Experimental</emphasis> distribution:
      this is a group of Debian packages corresponding to the software
      currently in development, and not necessarily completed, explaining
      its name. Not everything passes through this step; some developers
      add packages here in order to get feedback from more experienced (or
      braver) users.</para>

      <para>Otherwise, this distribution frequently houses important
      modifications to base packages, whose integration into <emphasis role="distribution">Unstable</emphasis> with serious bugs would
      have critical repercussions. It is, thus, a completely isolated
      distribution, its packages never migrate to another version
      (except by direct, express intervention of the maintainer or the
      ftpmasters).  It is also not self-contained: only a subset of
      the existing packages are present in <emphasis role="distribution">Experimental</emphasis>, and it generally
      does not include the base system.  This distribution is
      therefore mostly useful in combination with another,
      self-contained, distribution such as <emphasis role="distribution">Unstable</emphasis>.</para>
    </section>
    <section>
      <title>The <emphasis role="distribution">Unstable</emphasis> Status</title>

      <para>Let us turn back to the case of a typical package. The
      maintainer creates an initial package, which they compile for
      the <emphasis role="distribution">Unstable</emphasis> version
      and place on the <literal>ftp-master.debian.org</literal>
      server. This first event involves inspection and validation from
      the ftpmasters. The software is then available in the <emphasis role="distribution">Unstable</emphasis> distribution, which is
      the “cutting edge” distribution chosen by users who are more
      concerned with having up to date packages than worried about
      serious bugs. They discover the program and then test it.</para>

      <para>If they encounter bugs, they report them to the package's
      maintainer. The maintainer then regularly prepares corrected
      versions, which they upload to the server.</para>

      <para>Every newly updated package is updated on all Debian mirrors
      around the world within six hours. The users then test the
      corrections and search for other problems resulting from the
      modifications. Several updates may then occur rapidly. During these
      times, autobuilder robots come into action. Most frequently, the
      maintainer has only one traditional PC and has compiled their package
      on the amd64 (or i386) architecture; the autobuilders take over and
      automatically compile versions for all the other architectures. Some
      compilations may fail; the maintainer will then receive a bug report
      indicating the problem, which is then to be corrected in the next
      versions. When the bug is discovered by a specialist for the
      architecture in question, the bug report may come with a patch ready
      to use.</para>
      <indexterm><primary>autobuilder</primary></indexterm>

      <figure>
        <title>Compilation of a package by the autobuilders</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/autobuilder.png" scalefit="1" width="75%" />
          </imageobject>
        </mediaobject>
      </figure>

      <sidebar>
        <title><emphasis>QUICK LOOK</emphasis> <command>buildd</command>, the Debian package recompiler</title>
        <indexterm><primary><command>buildd</command></primary></indexterm>
        <indexterm><primary>build daemon</primary></indexterm>

	<para><emphasis>buildd</emphasis> is the abbreviation of “build
	daemon”. This program automatically recompiles new versions of
	Debian packages on the architectures on which it is hosted
	(cross-compilation is avoided as much as possible).</para>

	<para>Thus, to produce binaries for the <literal>arm64</literal>
	architecture, the project has <literal>arm64</literal> machines
	available. The <emphasis>buildd</emphasis> program
	runs on them continuously and creates
	binary packages for <literal>arm64</literal> from source packages
	sent by Debian developers.</para>

	<para>This software is used on all the computers serving as
	autobuilders for Debian. By extension, the term
	<emphasis>buildd</emphasis> frequently is used to refer to these
	machines, which are generally reserved solely for this
	purpose.</para>
      </sidebar>
    </section>
    <section>
      <title>Migration to <emphasis role="distribution">Testing</emphasis></title>

      <para>A bit later, the package will have matured; compiled on all the
      architectures, it will not have undergone recent modifications. It is
      then a candidate for inclusion in the <emphasis role="distribution">Testing</emphasis> distribution — a group of
      <emphasis role="distribution">Unstable</emphasis> packages chosen
      according to some quantifiable criteria. Every day a program
      automatically selects the packages to include in <emphasis role="distribution">Testing</emphasis>, according to elements
      guaranteeing a certain level of quality:</para>
      <orderedlist>
        <listitem>
	  <para>lack of critical bugs, or, at least fewer than the version
	  currently included in <emphasis role="distribution">Testing</emphasis>;</para>
        </listitem>
        <listitem>
	  <para>at least 10 days spent in <emphasis role="distribution">Unstable</emphasis>, which is sufficient time
	  to find and report any serious problems;</para>
        </listitem>
        <listitem>
	  <para>successful compilation on all officially supported
	  architectures;</para>
        </listitem>
        <listitem>
	  <para>dependencies that can be satisfied in <emphasis role="distribution">Testing</emphasis>, or that can at least be
	  moved there together with the package in question.</para>
        </listitem>
      </orderedlist>

      <para>This system is clearly not infallible; critical bugs are
      regularly found in packages included in <emphasis role="distribution">Testing</emphasis>. Still, it is generally
      effective, and <emphasis role="distribution">Testing</emphasis> poses
      far fewer problems than <emphasis role="distribution">Unstable</emphasis>, being for many, a good
      compromise between stability and novelty.</para>

      <sidebar>
        <title><emphasis>NOTE</emphasis> Limitations of <emphasis role="distribution">Testing</emphasis></title>

	<para>While very interesting in principle, <emphasis role="distribution">Testing</emphasis> does have some practical
	problems: the tangle of cross-dependencies between packages is such
	that a package can rarely move there completely on its own. With
	packages all depending upon each other, it is sometimes necessary to migrate a
	large number of packages simultaneously, which is impossible when some are
	uploading updates regularly. On the other hand, the script
	identifying the families of related packages works hard to create
	them (this would be an NP-complete problem, for which, fortunately,
	we know some good heuristics). This is why we can manually interact
	with and guide this script by suggesting groups of packages, or
	imposing the inclusion of certain packages in a group, even if this
	temporarily breaks some dependencies. This functionality is
	accessible to the Release Managers and their assistants.</para>

	<para>Recall that an NP-complete problem is of an exponential
	algorithmic complexity according to the size of the data, here
	being the length of the code (the number of figures) and the
	elements involved. The only way to resolve it is frequently to
	examine all possible configurations, which could require enormous
	means. A heuristic is an approximate, but satisfying,
	solution.</para>
      </sidebar>

      <sidebar>
        <title><emphasis>COMMUNITY</emphasis> The Release Manager</title>
        <indexterm><primary>Release Manager</primary></indexterm>
        <indexterm><primary>Stable Release Manager</primary></indexterm>

	<para>Release Manager is an important title, associated with heavy
	responsibilities. The bearer of this title must, in effect, manage
	the release of a new, stable version of Debian, and define the
	process for development of <emphasis role="distribution">Testing</emphasis> until it meets the quality
	criteria for <emphasis role="distribution">Stable</emphasis>. They
	also define a tentative schedule (not always followed).</para>

	<para>We also have Stable Release Managers, often abbreviated SRM,
	who manage and select updates for the current stable version of
	Debian. They systematically include security patches and examine
	all other proposals for inclusion, on a case by case basis, sent by
	Debian developers eager to update their package in the stable
	version.</para>
      </sidebar>
    </section>
    <section>
      <title>The Promotion from <emphasis role="distribution">Testing</emphasis> to <emphasis role="distribution">Stable</emphasis></title>

      <para>Let us suppose that our package is now included in <emphasis role="distribution">Testing</emphasis>. As long as it has room for
      improvement, its maintainer must continue to improve it and
      restart the process from <emphasis role="distribution">Unstable</emphasis> (but its later inclusion in
      <emphasis role="distribution">Testing</emphasis> is generally faster:
      unless it changed significantly, all of its dependencies are
      already available). When it reaches perfection, the maintainer has
      completed their work. The next step is the inclusion in the <emphasis role="distribution">Stable</emphasis> distribution, which is, in
      reality, a simple copy of <emphasis role="distribution">Testing</emphasis> at a moment chosen by the
      Release Manager. Ideally this decision is made when the installer is
      ready, and when no program in <emphasis role="distribution">Testing</emphasis> has any known critical
      bugs.</para>

      <para>Since this moment never truly arrives, in practice, Debian must
      compromise: remove packages whose maintainer has failed to correct
      bugs on time, or agree to release a distribution with some bugs in
      the thousands of programs. The Release Manager will have previously
      announced a freeze period, during which each update to <emphasis role="distribution">Testing</emphasis> must be approved. The goal
      here is to prevent any new version (and its new bugs), and to only
      approve updates fixing bugs.</para>

      <figure>
        <title>A package's path through the various Debian versions</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/release-cycle.png" width="60%" />
          </imageobject>
        </mediaobject>
      </figure>

      <sidebar>
        <title><emphasis>VOCABULARY</emphasis> Freeze: the home straight</title>
        <indexterm><primary>freeze</primary></indexterm>

	<para>During the freeze period, development of the <emphasis role="distribution">Testing</emphasis> distribution is blocked; no
	more automatic updates are allowed. Only the Release Managers are
	then authorized to change packages, according to their own
	criteria. The purpose is to prevent the appearance of new bugs by
	introducing new versions; only thoroughly examined updates are
	authorized when they correct significant bugs.</para>
      </sidebar>

      <para>After the release of a new stable version, the Stable Release
      Manager manages all further development (called “revisions”, ex:
      7.1, 7.2, 7.3 for version 7). These updates systematically
      include all security patches. They will also include the most
      important corrections (the maintainer of a package must prove the
      gravity of the problem that they wish to correct in order to have
      their updates included).</para>

      <para>At the end of the journey, our hypothetical package is now included in
      the stable distribution. This journey, not without its difficulties,
      explains the significant delays separating the Debian Stable
      releases. This contributes, over all, to its reputation for quality.
      Furthermore, the majority of users are satisfied using one of the
      three distributions simultaneously available. The system
      administrators, concerned above all about the stability of their
      servers, don't need the latest and greatest version of GNOME; they can choose Debian
      <emphasis role="distribution">Stable</emphasis>, and they will be
      satisfied. End users, more interested in the latest versions of GNOME
      or KDE than in rock-solid stability, will find Debian <emphasis role="distribution">Testing</emphasis> to be a good compromise
      between a lack of serious problems and relatively up to date
      software. Finally, developers and more experienced users may blaze
      the trail, testing all the latest developments in Debian <emphasis role="distribution">Unstable</emphasis> right out of the gate, at the
      risk of suffering the headaches and bugs inherent in any new version
      of a program. To each their own Debian!</para>

      <sidebar>
        <title><emphasis>CULTURE</emphasis> GNOME and KDE, graphical desktop environments</title>

	<para>GNOME (GNU Network Object Model Environment) and KDE (K
	Desktop Environment) are the two most popular graphical desktop
	environments in the free software world. A desktop environment is a
	set of programs grouped together to allow easy management of the
	most common operations through a graphical interface. They
	generally include a file manager, office suite, web browser, e-mail
	program, multimedia accessories, etc. The most visible difference
	resides in the choice of the graphical library used: GNOME has
	chosen GTK+ (free software licensed under the LGPL), and KDE has
	selected Qt (a company-backed project, available nowadays both
	under the GPL and a commercial license).
	<ulink type="block" url="http://www.gnome.org/" />
	<ulink type="block" url="http://www.kde.org/" /></para>
      </sidebar>

      <figure>
        <title>Chronological path of a program packaged by Debian</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/package-lifecycle.png" scalefit="1" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
    
    <section>
      <title>The <emphasis role="distribution">Oldstable</emphasis> and <emphasis role="distribution">Oldoldstable</emphasis> Status</title>
      <indexterm><primary>Long Term Support (LTS)</primary></indexterm>
      <indexterm><primary>support</primary><secondary>Long Term Support (LTS)</secondary></indexterm>
      <para>Each <emphasis role="distribution">Stable</emphasis> release
      has an expected lifetime of about 5 years and given that releases tend
      to happen every 2 years, there can be up to 3 supported releases
      at a given point of time. When a new stable release happens, the former
      release becomes <emphasis role="distribution">Oldstable</emphasis>
      and the one even before becomes <emphasis role="distribution">Oldoldstable</emphasis>.
      </para>
      <para>This Long Term Support (LTS) of Debian releases is a recent
      initiative: individual contributors and companies joined forces to create
      the Debian LTS team. Older releases which are no longer supported by
      the Debian security team fall under the responsibility of this new team.
      </para>
      <para>
      The Debian security team handles security support in the current
      <emphasis role="distribution">Stable</emphasis>
      release and also in the <emphasis role="distribution">Oldstable</emphasis> release (but only for as long
      as is needed to ensure one year of overlap with the current stable release).
      This amounts roughly to three years of support for each release. The
      Debian LTS team handles the last (two) years of security support so that
      each releases benefits from at least 5 years of support and so that
      users can upgrade from version N to N+2.
      <ulink type="block" url="https://wiki.debian.org/LTS" />
      </para>
      <sidebar>
        <title><emphasis>COMMUNITY</emphasis> Companies sponsoring the LTS effort</title>
        <para>Long Term Support is a difficult commitment to make in Debian because
        volunteers tend to avoid the work that is not very fun. And providing security
        support for 5 years old software is — for many contributors — a
        lot less fun than packaging new upstream versions or developing new features.
        </para>
        <para>To bring this project to life, the project counted on the fact that
        long term support was particularly relevant for companies and that they would
        be willing to mutualize the cost of this security support.
        </para>
        <para>The project started in june 2014: some organizations
        allowed their employees to contribute part-time to Debian LTS
        while others preferred to sponsor the project with money so that
        Debian contributors get paid to do the work that they would not do
        for free. Most Debian contributors willing to be paid to work on
        LTS got together to create a clear sponsorship offer managed by
        Freexian (Raphaël Hertzog's company):
        <ulink type="block" url="http://www.freexian.com/services/debian-lts.html" />
        </para>
        <para>The Debian LTS team is not yet able to properly support all packages in
        Debian, hence the volunteers work on packages they care about
        while the paid contributors prioritize packages used by their
        sponsors.
        </para>
        <para>The project is always looking for new sponsors:
        what about your company? can you let an employee work part-time on
        long term support? can you allocate a small budget for security
        support?
        <ulink type="block" url="https://wiki.debian.org/LTS/Funding" />
        </para>
      </sidebar>
    </section>
  </section>
</chapter>
