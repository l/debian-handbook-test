<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="solving-problems" lang="zh-TW">
	<chapterinfo>
		 <keywordset>
			<keyword>文件</keyword>
			 <keyword>解決問題</keyword>
			 <keyword>記錄檔</keyword>
			 <keyword>README.Debian</keyword>
			 <keyword>手冊</keyword>
			 <keyword>資訊</keyword>

		</keywordset>

	</chapterinfo>
	 <title>解決問題與找到相關資訊</title>
	 <highlights> <para>
		對系統管理員來說，最重要的技能是能夠克服任何已知或未知的情況。本章將給一些方法 — 希望 — 能夠定位問題的原因，並解決它。
	</para>
	 </highlights> <section id="sect.documentation-sources">
		<title>文件來源</title>
		 <indexterm>
			<primary>文件</primary>
		</indexterm>
		 <para>
			還沒弄清楚問題所在前，需先知道該問題涉及的每個程式運作原理。為此，最好的方法是參考程式本身的文件；不過這些文件很多且分散各地，應先知道如何找到它們。
		</para>
		 <section id="sect.manual-pages">
			<title>手冊頁面</title>
			 <indexterm>
				<primary><command>man</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apropos</command></primary>
			</indexterm>
			 <indexterm>
				<primary>手冊頁面</primary>
			</indexterm>
			 <sidebar> <title><emphasis>文化</emphasis> <acronym>RTFM</acronym></title>
			 <indexterm>
				<primary><acronym>RTFM</acronym></primary>
			</indexterm>
			 <para>
				此英文縮寫源自不雅口頭襌，但也可以把它視為文雅的原文，"讀那些好手冊"。用來簡略回應新手提出的初階問題。對那些沒有閱讀文件就直接發問的人來說，雖然有點突兀卻精準表達厭煩的情緒。有的人認為這種回應總比沒有回應 (至少指出文件內的資訊有效) 好些，也比冗長而憤怒的回答明瞭。
			</para>
			 <para>
				任何情況下，有人以 “RTFM” 回應，其實並不如字面所示的冒犯之意。若覺得惱怒，正面的態度應是避免收到它。有時，手冊內並無該問題的答案，就應在提問時一併陳述。向論壇提問之前，應先把搜尋答案的過程列出。埃里克·雷蒙寫過一個很好的指引，提示避免犯錯並取得有用答案的步驟。<ulink type="block" url="http://catb.org/~esr/faqs/smart-questions.html" />
			</para>
			 </sidebar> <para>
				手冊頁面，通常文筆緊湊，包括大量必要的資訊。經由命令就能檢視其內容。鍵入 <command>man <replaceable>手冊頁面</replaceable></command> — 手冊頁面就用命令名稱取代。例如，想知道 <command>cp</command> 命令的選項時，從Shell提示符號後鍵入 <command>man cp</command> (見專欄 <xref linkend="sidebar.shell" />) 就可以了。
			</para>
			 <sidebar id="sidebar.shell"> <title><emphasis>基本</emphasis> shell，命令列解譯器</title>
			 <indexterm>
				<primary>命令列解譯器</primary>
			</indexterm>
			 <indexterm>
				<primary>shell</primary>
			</indexterm>
			 <para>
				命令列解譯器，也稱為 “shell”，由使用者鍵入或儲存在腳本內的執行命令程式，以提示符號 (通常以 <literal>$</literal> 結束表示供一般使用者之用，或 <literal>#</literal> 結束表示給管理者使用) 表示準備接受命令。<xref linkend="short-remedial-course" /> 說明 shell 的基本使用方法。
			</para>
			 <para>
				預設且最常用的 shell 是 <command>bash</command> (Bourne Again SHell)，其他的包括 <command>dash</command>、<command>csh</command>、<command>tcsh</command> 與 <command>zsh</command>。
			</para>
			 <para>
				上述 shell 在鍵入命令階段多半提供相關的服務，諸如補全命令或檔案名稱 (按 <keycap>tab</keycap> 鍵就能啟動該服務)，或叫出稍早的命序 (記錄管理)。
			</para>
			 </sidebar> <para>
				手冊頁面不僅提供命令列的文件，也可以組態檔案、系統呼叫、C程式庫函數等。有時稱為抵觸。例如，shell 的 <command>read</command> 命令也有同名的 <function>read</function> 系統呼叫。所以，手冊頁面分為若干區塊：
			</para>
			 <orderedlist>
				<listitem>
					<para>
						可從命令列執行的命令；
					</para>

				</listitem>
				 <listitem>
					<para>
						系統呼叫 (核心提供的函數)；
					</para>

				</listitem>
				 <listitem>
					<para>
						程式庫函數 (由系統程式庫提供)；
					</para>

				</listitem>
				 <listitem>
					<para>
						設備 (在 Unix之類系統下，以檔案形式存在，通常置於 <filename>/dev/</filename> 資料夾)；
					</para>

				</listitem>
				 <listitem>
					<para>
						組態檔 (格式與約定)；
					</para>

				</listitem>
				 <listitem>
					<para>
						遊戲
					</para>

				</listitem>
				 <listitem>
					<para>
						巨集與標準集；
					</para>

				</listitem>
				 <listitem>
					<para>
						系統管理命令；
					</para>

				</listitem>
				 <listitem>
					<para>
						核心常規。
					</para>

				</listitem>

			</orderedlist>
			 <para>
				可以指定查看手冊頁面的特定區塊：檢視 <function>read</function> 系統呼叫的文件時，應鍵入 <command>man 2 read</command>。未指定區塊時，將顯示第一個找到同名的手冊頁面。因此，<command>man shadow</command> 送回 <citerefentry><refentrytitle>shadow</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> 因為在區塊 1 至 4 都沒有 <foreignphrase>shadow</foreignphrase> 的手冊頁面。
			</para>
			 <sidebar> <title><emphasis>秘訣</emphasis> <command>whatis</command></title>
			 <indexterm>
				<primary><command>whatis</command></primary>
			</indexterm>
			 <para>
				若不想查看所有的手冊頁面，祗想看看簡短說明以確認就是搜尋的資料，鍵入 <command>whatis <replaceable>命令</replaceable></command>。
			</para>
			 
<screen>
<computeroutput>$ </computeroutput><userinput>whatis scp</userinput>
<computeroutput>scp (1)     - secure copy (remote file copy program)</computeroutput></screen>
			 <para>
				這個簡短說明放在所有手冊頁面開始的 <emphasis>NAME</emphasis> 區塊。
			</para>
			 </sidebar> <para>
				當然，不知道命令的名稱時，手冊就沒什麼用。此時需要 <command>apropos</command> 命令，協助搜尋手冊頁面，或其簡短說明。每個手冊頁面都有一行簡要的摘要。<command>apropos</command> 送回手冊頁面鍵詞清單。選擇適當的鍵詞，就能找到命令的名稱。
			</para>
			 <example>
				<title>找尋 <command>cp</command> 使用 <command>apropos</command></title>
				 
<screen>
<computeroutput>$ </computeroutput><userinput>apropos "copy file"</userinput>
<computeroutput>cp (1)               - copy files and directories
cpio (1)             - copy files to and from archives
gvfs-copy (1)        - Copy files
gvfs-move (1)        - Copy files
hcopy (1)            - copy files from or to an HFS volume
install (1)          - copy files and set attributes
ntfscp (8)           - copy file to an NTFS volume.
</computeroutput></screen>

			</example>
			 <sidebar> <title><emphasis>秘訣</emphasis> 瀏覽連結</title>
			 <para>
				很多手冊頁面有 “參見” 區塊，通常在最後面。參見至類似命令、或外部文件的其他手冊頁面。若找不到資訊，從這個區塊就可以找到相關的文件。
			</para>
			 </sidebar> <para>
				The <command>man</command> command is not the only means of consulting the manual pages, since <command>khelpcenter</command> and <command>konqueror</command> (by KDE) and <command>yelp</command> (under GNOME) programs also offer this possibility. There is also a web interface, provided by the <command>man2html</command> package, which allows you to view manual pages in a web browser. On a computer where this package is installed, use this URL: <ulink type="block" url="http://localhost/cgi-bin/man/man2html" />
			</para>
			 <para>
				此工具需要瀏覽器。所以必須先安裝此套件於伺服器內：內網內的所有使用者都可以使用此服務 (包括非 Linux 機器)，且不需在每個工作站都設定 HTTP 伺服器。若伺服器允許其他網路近用，需設定該等服務祗限內網使用者。
			</para>
			 <indexterm>
				<primary><command>man2html</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>DEBIAN 政策</emphasis> 必備手冊頁面</title>
			 <para>
				Debian 要求每個程式都有一個手冊頁面。若上游作者沒有提供，Debian 套件維護者會寫一個簡短的頁面指示讀者至原始的文件。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title><emphasis>info</emphasis> 文件</title>
			 <indexterm>
				<primary><emphasis>info</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary>GNU</primary>
				<secondary>Info</secondary>
			</indexterm>
			 <para>
				GNU 計畫以 <emphasis>info</emphasis> 格式撰寫大部份程式的手冊；其他的程式手冊也採用 <emphasis>info</emphasis> 文件格式。此格式優點甚多，但檢視此文件的程式 (稱為 <command>info</command>) 有點複雜。建議使用 <command>pinfo</command> 取代之 (來自 <emphasis role="pkg">pinfo</emphasis> 套件)。
			</para>
			 <indexterm>
				<primary><command>pinfo</command></primary>
			</indexterm>
			 <para>
				<emphasis>info</emphasis> 文件有層級結構，無參數的 <command>pinfo</command> 檢視，顯示第一層的節點。通常節點名稱等同於命令名稱。
			</para>
			 <para>
				以箭頭為引路很容易在 <command>pinfo</command> 的節點間瀏覽。另外，可以用圖形瀏覽器，更具親程力。還有 <command>konqueror</command> 與 <command>yelp</command> 可用；<command>info2www</command> 也提供網頁介面。<ulink type="block" url="http://localhost/cgi-bin/info2www" />
			</para>
			 <indexterm>
				<primary><command>info2www</command></primary>
			</indexterm>
			 <para>
				<emphasis>info</emphasis> 系統不支援翻譯功能，不同於 <command>man</command> 頁面系統可以翻譯。<emphasis>info</emphasis> 文件幾乎都是英文。雖然如此，當您詢問 <command>pinfo</command> 程式顯示不存在的 <emphasis>info</emphasis> 頁面時，實際上卻回到 <emphasis>man</emphasis> 的同名 (若存在的話) 頁面，那是可以翻譯的。
			</para>

		</section>
		 <section>
			<title>特定文件</title>
			 <indexterm>
				<primary>文件</primary>
			</indexterm>
			 <para>
				每個套件均含本身的文件。即使文件做得最差的程式仍有一個 <filename>README</filename> 檔案，內容是有趣或重要的資訊。此文件安裝在 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/</filename> 資料來內 (<replaceable>套件名稱</replaceable> 表示該套件的名稱)。若文件特大，可能沒辦法放在程式的主套件內，可能放在名為 <literal><replaceable>套件名稱</replaceable>-doc</literal> 的離線專屬套件。再從主套件建議讀取文件套件。
			</para>
			 <indexterm>
				<primary><filename>README.Debian</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>changelog.Debian.gz</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>NEWS.Debian.gz</filename></primary>
			</indexterm>
			 <para>
				<filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/</filename> 資料夾也包括由 Debian 提供的文件，指明在 Debian 中該套件特別或改進之處。<filename>README.Debian</filename> 檔案也指出為了相容於 Debian 政策所做的調整。<filename>changelog.Debian.gz</filename> 檔案允許使用者追蹤套件的修訂：足以瞭解兩個版本之間的變化，就不必做重複的工作。最後，偶而還有 <filename>NEWS.Debian.gz</filename> 檔案，列出管理者可能有興趣的重要改變。
			</para>

		</section>
		 <section>
			<title>網站</title>
			 <para>
				大部份的情況下，自由軟體從自己的網站散布軟體並聚集開發者與使用者。這些網站通常包括多種格式的相關資訊：官方文件、答客問、郵寄名單檔案等。可能遇到的問題多半已經回答了；答客問或郵寄名單檔案已有了解決方案。搜尋引擎也可担供快速大量有價值的回答 (限制搜尋的網址或次網址)。若得到太多資訊或不符合需要，可加入鍵詞 <userinput>debian</userinput> 以限制搜尋的方向。
			</para>
			 <sidebar> <title><emphasis>秘訣</emphasis> 從錯誤中找答案</title>
			 <para>
				送回錯得離譜的訊息時，可以重新搜尋原來的鍵詞 (置於兩個雙引號內，<literal>"</literal>，就不會搜尋個別的字，而是一個完整的句子)。大部份情況下，第一個送回的連結就是期望的答案。
			</para>
			 <para>
				其他的時候，還是可能出現極普通的錯誤，諸如 “沒有權限”。在此情況下，最好檢查權限 (檔案、使用者帳號或群組)。
			</para>
			 </sidebar> <para>
				若不知道軟體網站的網址，其實有很多方法可以找出來該網址。首先，尋找 <literal>Homepage</literal> 欄位，應該在該套件的元資料 (<command>apt-cache show <replaceable>套件名稱</replaceable></command>)。其次，套件說明裡可能含有程式的官方網站名稱。若沒有列出網址，搜尋 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/copyright</filename> 檔案。Debian 維護者多半在此指出程式原始碼的位置，多半就是要找的網址。到了這個階段還是沒有結果，則應查看自由軟體名錄，諸如自由軟體基金會維護的自由軟體名錄，或使用 Google、DuckDuckGo、Yahoo等搜尋引擎。<ulink type="block" url="https://directory.fsf.org/wiki/Main_Page" />
			</para>
			 <indexterm>
				<primary><filename>copyright</filename></primary>
			</indexterm>
			 <indexterm>
				<primary>自由軟體名錄</primary>
			</indexterm>
			 <para>
				也可查閱 Debian 共筆，每個人，即使是單純的訪問者，都可從其瀏覽器提出建議。這是由設計該計畫的發展者與分享知識的文件撰寫者共同合作的共筆。<ulink type="block" url="http://wiki.debian.org/" />
			</para>
			 <indexterm>
				<primary><emphasis>wiki.debian.org</emphasis></primary>
			</indexterm>

		</section>
		 <section>
			<title>教學文件 (<emphasis>HOWTO</emphasis>)</title>
			 <indexterm>
				<primary><emphasis>HOWTO</emphasis></primary>
			</indexterm>
			 <para>
				howto是以具體用語一步步地描述，“如何” 完成預期的目標。目標類型極多，但多半是技術性：如，設定 IP Masquerading、組態軟體 RAID、安裝 Samba 伺服器等。通常這些文件試圖解決應用該等技術所碰到的問題。
			</para>
			 <para>
				很多教學文年由 Linux 文件計畫 (LDP) 管理，其網站主持該等文件：<ulink type="block" url="http://www.tldp.org/" />
			</para>
			 <indexterm>
				<primary>LDP</primary>
			</indexterm>
			 <indexterm>
				<primary>Linux 文件計畫</primary>
			</indexterm>
			 <para>
				應以保留態度對待這些文件。它們通常都是好幾年前的文件；其資訊多已過時。尤其是翻譯的文件，因為原始文件多半有系統地更新或在出版後就更新。在志工環境與無束縛的情況工作，就是有這種樂趣…
			</para>

		</section>

	</section>
	 <section id="sect.common-procedures">
		<title>通常步驟</title>
		 <indexterm>
			<primary>標準步驟</primary>
		</indexterm>
		 <para>
			本區的目的是說明管理者常用到的作業秘訣。當然，這些步驟不會包括所有的個案，可以視為更困難案件的起點。
		</para>
		 <sidebar> <title><emphasis>發現</emphasis> 其他語系的文件</title>
		 <para>
			文件翻譯成其他語系後，通常置於對映的同名獨立套件內，跟在 <literal>-<replaceable>語系</replaceable></literal> (<replaceable>語系</replaceable> 應以兩個字母的 ISO 語系代碼取代) 之後。
		</para>
		 <para>
			例如，<emphasis>apt-howto-fr</emphasis> 套件就是 <emphasis>APT</emphasis> 套件 howto 的法文譯本。同樣的，<emphasis>quick-reference-fr</emphasis> 與 <emphasis>debian-reference-fr</emphasis> 套件是 Debian 參考手冊的法文譯本 (原文為 Osamu Aoki 撰寫的英文本)。
		</para>
		 </sidebar> <section>
			<title>組態程式</title>
			 <indexterm>
				<primary>組態</primary>
				<secondary>程式組態</secondary>
			</indexterm>
			 <indexterm>
				<primary>程式</primary>
				<secondary>組態</secondary>
			</indexterm>
			 <para>
				組態未知套件時，必須按照規定辦理。首先，閱讀套件管理者的文件。認真閱讀 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/README.Debian</filename> 學習簡化使用軟體的方式。有時，這是瞭解程式原始意圖、與 howto 文件差異的方法。有時，該等檔案詳述常見的錯誤以避免浪費時間在常見的問題上。
			</para>
			 <para>
				然後，應該看看軟體的官方文件 — 參照 <xref linkend="sect.documentation-sources" /> 辨識現有的文件來源。<command>dpkg -L <replaceable>套件名稱</replaceable></command> 命序列出該套件的檔案清單；也可辨識出可用的文件 (以及組態檔，位於 <filename>/etc/</filename>)。<command>dpkg -s <replaceable>套件名稱</replaceable></command> 列出套件的元資料並顯示建議的套件；從這裡，可找到協助組態軟體的文件及工具。
			</para>
			 <para>
				最後，組態檔本身以說明性評論列出各種組態設定的可能值。通常祗要選其中之一就可以。有些時候，組態檔位於 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/examples/</filename> 資料夾內。可做為客製化組態的基礎。
			</para>
			 <sidebar> <title><emphasis>DEBIAN 政策</emphasis> 範例的位置</title>
			 <indexterm>
				<primary>範例，位置</primary>
			</indexterm>
			 <para>
				所有的範例必須安裝在 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/examples/</filename> 資料夾內。可以是組態檔、原始碼 (使用程式庫的範例)、或在特定情況下管理者用來轉換資料的腳本 (如初始化資料庫)。適用於特定架構的範例，應安裝在 <filename>/usr/lib/<replaceable>套件名稱</replaceable>/examples/</filename> 資料夾且連結在 <filename>/usr/share/doc/<replaceable>套件名稱</replaceable>/examples/</filename> 資料夾內的檔案。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>監控後台進程的工作</title>
			 <para>
				瞭解後台進程有點複雜，因為它的工作不會直接與管理者互動。檢查實際工作中的後台進程，需要先測試它。例如，以 HTTP 請求，測試 Apache (網頁伺服器) 的後台進程。
			</para>
			 <para>
				為了記錄測試結果，每個後台進程都記錄其工作過程，以及碰到的錯誤，存在 “記錄檔案” 或 “系統記錄” 內。記錄檔案存在 <filename>/var/log/</filename> 資料夾或其下的次資料夾。參見此文件，找出每個後台進程記錄檔的正確名稱。注意：單次測試不足以涵蓋所有的情況；某些問題祗在特定環境才會發生。
			</para>
			 <sidebar> <title><emphasis>工具</emphasis> 此 <command>rsyslogd</command> 後台進程</title>
			 <indexterm>
				<primary><command>syslogd</command></primary>
			</indexterm>
			 <indexterm>
				<primary>記錄</primary>
				<secondary>檔案</secondary>
			</indexterm>
			 <indexterm>
				<primary>檔案</primary>
				<secondary>記錄</secondary>
			</indexterm>
			 <para>
				<command>rsyslogd</command> 很特別：搜尋其他程式送給的它記錄 (系統內部訊息)。每個記錄款目與次系統 (電子郵件、核心、認證等) 和優先次序相關；<command>rsyslogd</command> 處理這兩類資訊後決定下個步驟。記錄訊息可以儲存在多個檔案內，並送給管理終端畫面。詳情參見 <filename>/etc/rsyslog.conf</filename> 組態檔 (文件在手冊頁面的同名區塊)。
			</para>
			 <para>
				某些 C 函數專屬於送出記錄，可以簡化 <command>rsyslogd</command> 後台進程的工作。然而，某些後台進程管理自己的日誌檔案 (<command>samba</command> 就是這樣的例子，實現在 Linux 系統共享視窗軟體文件)。
			</para>
			 <para>
				使用 <command>systemd</command> 時，實際上由 <command>systemd</command> 搜集日誌再轉發給 <command>rsyslogd</command>。也可經由 <command>systemd</command> 的日誌系統，使用 <command>journalctl</command> (詳情見 <xref linkend="sect.systemd" />) 查詢。
			</para>
			 </sidebar> <sidebar> <title><emphasis>基本</emphasis> 後台進程</title>
			 <indexterm>
				<primary>後台進程</primary>
			</indexterm>
			 <para>
				後台進程係指未經使用者啟動就在後台運作的程式，在後台等待環境的條件出現才開始工作。伺服器有很多後台進程，這類程式的名稱多半以字母 “d” 結束 (<command>sshd</command>、<command>smtpd</command>、<command>httpd</command>等)。
			</para>
			 </sidebar> <para>
				做為預防措施，管理者應定期閱讀相關的伺服器日誌檔案內容。使用者報告對系統運作的不滿意前，就能診斷出問題所在。通常在問題持續發生數日後，使用者才會向管理者報告。很多特別的工具可以分析大量的日誌檔案內容。包括網頁伺服器 (諸如，Apache 的 <command>analog</command>、<command>awstats</command>、<command>webalizer</command>)、FTP 伺服器、快取伺服器、防火牆、電子郵件伺服器、DNS 伺服器、甚至列表機伺服器。某些工具以模組方式運行，可以分析多種類型的日誌檔。例如 <command>lire</command>。其他的工具，如 <command>logcheck</command> (詳情見 <xref linkend="security" />)，掃瞄日誌檔案搜尋需要處理的警告訊息。
			</para>
			 <indexterm>
				<primary><command>analog</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>awtats</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>webalizer</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>logcheck</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>lire</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>通過郵件列表尋求幫助</title>
			 <para>
				多方查找後仍無法找到問題的根源，還是尋求其他的方法，或許有經驗的人。<email>debian-user@lists.debian.org</email> 郵件列表就是幫您找人而生的。如同其他網路社群，需遵守若干規範。提出問題前，先確認您的問題不在最近的討論話題內或其他的官方文件內。<ulink type="block" url="https://wiki.debian.org/DebianMailingLists" /> <ulink type="block" url="https://lists.debian.org/debian-user/" />
			</para>
			 <indexterm>
				<primary><email>debian-user@lists.debian.org</email>
				</primary>
			</indexterm>
			 <indexterm>
				<primary>郵件列表</primary>
			</indexterm>
			 <sidebar> <title><emphasis>秘訣</emphasis> 閱讀網路的列表</title>
			 <para>
				活躍的郵件列表，如 <email>debian-user@lists.debian.org</email>，值得將其當成論壇 (或新聞群組) 閱讀。經由 Gmane.org 網站可以此方式閱讀 Debian 郵件列表。以上的郵件列表在：<ulink type="block" url="http://dir.gmane.org/gmane.linux.debian.user" />
			</para>
			 </sidebar> <sidebar> <title><emphasis>基本</emphasis> 網路禮儀</title>
			 <para>
				通常，郵件列表的所有信件都需遵專網路禮儀。禮儀指的是一組常識性的規則，從常見的禮貌到避免犯錯。<ulink type="block" url="http://tools.ietf.org/html/rfc1855" /> <indexterm><primary>Netiquette</primary></indexterm>
			</para>
			 <para>
				此外，Debian 計畫管理的通訊管道，需遵守 Debian 行為準則：<ulink type="block" url="https://www.debian.org/code_of_conduct" />
			</para>
			 </sidebar> <para>
				滿足前述的兩個條件，才可以考慮向郵件列表提出問題。儘可能包括下列相關的問題：不同的測試報告、參照的文件、解決問題的過程、相關的或可能涉及的套件等。檢查 Debian 錯誤追蹤系統 (Debian Bug Tracking System, BTS，詳情見專欄 <xref linkend="sidebar.bts" />) 尋找相似的問題，以及告知搜尋的結果，提供錯誤的連結。BTS 網址是：<ulink type="block" url="http://www.debian.org/Bugs/index.html" />
			</para>
			 <para>
				措辭愈得當與精準，愈有機會得到答案，至少，若干回應。若以私訊收到相關的資訊，不妨考慮把它整理公佈以嘉惠其他人。同時可以讓列表典藏它，被搜尋引擎找到，讓碰到同樣問題的人也能看到解決方案。
			</para>

		</section>
		 <section>
			<title>以錯誤報告棘手的問題</title>
			 <indexterm>
				<primary>報告錯誤</primary>
			</indexterm>
			 <indexterm>
				<primary>錯誤報告</primary>
			</indexterm>
			 <para>
				若所有的努力都沒有結果，很可能不是您的錯，祗是程式本身錯誤造成的問題。在此情況下，正確的程序是向 Debian 或直接向上游開發者報告錯誤。首先，應儘可能單純化錯誤並建立最基本的測試環境。若知道造成問題的程式，可以用命令 <command>dpkg -S <replaceable>有問題的檔案</replaceable></command> 找出對應的套件名稱。檢查錯誤追蹤系統 (<literal>https://bugs.debian.org/<replaceable>套件名稱</replaceable></literal>) 確定還沒有人報告該錯誤。然後，以 <command>reportbug</command> 命令送出自己的錯誤報告，完整描述測試的基本環境，讓別人也能再生該錯誤。
			</para>
			 <para>
				本章旨在有效解決後面各章可能碰到的問題。有需要就常常用它！
			</para>

		</section>

	</section>
</chapter>

