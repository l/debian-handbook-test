<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="existing-setup" lang="zh-TW">
	<chapterinfo>
		 <keywordset>
			<keyword>當前設置</keyword>
			 <keyword>再利用</keyword>
			 <keyword>移殖</keyword>

		</keywordset>

	</chapterinfo>
	 <title>分析當前設置與移殖</title>
	 <highlights> <para>
		任何系統的翻修都應將既有的系統考慮進去。包括儘可能再利用資源以及與系統的各元素協調無礙。以下的個案研究將介紹從其他通用框架移殖至 Linux 計算基礎。
	</para>
	 </highlights> <section id="sect.heterogeneous-environments">
		<title>在異質環境中共存</title>
		 <indexterm>
			<primary>環境</primary>
			<secondary>異質環境</secondary>
		</indexterm>
		 <para>
			Debian 能和既存的環境整合無礙，並與其他作業系統共存。這近乎完美的和諧來自市場的壓力，要求軟體發布者遵守一定的標準。接受這些標準讓管理員能靈活轉出各種程式：用戶端或伺服器端、免費或收費。
		</para>
		 <section>
			<title>與視窗機器整合</title>
			 <para>
				Samba 的 SMB/CIFS 支援確保在視窗系統內的溝通。共享視窗系統客戶端佇列的檔案與列印，且允許 Linux 機器使用視窗伺服器的資源。
			</para>
			 <sidebar> <title><emphasis>工具</emphasis> Samba</title>
			 <indexterm>
				<primary>Samba</primary>
			</indexterm>
			 <para>
				最新版的 Samba 可取代視窗系統大部份的功能：從簡單的 Windows NT 伺服器 (認證、檔案、列印佇列、下載列表機伺服器、DFS等) 到 最高階款(相容於 Active Directory 的域名控制)。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>與 OS X 機器整合</title>
			 <indexterm>
				<primary>Zeroconf</primary>
			</indexterm>
			 <indexterm>
				<primary>Bonjour</primary>
			</indexterm>
			 <indexterm>
				<primary>Avahi</primary>
			</indexterm>
			 <para>
				OS X 機器提供且能夠使用網路服務，諸如：檔案伺服器與共享列表機。使用 Zeroconf 協定的 Bonjour 應用。Debian includes another implementation, called Avahi, which provides the same functionality.
			</para>
			 <indexterm>
				<primary>AFP</primary>
			</indexterm>
			 <indexterm>
				<primary>AppleShare</primary>
			</indexterm>
			 <para>
				從另個方向看，Netatalk 服務可用於提供 OS X 機器的檔案伺服務器。採用 AFP (AppleShare) 協定以及需告知才能夠被 OS X 客戶端自動發現伺服器。
			</para>
			 <indexterm>
				<primary>AppleTalk</primary>
			</indexterm>
			 <para>
				更舊的 Mac OS 網路 (OS X 之前) 使用稱為 AppleTalk 的協定。採用此等協定的環境，Netatalk 也能提供 AppleTalk 協定 (實際上，是再應用該協定)。確保檔案伺服器與列印佇列以及時間伺服器 (時鐘同步)的運作。它的路由器功能允許與 AppleTalk 網路溝通。
			</para>

		</section>
		 <section>
			<title>與其他 Linux/Unix 機器整合</title>
			 <para>
				最後，NFS 與 NIS 兩者保證與 Unix 系統互動。NFS 確保檔案伺服器的運作，NIS 新增使用者的資料夾。大部份 Unix 系統用到的 BSD 列印層，允許共享列印佇列。
			</para>
			 <figure>
				<title>Debian 與 OS X、Windows 與 Unix 系統共存</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-1.png" format="PNG" width="25%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.how-to-migrate">
		<title>移殖的方法</title>
		 <indexterm>
			<primary>移殖</primary>
		</indexterm>
		 <para>
			為了確保後續的服務，必須依照計畫執行移殖的作業。每種作業系統都需遵守這個原則。
		</para>
		 <section>
			<title>調查與鑑定服務內容</title>
			 <para>
				如文字所述，此步驟是必要的。嚴謹的管理者知道每部伺服器的主要作用，但該等作用經常改變，有經驗的使用者偶而會安裝 “狂野” 的服務。知道他們的存在至少可以決定處理的方式，而不是胡亂地刪除它們。
			</para>
			 <para>
				基於這個目的，移殖伺服器前先告知使用者是明智之舉。把使用者拉入計畫裡，於移殖之前先安裝常用的自由軟體於其桌面電腦中，移殖之後自然碰到 Debian、Libre Office 與 Mozilla 等軟體。
			</para>
			 <section>
				<title>網路與程序</title>
				 <indexterm>
					<primary><command>nmap</command></primary>
				</indexterm>
				 <para>
					<command>nmap</command> 工具 (在同名套件中) 可以在未登錄的前提下，快速地經由網路連結機器辨識網際網路服務。在另部機器鍵入命令連結至同個網路：
				</para>
				 
<screen>
<computeroutput>$ </computeroutput><userinput>nmap mirwiz</userinput>
<computeroutput>Starting Nmap 7.40 ( https://nmap.org ) at 2017-06-06 14:41 CEST
Nmap scan report for mirwiz (192.168.1.104)
Host is up (0.00062s latency).
Not shown: 992 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
25/tcp   open  smtp
80/tcp   open  http
111/tcp  open  rpcbind
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
5666/tcp open  nrpe
9999/tcp open  abyss

Nmap done: 1 IP address (1 host up) scanned in 0.06 seconds</computeroutput></screen>
				 <sidebar> <title><emphasis>替代選擇</emphasis> 使用 <command>netstat</command> 尋找可用的服務清單</title>
				 <para>
					在 Linux 機器裡，<command>netstat -tupan</command> 指令可顯示使用中或待決的 TCP 數，以及執行程式的 UDP 埠。辨識網路提供的服務量。
				</para>
				 </sidebar> <sidebar> <title><emphasis>下一步</emphasis> IPv6</title>
				 <para>
					有些網路指令可在 IPv4 (通常是預設的) 或 IPv6 執行。包括 <command>nmap</command> 與 <command>netstat</command> 指令，以及其他，如 <command>route</command> 或 <command>ip</command>。可用 <parameter>-6</parameter> 命令列選項啟動它們。
				</para>
				 </sidebar> <para>
					Unix 機器的伺服器提供 shell 帳號給使用者，在擁有者缺席的情況下可以決定該程序是否在背景執行。指令 <command>ps auxw</command> 顯示所有程序的使用者辨識碼。將此等資訊與 <command>who</command> 指令的輸出互相比較，就能辨識出在背景執行的曖昧或不明服務與程式。以 <filename>crontabs</filename> (依使用者自動排序列出所有的作業) 可查看伺服器提供的服務資訊 (<command>cron</command> 的完整說明在 <xref linkend="sect.task-scheduling-cron-atd" />)。
				</para>
				 <para>
					任何狀況下，都該先備份您的伺服器：使用者報告問題時，就能復原它。
				</para>

			</section>

		</section>
		 <section>
			<title>備份組態</title>
			 <para>
				保留所有設備的備份供昇級後伺服器的參考。至少應備份組態檔。
			</para>
			 <para>
				Unix 機器的組態檔，通常在 <filename>/etc/</filename> 資料夾內，有時放在 <filename>/usr/local/</filename> 的次資料夾裡。若從原始碼開始安裝程式而不是由套件安裝，組態檔就會放在前述的次資料夾內。偶而，還可在 <filename>/opt/</filename> 找到組態檔。
			</para>
			 <para>
				在資料管理服務 (如資料庫) 時，強烈建議以標準格式匯出的資料容易被新軟體接受。通常是文字格式，也可能是從資料庫以 SQL 下載，或從 LDAP 伺服器下載 LDIF 檔案。
			</para>
			 <figure>
				<title>備份資料庫</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-2.png" format="PNG" width="50%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				每個伺服器都不一樣，不能詳述所有個案。比較各軟體的文件辨認匯出 (即，再匯入) 的方式以及需要人工處理的部份。此書處理 Linux 伺服器程式的主要組態。
			</para>

		</section>
		 <section>
			<title>接手現有的 Debian 伺服器</title>
			 <indexterm>
				<primary>恢復 Debian 機器</primary>
			</indexterm>
			 <indexterm>
				<primary>探查 Debian 機器</primary>
			</indexterm>
			 <indexterm>
				<primary>接手 Debian 伺服器</primary>
			</indexterm>
			 <para>
				先分析正在執行 Debian 的機器，才能有效地接管維護工作。
			</para>
			 <para>
				第一個查看的檔案是 <filename>/etc/debian_version</filename>，通常包括 Debian 系統的版本編號 (它是 <emphasis>base-files</emphasis> 套件的一部份)。若以 <literal><replaceable>代碼</replaceable>/sid</literal> 方式呈現，表示此系統從該代碼版本取得的最新版套件 (測試版或不穩定版)。
			</para>
			 <para>
				<command>apt-show-versions</command> 程式 (from the Debian package of the same name) 檢查安裝的套件並辨識可用的版本。<command>aptitude</command> 以表單的方式，做同樣的工作。
			</para>
			 <para>
				查看 <filename>/etc/apt/sources.list</filename> 檔案 (以及 <filename>/etc/apt/sources.list.d/</filename> 資料夾) 可看到已安裝 Debian 套件的來源。若出現不明來源，管理員可能選擇重新安裝電腦系統確保其軟體與 Debian 相容。
			</para>
			 <para>
				<filename>sources.list</filename> 檔案是個重要的指標：大部份的管理者保留一份使用中的 APT 來源清單。但不能忘記曾使用的來源可能被刪除，有可能以人工方式安裝 (以 <command>dpkg</command> 指令) 從網際網路隨機抓來的套件。在此情況下，可能表面上是 “標準” Debian。碰到這種情況應放棄外來的套件 (在不尋常的資料夾出現 <filename>deb</filename> 檔案、套件版本編號出現 Debian 未使用的特殊前置字元，諸 <literal>ubuntu</literal> 或 <literal>lmde</literal>，等字樣。)
			</para>
			 <para>
				同樣的，分析 <filename>/usr/local/</filename> 資料夾的內容，其目的是收錄編譯後與手動安裝後的程式。列出以此方式安裝的軟體清單，指出一個問題，為什麼不使用 Debian 對應的套件。
			</para>
			 <sidebar> <title><emphasis>速看</emphasis> <emphasis role="pkg">cruft</emphasis></title>
			 <para>
				<emphasis role="pkg">cruft</emphasis> 套件列出未被其他套件擁有的檔案。就是篩選器 (有效，但過時的) 以避免報告合法的檔案 (Debian 套件產生的檔案，或未被<command>dpkg</command> 管理的組態檔案等)。
			</para>
			 <para>
				小心不要盲目地刪除可能被 <command>cruft</command> 列出的檔案！
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>安裝 Debian</title>
			 <para>
				知道當前伺服器的必要資訊後，就可以關閉它並開始安裝 Debian。
			</para>
			 <indexterm>
				<primary>架構</primary>
			</indexterm>
			 <para>
				依照電腦的架構，選擇適當的版本。近幾年的 PC，很可能是 amd64 (稍舊的是 i386)。其他的情況，則依照安裝的舊系統來判斷。
			</para>
			 <para>
				<xref linkend="tab-corresp" xrefstyle="select: label nopage" /> 不是完整的，但相當有用。任何情況下，電腦的原始文件是最有用的資料來源。
			</para>
			 <table colsep="1" id="tab-corresp">
				<title>作業系統與架構對照表</title>
				 <tgroup cols="2">
					<thead>
						<row>
							<entry>作業系統</entry>
							 <entry>架構</entry>

						</row>

					</thead>
					 <tbody>
						<row>
							<entry>DEC Unix (OSF/1)</entry>
							 <entry>alpha, mipsel</entry>

						</row>
						 <row>
							<entry>HP Unix</entry>
							 <entry>ia64, hppa</entry>

						</row>
						 <row>
							<entry>IBM AIX</entry>
							 <entry>powerpc</entry>

						</row>
						 <row>
							<entry>Irix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>OS X</entry>
							 <entry>amd64, powerpc, i386</entry>

						</row>
						 <row>
							<entry>z/OS, MVS</entry>
							 <entry>s390x, s390</entry>

						</row>
						 <row>
							<entry>Solaris, SunOS</entry>
							 <entry>sparc, i386, m68k</entry>

						</row>
						 <row>
							<entry>Ultrix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>VMS</entry>
							 <entry>alpha</entry>

						</row>
						 <row>
							<entry>Windows 95/98/ME</entry>
							 <entry>i386</entry>

						</row>
						 <row>
							<entry>Windows NT/2000</entry>
							 <entry>i386, alpha, ia64, mipsel</entry>

						</row>
						 <row>
							<entry>Windows XP / Windows Server 2008</entry>
							 <entry>i386, amd64, ia64</entry>

						</row>
						 <row>
							<entry>Windows RT</entry>
							 <entry>armel, armhf, arm64</entry>

						</row>
						 <row>
							<entry>Windows Vista / Windows 7-8-10</entry>
							 <entry>i386, amd64</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <sidebar> <title><emphasis>硬體</emphasis> 64 位元 PC 與 32 位元 PC</title>
			 <indexterm>
				<primary>amd64</primary>
			</indexterm>
			 <indexterm>
				<primary>i386</primary>
			</indexterm>
			 <para>
				近年的電腦使用 64 位元 Intel 或 AMD 處理器，相容於稍舊的 32 位元處理器；為 “i386” 架構編繹的軟體也適用。從另個角度來看，此相容的軟體無法充份發揮新處理器的效能。所以 Debian 提供 “amd64” 架構的版本，針對最新的 AMD 晶片以及 Intel “em64t” 處理器 (包括大多數的 Core 系列)，它們極度類似 AMD64。
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>安裝與組態選定的服務</title>
			 <para>
				Debian 安裝之後，必須逐一安裝與設定該電腦的所有服務。新的組態必須考量過去的組態才能確保轉換的順利。前述兩個步驟的資訊對於完成此部份極為重要。
			</para>
			 <figure>
				<title>安裝指定的服務</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-4.png" format="PNG" width="66%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				全面進入此練習前，強烈建議您閱讀本書其他部份。才能夠較精細地瞭解對預期服務的組態方式。
			</para>
			 <para>
			</para>

		</section>

	</section>
</chapter>

