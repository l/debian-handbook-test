<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="pt-BR">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Manutenções e atualizações: As ferramentas APT</title>
	 <highlights> <para>
		O que faz o Debian tão popular entre os administradores é a facilidade para instalar um programa e atualizar o sistema inteiro. Esta vantagem rara é em grande parte devida ao programa <emphasis>APT</emphasis>, que os administradores da Falcot Corp estudaram com entusiasmo.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm> APT é a sigla de Advanced Package Tool (ferramenta de pacotes avançada). O que faz dele "avançado" é sua abordagem quanto a pacotes. Ele não os avalia individualmente, mas considera-os como um todo e produz as melhores combinações de pacotes possível dependendo do que está disponível e compatível (de acordo com as dependências).
	</para>
	 <sidebar> <title><emphasis>VOCABULÁRIO</emphasis> fonte do pacote e pacote fonte</title>
	 <para>
		A palavra <emphasis>origem (fonte)</emphasis> pode ser ambígua. Um pacote de origem (fonte) - um pacote contendo o código fonte de um programa - não deve ser confundido com origem (fonte) do pacote - um repositório (site de internet, servidor FTP, CD-ROM, diretório local, etc.) o qual contém pacotes.
	</para>
	 </sidebar> <para>
		O APT precisa que lhe seja dada uma “lista de fontes de pacotes”: o arquivo <filename>/etc/apt/sources.list</filename> listará os diferentes repositórios (ou "fontes") que publicam pacotes Debian. O APT irá então importar a lista de pacotes publicados por cada uma destas fontes. Esta operação é feita baixando o arquivo <filename>Packages.xz</filename> ou uma variante usando arquivos (no caso de uma fonte de pacotes binários) com um método de compressão diferente (tal como <filename>Packages.gz</filename> ou <filename>.bz2</filename>) e <filename>Sources.xz</filename> ou uma variante (no caso de uma fonte de pacotes código-fonte) e analizando seus conteúdos. Quando uma cópia antiga destes arquivos já estiver presente, o APT poderá atualizar ela baixando apenas as diferenças (veja a barra lateral <xref linkend="sidebar.apt-pdiff" />).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>DE VOLTA AO BÁSICO</emphasis> <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> e <command>XZ</command> Compressão</title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		Uma extensão <filename>.gz</filename> se refere a um arquivo comprimido com o utilitário <command>gzip</command>. <command>gzip</command> é o utilitário tradicional do Unix rápido e eficiente para comprimir arquivos. Ferramentas mais novas conseguem taxas de compressão melhores mas precisam de mais recursos (tempo de cálculo e memória) para compactar e descompactar um arquivo. Entre elas e por ordem de surgimento, estão <command>bzip2</command> (gerando arquivos com a extensão <filename>.bz2</filename>), <command>lzma</command> (gerando arquivos <filename>.lzma</filename>) e <command>xz</command> (gerando arquivos <filename>.xz</filename>).
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>Preenchendo no arquivo <filename>sources.list</filename> Arquivo</title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>fonte</primary>
			<secondary>dos pacotes</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacote</primary>
			<secondary>origem de</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>Sintaxe</title>
			 <para>
				Cada linha ativa do arquivo <filename>/etc/apt/sources.list</filename> contém a descrição da origem, feita de 3 partes separadas por espaços.
			</para>
			 <para>
				O primeiro campo indica o tipo da origem:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						“<literal>deb</literal>” para pacotes binários,
					</para>

				</listitem>
				 <listitem>
					<para>
						“<literal>deb-src</literal>” para pacotes de código fonte.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				The second field gives the base URL of the source (combined with the filenames present in the <filename>Packages.xz</filename> files, it must give a full and valid URL): this can consist in a Debian mirror or in any other package archive set up by a third party. The URL can start with <literal>file://</literal> to indicate a local source installed in the system's file hierarchy, with <literal>http://</literal> to indicate a source accessible from a web server, or with <literal>ftp://</literal> for a source available on an FTP server. The URL can also start with <literal>cdrom:</literal> for CD-ROM/DVD-ROM/Blu-ray disc based installations, although this is less frequent, since network-based installation methods are more and more common.
			</para>
			 <para>
				A sintaxe do último campo depende da estrutura do repositório. Nos casos mais simples, você pode simplesmente indicar um subdiretório (com uma barra obrigatória) da fonte desejada (esta é muitas vezes uma “<filename>./</filename>” que se refere à ausência de um subdirectório - os pacotes estão então diretamente na URL especificada). Mas, no caso mais comum, os repositórios serão estruturados como um espelho Debian, com múltiplas distribuições cada uma com múltiplos componentes. Nesses casos, o nome da distribuição escolhida (por seu "codinome" - veja a lista na barra lateral <xref linkend="sidebar.bruce-perens" /> — ou pelos “suites” correspondentes — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), em seguida, os componentes (ou seções) para ativar (escolhidos entre <literal>main</literal>, <literal>contrib</literal>, e <literal>non-free</literal> em um espelho típico Debian).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>VOCABULÁRIO</emphasis> Os arquivos <literal>main</literal>, <literal>contrib</literal> e <literal>non-free</literal></title>
			 <indexterm>
				<primary>seção</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary>seção <literal>main</literal></primary>
			</indexterm>
			 <indexterm>
				<primary>seção</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary>seção <literal>contrib</literal></primary>
			</indexterm>
			 <indexterm>
				<primary>seção</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary>seção <literal>non-free</literal></primary>
			</indexterm>
			 <indexterm>
				<primary>componente (de um repositório)</primary>
			</indexterm>
			 <para>
				O Debian utiliza três seções para diferenciar os pacotes de acordo com o tipo de licença escolhida pelos autores de cada trabalho. <literal>Main</literal> contém todos os pacotes que estão completamente de acordo com o Debian Free Software Guilines.
			</para>
			 <para>
				O arquivo <literal>non-free</literal> é diferente porque contém programas os quais não estão (completamente) de acordo com estes princípios, mas que podem, contudo, ser distribuídos sem restrições. Este arquivo, o qual não é parte oficial do Debian, é um serviço para os usuários que poderiam precisar de alguns desses programas - entretanto o Debian sempre recomenda dar prioridade aos programas livres. A existência dessa seção representa um problemas considerável para Richard M. Stallman e mantém a Free Software Foundation de recomendação do Debian para os usuários.
			</para>
			 <para>
				<literal>Contrib</literal> (contribuições) é um conjunto de programas de código aberto que não podem funcionar sem um elemento não livre. Estes elementos podem ser programas da seção <literal>non-free</literal>, ou arquivos não livres como as ROMs de jogos, BIOS de consoles, etc. <literal>Contrib</literal> também incluem programas livres que a compilação necessita de elementos proprietários. Este foi inicialmente o caso da suíte de escritório OpenOffice.org, o qual necessitava um ambiente java proprietário.
			</para>
			 </sidebar> <sidebar> <title><emphasis>DICA</emphasis> <filename>/etc/apt/sources.list.d/*.list</filename> arquivos</title>
			 <para>
				Se muitas fontes de pacotes são referenciadas, pode ser útil separá-las em múltiplos arquivos. Cada parte é então guardada em <filename>/etc/apt/sources.list.d/<replaceable>nome-do-arquivo</replaceable>.list</filename> (veja a barra lateral <xref linkend="sidebar.directory.d" />).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				As entradas <literal>cdrom</literal> descrevem os CD/DVD-ROMs que você tem. Ao contrário de outras entradas, um CD-ROM não está sempre disponível, uma vez que tem de ser inserido na unidade e apenas um disco pode ser lido de cada vez. Por essas razões, essas fontes são geridas de uma forma ligeiramente diferente, e precisam ser adicionados com o programa <command>apt-cdrom</command>, geralmente executado com o parâmetro <literal>add</literal>. Este último, então, solicitará o disco a ser inserido na unidade e vai varrer o seu conteúdo à procura de arquivos de <filename>Packages</filename>. Ele usará esses arquivos para atualizar seu banco de dados de pacotes disponíveis (esta operação é geralmente feita pelo comando <command>apt update</command>). A partir daí, o APT pode pedir que seja inseriod um disco se ele precisar de um dos pacotes no disco.
			</para>

		</section>
		 <section>
			<title>Repositórios para usuários <emphasis role="distribution">Estáveis</emphasis></title>
			 <para>
				Aqui está um <filename>sources.list</filename> padrão para um sistema rodando a versão <emphasis role="distribution">Estável</emphasis> do Debian:
			</para>
			 <example id="example.stable-sources-list">
				<title>arquivo <filename>/etc/apt/sources.list</filename> para usuários do Debian Estável</title>
				 
<programlisting># Security updates
deb http://security.debian.org/ stretch/updates main contrib non-free
deb-src http://security.debian.org/ stretch/updates main contrib non-free

## Debian mirror

# Base repository
deb http://deb.debian.org/debian stretch main contrib non-free
deb-src http://deb.debian.org/debian stretch main contrib non-free

# Stable updates
deb http://deb.debian.org/debian stretch-updates main contrib non-free
deb-src http://deb.debian.org/debian stretch-updates main contrib non-free

# Stable backports
deb http://deb.debian.org/debian stretch-backports main contrib non-free
deb-src http://deb.debian.org/debian stretch-backports main contrib non-free
</programlisting>

			</example>
			 <para>
				This file lists all sources of packages associated with the <emphasis role="distribution">Stretch</emphasis> version of Debian (the current <emphasis role="distribution">Stable</emphasis> as of this writing). We opted to name “stretch” explicitly instead of using the corresponding “stable“ alias (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) because we don't want to have the underlying distribution changed outside of our control when the next stable release comes out.
			</para>
			 <para>
				A maioria dos pacotes serão provenientes do “repositório de base”, que contém todos os pacotes, mas raramente é atualizado (uma vez a cada 2 meses para um “ponto de lançamento”). Os outros repositórios são parciais (não contêm todos os pacotes) e podem receber atualizações (pacotes numa versão mais recente) que o APT pode instalar. As seções a seguir irão explicar o propósito e as regras que regem cada um desses repositórios.
			</para>
			 <para>
				Observe que quando a versão desejada de um pacote está disponível em vários repositórios, o primeiro listado no arquivo <filename>sources.list</filename> será usado. Por esta razão, as fontes não oficiais são geralmente adicionadas no final do arquivo.
			</para>
			 <para>
				Como uma observação, a maioria do que esta seção diz sobre <emphasis role="distribution">Stable</emphasis> aplica-se igualmente bem a <emphasis role="distribution">Oldstable</emphasis> uma vez que esta é apenas uma velha <emphasis role="distribution">Stable</emphasis> que é mantida em paralelo.
			</para>
			 <section id="sect.security-updates">
				<title>Atualizações de Segurança</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>atualizações de segurança</primary>
				</indexterm>
				 <indexterm>
					<primary>atualizações</primary>
					<secondary>atualizações de segurança</secondary>
				</indexterm>
				 <para>
					As atualizações de segurança não são hospedadas na rede habitual de espelhos do Debian, mas em <literal>security.debian.org</literal> (em um pequeno conjunto de máquinas mantidas pelos <link linkend="dsa-team">Administradores de Sistema Debian</link>). Estes arquivos contém as atualizações de segurança (elaboradas pela equipe de segurança do Debian e/ou mantenedores de pacotes) para a distribuição <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					O servidor também pode hospedar atualizações de segurança para <emphasis role="distribution">Testing</emphasis> mas isso não acontece com muita frequência uma vez que as atualizações tendem chegar a <emphasis role="distribution">Testing</emphasis> através do fluxo regular de atualizações provenientes do <emphasis role="distribution">Unstable</emphasis>.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>Atualizações Estáveis</title>
				 <indexterm>
					<primary>atualizações estáveis</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>atualizações</primary>
					<secondary>atualizações estáveis</secondary>
				</indexterm>
				 <para>
					Atualizações estáveis não são sensíveis de segurança, mas são consideradas importantes o suficiente para ser empurradas para os usuários antes do próximo ponto de lançamento estável.
				</para>
				 <para>
					Este repositório normalmente contêm correções para bugs críticos que não puderam ser corrigidos antes do lançamento ou que tenham sido introduzidos pelas atualizações subsequentes. Dependendo da urgência, ele também pode conter atualizações para os pacotes que têm de evoluir ao longo do tempo... como as regras de detecção de spam do <emphasis role="pkg">spamassassin</emphasis>, o banco de dados de vírus do <emphasis role="pkg">clamav</emphasis> ou as regras de horário de verão de todos os fusos horários do (<emphasis role="pkg">tzdata</emphasis>).
				</para>
				 <para>
					Na prática, este repositório é um subconjunto do repositório <literal>proposed-updates</literal>, cuidadosamente selecionado pelos Gerentes de Lançamento Estável .
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>Atualizações Propostas</title>
				 <indexterm>
					<primary><literal>atualizações-propostas</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>atualizações-propostas-estáveis</literal></primary>
				</indexterm>
				 <para>
					Depois de publicada, a distribuição <emphasis role="distribution">Stable</emphasis> é atualizada em aproximadamente de dois em dois meses. O repositório <literal>atualizações-propostas</literal> é onde as atualizações esperadas são preparadas (sob a supervisão dos Gerentes de versão Estável).
				</para>
				 <para>
					As atualizações de segurança e estáveis documentadas nas seções anteriores são sempre incluídas neste repositório, mas não há mais também, porque os mantenedores de pacotes também têm a oportunidade de corrigir erros importantes que não merecem uma libertação imediata.
				</para>
				 <para>
					Anyone can use this repository to test those updates before their official publication. The extract below uses the <literal>stretch-proposed-updates</literal> alias which is both more explicit and more consistent since <literal>jessie-proposed-updates</literal> also exists (for the <emphasis role="distribution">Oldstable</emphasis> updates):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian stretch-proposed-updates main contrib non-free
</programlisting>

			</section>
			 <section id="sect.backports">
				<title>Backports estáveis</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>atualizações</primary>
					<secondary>backports</secondary>
				</indexterm>
				 <para>
					O servidor do repositório <literal>stable-backports</literal> oferece “pacotes backports”. O termo refere-se a um pacote de algum software recente, que foi recompilado para uma distribuição mais velha, geralmente para <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Quando a distribuição começa a envelhecer, vários projetos de software lançam novas versões que não são integradas na <emphasis role="distribution">Stable</emphasis> atual (que é modificada apenas para resolver os problemas mais críticos, como problemas de segunrança). Como as distribuições <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis> podem ser mais arriscadas, mantenedores de pacotes oferencem recompilações de software recente para a <emphasis role="distribution">Stable</emphasis>, que tem a vantagem de limitar instabilidade potencial a um pequeno número de pacotes escolhidos. <ulink type="block" url="http://backports.debian.org" />
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 <para>
					Backports de <literal>stable-backports</literal> são sempre criados a partir de pacotes disponíveis no <emphasis role="distribution">Testing</emphasis>. Isso garante que todos os backports instalados serão atualizáveis para a versão estável correspondente uma vez que a próxima versão estável do Debian está disponível.
				</para>
				 <para>
					Mesmo que este repositório forneça versões mais recentes dos pacotes, o APT não os instala a menos que você dê instruções explícitas para fazê-lo (ou a menos que você já o fez com uma versão anterior do backport determinado):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/stretch-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t stretch-backports <replaceable>package</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>Repositórios para usuários <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis> Users</title>
			 <para>
				Aqui está um <filename>sources.list</filename> padrão para um sistema executando uma versão <emphasis role="distribution">Testing</emphasis> ou <emphasis role="distribution">Unstable</emphasis> do Debian:
			</para>
			 <example id="example.testing-sources-list">
				<title>arquivo <filename>/etc/apt/sources.list</filename> para usuários do Debian <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
				 
<programlisting>
# Unstable
deb http://deb.debian.org/debian unstable main contrib non-free
deb-src http://deb.debian.org/debian unstable main contrib non-free

# Testing
deb http://deb.debian.org/debian testing main contrib non-free
deb-src http://deb.debian.org/debian testing main contrib non-free

# Stable
deb http://deb.debian.org/debian stable main contrib non-free
deb-src http://deb.debian.org/debian stable main contrib non-free

# Security updates
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free
</programlisting>

			</example>
			 <para>
				Com este arquivo <filename>sources.list</filename> APT instalará pacotes de <emphasis role="distribution">Unstable</emphasis>. Se isso não for desejado, use a configuração <literal>APT::Default-Release</literal> (veja <xref linkend="sect.apt-upgrade" />) para instruir o APT a escolher pacotes a partir de uma outra distribuição (provavelmente <emphasis role="distribution">Testing</emphasis> neste caso).
			</para>
			 <para>
				Há boas razões para incluir todos os repositórios, mesmo que um só deva ser suficiente. <emphasis role="distribution">Testing</emphasis> os usuários irão apreciar a possibilidade de cherry-pick um pacote fixo do <emphasis role="distribution">Unstable</emphasis> quando a versão em <emphasis role="distribution">Testing</emphasis> é afetado por um erro chato. Em contrapartida, usuários <emphasis role="distribution">Unstable</emphasis> afetado por regressões inesperadas têm a possibilidade de fazer o downgrade dos pacotes para sua versão (supostamente de trabalho) <emphasis role="distribution">Testing</emphasis>.
			</para>
			 <para>
				A inclusão do <emphasis role="distribution">Stable</emphasis> é mais discutível, mas que muitas vezes dá acesso a alguns pacotes, que foram retirados das versões de desenvolvimento. Ele também garante que você obtenha as últimas atualizações para os pacotes que não tenham sido modificados desde a última versão estável.
			</para>
			 <section>
				<title>O <emphasis role="distribution">repositório</emphasis> experimental</title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					O arquivamento dos pacotes da <emphasis role="distribution">Experimental</emphasis> está presente em todos os espelhos Debian, e contém pacotes que não estão na versão <emphasis role="distribution">Unstable</emphasis> ainda devido sua qualidade inferior — eles são, geralmente, versões em desenvolvimento ou pré-versões (alfa, beta, candidatos a lançamento…). Um pacote pode também ser enviado para lá devido a mudanças que possam gerar problemas. O mantenedor então tenta desvendar esses problemas com a ajuda de usuários avançados que possam lidar com questões importantes. Depois deste primeiro estágio, o pacote é movido para a <emphasis role="distribution">Unstable</emphasis>, onde ele alcança uma audiência muito maior e onde ele será testado mais minuciosamente.
				</para>
				 <para>
					A <emphasis role="distribution">Experimental</emphasis> é geralmente usada por usuário que não se importam em quebrar o seu sistema e ter que consertá-lo. Esta distribuição dá a possibilidade de importar um pacote que o usuário queira testar ou usar quando surge uma necessidade. Esta é exatamente a abordagem do Debian, já que adicionar a Experimental ao arquivo <filename>sources.list</filename> do APT não leva ao uso sistemático destes pacotes. A linha a ser adicionada é:
				</para>
				 <informalexample> 
<programlisting>deb http://deb.debian.org/debian experimental main contrib non-free
</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Using Alternate Mirrors</title>
			 <indexterm>
				<primary><literal>deb.debian.org</literal></primary>
			</indexterm>
			 <para>
				The <filename>sources.list</filename> examples in this chapter refer to package repositories hosted on <literal>deb.debian.og</literal>. Those URLs will redirect you to servers which are close to you and which are managed by Content Delivery Networks (<acronym>CDN</acronym>) whose main role is to store multiple copies of the files across the world to deliver them as fast as possible to users. The CDN companies that Debian is working with are Debian partners who are offering their services freely to Debian. While none of those servers are under direct control of Debian, the fact that the whole archive is sealed by GPG signatures makes it a non-issue.
			</para>
			 <indexterm>
				<primary>mirror list</primary>
			</indexterm>
			 <indexterm>
				<primary>list of mirrors</primary>
			</indexterm>
			 <para>
				Picky users who are not satisfied with the performance of <literal>deb.debian.org</literal> can try to find a better mirror in the official mirror list: <ulink type="block" url="https://www.debian.org/mirror/list" />
			</para>
			 <para>
				But when you don't know which mirror is best for you, this list is of not much use. Fortunately for you, Debian maintains DNS entries of the form <literal>ftp.<replaceable>country-code</replaceable>.debian.org</literal> (e.g. <literal>ftp.us.debian.org</literal> for the USA, <literal>ftp.fr.debian.org</literal> for France, etc.) which are covering many countries and which are pointing to one (or more) of the best mirrors available within that country.
			</para>
			 <indexterm>
				<primary><literal>httpredir.debian.org</literal></primary>
			</indexterm>
			 <para>
				As an alternative to <literal>deb.debian.org</literal>, there used to be <literal>httpredir.debian.org</literal>. This service would identify a mirror close to you (among the list of official mirrors, using GeoIP mainly) and would redirect APT's requests to that mirror. This service has been deprecated due to reliability concerns and now <literal>httpredir.debian.org</literal> provides the same CDN-based service as <literal>deb.debian.org</literal>.
			</para>

		</section>
		 <section>
			<title>Recursos não oficiais: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				Existem inúmeras fontes não-oficiais de pacotes Debian feitas por usuários avançados que recompilaram algum software (o Ubuntu fez isso popular com o seu serviço "Personal Package Archive"), por programadores que disponibilizam sua criação para todos, e mesmo por desenvolvedores Debian que oferecem pré-versões de seu pacote online.
			</para>
			 <para>
				O sítio <literal>mentors.debian.net</literal> é interessante (embora ele apenas forneça pacotes fontes), já que reúne pacotes criados por candidatos ao status de desenvolvedor Debian oficial ou por voluntários que desejam criar pacotes Debian sem passar pelo processo de integração. Estes pacotes são disponibilizados sem qualquer garantia de qualidade; certifique-se de verificar a origem e a integridade e fazer testes antes de usar em produção.
			</para>
			 <sidebar> <title><emphasis>COMUNIDADE</emphasis> Os sítios <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				O domínio <emphasis>debian.net</emphasis> não é um recurso oficial do projeto Debian. Cada desenvolvedor Debian pode usar este domínio para seu próprio uso. Estes sítios podem conter serviços não-oficiais (algumas vezes sítios pessoais) hospedados numa máquina que não pertence ao projeto e que foram configurados por desenvolvedores Debian, ou podem conter protótipos prestes a irem para o <emphasis>debian.org</emphasis>. Duas razões podem explicar por que alguns destes protótipos permanecem no <emphasis>debian.net</emphasis>: ou por que ninguém fez o esforço necessário para transformar a coisa num serviço oficial (hospedado no domínio <emphasis>debian.org</emphasis>, e com uma certa garantia de manutenção), ou o serviço é muito controverso para ser oficializado.
			</para>
			 </sidebar> <para>
				Instalar um pacote significa dar permissões de root para seu criador, por que o criador decide o que fica nos scripts de inicialização que rodam com a identidade do root. Pacotes Debian oficiais são criados por voluntários que cooperam e revisam e que marcam seus pacotes de forma que a origem e integridade deles possam ser verificada.
			</para>
			 <para>
				Em geral, fique alerta com pacotes cuja origem você não conhece e que não são hospedados em um dos servidores Debian oficiais: avalie o grau em que você confia no criador, e verifique a integridade do pacote. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>INDO ALÉM</emphasis> versões de pacotes antigas: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				O serviço <literal>snapshot.debian.org</literal>, introduzido em abril de 2010, pode ser usado para "voltar no tempo" e encontrar uma versão antiga de um pacote. Ele pode ser usado por exemplo para identificar que versão de um pacote introduziu uma regressão, e mais concretamente, para voltar à versão anterior enquanto espera a correção da regressão.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Proxy Cache para os pacotes Debian</title>
			 <indexterm>
				<primary>proxy cache</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				Quando toda uma rede de máquinas está configurada para usar o mesmo servidor remoto para baixar os mesmos pacotes atualizados, qualquer administrador sabe que seria benéfico ter uma atuação proxy intermediária como um cache local da rede (veja o quadro <xref linkend="sidebar.cache" />).
			</para>
			 <para>
				Você pode configurar o APT para usar um proxy "padrão" (veja <xref linkend="sect.apt-config" /> para o lado APT, e <xref linkend="sect.http-ftp-proxy" /> para o lado proxy), mas o ecossistema Debian oferece melhores opções para resolver este problema. O software dedicado apresentado nesta seção são mais espertos do que um simples proxy cache, porque eles podem contar com a estrutura específica de repositórios APT (por exemplo, eles sabem quando arquivos individuais são obsoletos ou não, e, assim, ajustar o tempo durante o qual eles são mantidos).
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> e <emphasis role="pkg">apt-cacher-ng</emphasis> funcionam como servidores de cache de proxy habituais. <filename>sources.list</filename> da APT é deixado inalterado, mas APT está configurado para usá-los como proxy para solicitações de saída.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">approx</emphasis>, por outro lado, funciona como um servidor HTTP que "espelha" qualquer número de repositórios remotos em suas URLs de nível superior. O mapeamento entre os diretórios de nível superior e as URLs remotas dos repositórios é armazenado em <filename>/etc/approx/approx.conf</filename>:
			</para>
			 
<programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://deb.debian.org/debian
security http://security.debian.org
</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> runs by default on port 9999 via a systemd socket and requires the users to adjust their <filename>sources.list</filename> file to point to the approx server:
			</para>
			 
<programlisting># Sample sources.list pointing to a local approx server
deb http://apt.falcot.com:9999/security stretch/updates main contrib non-free
deb http://apt.falcot.com:9999/debian stretch main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title>Comandos <command>aptitude</command>, <command>apt-get</command> e <command>apt</command></title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT é um projeto amplo, cujos planos originais incluem uma interface gráfica. Ele é baseado numa biblioteca que contém as aplicações principais, e o <command>apt-get</command> é a primeira interface — em linha de comando — que foi desenvolvida dentro do projeto. O <command>apt</command> é uma segunda interface baseada em linha de comando fornecida pelo APT que supera alguns erros de projeto do <command>apt-get</command>.
		</para>
		 <para>
			Both tools are built on top of the same library and are thus very close but the default behaviour of <command>apt</command> has been improved for interactive use and to actually do what most users expect. APT's developers reserve the right to change the public interface of this tool to further improve it. On the opposite, the public interface of <command>apt-get</command> is well defined and will not change in any backwards incompatible way. It is thus the tool that you want to use when you need to script package installation requests.
		</para>
		 <para>
			Várias outras interfaces gráficas apareceram como projetos externos: <command>synaptic</command>, <command>aptitude</command> (que tem uma interface modo texto e uma gráfica — que ainda não está completa), <command>wajig</command>, etc. A interface mais recomendada, <command>apt</command>, é a que nós iremos usar nos exemplos dados nesta seção. Note, porém, que a sintaxe de linha de comando do <command>apt-get</command> e <command>aptitude</command> são muito semelhantes. Quando existirem diferenças importantes entre o <command>apt</command>, <command>apt-get</command> e o <command>aptitude</command>, essas diferenças serão detalhadas.
		</para>
		 <section>
			<title>Initialização</title>
			 <para>
				Para qualquer trabalho com o APT, a lista de pacotes disponíveis precisa ser atualizada; isto pode ser feito simplesmente com <command>apt update</command>. Dependendo da velocidade de sua conexão, a operação pode demorar um pouco, pois ela baixa alguns arquivos <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename>, que tornaram-se gradualmente cada vez maiores devido o desenvolvimento do Debian (pelo menos 10 MB de dados para a seção <literal>main</literal>). Obviamente, instalar de um conjunto de CD-ROMs não baixa nada — neste caso, a operação é bastante rápida.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Instalação e remoção</title>
			 <indexterm>
				<primary>pacote</primary>
				<secondary>instalação</secondary>
			</indexterm>
			 <indexterm>
				<primary>pacote</primary>
				<secondary>remoção</secondary>
			</indexterm>
			 <indexterm>
				<primary>instalação</primary>
				<secondary>instalação do pacote</secondary>
			</indexterm>
			 <indexterm>
				<primary>remoção de um pacote</primary>
			</indexterm>
			 <para>
				Com o APT, os pacotes podem ser adicionados ou removidos do sistema, respectivamente com <command>apt install <replaceable>pacote</replaceable></command> e <command>apt remove <replaceable>pacote</replaceable></command>. Em ambos os casos, o APT vai instalar automaticamente as dependências necessárias ou apagar os pacotes que dependem do pacote que está para ser removido. O comando <command>apt purge <replaceable>pacote</replaceable></command> envolve uma desinstalação completa - os arquivos de configuração também são excluídos.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>DICA</emphasis> Instalando a mesma seleção de pacotes diversas vezes</title>
			 <para>
				Pode ser útil instalar sistematicamente a mesma lista de pacotes em vários computadores. Isso pode ser feito facilmente.
			</para>
			 <para>
				Em primeiro lugar, recupere a lista de pacotes instalados no computador que servirá como o "modelo" para copiar.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				O arquivo <filename>pkg-list</filename> passa a conter a lista dos pacotes instalados. Em seguida, transfira o arquivo <filename>pkg-list</filename> para os computadores que você quer atualizar e use os seguintes comandos:
			</para>
			 
<screen>## Atualiza banco de dados do dpkg de pacotes conhecidos
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Seleções de Atualização do dpkg
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Pedir apt-get para instalar os pacotes selecionados
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				Os primeiros comandos registram a lista de pacotes disponíveis no banco de dados dpkg, então <command>dpkg --set-selections</command> restaura a seleção de pacotes que você deseja instalar, e o <command>apt-get</command> executa as operações necessárias! <command>aptitude</command> não tem este comando.
			</para>
			 </sidebar> <sidebar> <title><emphasis>DICA</emphasis> Removendo e instalando ao mesmo tempo</title>
			 <para>
				É possível pedir ao <command>apt</command> (ou <command>apt-get</command> ou <command>aptitude</command>) para instalar certos pacotes e remover outros na mesma linha de comando ao adicionar um sufixo. Com um comando <command>apt install</command>, adicione “<literal>-</literal>” aos nomes de pacotes que você deseja remover. Com um comando <command>apt remove</command>, adicione “<literal>+</literal>” para os nomes dos pacotes que você deseja instalar.
			</para>
			 <para>
				O próximo exemplo mostra duas maneiras diferentes de instalar <replaceable>package1</replaceable> \t e remover <replaceable>package2</replaceable>.
			</para>
			 
<screen># <userinput>apt install <replaceable>pacote1</replaceable> <replaceable>pacote2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>pacote1+</replaceable> <replaceable>pacote2</replaceable></userinput>
[...]</screen>
			 <para>
				Este também pode ser utilizado para excluir os pacotes que de outra forma seriam instalados, por exemplo, devido a uma <literal>Advertência</literal>. Em geral, o solucionador de dependência vai usar essa informação como uma dica para procurar soluções alternativas.
			</para>
			 </sidebar> <sidebar> <title><emphasis>DICA</emphasis> <command>apt --reinstall</command> e <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>reinstalação</primary>
			</indexterm>
			 <para>
				O sistema pode, às vezes, ser danificado com a remoção ou modificação de arquivos num pacote. A forma mais fácil de recuperar estes arquivos é reinstalar o pacote afetado. Infelizmente, o sistema de empacotamento nota que o pacote está instalado e se recusa educadamente a reinstalá-lo; para evitar isto, use a opção <literal>--reinstall</literal> dos comandos <command>apt</command> e<command>apt-get</command>. O comando abaixo reinstala o <emphasis role="pkg">postfix</emphasis> mesmo quando ele já estejapresente:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				O <command>aptitude</command> em linha de comando é ligeiramente diferente, mas atinge os mesmos resultados com <command>aptitude reinstall postfix</command>.
			</para>
			 <para>
				O problema não ocorre com o <command>dpkg</command>, mas o administrador raramente usa-o diretamente.
			</para>
			 <para>
				Seja cuidadoso! Usar o <command>apt --reinstall</command> para recuperar pacotes alterados durante um ataque com certeza não retorna o sistema ao que ele era. <xref linkend="sect.dealing-with-compromised-machine" /> detalha os passos necessários para lidar com um sistema comprometido.
			</para>
			 </sidebar> <para>
				Se o arquivo <filename>sources.list</filename> menciona muitas distribuições, é possível passar a versão do pacote a instalar. Um número de versão específico pode ser solicitado com <command>apt install <replaceable>pacote</replaceable>=<replaceable>versão</replaceable></command>, mas indicar sua destribuição de origem (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> ou <emphasis role="distribution">Unstable</emphasis>) — com o <command>apt install <replaceable>pacote</replaceable>/<replaceable>distribuição</replaceable></command> — é normalmente preferido. Com este comando, é possível voltar a uma versão antiga do pacote (se por exemplo você sabe que isto vai funcionar bem), desde que ela ainda esteja disponível em alguma das fontes referenciadas pelo arquivo <filename>sources.list</filename>. Por outro lado, o arquivamento <literal>snapshot.debian.org</literal> pode vir ao seu socorro (veja a barra lateral <xref linkend="sidebar.snapshot.debian.org" />).
			</para>
			 <example>
				<title>Instalação da versão <emphasis role="distribution">unstable</emphasis> do <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <para>
				If the package to install has been made available to you under the form of a simple <filename>.deb</filename> file without any associated package repository, it is still possible to use APT to install it together with its dependencies (provided that the dependencies are available in the configured repositories) with a simple command: <command>apt install ./<replaceable>path-to-the-package.deb</replaceable></command>. The leading <literal>./</literal> is important to make it clear that we are referring to a filename and not to the name of a package available in one of the repositories.
			</para>
			 <sidebar> <title><emphasis>APROFUNDANDO</emphasis> O cache dos arquivos <filename>.deb</filename></title>
			 <para>
				APT keeps a copy of each downloaded <filename>.deb</filename> file in the directory <filename>/var/cache/apt/archives/</filename>. In case of frequent updates, this directory can quickly take a lot of disk space with several versions of each package; you should regularly sort through them. Two commands can be used: <command>apt-get clean</command> entirely empties the directory; <command>apt-get autoclean</command> only removes packages which can no longer be downloaded (because they have disappeared from the Debian mirror) and are therefore clearly useless (the configuration parameter <literal>APT::Clean-Installed</literal> can prevent the removal of <filename>.deb</filename> files that are currently installed).
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>Atualização do sistema</title>
			 <indexterm>
				<primary>atualização</primary>
				<secondary>atualização do sistema</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				Atualizações regulares são recomendadas, pois elas incluem as últimas atualizações de segurança. Para atualizar, use <command>apt upgrade</command>, <command>apt-get upgrade</command> ou <command>aptitude safe-upgrade</command> (claro que depois de um <command>apt update</command>). Este comando busca por pacotes instalados que possam ser atualizados sem remover nenhum pacote. Em outras palavras, o objetivo é garantir uma atualização com o mínimo de transtorno possível. O <command>apt-get</command> é um pouco mais pesado que <command>aptitude</command> ou o <command>apt</command> por que ele vai se recusar a instalar pacotes que não estavam instalados antes.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>DICA</emphasis> Atualização incremental</title>
			 <para>
				As we explained earlier, the aim of the <command>apt update</command> command is to download for each package source the corresponding <filename>Packages</filename> (or <filename>Sources</filename>) file. However, even after a <command>xz</command> compression, these files can remain rather large (the <filename>Packages.xz</filename> for the <foreignphrase>main</foreignphrase> section of <emphasis role="distribution">Stretch</emphasis> takes more than 6 MB). If you wish to upgrade regularly, these downloads can take up a lot of time.
			</para>
			 <para>
				Para acelerar o processo do APT pode baixar arquivos “diff” contendo as mudanças desde o update anterior, ao invés de todo o arquivo. Para isto, os espelhos oficiais do Debian distribuem arquivos diferentes que listam as diferenças entre uma versão do arquivos <filename>Packages</filename> e a versão seguinte. Eles são gerados em cada atualização dos arquivamentos e um histórico de uma semana é guardado. Cada um destes arquvios de "diff" apenas ocupam uns poucos kilobytes para a <emphasis role="distribution">Unstable</emphasis>, de forma que a quatidade de dados baixados por um <command>apt update</command> semanal é às vezes dividido por 10. Para distribuições como a <emphasis role="distribution">Stable</emphasis> e a <emphasis role="distribution">Testing</emphasis>, que mudam menos, o ganho é ainda mais visível.
			</para>
			 <para>
				Entretanto, algumas vezes é interessante forçar o download do arquivo <filename>Packages</filename> todo, especialmente quando a última atualização é muito antiga e o mecanismo de diferenças incremental não vai ajudar muito. Isto também pode ser interessante quando o acesso à rede é muito rápido mas o processador da máquina que vai atualizar nem tanto, pois o tempo economizado para o download é maior que o perdido para juntar as versões dos arquivos (iniciando com a versão antiga e aplicando as diferenças baixadas). Para fazer isto, você pode usar o parâmetro de configuração <literal>Acquire::Pdiffs</literal> e configurar ele para <literal>false</literal>.
			</para>
			 </sidebar> <para>
				O <command>apt</command> vai geralmente selecionar o número de versão mais recente (exceto para pacotes de <emphasis role="distribution">Experimental</emphasis> e <emphasis role="distribution">stable-backports</emphasis>, que são normalmente ignorados independente do número da versão). Se você especificar a versão <emphasis role="distribution">Testing</emphasis> ou a <emphasis role="distribution">Unstable</emphasis> em seu arquivo <filename>sources.list</filename>, um <command>apt upgrade</command> vai trocar a maioria do seu sistema <emphasis role="distribution">Stable</emphasis> para <emphasis role="distribution">Testing</emphasis> ou <emphasis role="distribution">Unstable</emphasis>, que pode não ser o que você pretende.
			</para>
			 <para>
				Para dizer ao <command>apt</command> para usar uma distribuição específica quando buscando por pacotes para atualizar, você precisa usar a opção <literal>-t</literal> ou <literal>--target-release</literal>, seguida do nome da distribuição que você quer (por exemplo: <command>apt -t stable upgrade</command>). para evitar ficar usando esta opção toda vez que usa o <command>apt</command>, você pode adicionar <literal>APT::Default-Release "stable";</literal> no arquivo <filename>/etc/apt/apt.conf.d/local</filename>.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				Para atualizações mais importantes, como mudar de uma versão principal do Debian para a seguinte, você precisa usar <command>apt full-upgrade</command>. Com esta instrução, o <command>apt</command> vai completar a atualização mesmo se ele tiver que remover alguns pacotes obsoletos ou instalar novas dependências. Este também é o comando usado pelos usuários que trabalham diariamente com a versão Debian <emphasis role="distribution">Unstable</emphasis> e seguem sua evolução dia após dia. É tão simples que dispensa explicações: a reputação do APT é baseada nesta fantástica funcionalidade.
			</para>
			 <para>
				Diferente do <command>apt</command> e <command>aptitude</command>, o <command>apt-get</command> não conhece o comando <command>full-upgrade</command>. Em seu lugar, você deve usar <command>apt-get dist-upgrade</command> (”atualização de distribuição”), o histórico e bem conhecido comando que o <command>apt</command> e <command>aptitude</command> também aceitam para conveniência dos usuários que ficaram acostumados com ele.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>Opções de configuração</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>configuração</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				Além dos elementos de configuração já mencionados, é possível configurar certos aspectos do APT adicionando diretivas num arquivo do diretório <filename>/etc/apt/apt.conf.d/</filename>. Lembre, por exemplo, que é possível para o APT pedir ao <command>dpkg</command> para ignorar erros de conflito em arquivos ao especificar <literal>DPkg::options { "--force-overwrite"; }</literal>.
			</para>
			 <para>
				Se a rede só puder ser acessada através de um proxy, adicione uma linha como <literal>Acquire::http::proxy "http://<replaceable>seu-proxy</replaceable>:3128"</literal>. Para um proxy FTP, escreva <literal>Acquire::ftp::proxy "ftp://<replaceable>seu-proxy</replaceable>"</literal>. Para descobrir mais opções de configuração, leia a página de manual do <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> com o comando <command>man apt.conf</command> (para detalhes sobre páginas de manual, veja <xref linkend="sect.manual-pages" />).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>DE VOLTA AO BÁSICO</emphasis> Diretórios terminados em <filename>.d</filename></title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				Directórios com um sufixo <filename>.d</filename> estão sendo cada vez mais usados. Cada diretório representa um arquivo de configuração que é separado em múltiplos arquivos. Neste sentido, todos os arquivos em <filename>/etc/apt/apt.conf.d/</filename> são instruções para a configuração do APT. APT inclui eles em ordem alfabética, assim os últimos podem altera um elemento de configuração definido em um dos primeiros.
			</para>
			 <para>
				Esta estrutura trás alguma flexibilidade ao administrador da máquina e aos mantenedores de pacotes. Na verdade, o administrador pode modificar facilmente a configuração do software ao adicionar um arquivo pronto para usar no diretório em questão sem ter que alterar um arquivo existente. mantenedores de pacotes usam a mesma abordagem quando precisam adaptar a configuração de outro software para garantir que ele coexista perfeitamente com o seu. A política Debian proíbe explicitamente modificare arquivos de configuração de outros pacotes — apenas usuários tem autorização para isto. Lembre que durante uma atualização de pacote, o usuário escolhe a versão do arquivo de configuração que deve ser mantida quando uma modificação é detectada. Qualquer modificação externa do arquivo irá ativar este requisito, que irá perturbar o administrador, que é a certeza de não ter mudificado nada.
			</para>
			 <para>
				Sem um diretório <filename>.d</filename> é impossível para um pacote externo mudar as configurações de um programa sem modificar seu arquivo de configuração. Ao invés disto, ele deve pedir para o usuário fazer isto ele próprio e descrever no arquivo <filename>/usr/share/doc/<replaceable>pacote</replaceable>/README.Debian</filename> as operações a serem feitas.
			</para>
			 <para>
				Dependendo da aplicação, o diretório <filename>.d</filename> é usado diretamente ou gerenciado por um script externo que vai concatenar todos os arquivos para criar um outro arquivo de configuração. É importante executar o script depois de qualquer mudança neste diretório, para que as modificações mais recentes sejam aplicadas. Da mesma forma, é importante não trabalhar diretamente no arquivo de configuração criado automaticamente, já que toda alteração será perdida na próxima execução do script. A escolha de um método (diretório <filename>.d</filename> usado diretamente ou arquivo gerado a partir do diretório) é normalmente ditada por restrições de implementação, mas em ambos os casos os ganhos em termos de flexibilidade de configuração superam as pequenas complicações que são trazidas. O servidor de email Exim 4 é um exemplo do método de arquivo gerado: ele pode ser configurado através de vários arquivos (<filename>/etc/exim4/conf.d/*</filename>) que são concatenados em <filename>/var/lib/exim4/config.autogenerated</filename> pelo comando <command>update-exim4.conf</command>.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>Gerenciar prioridades de pacote</title>
			 <para>
				Um dos mais importantes aspectos na configuração do APT é o gerenciamento de prioridades associadas com cadafonte de pacote ("package source"). Por Exemplo, você pode querer extender uma distribuição com um ou dois pacotes mais novos da <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> ou <emphasis role="distribution">Experimental</emphasis>. É possível atribuir uma prioridade a cada pacote disponível (o mesmo pacote pode ter várias prioridades dependendo da sua versão ou da distribuição que o disponibiliza). Estas prioridades vão influenciar o comportamento do APT: para cada pacote, ele vai sempre selecionar a versão com a prioridade mais alta (exceto se esta versão é mais velha que a instalada e se sua prioridade for menor que 1000).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>fixando, a pinagem do APT</primary>
			</indexterm>
			 <indexterm>
				<primary>pacote</primary>
				<secondary>prioridade</secondary>
			</indexterm>
			 <indexterm>
				<primary>prioridade</primary>
				<secondary>prioridade do pacote</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>preferências</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>preferências</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				O APT define várias prioridades padrão. Cada versão de pacote instalada tem a prioridade 100. uma versão não instalada tem a prioridade 500 por padrão, mas pode pular para 990 se for parte da versão de destino (definida com a opção de linha de comando <literal>-t</literal> ou a diretiva de configuração <literal>APT::Default-Release</literal>).
			</para>
			 <para>
				Você pode modificar as prioridades adicionando entradas no arquivo <filename>/etc/apt/preferences</filename> com os nomes dos pacotes afetados, sua versão, sua origem e sua nova prioridade.
			</para>
			 <para>
				O APT nunca vai instalar uma versão mais antiga de um pacote (quer dizer, um pacote cujo número de versão é menor que o que está atualmente instalado) exceto se sua prioridade for maior que 1000. O APT vai sempre instalar o pacote de prioridade mais alta que satisfizer esta restrição. Se dois pacotes têm a mesma prioridade, o APT instala o mais novo (o que tiver o maior número de versão). Se dois pacotes da mesma versão tiverem a mesma prioridade mas conteúdos diferentes, o APT instala a versão que não estiver instalada (esta regra foi criada para o caso onde uma atualização de pacote que não incrementa o número de revisão, que é normalmente necessário).
			</para>
			 <para>
				Em termos mai concretos, umpacote cuja prioridade é menor que 0 nunca vai ser instalado. Um pacote com a prioridade entre 0 100 só vai ser instalado se nenhuma outra versão do pacote estiver instalada. Com uma prioridade entre 100 e 500, o pacote só será instalado se não houver uma versão mais nova instalada ou disponível em outra distribuição. Um pacote de prioridade entre 501 e 990 só será instalado se não houver uma versão mais nova instalada ou disponível numa distribuição destino. Com uma prioridade entre 990 e 1000, o pacote será instalado a menos que a versão instalada seja mais nova. Uma prioridade maior que 1000 vai sempre levar à instalação do pacote, mesmo se ela força o APT a fazer downgrade para uma versão mais antiga.
			</para>
			 <para>
				When APT checks <filename>/etc/apt/preferences</filename>, it first takes into account the most specific entries (often those specifying the concerned package), then the more generic ones (including for example all the packages of a distribution). If several generic entries exist, the first match is used. The available selection criteria include the package's name and the source providing it. Every package source is identified by the information contained in a <filename>Release</filename> file that APT downloads together with the <filename>Packages</filename> files. It specifies the origin (usually “Debian” for the packages of official mirrors, but it can also be a person's or an organization's name for third-party repositories). It also gives the name of the distribution (usually <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> or <emphasis role="distribution">Experimental</emphasis> for the standard distributions provided by Debian) together with its version (for example 9 for Debian <emphasis role="distribution">Stretch</emphasis>). Let's have a look at its syntax through some realistic case studies of this mechanism.
			</para>
			 <sidebar> <title><emphasis>CASO ESPECÍFICO</emphasis> Prioridade do <emphasis role="distribution">experimental</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				Se você listou a <emphasis role="distribution">Experimental</emphasis> em seu arquivo <filename>sources.list</filename>, os pacotes correspondentes quase nunca vão ser instalados, por que a prioridade padrão do APT é 1. Este é, claro, um caso particular, projetado para evitar que usuários instalem pacotes da <emphasis role="distribution">Experimental</emphasis> por engano. Os pacotes podem apenas ser intalados digitando <command>aptitude install <replaceable>pacote</replaceable>/experimental</command> — usuários digitando este comando podem apenas ser avisados dos riscos que estão assumindo. Ainda é possível (embora <emphasis>não</emphasis> recomendado) tratar pacotes da <emphasis role="distribution">Experimental</emphasis> como aqueles de outras distribuições dando a eles uma prioridade de 500. Isto é feito com uma entrada específica no <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar> <para>
				Vamos supor que você só quer usar os pacotes da versão estável do Debian. As previstas em outras versões não devem ser instaladas exceto se explicitamente solicitado. Você poderia escrever as seguintes entradas do arquivo <filename>/etc/apt/preferences</filename> :
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> define o nome da distribuição selecionada. <literal>o=Debian</literal> limita o escopo para pacotes cuja origem seja "Debian".
			</para>
			 <para>
				Let's now assume that you have a server with several local programs depending on the version 5.24 of Perl and that you want to ensure that upgrades will not install another version of it. You could use this entry:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.24*
Pin-Priority: 1001
</programlisting>
			 </informalexample> <para>
				A documentação de referência para este arquivo de configuração está disponível na página de manual <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>, que você lê com <command>man apt_preferences</command>.
			</para>
			 <sidebar> <title><emphasis>DICA</emphasis> Comentários no <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Explicação</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin-Priority</literal></primary>
			</indexterm>
			 <para>
				Não existe uma sintaxe oficial para colocar comentários no arquivo <filename>/etc/apt/preferences</filename>, mas algumas descrições textuais pode ser fornecidas colocando um ou mais campos "<literal>Explanation</literal>" no começo de cada entrada:
			</para>
			 <informalexample> 
<programlisting>Explanation: O pacote xserver-xorg-video-intel fornecido
Explanation: na experimental pode ser usado com segurança
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>Trabalhando com Distribuições Diversas</title>
			 <para>
				Sendo o <command>apt</command> uma ferramenta assim tão maravilhosa, é tentador pegar pacotes de outras ditribuicões. Por exemplo, depois de instalar um sistema <emphasis role="distribution">Stable</emphasis>, você pode querer tentar um pacote de software disponível na <emphasis role="distribution">Testing</emphasis> ou <emphasis role="distribution">Unstable</emphasis> sem divergir muito do estado inicial do sistema.
			</para>
			 <para>
				Mesmo se você ocasionalmente encontrar problemas enquanto estiver misturando pacotes de distribuições diferentes, o <command>apt</command> gerencia tal coexistência muito bem e limita os riscos de forma bastante efetiva. A melhor maneira de proceder é listando todas as distribuições usadas em <filename>/etc/apt/sources.list</filename> (algumas pessoas sempre botam as três distribuições, mas lembre-se que <emphasis role="distribution">Unstable</emphasis> é reservada para usuários experientes) e definindo a sua distribuição de referência com o parâmetro <literal>APT::Default-Release</literal> (Veja <xref linkend="sect.apt-upgrade" />).
			</para>
			 <para>
				Suponha que <emphasis role="distribution">Stable</emphasis> é sua distribuição de referência mas que <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis> também estão listadas em seu arquivo <filename>sources.list</filename>. Neste caso, você pode usar <command>apt- install <replaceable>pacote</replaceable>/testing</command> para instalar um pacote da <emphasis role="distribution">Testing</emphasis>. Se a instalação falha devido a algumas dependências não-satisfeitas, deixe ela resolver estas dependências na <emphasis role="distribution">Testing</emphasis> adicionando o parâmetro <literal>-t testing</literal>. O mesmo obviamente se aplica à <emphasis role="distribution">Unstable</emphasis>.
			</para>
			 <para>
				Nesta situação, atualizações (<command>upgrade</command> e <command>full-upgrade</command>) são feitas no <emphasis role="distribution">Stable</emphasis> exceto para pacotes já atualizados para uma outra distribuição: estes vão seguir as atualizações disponíveis em outras distribuições. Nós iremos explicar este comportamento com a ajuda de prioridades padrão configuradas pelo APT abaixo. Não hesite em usar <command>apt-cache policy</command> (veja a barra lateral <xref linkend="sidebar.apt-cache-policy" />) para verificar as prioridades dadas.
			</para>
			 <para>
				Tudo se baseia no fato de que o APT apenas considera pacotes com versão igual ou superior à instalada (assumindo que o <filename>/etc/apt/preferences</filename> não foi usado para forçar prioridades maiores que 1000 para alguns pacotes).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>DICA</emphasis> <command>apt-cache policy</command></title>
			 <para>
				Para entender melhor o mecanismo das prioridades, não hesite em executar <command>apt-cache policy</command> para exibir as prioridades padrão associadas a cada fonte de pacote. Você também pode usar <command>apt-cache policy <replaceable>pacote</replaceable></command> para exibir as prioridades de todas as versões disponíveis de um dado pacote.
			</para>
			 </sidebar> <para>
				Suponha que você instalou a versão 1 de um primeiro pacote da <emphasis role="distribution">Stable</emphasis> e que versão 2 e 3 estão respectivamente disponíveis na <emphasis role="distribution">Testing</emphasis> e na <emphasis role="distribution">Unstable</emphasis>. A versão instalada tem uma prioridade de 100 mas a versão disponível na <emphasis role="distribution">Stable</emphasis> (exatamente a mesma) tem uma prioridade de 990 (porque ela é parte da "target release"). Pacotes na <emphasis role="distribution">Testing</emphasis> e na <emphasis role="distribution">Unstable</emphasis> tem a prioridade de 500 (a prioridade padrão de uma versão não instalada). O ganhador é então a versão 1 com uma prioridade de 990. O pacote “fica na <emphasis role="distribution">Stable</emphasis>”.
			</para>
			 <para>
				Tomemos o exemplo de outro pacote cuja versão 2 foi instalada da <emphasis role="distribution">Testing</emphasis>. A versão 1 está disponível na <emphasis role="distribution">Stable</emphasis> e a versão 3 na <emphasis role="distribution">Unstable</emphasis>. A versão 1 (de prioridade 990 — logo, menor que 1000) é descartada pois é menor que a versão instalada. Sobram apenas as versões 2 e 3, ambas de prioridade 500. Perante esta alternativa, o APT seleciona a versão mais nova, aquela da <emphasis role="distribution">Unstable</emphasis>. Se você não quer que um pacote instalado da <emphasis role="distribution">Testing</emphasis> migre para a <emphasis role="distribution">Unstable</emphasis>, você terá que atribuir uma prioridade menor que 500 (490 por exemplo) para pacotes vindo da <emphasis role="distribution">Unstable</emphasis>. Você pode modificar o <filename>/etc/apt/preferences</filename> para obter este efeito:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>Rastreando Pacotes Instalados Automaticamente</title>
			 <para>
				Uma das funcionalidades essenciais do <command>apt</command> é o rastreamento de pacotes instalados somente através de dependências. Estes pacotes são chamados de "automático", e muitas vezes incluem bibliotecas, por exemplo.
			</para>
			 <para>
				With this information, when packages are removed, the package managers can compute a list of automatic packages that are no longer needed (because there is no “manually installed” packages depending on them). <command>apt-get autoremove</command> or <command>apt autoremove</command> will get rid of those packages. <command>aptitude</command> does not have this command because it removes them automatically as soon as they are identified. In all cases, the tools display a clear message listing the affected packages.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				É um bom hábito marcar como automático qualquer pacote que você não precisa diretamente de modo que eles são automaticamente removidos quando eles não são mais necessários.<command>apt-mark auto <replaceable>pacote</replaceable></command> marcará o pacote dado como automático enquanto <command>apt-mark manual <replaceable>pacote</replaceable></command> faz o oposto. <command>aptitude markauto</command> e <command>aptitude unmarkauto</command> trabalham da mesma forma, embora eles ofereçam mais recursos para a marcação de muitos pacotes de uma vez (veja <xref linkend="sect.aptitude" />). A interface interativa baseada em console do <command>aptitude</command> também torna mais fácil para analisar a "opção automático" em muitos pacotes.
			</para>
			 <indexterm>
				<primary><command>aptitude por que</command></primary>
			</indexterm>
			 <para>
				Alguém pode querer saber porque um pacote foi automaticamente instalado no sistema. Para obter esta informação na linha de comando, você pode usar <command>aptitude why <replaceable>pacote</replaceable></command> (<command>apt</command> e <command>apt-get</command> não tem recurso semelhante):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         
i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>ALTERNATIVA</emphasis> <command>deborphan</command> e <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				Nos dias em que <command>apt</command>, <command>apt-get</command> e <command>aptitude</command> não foram capazes de rastrear pacotes automáticos, havia dois utilitários que produziam listas de pacotes desnecessários: <command>deborphan</command> e <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> é o mais rudimentar dos dois. Ele simplesmente varre as seções <literal>libs</literal> e <literal>oldlibs</literal> (na ausência de instruções complementares) procurando por pacotes atualmente instalados e que nenhum outro pacote dependa. A lista resultante pode servir como uma base para remover pacotes desnecessários.
			</para>
			 <para>
				<command>debfoster</command> tem uma abordagem mais elaborada, parecida com a de um APT: Ele mantém uma lista de pacotes que foram explicitamente instalados, e lembra que pacotes são realmente requeridos entre cada invocação. Se novos pacotes aparecem no sistema e se o <command>debfoster</command> não reconhece eles como pacotes requeridos, eles serão mostrados na tela junto com uma lista de suas dependências. O programa então oferece uma escolha: remover o pacote (possivelmente junto com tudo que depende dele), marcá-lo como explicitamente requerido, ou ignorâ-lo temporariamente.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>O Comando <command>apt-cache</command></title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>buscador de pacotes</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>exibição de cabeçalho</secondary>
		</indexterm>
		 <indexterm>
			<primary>busca de pacotes</primary>
		</indexterm>
		 <indexterm>
			<primary>pacote</primary>
			<secondary>busca</secondary>
		</indexterm>
		 <para>
			O comando <command>apt-cache</command> pode apresentar grande parte das informações armazenadas no banco de dados interno do APT. Esta informação é uma espécie de cache, pois é recolhida de diferentes fontes, listadas no arquivo <filename>sources.list</filename>. Isso acontece durante a operação do <command>apt update</command>.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>VOCABULÁRIO</emphasis> Cache</title>
		 <para>
			O cache é um sistema de armazenamento temporário usado para acelerar o acesso frequente de dados quando o método de acesso habitual é caro (em termos de performance). Este conceito pode ser aplicado em diversas situações e em diferentes escalas, desde o núcleo de microprocessadores até sistemas de armazenamento de alta qualidade.
		</para>
		 <para>
			No caso do APT, os arquivos <filename>Packages</filename> de referência são localizados nos espelhos Debian. Ou seja, será bastante ineficaz passar pela rede a cada busca que quisermos fazer no banco de dados de pacotes disponíveis. É por isto que o APT armazena uma cópia destes arquivos (em <filename>/var/lib/apt/lists/</filename>) e buscas são feitas neles. Similarmente, <filename>/var/cache/apt/archives/</filename> contém um cache de pacotes já baixados para evitar baixá-los de novo se você precisar deles depois de uma remoção.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			O comando <command>apt-cache</command> pode buscar pacotes baseado em palavras-chave com <command>apt-cache search <replaceable>palavra-chave</replaceable></command>. Também pode mostrar os cabeçalhos das versões disponíveis dos pacotes com <command>apt-cache show <replaceable>pacote</replaceable></command>. Este comando fornece a descrição do pacote, suas dependências, o nome de seu mantenedor, etc. Observe que <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> funcionam do mesmo jeito.
		</para>
		 <sidebar> <title><emphasis>ALTERNATIVE</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> é uma ferramenta muito rudimentar, implementando, basicamente <command>grep</command> em descrições de pacotes. Que muitas vezes retorna resultados demais ou nenhum quando você incluir muitas palavras-chave.
		</para>
		 <para>
			<command>axi-cache search <replaceable>expressão</replaceable></command>, por outro lado, oferece melhores resultados, ordenados por relevância. Ele usa o Motor de busca <emphasis>Xapian</emphasis> que faz parte do pacote <emphasis role="pkg">apt-xapian-index</emphasis> que indexa toda a informação pacote (e mais, como o arquivo <filename>.desktop</filename> de todos os pacotes Debian). Ele sabe sobre marcas (veja a barra lateral <xref linkend="sidebar.debtags" />) e retorna os resultados em questão de milissegundos.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
100 results found.
Results 1-20:
100% packagesearch - GUI for searching packages and viewing package information
100% apt-utils - package management related utility programs
99% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages
98% migemo - Transitional package for migemo
95% apt-file - search for files within Debian packages (command-line interface)
[...]
79% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages
More terms: paquets debian pour debtags recherche gift gnuift
More tags: suite::debian works-with::software:package role::program admin::package-management interface::commandline scope::utility field::biology:bioinformatics
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			Algumas funcionalidades são raramente usadas. Por exemplo, <command>apt-cache policy</command> mostra as prioridades das fontes de pacotes assim como de pacotes individuais. Outro exemplo é <command>apt-cache dumpavail</command> que mostra os cabeçalhos de todas as versões disponíveis de todos os pacotes. <command>apt-cache pkgnames</command> mostra a lista de todos os pacotes que aparecem pelo menos uma vez no cache.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>Interfaces: <command>aptitude</command>, <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>interfaces</secondary>
		</indexterm>
		 <para>
			APT é um programa C++ cujo código reside principalmente na biblioteca compartilhada <command>libapt-pkg</command>. Usar uma biblioteca compartilhada facilita a criação de interfaces de usuário (front-ends), já que o código contido na biblioteca pode facilmente ser reutilizado. Historicamente, <command>apt-get</command> foi projetado apenas como um front-end de teste para <command>libapt-pkg</command>, mas seu sucesso tende a obscurecer esse fato.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> é um programa interativo que pode ser usado em modo semi-gráfico no console. Você pode navegar a lista de pacotes disponíveis e instalados, buscar em todas as informações disponíveis e selecionar pacotes para instalar ou remover. O programa é projetado especificamente para ser usado pelos administradores, de forma que seu comportamento padrão seja muito mais inteligente que o do <command>apt-get</command> e sua interface muito mais fácil de entender.
			</para>
			 <figure>
				<title>O gerenciador de pacotes <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				When it starts, <command>aptitude</command> shows a list of packages sorted by state (installed, non-installed, or installed but not available on the mirrors — other sections display tasks, virtual packages, and new packages that appeared recently on mirrors). To facilitate thematic browsing, other views are available. In all cases, <command>aptitude</command> displays a list combining categories and packages on the screen. Categories are organized through a tree structure, whose branches can respectively be unfolded or closed with the <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> and <keycombo><keycap>]</keycap></keycombo> keys. <keycombo><keycap>+</keycap></keycombo> should be used to mark a package for installation, <keycombo><keycap>-</keycap></keycombo> to mark it for removal and <keycombo><keycap>_</keycap></keycombo> to purge it (note that these keys can also be used for categories, in which case the corresponding actions will be applied to all the packages of the category). <keycombo><keycap>u</keycap></keycombo> updates the lists of available packages and <keycombo action="simul"><keycap>Shift</keycap><keycap>u</keycap></keycombo> prepares a global system upgrade. <keycombo><keycap>g</keycap></keycombo> switches to a summary view of the requested changes (and typing <keycombo><keycap>g</keycap></keycombo> again will apply the changes), and <keycombo><keycap>q</keycap></keycombo> quits the current view. If you are in the initial view, this will effectively close <command>aptitude</command>.
			</para>
			 <sidebar> <title><emphasis>DOCUMENTAÇÃO</emphasis> <command>aptitude</command></title>
			 <para>
				Esta seção não cobre os detalhes mais sutis do uso do <command>aptitude</command>, ao invés disto ela se concentra em dar-lhe um kit de sobrevivência para usá-lo. <command>aptitude</command> é bastante bem documentado e aconselhamos que você use seu manual completo disponível no pacote <emphasis role="pkg">aptitude-doc-en</emphasis> (<filename>/usr/share/doc/aptitude/html/en/index.html</filename>).
			</para>
			 </sidebar> <para>
				Para buscar por um pacote, você pode digitar <keycombo><keycap>/</keycap></keycombo> seguido pelo padrão de busca. Este padrão pode coincidir com o nome do pacote, mas também pode ser aplicado à descrição (se precedido por <literal>~d</literal>), à seção (com <literal>~s</literal>) ou a outras características detalhadas na documentação. Os mesmos padrões podem filtrar a lista de pacotes exibidos: digite a tecla <keycombo><keycap>l</keycap></keycombo> (de <foreignphrase>limit</foreignphrase>) e digite o padrão.
			</para>
			 <para>
				Gerenciando o “automatic flag” do pacote Debian (veja <xref linkend="sect.automatic-tracking" />) é fácil com <command>aptitude</command>. É possível navegar na lista de pacotes instalados e pacotes marcados como automáticos com <keycombo action="simul"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> ou remover a marca com a tecla <keycombo><keycap>m</keycap></keycombo>. “Pacotes automáticos” são exibidos com um "A" na lista de pacotes. Esse recurso também oferece uma maneira simples de visualizar os pacotes em uso em uma máquina, sem todas as bibliotecas e dependências que você realmente não se preocupa. O padrão relacionado que pode ser usado com <keycombo><keycap>l</keycap></keycombo> (para ativar o modo filtro) é <literal>~i!~M</literal>. Ele especifica que você só quer ver os pacotes instalados (<literal>~i</literal>) não marcados como automáticos (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>FERRAMENTA</emphasis> Usando <command>aptitude</command> na interface de linha de comando</title>
			 <para>
				A maioria das funcionalidade do <command>aptitude</command> estão disponíveis tanto na interface interativa quanto na linha de comando. A interface de linha de comando é bem familiar para quem já usa os comandos <command>apt-get</command> e <command>apt-cache</command>.
			</para>
			 <para>
				As funcionalidade avançadas do <command>aptitude</command> também estão disponíveis na linha de comando. Você pode usar os mesmos padrões de busca de pacotes da versão interativa. Por exemplo, se você quiser limpar a lista de pacotes "instalada manualmente", e se voc?e sabe que nenhum dos programas instalados localmente requer bibliotecas particulares ou módulos Perl, você pode marcar os pacotes correspondentes como automáticos com um único comando:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				Aqui, você pode claramente ver o poder do sistema de padrões de busca do <command>aptitude</command>, que permite a seleção instantânea de todos os pacotes nas seções <literal>libs</literal> e <literal>perl</literal>.
			</para>
			 <para>
				Cuidado, se alguns pacotes são marcados como automáticos e se não há outros pacotes dependendo deles, eles serão removidos imediatamente (depois de uma confirmação).
			</para>
			 </sidebar> <section>
				<title>Gerenciando Recomendações, Sugestões e Tarefas</title>
				 <para>
					Another interesting feature of <command>aptitude</command> is the fact that it respects recommendations between packages while still giving users the choice not to install them on a case by case basis. For example, the <emphasis role="pkg">gnome</emphasis> package recommends <emphasis role="pkg">brasero</emphasis> (among others). When you select the former for installation, the latter will also be selected (and marked as automatic if not already installed on the system). Typing <keycombo><keycap>g</keycap></keycombo> will make it obvious: <emphasis role="pkg">brasero</emphasis> appears on the summary screen of pending actions in the list of packages installed automatically to satisfy dependencies. However, you can decide not to install it by deselecting it before confirming the operations.
				</para>
				 <para>
					Observe que esta funcionalidade de rastreio de recomendação não se aplica a atualizações (upgrades). Por exemplo, se uma nova versão do <emphasis role="pkg">gnome</emphasis> recomenda um pacote que não recomendava antes, o pacote não vai ser marcado para instalação. Entretanto, ele vai ser listado na tela de atualização para que o administrador possa selecioná-lo para instalação, se desejar.
				</para>
				 <para>
					Suggestions between packages are also taken into account, but in a manner adapted to their specific status. For example, since <emphasis role="pkg">gnome</emphasis> suggests <emphasis role="pkg">empathy</emphasis>, the latter will be displayed on the summary screen of pending actions (in the section of packages suggested by other packages). This way, it is visible and the administrator can decide whether to take the suggestion into account or not. Since it is only a suggestion and not a dependency or a recommendation, the package will not be selected automatically — its selection requires a manual intervention from the user (thus, the package will not be marked as automatic).
				</para>
				 <para>
					No mesmo espírito, lembre que o <command>aptitude</command> faz um uso inteligente do conceito de tarefa. Como tarefas são mostradas como categorias nas telas de listas de pacote, você pode tanto selecionar uma tarefa completa para instalar ou remover, ou navegar na lista de pacotes inclusa na tarefa para selecionar um subconjunto menor.
				</para>

			</section>
			 <section>
				<title>Algoritmos de Solução Melhores</title>
				 <para>
					Para concluir esta seção, note que o <command>aptitude</command> tem algoritmos mais elaborados comparado com o <command>apt-get</command> quando se trata de resolver situações difíceis. Quando um conjunto de ações é requerido e quando estas ações combinadas levam a um sistema incoerente, o <command>aptitude</command> calcula vários cenários possíveis e apresenta eles domais para o manos relevante. Entretanto, estes algoritmos não são à prova de falhas. Afortunadamente existe sempre a possibilidade de fazer uma seleção manual das ações a realizar. Quando as ações atualmente selecionadas levam a uma contradição, a parte de cima da tela indica um número de pacotes "quebrados" (e você pode diretamente navegar para estes pacotes pressionando <keycombo><keycap>b</keycap></keycombo>). É então possível construir manualmente uma solução para os problemas encontrados. Em particular, você pode obter acesso a diferentes versões disponíveis simplesmente selecionando o pacote com <keycombo><keycap>Enter</keycap></keycombo>. Se a seleção de uma destas versões resolve o problema, não hesite em usá-la. Quando o número de pacotes quebrados baixa a zero, você pode seguramente ir para a tela de resumo das ações pendentes para uma última verificação antes de aplicar as ações.
				</para>
				 <sidebar> <title><emphasis>NOTA</emphasis> logs do <command>aptitude</command></title>
				 <para>
					Assim como o <command>dpkg</command>, <command>aptitude</command> mantém um registro das ações executadas no seu arquivo de log (<filename>/var/log/aptitude</filename>). Entretanto, como os dois comandos trabalham em níveis muito diferentes, você não achará a mesma informação nos seus respectivos arquivos de log. Enquanto o <command>dpkg</command> loga todas as operações executadas em pacotes individuais, passo a passo, o <command>aptitude</command> dá uma visão geral das operações de alto nível, como uma atualização de sistema.
				</para>
				 <para>
					Cuidado, este arquivo de log contém um resumo das operações realizadas pelo <command>aptitude</command>. Se outras interfaces (ou o próprio <command>dpkg</command>) forem usadas ocasionalmente, então o log do <command>aptitude</command> vai conter apenas uma visão parcial das operações, de forma que você não pode se basear simplesmente nele para ter uma história totalmente confiável do seu sistema.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> é um gerenciador de pacotes gráfico para o Debian que possui uma interface gráfica limpa e eficiente baseada em GTK+/GNOME. Seus muitos filtros prontos para uso permitem o acesso rápido a novos pacotes disponibilizados, pacotes instalados, pacotes atualizáveis, pacotes obsoletos e muito mais. Se você navegar através destas listas, você poderá selecionar as operacões a serem feitas nos pacotes (instalar, atualizar, remover, expurgar); estas operações não são realizadas imediatamente, mas postas em uma lista de tarefas. Um único clique de um botão então valida as operações, que são então realizadas todas juntas.
			</para>
			 <figure>
				<title>gerenciador de pacotes <command>synaptic</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>Verificando Autenticidade do Pacote</title>
		 <indexterm>
			<primary>pacote</primary>
			<secondary>verificação de autenticidade</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacote</primary>
			<secondary>lacre</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacote</primary>
			<secondary>assinatura</secondary>
		</indexterm>
		 <indexterm>
			<primary>assinatura</primary>
			<secondary>assinatura do pacote</secondary>
		</indexterm>
		 <indexterm>
			<primary>autenticação</primary>
			<secondary>autenticação de pacote</secondary>
		</indexterm>
		 <para>
			Segurança é muito importante para os administradores da Falcot Corp. E desta forma, eles precisam ter certeza que estão instalando pacotes que vem do Debian, sem interceptações no caminho. Um cracker de computador pode tentar adicionar código malicioso num pacote que de outra forma seria legítimo. Tal pacote, se instalado, poderia fazer qualquer coisa que o cracker o tivesse projetado para fazer, incluindo por exemplo revelar senhas e informações confidenciais. Para evitar este risco, o Debian fornece um selo de qualidade a prova de interceptações para garantir - no momento da instalação - que um pacote realmente vem de um mentenedor oficial e não foi modificado por um terceiro.
		</para>
		 <para>
			O selo funciona como uma cadeia de hashes criptográficos e uma assinatura. O arquivo assinado é o arquivo <filename>Release</filename> file, fornecido pelos espelhos Debian. Ele contém uma lista de arquivos <filename>Packages</filename> (incluindo suas formas compactadas, <filename>Packages.gz</filename> e <filename>Packages.xz</filename>, e as versões incrementais), junto com suas hashes MD5, SHA1 e SHA256 que garantem que os arquivos não foram interceptados. Estes arquivos <filename>Packages</filename> contém uma lista de pacotes Debian disponíveis no espelho, junto com seus hashes, que garantem, por sua vez, que os conteúdos dos próprios pacotes também não foram alterados.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			APT needs a set of trusted GnuPG public keys to verify signatures in the <filename>Release.gpg</filename> files available on the mirrors. It gets them from files in <filename>/etc/apt/trusted.gpg.d/</filename> and from the <filename>/etc/apt/trusted.gpg</filename> keyring (managed by the <command>apt-key</command> command). The official Debian keys are provided and kept up-to-date by the <emphasis role="pkg">debian-archive-keyring</emphasis> package which puts them in <filename>/etc/apt/trusted.gpg.d/</filename>. Note however that the first installation of this particular package requires caution: even if the package is signed like any other, the signature cannot be verified externally. Cautious administrators should therefore check the fingerprints of imported keys before trusting them to install new packages:
		</para>
		 
<screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   rsa4096 2014-11-21 [SC] [expires: 2022-11-19]
      126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid           [ unknown] Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   rsa4096 2014-11-21 [SC] [expires: 2022-11-19]
      D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid           [ unknown] Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   rsa4096 2013-08-17 [SC] [expires: 2021-08-15]
      75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid           [ unknown] Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-stretch-automatic.gpg
-----------------------------------------------------------
pub   rsa4096 2017-05-22 [SC] [expires: 2025-05-20]
      E1CF 20DD FFE4 B89E 8026  58F1 E0B1 1894 F66A EC98
uid           [ unknown] Debian Archive Automatic Signing Key (9/stretch) &lt;ftpmaster@debian.org&gt;
sub   rsa4096 2017-05-22 [S] [expires: 2025-05-20]

/etc/apt/trusted.gpg.d/debian-archive-stretch-security-automatic.gpg
--------------------------------------------------------------------
pub   rsa4096 2017-05-22 [SC] [expires: 2025-05-20]
      6ED6 F5CB 5FA6 FB2F 460A  E88E EDA0 D238 8AE2 2BA9
uid           [ unknown] Debian Security Archive Automatic Signing Key (9/stretch) &lt;ftpmaster@debian.org&gt;
sub   rsa4096 2017-05-22 [S] [expires: 2025-05-20]

/etc/apt/trusted.gpg.d/debian-archive-stretch-stable.gpg
--------------------------------------------------------
pub   rsa4096 2017-05-20 [SC] [expires: 2025-05-18]
      067E 3C45 6BAE 240A CEE8  8F6F EF0F 382A 1A7B 6500
uid           [ unknown] Debian Stable Release Key (9/stretch) &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   rsa4096 2012-04-27 [SC] [expires: 2020-04-25]
      A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid           [ unknown] Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   rsa4096 2012-05-08 [SC] [expires: 2019-05-07]
      ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid           [ unknown] Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;
</screen>
		 <sidebar> <title><emphasis>NA PRÁTICA</emphasis> Adicionando chaves confiáveis</title>
		 <indexterm>
			<primary>chave confiável</primary>
		</indexterm>
		 <indexterm>
			<primary>chave</primary>
			<secondary>chaves de autenticação do APT</secondary>
		</indexterm>
		 <para>
			Quando uma origem de pacotes de terceiros é adicionada ao arquivo <filename>sources.list</filename>, O apt precisa ser instruído a confiar na chave de autenticação GPG correspondente (caso contrário ele vai ficar reclamando que não pode garantir a autenticidade dos pacotes vindo daquele repositório). O primeiro passo, obviamente, é obter a chave pública. Em geral, a chave vai ser fornecida como um pequeno arquivo texto, que vamos chamar de <filename>key.asc</filename> nos seguintes exemplos.
		</para>
		 <para>
			To add the key to the trusted keyring, the administrator can just put it in a <filename>*.asc</filename> file in <filename>/etc/apt/trusted.gpg.d/</filename>. This is supported since Debian <emphasis role="distribution">Stretch</emphasis>. With older releases, you had to run <command>apt-key add &lt; key.asc</command>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			Para pessoas que precisam de uma aplicação dedicada e mais detalhes sobre as chaves confiáveis, é possível usar o <command>gui-apt-key</command> (no pacote de mesmo nome), uma pequena interface gráfica que gerencia o chaveiro confiável.
		</para>
		 </sidebar> <para>
			Uma vez que as chaves apropriadas estiverem no chaveiro, o APT vai verificar as assinaturas antes de operações arriscadas, e as interface vão exibir um aviso se tiverem que instalar um pacote cuja autenticidade não puder ser verificada.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>Atualizando de uma Versão Estável para a Próxima</title>
		 <para>
			Uma das funcionalidades mais conhecidas do Debian é sua habilidade de atualizar um sistema instalado de uma versão estável para a próxima: <foreignphrase>dist-upgrade</foreignphrase> — um termo bem conhecido — tem contribuído amplamente para a reputação do projeto. Com algumas poucas precauções, atualizar um computador pode levar alguns minutos, ou algumas dezenas de minutos, dependendo da velocidade de download do repositório de pacotes.
		</para>
		 <section>
			<title>Procedimento Recomendado</title>
			 <para>
				Como o Debian tem bastante tempo para evoluir entre lançamentos da versão estável, você deve ler as notas de lançamento ("release notes") antes de atualizar.
			</para>
			 <sidebar> <title><emphasis>DE VOLTA AO BÁSICO</emphasis> Notas de lançamento</title>
			 <para>
				As notas de lançamento para um sistema operacional (e, mais geralmente, para qualquer software) são um documento que dá uma visão geral do software, com alguns detalhes a respeito das particularidades de uma determinada versão. Estes documentos são em geral curtos se comparados com a documentação completa, e eles normalmente listam as funcionalidades que foram incluídas da versão anterior para a atual. Eles também dão detalhes dos procedimentos de atualização, alertas para os usuários da versão anterior e algumas erratas.
			</para>
			 <para>
				Release notes are available online: the release notes for the current stable release have a dedicated URL, while older release notes can be found with their codenames: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/jessie/releasenotes" />
			</para>
			 </sidebar> <para>
				In this section, we will focus on upgrading a <emphasis role="distribution">Jessie</emphasis> system to <emphasis role="distribution">Stretch</emphasis>. This is a major operation on a system; as such, it is never 100% risk-free, and should not be attempted before all important data has been backed up.
			</para>
			 <para>
				Outro hábito que mantém a atualização mais fácil (e rápida) é organizar a quantidade de pacotes instalados e manter apenas aqueles que são realmente necessários. Ferramentas úteis para isto incluem <command>aptitude</command>, <command>deborphan</command> e <command>debfoster</command> (veja <xref linkend="sect.automatic-tracking" />). Por exemplo, você pode usar o seguinte comando: e, em seguida, usar o modo interativo do <command>aptitude</command> para checar e ajustar as remoções programadas:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Now for the upgrading itself. First, you need to change the <filename>/etc/apt/sources.list</filename> file to tell APT to get its packages from <emphasis role="distribution">Stretch</emphasis> instead of <emphasis role="distribution">Jessie</emphasis>. If the file only contains references to <emphasis role="distribution">Stable</emphasis> rather than explicit codenames, the change isn't even required, since <emphasis role="distribution">Stable</emphasis> always refers to the latest released version of Debian. In both cases, the database of available packages must be refreshed (with the <command>apt update</command> command or the refresh button in <command>synaptic</command>).
			</para>
			 <para>
				Uma vez que estas novas fontes de pacotes for cadastrado, você deve primeiro fazer uma atualização mínima com <command>apt upgrade</command>. Ao fazer a atualização em duas etapas, nos facilita o trabalho das ferramentas de gerenciamento de pacotes e muitas vezes garante que temos as versões mais recentes das pessoas, o que pode ter acumulado correções de bugs e melhorias necessárias para concluir a atualização completa da distribuição.
			</para>
			 <para>
				Once this first upgrade is done, it is time to handle the upgrade itself, either with <command>apt full-upgrade</command>, <command>aptitude</command>, or <command>synaptic</command>. You should carefully check the suggested actions before applying them: you might want to add suggested packages or deselect packages which are only recommended and known not to be useful. In any case, the front-end should come up with a scenario ending in a coherent and up-to-date <emphasis role="distribution">Stretch</emphasis> system. Then, all you need is to do is wait while the required packages are downloaded, answer the Debconf questions and possibly those about locally modified configuration files, and sit back while APT does its magic.
			</para>

		</section>
		 <section>
			<title>Lidando com Problemas após uma Atualização</title>
			 <para>
				Apesar dos esforços dos mantenedores Debian, uma atualização geral do sistema não é sempre tão suave quando você gostaria. Novas versões de software podem ser incompatíveis com versões anteriores (por exemplo, seu comportamento padrão ou seu formato de dados pode ter mudado). Além disso, alguns bugs podem passam despercebidos apesar da fase de testes pela qual o lançamento do Debian sempre passa.
			</para>
			 <para>
				Para antecipar alguns destes problemas, você pode instalar o pacote <emphasis role="pkg">apt-listchanges</emphasis>, que mostra informações sobre possíveis problemas no início de uma atualização de pacotes. Esta informação é compilada pelos mantenedores de pacote e colocada em arquivos <filename>/usr/share/doc/<replaceable>package</replaceable>/NEWS.Debian</filename> para os usuários usarem. A leitura destes arquivos (possivelmente através do <emphasis role="pkg">apt-listchanges</emphasis>) pode evitar surpresas desagradáveis.
			</para>
			 <para>
				Ás vezes você descobre que uma nova versão de um software não funciona de jeito nenhum. Isto geralmente acontece se a aplicação não é muito popular e não foi testada o suficiente; uma atualização que acabou de acontecer também pode introduzir regressões que são encontradas apenas no lançamento estável ("stable"). Em ambos os casos, a primeira coisa a fazer é olhar o sistema de rastreamento de bugs em <literal>https://bugs.debian.org/<replaceable>pacote</replaceable></literal>, e verificar se o problema já foi relatado. Se não tiver sido, você mesmo pode relatá-lo com o <command>reportbug</command>. Se ele já é conhecido, o bug report e as mensagens associadas a ele normalmente são uma excelente fonte de informações relativas ao bug:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						algumas vezes um patch já existe, e está disponível no bug report; você pode recompilar uma versão consertada de um pacote quebrado localmente (see <xref linkend="sect.rebuilding-package" />);
					</para>

				</listitem>
				 <listitem>
					<para>
						Em outros casos, os usuários podem encontrar uma gambiarra para o problema e compartilhar suas ideias nas respostas do bug report;
					</para>

				</listitem>
				 <listitem>
					<para>
						em outros casos, um pacote consertado já pode ter sido preparado e publicado pelo mantenedor.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Dependendo da severidade do bug, uma nova versão do pacote pode ser preparada especificamente para uma nova revisão do lançamento estável. Quando isto acontece, o pacote consertado é disponibilizado na seção <literal>proposed-updates</literal> dos espelhos Debian (veja <xref linkend="sect.proposed-updates" />). A entrada correspondente pode então ser adicionada temporariamente ao arquivo <filename>sources.list</filename>, e pacotes atualizados podem ser instalados com <command>apt</command> ou <command>aptitude</command>.
			</para>
			 <para>
				Por vezes, o pacote consertado não fica disponível nesta seção por faltar a validação de alguma pendência dos Stable Release Managers. Você pode verificar se este é o caso na página deles. Pacotes listados lá ainda não foram disponibilizados, mas pelo menos você saberá que o processo de publicação está andando. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>Mantendo um Sistema Atualizado</title>
		 <para>
			A distribuição Debian é dinâmica e muda continuamente. A maioria das mudanças ficam nas versões <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis>, mas mesmo a <emphasis role="distribution">Stable</emphasis> é atualizada de tempos em tempos, geralmente por algo relativo a segurança. Qualquer que seja a versão do Debian que o sistema rodar, é geralmente uma boa ideia mantê-la atualizada, de forma que você possa se beneficiar das recentes evoluções e consertos de bug.
		</para>
		 <para>
			Mesmo que seja obviamente possível executar periodicamente uma ferramenta para verificar por atualizações disponíveis e executar as atualizações, tal tarefa repetitiva é tediosa, especialmente quando for feita em várias máquinas. Felizmente, assim como muitas tarefas repetitivas, ela pode ser parcialmente automatizada, e um conjunto de ferramentas já foi desenvolvido para isto.
		</para>
		 <para>
			A primeira destas ferramentas é a <command>apticron</command>, no pacote de mesmo nome. Seu principal efeito é executar um script diariamente (via <command>cron</command>). O script atualiza a lista de pacotes disponíveis, e, se alguns pacotes instalados não estão na versão mais recente, ele envia um email com uma lista destes pacotes e com as mudanças que foram feitas nas novas versões. Obviamente, este pacote foca principalmente em usuários do Debian <emphasis role="distribution">Stable</emphasis>, já que os emails diários podem ser muito longos para versões de ritmo mais rápido do Debian. Quando atualizações são disponibilizadas, o <command>apticron</command> automaticamente baixa elas. Mas não as instala — o administrador ainda tem que fazer isto — mas ter os pacotes já baixados e disponíveis localmente (no cache do APT) torna o serviço mais rápido.
		</para>
		 <para>
			Administrators in charge of several computers will no doubt appreciate being informed of pending upgrades, but the upgrades themselves are still as tedious as they used to be. Periodic upgrades can be enabled: it uses a <command>systemd</command> timer unit or <command>cron</command>. If <emphasis role="pkg">systemd</emphasis> is not installed the <filename>/etc/cron.daily/apt-compat</filename> script (in the <emphasis role="pkg">apt</emphasis> package) comes in handy. This script is run daily (and non-interactively) by <command>cron</command>. To control the behavior, use APT configuration variables (which are therefore stored in a file <filename>/etc/apt/apt.conf.d/10periodic</filename>). The main variables are:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						Esta opção especifica a frequência (em dias) na qual a lista de pacotes é atualizada. Usuários do <command>apticron</command> podem seguir sem esta variável, já que o <command>apticron</command> já faz esta tarefa.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						De novo, esta opção indica uma frequência (em dias), agora para o download dos pacotes em si. Novamente, os usuários do <command>apticron</command> não precisam disto.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						Esta opção cobre uma funcionalidade que o <command>apticron</command> não tem. Ela controla quão frequentemente pacotes obsoletos (aqueles não referenciados por mais nenhuma distribuição) são removidos do cache do APT. Isto mantém o cache do APT num tamanho razoável e evita que você tenha que se preocupar com esta tarefa.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						Quando esta opção está ativada, o script será executado diariamente <command>unattended-upgrade</command> (do pacote <emphasis role="pkg">unattended-upgrades</emphasis>) que - como o próprio nome sugere - pode automatizar o processo de atualização de alguns pacotes (por padrão, ele só cuida de atualizações de segurança, mas isso pode ser personalizado em <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Observe que esta opção pode ser definida com a ajuda de debconf executando <command>dpkg-reconfigure -plow unattended-upgrades</command>.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Other options can allow you to control the cache cleaning behavior with more precision. They are not listed here, but they are described in the <filename>/usr/lib/apt/apt.systemd.daily</filename> script.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			These tools work very well for servers, but desktop users generally prefer a more interactive system. The package <emphasis role="pkg">gnome-packagekit</emphasis> provides an icon in the notification area of desktop environments when updates are available; clicking on this icon then runs <command>gpk-update-viewer</command>, a simplified interface to perform updates. You can browse through available updates, read the short description of the relevant packages and the corresponding <filename>changelog</filename> entries, and select whether to apply the update or not on a case-by-case basis.
		</para>
		 <figure>
			<title>Atualizando com <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>
		 <para>
			This tool is no longer installed in the default GNOME desktop. The new philosophy is that security updates should be automatically installed, either in the background or, preferably, when you shutdown your computer so as to not confuse any running application.
		</para>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>Atualizações Automáticas</title>
		 <indexterm>
			<primary>atualização</primary>
			<secondary>atualização automatica do sistema</secondary>
		</indexterm>
		 <indexterm>
			<primary>atualização automática</primary>
		</indexterm>
		 <para>
			Como a Falcot Corp tem muitos computadores mas pouca mão de obra, seus administradores tentam tornar as atualizações o mais automáticas possível. Os programas encarregados destes processos devem portanto rodar sem intervenção humana.
		</para>
		 <section>
			<title>Configurando <command>dpkg</command></title>
			 <para>
				Como já mencionamos (veja a barra lateral <xref linkend="sidebar.questions-conffiles" />), o <command>dpkg</command> pode ser instruído a não pedir confirmação quando for substituir um arquivo de configuração (com as opções <literal>--force-confdef --force-confold</literal>). Interações podem, entretanto, vir de outras origens: algumas vêm do próprio APT, algumas são manipuladas pelo <command>debconf</command> e algumas acontecem na linha de comando devido a scripts de configuração do pacote.
			</para>

		</section>
		 <section>
			<title>Configurando APT</title>
			 <para>
				No caso do APT é simples: a opção <literal>-y</literal> (ou <literal>--assume-yes</literal>) diz ao APT para considerar a resposta a todas as perguntas como sendo “sim”.
			</para>

		</section>
		 <section>
			<title>Configurando <command>debconf</command></title>
			 <para>
				o caso do <command>debconf</command> merece mais detalhes. Este programa foi, desde sua concepção, projetado para controlar a relevância e a quantidade das perguntas mostradas ao usuário, assim como a forma como são exibidas. É por isto que sua configuração requer uma prioridade mínima para perguntas; apenas perguntas acima da prioridade mínima são exibidas. O <command>debconf</command> supõe a resposta padrão (definida pelo mantenedor do pacote) para perguntas que ele decidiu pular.
			</para>
			 <para>
				O outro elemento de configuração relevante é a interface usada pelo front-end. Se você escolher <literal>noninteractive</literal>, toda interface de usuário será desabilitada. Se um pacote tenta exibir uma nota informativa, ele vai ser enviado ao administrador via email.
			</para>
			 <para>
				Para reconfigurar o <command>debconf</command>, use a ferramenta <command>dpkg-reconfigure</command> do pacote <emphasis role="pkg">debconf</emphasis>; o comando relevante é o <command>dpkg-reconfigure debconf</command>. Note que os valores configurados podem ser temporariamente sobreescritos com variáveis de ambiente quando necessário (por exemplo, <varname>DEBIAN_FRONTEND</varname> controla a interface, como documentado na página de manual <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry>).
			</para>

		</section>
		 <section>
			<title>Lidando com Interações Via Linha de Comando</title>
			 <para>
				A última fonte de interações, e a mais difícil de esconder, são os scripts de configuração executados pelo <command>dpkg</command>. infelizmente não existe solução padrão, e nenhuma resposta é substancialmente melhor que outra.
			</para>
			 <para>
				A abordagem normal é suprimir a entrada padrão redirecionando o conteúdo vazio de <filename>/dev/null</filename> nela com <command><replaceable>comando</replaceable> &lt;/dev/null</command>, ou alimentá-la com um fluxo infinito de newlines. Nenhum destes métodos é 100% confiável, mas eles em geral levam a respostas padrão sendo preenchidas, uma vez que a maioria dos scripts consideram a ausência de resposta como uma aceitação do valor padrão.
			</para>

		</section>
		 <section>
			<title>A Combinação Miraculosa</title>
			 <para>
				Combinando os elementos anteriores, é possível projetar um scrips pequeno mas muito confiável que possa manipular atualizações automáticas.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>Roteiro de atualização não interativa</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade</programlisting>

			</example>
			 <sidebar> <title><emphasis>NÁ PRÁTICA</emphasis> O caso Falcot Corp</title>
			 <para>
				Os computadores da Falcot formam um sistema heterogêneo, com máquinas tendo muitas funções. Os administradores vão portanto pegar a solução mais relevante para cada computador.
			</para>
			 <para>
				In practice, the servers running <emphasis role="distribution">Stretch</emphasis> are configured with the “miracle combination” above, and are kept up to date automatically. Only the most critical servers (the firewalls, for instances) are set up with <command>apticron</command>, so that upgrades always happen under the supervision of an administrator.
			</para>
			 <para>
				The office workstations in the administrative services also run <emphasis role="distribution">Stretch</emphasis>, but they are equipped with <emphasis role="pkg">gnome-packagekit</emphasis>, so that users trigger the upgrades themselves. The rationale for this decision is that if upgrades happen without an explicit action, the behavior of the computer might change unexpectedly, which could cause confusion for the main users.
			</para>
			 <para>
				No laboratório, os poucos computadores que usam <emphasis role="distribution">Testing</emphasis> — para usufruir das últimas atualizações de software — também não são atualizados automaticamente. Os administradores configuraram o APT apenas para preparar as atualizações mas não para as ativarem; quando eles decidem atualizar (manualmente), a parte chata de renovar a lista de pacotes e baixar os pacotes é evitada, e os administradores podem focar na parte realmente útil.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>Buscando por Pacotes</title>
		 <para>
			Com a grande e crescente quantidade de software no Debian, surge um paradoxo: o Debian normalmente tem uma ferramenta para a maioria das tarefas, mas pode ser muito difícil de achá-la na multidão de outros pacotes. A ausência de formas apropriadas de buscar (e encontrar) a ferramenta certa é um problema de longa data. Felizmente, este problema foi quase completamente resolvido.
		</para>
		 <para>
			A busca mais trivial possível é procurar pelo nome exato de um pacote. Se <command>apt show <replaceable>pacote</replaceable></command> retorna um resultado, então o pacote existe. Infelizmente, para isto é necessário saber ou chutar o nome do pacote, o que nem sempre é possível.
		</para>
		 <sidebar> <title><emphasis>DICA</emphasis> Convenções de nomes de pacote</title>
		 <para>
			Algumas categorias de pacotes são batizados de acordo com um esquema de nomenclatura convencional; saber o esquema às vezes ajuda a adivinhar o nome exato dos pacotes. Por exemplo, para módulos Perl, a convenção diz que um módulo chamado <literal>XML::Handler::Composer</literal> no desenvolvimento principal deve ser empacotado como <emphasis role="pkg">libxml-handler-composer-perl</emphasis>. A biblioteca que habilita o uso do sistema <command>gconf</command> pelo Python é empacotada como <emphasis role="pkg">python-gconf</emphasis>. Infelizmente não é possível definir um esquema de nomenclatura totalmente geral para todos os pacotes, mesmo que os mantenedores normalmente tentem seguir a escolha dos desenvolvedores principais.
		</para>
		 </sidebar> <para>
			Um padrão de busca um pouco mais bem-sucedido é uma busca simples e nomes de pacotes, mas isto ainda é bem limitado. Você pode geralmente encontrar resultados buscando nas descrições de pacotes: como cada pacote tem uma descrição mais ou menos detalhada além do nome do pacote, uma busca por palavra-chave nestas descrições frequentemente será útil. <command>apt-cache</command> e <command>axi-cache</command> são as ferramentas para este tipo de busca; por exemplo, <command>apt-cache search video</command> retornará uma lista de todos os pacotes que tenham a palavra-chave "video" no nome ou na descrição.
		</para>
		 <para>
			Para buscas mais complexas, uma ferramenta mais poderosa como o <command>aptitude</command> é necessária. <command>aptitude</command> pode fazer uma busca de acordo com expressões lógicas baseadas em campos de metadados dos pacotes. Por exemplo, o seguinte comando busca por pacotes cujo nome contenha <literal>kino</literal>, cuja descrição contenha <literal>video</literal> e cujo nome do mantenedor contenha <literal>paul</literal>:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Package: kino
Version: 1.3.4-2.2+b2
State: not installed
Priority: extra
Section: video
Maintainer: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Uncompressed Size: 8300 k
Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0
         (&gt;= 0.5.3), libavcodec57 (&gt;= 7:3.2.4) | libavcodec-extra57 (&gt;=
         7:3.2.4), libavformat57 (&gt;= 7:3.2.4), libavutil55 (&gt;= 7:3.2.4), libc6
         (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4 (&gt;= 1.0.0), libfontconfig1
         (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;= 1:3.0),
         libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~), libglib2.0-0
         (&gt;= 2.16.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;= 1:1.0.0),
         libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0), libpangocairo-1.0-0
         (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0), libquicktime2 (&gt;=
         2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7), libsm6, libstdc++6
         (&gt;= 5.2), libswscale4 (&gt;= 7:3.2.4), libx11-6, libxext6, libxml2 (&gt;=
         2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Recommends: ffmpeg, curl
Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Conflicts: kino-dvtitler, kino-timfx, kinoplus, kino-dvtitler:i386, kino-timfx:i386,
           kinoplus:i386, kino:i386
Replaces: kino-dvtitler, kino-timfx, kinoplus, kino-dvtitler:i386, kino-timfx:i386,
          kinoplus:i386
Provides: kino-dvtitler, kino-timfx, kinoplus
Description: Non-linear editor for Digital Video data
 Kino allows you to record, create, edit, and play movies recorded with DV camcorders.
 This program uses many keyboard commands for fast navigating and editing inside the
 movie.
 
 The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly distributed as
 separate packages, are now provided with Kino.
Homepage: http://www.kinodv.org/
Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::graphical, interface::x11, role::program, scope::application,
      suite::gnome, uitoolkit::gtk, use::editing, use::learning,
      works-with::video, x11::application
</screen>
		 <para>
			A busca retorna apenas um pacote, <emphasis role="pkg">kino</emphasis>, que satisfaz os três critérios.
		</para>
		 <para>
			Mesmo estas buscas multi-critério são bastante "desajeitadas", o que explica por que elas não são usadas tanto quanto poderiam. Um novo sistema de etiquetas foi portanto desenvolvido, e fornece uma nova abordagem de busca. Pacotes recebem etiquetas que fornecem classificação temática através de vários pontos de vista, conhecidos como uma "classificação baseada em facetas" ("facet-based classification"). No caso do <emphasis role="pkg">kino</emphasis> acima, as etiquetas do pacote indicam que o Kino é um software baseado em gnome que trabalha com dados de vídeo e tem como função principal edição.
		</para>
		 <para>
			Browsing this classification can help you to search for a package which corresponds to known needs; even if it returns a (moderate) number of hits, the rest of the search can be done manually. To do that, you can use the <literal>~G</literal> search pattern in <command>aptitude</command>, but it is probably easier to simply navigate the site where tags are managed: <ulink type="block" url="https://debtags.debian.org/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>tag</primary>
		</indexterm>
		 <para>
			Selecionando as marcas <literal>works-with::video</literal> e <literal>use::editing</literal> produz um punhado de pacotes, incluindo o editor de vídeo <emphasis role="pkg">kino</emphasis> e <emphasis role="pkg">pitivi</emphasis>. Este sistema de classificação é obrigado a ser usado cada vez mais enquanto o tempo passa, e gerenciadores de pacotes irão gradualmente fornecer interfaces de busca eficientes baseados nele.
		</para>
		 <para>
			Para sumarizar, a melhor ferramenta para o trabalho depende da complexidade da busca que você deseja fazer:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					Com o <command>apt-cache</command> só se pode fazer busca em nomes e descrições de pacotes, que é bastante conveniente quando se busca por um pacote em particular que casa com algumas palavras-chave;
				</para>

			</listitem>
			 <listitem>
				<para>
					Quando o critério de busca também inclui relações entre pacotes ou outros meta-pacotes como o nome do mantenedor, o <command>synaptic</command> será mais útil;
				</para>

			</listitem>
			 <listitem>
				<para>
					Quando uma busca por etiquetas é necessária, uma boa ferramenta é o <command>packagesearch</command>, uma interface gráfica dedicada a buscar pacotes disponíveis através de vários critérios (inclusive os nomes dos arquivos que eles contém) Para o uso na linha de comando, <command>axi-cache</command> irá ajustar a conta.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					finalmente, quando a busca envolve expressões complexas com operações lógicas, a melhor ferramenta é a sintaxe de padrões de busca do <command>aptitude</command>, que é bastante poderosa apesar de um pouco obscura; e funciona tanto no modo de linha de comando quanto no modo interativo.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

