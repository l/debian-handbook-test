<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="apt" lang="it-IT">
	<chapterinfo>
		 <keywordset>
			<keyword>apt</keyword>
			 <keyword>apt-get</keyword>
			 <keyword>apt-cache</keyword>
			 <keyword>aptitude</keyword>
			 <keyword>synaptic</keyword>
			 <keyword>sources.list</keyword>
			 <keyword>apt-cdrom</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Manutenzione ed aggiornamento: gli strumenti APT</title>
	 <highlights> <para>
		Ciò che rende così popolare Debian tra gli amministratori è la facilità con cui il software può essere installato e la facilità con cui l'intero sistema può essere aggiornato. Questo vantaggio è dovuto in gran parte al programma <emphasis>APT</emphasis>, che gli amministratori di Falcot Corp hanno studiato con entusiasmo.
	</para>
	 </highlights> <para>
		<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm> APT è l'abbreviazione di Advanced Package Tool (Strumento avanzato per i pacchetti). Ciò che rende questo programma «avanzato» è il suo approccio ai pacchetti. Non li valuta singolarmente, ma li considera nel loro insieme e produce la migliore combinazione possibile di pacchetti in base a ciò che è disponibile e compatibile (secondo le dipendenze).
	</para>
	 <sidebar> <title><emphasis>VOCABOLARIO</emphasis> Sorgente di un pacchetto e pacchetto sorgente</title>
	 <para>
		La parola <emphasis>sorgente</emphasis> può essere ambigua. Un pacchetto sorgente, un pacchetto contenente il codice sorgente di un programma, non dev'essere confuso con la sorgente o fonte di un pacchetto, un archivio (sito web, server FTP, CD-ROM, cartella locale, ecc.) nel quale sono contenuti i pacchetti.
	</para>
	 </sidebar> <para>
		APT ha bisogno di ricevere una "lista di sorgenti dei pacchetti": nel file <filename>/etc/apt/sources.list</filename> vengono elencati i diversi repository (o "fonti") che pubblicano i pacchetti Debian. APT sarà quindi in grado di importare la lista dei pacchetti pubblicati da ciascuna di queste fonti. Questa operazione si ottiene scaricando i file <filename>Packages.xz</filename> o una variante (in caso di una sorgente dei pacchetti binari) che utilizza un metodo di compressione dei file differente (come <filename>Packages.gz</filename> o <filename>.bz2</filename>) e <filename>Sources.xz</filename> o una variante (in caso di una sorgente di pacchetti sorgente) ed analizzando il loro contenuto. Quando è già presente una vecchia copia di questi file, APT può aggiornarlo scaricando solo le differenze (vedi riquadro <xref linkend="sidebar.apt-pdiff" />).
	</para>
	 <indexterm>
		<primary><filename>Packages.xz</filename></primary>
	</indexterm>
	 <indexterm>
		<primary><filename>Sources.xz</filename></primary>
	</indexterm>
	 <sidebar> <title><emphasis>FONDAMENTALI</emphasis> Compressione <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> e <command>XZ</command></title>
	 <indexterm>
		<primary><command>gzip</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>bzip2</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>lzma</command></primary>
	</indexterm>
	 <indexterm>
		<primary><command>xz</command></primary>
	</indexterm>
	 <para>
		L'estensione <filename>.gz</filename> si riferisce ad un file compresso con lo strumento <command>gzip</command>. <command>gzip</command> è lo strumento Unix tradizionale, veloce ed efficiente per la compressione di file. I nuovi strumenti consentono di ottenere migliori tassi di compressione, ma richiedono più risorse (tempo di calcolo e memoria) per comprimere un file. Tra questi, in ordine di apparizione, ci sono <command>bzip2</command> (che genera file con estensione <filename>.bz2</filename>), <command>lzma</command> (che genera file con estensione <filename>.lzma</filename>) e <command>xz</command> (che genera file con estensione <filename>.xz</filename>).
	</para>
	 </sidebar> <section id="sect.apt-sources.list">
		<title>Compilazione del file <filename>sources.list</filename></title>
		 <indexterm>
			<primary><filename>sources.list</filename></primary>
		</indexterm>
		 <indexterm>
			<primary>fonte</primary>
			<secondary>di pacchetti</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacchetto</primary>
			<secondary>sorgente o fonte di</secondary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/sources.list</filename></primary>
		</indexterm>
		 <section>
			<title>Sintassi</title>
			 <para>
				Ogni riga attiva del file <filename>/etc/apt/sources.list</filename> contiene la descrizione di una sorgente, formata di 3 parti separate da spazi.
			</para>
			 <para>
				Il primo campo indica il tipo di sorgente:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						«<literal>deb</literal>» per i pacchetti binari,
					</para>

				</listitem>
				 <listitem>
					<para>
						«<literal>deb-src</literal>» per i pacchetti sorgente.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				Il secondo campo fornisce l'URL di base della sorgente (in combinazione con i nomi dei file presenti nel file <filename>Packages.gz</filename>, deve costituire un URL completo e valido): questo può essere costituito da un mirror Debian o un qualsiasi altro insieme di archivi di pacchetto di una terza parte. L'URL può iniziare con <literal>file://</literal> per indicare una fonte locale installata all'interno della gerarchia di file del sistema, con <literal>http://</literal> per indicare una sorgente accessibile da un server web, o con <literal>ftp://</literal> per una sorgente disponibile su un server FTP. L'URL può anche iniziare con <literal>cdrom:</literal> per installazioni basate su dischi CD-ROM/DVD-ROM/Blu-ray, anche se ciò è meno frequente, in quanto sono sempre più comuni i metodi di installazione basati sulla rete.
			</para>
			 <para>
				La sintassi dell'ultimo campo dipende dalla struttura del repository. Nei casi più semplici basta indicare una sottodirectory (con la barra obliqua finale obbligatoria) della sorgente desiderata (spesso è un semplice «<filename>./</filename>» che indica l'assenza di una sottodirectory: i pacchetti sono allora direttamente all'URL specificato). Nella maggior parte dei casi comuni, però, i repository saranno strutturati come un mirror Debian, con più distribuzioni ciascuna con più componenti. In questi casi, indicare la distribuzione scelta (con il suo «nome in codice», per il quale vedere la lista nel riquadro <xref linkend="sidebar.bruce-perens" />, oppure con la «suite» corrispondente: <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), poi le componenti (o sezioni) da abilitare (scelte in un mirror Debian tipico tra <literal>main</literal>, <literal>contrib</literal> e <literal>non-free</literal>).
			</para>
			 <sidebar id="sidebar.sections"> <title><emphasis>VOCABOLARIO</emphasis> Gli archivi <literal>main</literal>, <literal>contrib</literal> e <literal>non-free</literal></title>
			 <indexterm>
				<primary>sezione</primary>
				<secondary><literal>main</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>main</literal>, sezione</primary>
			</indexterm>
			 <indexterm>
				<primary>sezione</primary>
				<secondary><literal>contrib</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>contrib</literal>, sezione</primary>
			</indexterm>
			 <indexterm>
				<primary>sezione</primary>
				<secondary><literal>non-free</literal></secondary>
			</indexterm>
			 <indexterm>
				<primary><literal>non-free</literal>, sezione</primary>
			</indexterm>
			 <indexterm>
				<primary>componente (di un repository)</primary>
			</indexterm>
			 <para>
				Debian usa tre sezioni per differenziare i pacchetti in base alla licenza scelta dagli autori di ciascun lavoro. <literal>Main</literal> (l'archivio principale) raccoglie tutti i pacchetti che sono pienamente conformi alle Linee guida per il software libero di Debian.
			</para>
			 <para>
				L'archivio <literal>non-free</literal> è diverso perché contiene software che non è (pienamente) conforme a questi principi ma che può ciò nonostante essere distribuito senza restrizioni. Questo archivio, che non fa ufficialmente parte di Debian, è un servizio per gli utenti che potrebbero aver bisogno di alcuni di tali programmi; Debian tuttavia raccomanda sempre di dare priorità al software libero. L'esistenza di questa sezione rappresenta, per Richard M. Stallman, un problema considerevole e fa sì che la Free Software Foundation non raccomandi Debian agli utenti.
			</para>
			 <para>
				<literal>Contrib</literal> (contribuzioni) è un insieme di software open source che non può funzionare senza alcuni elementi non liberi. Questi elementi possono essere software della sezione <literal>non-free</literal>, oppure file non liberi come le ROM di giochi, BIOS di console, ecc. <literal>Contrib</literal> include anche il software libero la cui compilazione richiede elementi proprietari. Questo è stato inizialmente il caso della suite per l'ufficio OpenOffice.org, che richiedeva un ambiente Java proprietario.
			</para>
			 </sidebar> <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> File <filename>/etc/apt/sources.list.d/*.list</filename></title>
			 <para>
				Se si fa riferimento a molte sorgenti di pacchetti, può essere utile dividerle in più file. Ogni parte viene quindi conservata in <filename>/etc/apt/sources.list.d/<replaceable>nomefile</replaceable>.list</filename> (vedere il riquadro <xref linkend="sidebar.directory.d" />).
			</para>
			 </sidebar> <indexterm>
				<primary><command>apt-cdrom</command></primary>
			</indexterm>
			 <para>
				Le voci <literal>cdrom</literal> descrivono i CD/DVD-ROM che si possiedono. Contrariamente alle altre voci un CD-ROM non è sempre disponibile in quanto deve essere inserito nell'unità e dato che può essere letto solo un disco alla volta. Per questi motivi, queste sorgenti sono gestite in maniera leggermente differente e devono essere aggiunte con il programma <command>apt-cdrom</command>, solitamente eseguito con il parametro <literal>add</literal>. Quest'ultimo chiederà di inserire il disco nel lettore e cercherà nel contenuto alla ricerca dei file <filename>Packages</filename>. Questi file saranno usati per aggiornare il database dei pacchetti disponibili (questa operazione di norma è fatta dal comando <command>apt update</command>). Da quel momento in poi, APT può richiedere di inserire il disco se avrà bisogno di uno dei suoi pacchetti.
			</para>

		</section>
		 <section>
			<title>Repository per gli utenti di <emphasis role="distribution">Stable</emphasis></title>
			 <para>
				Questo è un <filename>sources.list</filename> per un sistema che utilizza la versione <emphasis role="distribution">Stable</emphasis> di Debian:
			</para>
			 <example id="example.stable-sources-list">
				<title>File <filename>/etc/apt/sources.list</filename> per gli utenti di Debian Stable</title>
				 
<programlisting># Aggiornamenti di sicurezza
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

## Mirror Debian

# Repository base
deb http://ftp.debian.org/debian jessie main contrib non-free
deb-src http://ftp.debian.org/debian jessie main contrib non-free

# Aggiornamenti di Stable
deb http://ftp.debian.org/debian jessie-updates main contrib non-free
deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free

# Backport Stable
deb http://ftp.debian.org/debian jessie-backports main contrib non-free
deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free</programlisting>

			</example>
			 <para>
				Il file installa tutte le sorgenti di pacchetti associate con la versione <emphasis role="distribution">Jessie</emphasis> di Debian (l'attuale <emphasis role="distribution">Stable</emphasis> al momento della stesura di questo documento). Si è scelto di indicare esplicitamente "jessie" invece di usare il corrispondente alias "stabile" (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) perché non si desidera che la sottostante distribuzione venga cambiata senza il controllo degli amministratori quando verrà pubblicato il prossimo rilascio stabile.
			</para>
			 <para>
				La maggior parte di pacchetti proviene dal «repository base» che contiene tutti i pacchetti ma che viene aggiornato di rado (circa una volta ogni 2 mesi per un «rilascio minore»). Gli altri repository sono parziali (non contengono tutti i pacchetti) e possono ospitare aggiornamenti (pacchetti con versioni più recenti) che APT può installare. Le sezioni seguenti spiegheranno lo scopo di ognuno di questi repository e le regole che lo governano.
			</para>
			 <para>
				Notare che, quando la versione desiderata di un pacchetto è disponibile su diversi repository, verrà usato quello elencato per primo nel file <filename>sources.list</filename>. Per questa ragione, le sorgenti non ufficiali vengono solitamente aggiunte alla fine del file.
			</para>
			 <para>
				Notare anche che la maggior parte di ciò che questa sezione dice riguardo a <emphasis role="distribution">Stable</emphasis> vale allo stesso modo per <emphasis role="distribution">Oldstable</emphasis>, dato che quest'ultima non è altro che una più vecchia versione <emphasis role="distribution">Stable</emphasis> che viene mantenuta in parallelo.
			</para>
			 <section id="sect.security-updates">
				<title>Aggiornamenti di sicurezza</title>
				 <indexterm>
					<primary><literal>security.debian.org</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>aggiornamenti di sicurezza</primary>
				</indexterm>
				 <indexterm>
					<primary>aggiornamenti</primary>
					<secondary>aggiornamenti di sicurezza</secondary>
				</indexterm>
				 <para>
					Gli aggiornamenti di sicurezza vengono ospitati sulla consueta rete di mirror Debian, ma in <literal>security.debian.org</literal> (su un piccolo insieme di macchine mantenute dai <link linkend="dsa-team">Debian System Administrator</link>). Questo archivio contiene aggiornamenti di sicurezza (preparati dal Team Debian per la sicurezza o dai manutentori dei pacchetti) per la distribuzione <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Il server può anche ospitare aggiornamenti di sicurezza per <emphasis role="distribution">Testing</emphasis>, ma ciò non accade molto spesso dato che questi aggiornamenti tendono a raggiungere <emphasis role="distribution">Testing</emphasis> attraverso il regolare flusso di aggiornamenti che proviene da <emphasis role="distribution">Unstable</emphasis>.
				</para>

			</section>
			 <section id="sect.stable-updates">
				<title>Aggiornamenti di Stable</title>
				 <indexterm>
					<primary>aggiornamenti di stable</primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>stable</primary>
					<secondary>aggiornamenti di stable</secondary>
				</indexterm>
				 <para>
					Gli aggiornamenti di Stable non sono relativi alla sicurezza, ma vengono considerati sufficientemente importanti da essere passati agli utenti prima del successivo rilascio minore di stable.
				</para>
				 <para>
					Questo repository tipicamente contiene la risoluzione di bug critici che non non è stato possibile risolvere prima del rilascio o che sono stati introdotti dagli aggiornamenti successivi. A seconda dell'urgenza, può anche contenere gli aggiornamenti per i pacchetti che devono evolvere nel tempo… come le regole di rilevamento spam di <emphasis role="pkg">spamassassin</emphasis>, il database dei virus di <emphasis role="pkg">clamav</emphasis>, o le regole per l'ora legale di tutti i fusi orari (<emphasis role="pkg">tzdata</emphasis>).
				</para>
				 <para>
					In pratica questo repository è un sottoinsieme del repository <literal>proposed-updates</literal>, accuratamente selezionato dai Stable Release Manager.
				</para>

			</section>
			 <section id="sect.proposed-updates">
				<title>Aggiornamenti proposti</title>
				 <indexterm>
					<primary><literal>proposed-updates</literal></primary>
				</indexterm>
				 <indexterm>
					<primary><literal>stable-proposed-updates</literal></primary>
				</indexterm>
				 <para>
					Una volta pubblicata, la distribuzione <emphasis role="distribution">Stable</emphasis> viene aggiornata solo ogni 2 mesi circa. Il repository <literal>proposed-updates</literal> è il luogo in cui gli aggiornamenti pianificati vengono preparati (sotto la supervisione dei Stable Release Manager).
				</para>
				 <para>
					Gli aggiornamenti di sicurezza e quelli di stable documentati nelle sezioni precedenti sono sempre inclusi in questo repository, ma c'è anche di più, perché i manutentori di pacchetti hanno anche l'opportunità di risolvere importanti bug che non meritano un rilascio immediato.
				</para>
				 <para>
					Chiunque può usare questo repository per testare tali aggiornamenti prima della loro pubblicazione ufficiale. L'esempio di seguito usa l'alias <literal>jessie-proposed-updates</literal> che è sia più esplicito sia più coerente dato che esiste anche <literal>wheezy-proposed-updates</literal> (per gli aggiornamenti di <emphasis role="distribution">Oldstable</emphasis>):
				</para>
				 
<programlisting>deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free</programlisting>

			</section>
			 <section id="sect.backports">
				<title>Backport per Stable</title>
				 <indexterm>
					<primary><literal>stable-backports</literal></primary>
				</indexterm>
				 <indexterm>
					<primary>backport</primary>
				</indexterm>
				 <indexterm>
					<primary>aggiornamenti</primary>
					<secondary>backport</secondary>
				</indexterm>
				 <para>
					Il repository <literal>stable-backports</literal> ospita i «backport di pacchetti». Questa espressione si riferisce ad un pacchetto di un qualche software recente che è stato ricompilato per una distribuzione più vecchia, generalmente per <emphasis role="distribution">Stable</emphasis>.
				</para>
				 <para>
					Quando la distribuzione diventa un po' datata, numerosi progetti software hanno rilasciato nuove versioni che non sono integrate nell'attuale <emphasis role="distribution">Stable</emphasis> (che è modificata solo per risolvere i problemi più critici, come quelli di sicurezza). Dal momento che le distribuzioni <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis> possono essere più rischiose, a volte i manutentori di pacchetti offrono le versioni ricompilate per <emphasis role="distribution">Stable</emphasis> delle applicazioni recenti, il che ha il vantaggio di limitare la potenziale instabilità ad un esiguo numero di pacchetti selezionati. <ulink type="block" url="http://backports.debian.org/" />
				</para>
				 <para>
					Il repository <literal>stable-backports</literal> è ora disponibile sui consueti mirror Debian. I backport per <emphasis role="distribution">Squeeze</emphasis> però sono ancora ospitati su un server dedicato <literal>backports.debian.org</literal>) e richiedono la seguente voce in <filename>sources.list</filename>:
				</para>
				 <indexterm>
					<primary><literal>backports.debian.org</literal></primary>
				</indexterm>
				 
<programlisting>deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free</programlisting>
				 <para>
					I backport da <literal>stable-backports</literal> sono sempre creati dai pacchetti disponibili in <emphasis role="distribution">Testing</emphasis>. Ciò assicura che tutti i backport installati siano aggiornabili alla corrispondente versione stabile, una volta che sia disponibile il successivo rilascio stabile di Debian.
				</para>
				 <para>
					Anche se questo repository fornisce versioni più recenti dei pacchetti, APT non le installa a meno che non venga esplicitamente istruito per farlo (o almeno che non lo si abbia già fatto per una versione precedente dello specifico backport in questione):
				</para>
				 
<screen><computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>pacchetto</replaceable>/jessie-backports
</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>pacchetto</replaceable>
</userinput></screen>

			</section>

		</section>
		 <section>
			<title>Repository per gli utenti di <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
			 <para>
				Questo è un file <filename>sources.list</filename> standard per un sistema che utilizza la versione <emphasis role="distribution">Testing</emphasis> o <emphasis role="distribution">Unstable</emphasis> di Debian:
			</para>
			 <example id="example.testing-sources-list">
				<title>File <filename>/etc/apt/sources.list</filename> per gli utenti di Debian <emphasis role="distribution">Testing</emphasis>/<emphasis role="distribution">Unstable</emphasis></title>
				 
<programlisting>
# Unstable
deb http://ftp.debian.org/debian unstable main contrib non-free
deb-src http://ftp.debian.org/debian unstable main contrib non-free

# Testing
deb http://ftp.debian.org/debian testing main contrib non-free
deb-src http://ftp.debian.org/debian testing main contrib non-free

# Stable
deb http://ftp.debian.org/debian stable main contrib non-free
deb-src http://ftp.debian.org/debian stable main contrib non-free

# Aggiornamenti di sicurezza
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free</programlisting>

			</example>
			 <para>
				Con questo file <filename>sources.list</filename>, APT installerà i pacchetti da <emphasis role="distribution">Unstable</emphasis>. Se questo non è ciò che si desidera, usare l'impostazione <literal>APT::Default-Release</literal> (vedere la <xref linkend="sect.apt-upgrade" />) per indicare ad APT di scegliere i pacchetti da un'altra distribuzione (molto probabilmente <emphasis role="distribution">Testing</emphasis> in questo caso).
			</para>
			 <para>
				Ci sono buone ragioni per includere tutti questi repository, anche se uno solo dovrebbe essere sufficiente. Gli utenti di <emphasis role="distribution">Testing</emphasis> apprezzeranno la possibilità di scegliere individualmente un particolare pacchetto da <emphasis role="distribution">Unstable</emphasis> quando la versione in <emphasis role="distribution">Testing</emphasis> è affetta da un bug noioso. D'altro canto, gli utenti di <emphasis role="distribution">Unstable</emphasis> colpiti da regressioni inaspettate hanno la possibilità di retrocedere pacchetti alla loro versione in <emphasis role="distribution">Testing</emphasis> (che si suppone funzionante).
			</para>
			 <para>
				L'inclusione di <emphasis role="distribution">Stable</emphasis> è più discussa, ma spesso dà accesso ad alcuni pacchetti che sono stati rimossi dalle versioni di sviluppo. Assicura inoltre di ottenere i più recenti aggiornamenti per i pacchetti che non sono stati modificati dall'ultimo rilascio stabile.
			</para>
			 <section>
				<title>I repository <emphasis role="distribution">Experimental</emphasis></title>
				 <indexterm>
					<primary><emphasis role="distribution">Experimental</emphasis></primary>
				</indexterm>
				 <para>
					L'archivio dei pacchetti <emphasis role="distribution">Experimental</emphasis> è presente in tutti i mirror Debian, e contiene i pacchetti che non sono ancora nella distribuzione <emphasis role="distribution">Unstable</emphasis> a causa della loro qualità inferiore agli standard — spesso sono versioni di sviluppo o pre-versioni (alfa, beta, candidata al rilascio...). Un pacchetto può anche essere inserito lì dopo aver subito modifiche che possono generare problemi. Il manutentore quindi cerca di scoprirli grazie all'aiuto di utenti esperti in grado di gestire problemi importanti. Dopo questa prima fase, il pacchetto viene spostato in <emphasis role="distribution">Unstable</emphasis>, dove raggiunge un pubblico molto più grande e dove verrà testato in modo molto più dettagliato.
				</para>
				 <para>
					<emphasis role="distribution">Experimental</emphasis> è generalmente usata dagli utenti a cui non importa rovinare il proprio sistema e ripararlo. Questa distribuzione offre la possibilità di importare un pacchetto che un utente vuol provare o utilizzare in caso di necessità. Questo è esattamente come Debian lo tratta, in quanto aggiungerlo nel file <filename>sources.list</filename> di APT non porta all'uso sistematico dei suoi pacchetti. La riga da aggiungere è:
				</para>
				 <informalexample> 
<programlisting>deb http://ftp.debian.org/debian experimental main contrib non-free</programlisting>
				 </informalexample>
			</section>

		</section>
		 <section>
			<title>Risorse Non Ufficiali: <literal>mentors.debian.net</literal></title>
			 <indexterm>
				<primary><literal>mentors.debian.net</literal></primary>
			</indexterm>
			 <para>
				Ci sono numerose fonti non ufficiali di pacchetti Debian istituiti da utenti esperti che hanno ricompilato alcuni software (Ubuntu ha reso questo sistema popolare con il suo servizio Personal Package Archive), dai programmatori che mettono le loro creazioni a disposizione di tutti, e anche da parte di sviluppatori Debian che offrono pre-versioni dei loro pacchetti online.
			</para>
			 <para>
				Il sito <literal>mentors.debian.net</literal> è interessante (anche se fornisce solo pacchetti sorgente), dal momento che raccoglie pacchetti sorgente creati dai candidati allo status di sviluppatore ufficiale Debian o da volontari che vogliono creare pacchetti Debian senza passare attraverso quel processo di integrazione. Questi pacchetti sono messi a disposizione senza alcuna garanzia sulla loro qualità; assicurarsi di controllare la loro origine e integrità e testarli prima di considerare il loro utilizzo in produzione.
			</para>
			 <sidebar> <title><emphasis>COMUNITÀ</emphasis> I siti <literal>debian.net</literal></title>
			 <indexterm>
				<primary><emphasis>debian.net</emphasis></primary>
			</indexterm>
			 <para>
				Il dominio <emphasis>debian.net</emphasis> non è una risorsa ufficiale del progetto Debian. Ogni sviluppatore Debian può usare quel nome di dominio per i propri scopi. Questi siti possono contenere servizi non ufficiali (a volte siti personali) ospitati su una macchina che non appartiene al progetto e non è stata configurata da sviluppatori Debian, o anche prototipi che stanno per essere spostati su <emphasis>debian.org</emphasis>. Due ragioni possono spiegare perché questi prototipi rimangono su <emphasis>debian.net</emphasis>: o nessuno ha fatto lo sforzo necessario per trasformarli in servizi ufficiali (ospitati sul dominio <emphasis>debian.org</emphasis> e con una certa garanzia di mantenimento) o il servizio è troppo controverso per essere ufficializzato.
			</para>
			 </sidebar> <para>
				Installare un pacchetto significa dare i privilegi di root al suo creatore, perché può decidere i contenuti degli script di inizializzazione i quali sono lanciati sotto tale identità. I pacchetti Debian ufficiali sono creati da volontari che sono stati selezionati e vagliati e che possono mettere un sigillo ai loro pacchetti così che la loro origine e integrità possa essere controllata.
			</para>
			 <para>
				In generale, diffidare da un pacchetto di cui non si conosce la provenienza e che non è ospitato su un server ufficiale Debian: valutare il grado di fiducia che si può riporre nel creatore, e controllare l'integrità del pacchetto. <ulink type="block" url="http://mentors.debian.net/" />
			</para>
			 <sidebar id="sidebar.snapshot.debian.org"> <title><emphasis>APPROFONDIMENTO</emphasis> Le vecchie versioni dei pacchetti: <literal>snapshot.debian.org</literal></title>
			 <indexterm>
				<primary><literal>snapshot.debian.org</literal></primary>
			</indexterm>
			 <para>
				Il servizio <literal>snapshot.debian.org</literal>, introdotto nell'Aprile 2010, può essere usato per "andare indietro nel tempo" e per trovare una vecchia versione di un pacchetto. Può essere usato per esempio per identificare quale versione di un pacchetto ha introdotto una regressione, e più concretamente, tornare indietro alla versione precedente mentre si aspetta una correzione della regressione.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Proxy con cache per i pacchetti Debian</title>
			 <indexterm>
				<primary>cache del proxy</primary>
			</indexterm>
			 <indexterm>
				<primary>cache, proxy</primary>
			</indexterm>
			 <para>
				Quando un'intera rete di macchine è configurata in moda da usare lo stesso server remoto per scaricare gli stessi pacchetti aggiornati, qualsiasi amministratore sa che sarebbe vantaggioso avere un proxy intermedio che agisce da cache locale per la rete (vedere il riquadro <xref linkend="sidebar.cache" />).
			</para>
			 <para>
				Si può configurare APT in modo che usi un proxy «standard» (vedere la <xref linkend="sect.apt-config" /> per la parte riguardante APT e la <xref linkend="sect.http-ftp-proxy" /> per la parte proxy), ma l'ecosistema Debian offre opzioni migliori per risolvere il problema. Il software dedicato presentato in questa sezione è più intelligente di un semplice proxy con cache perché può fare affidamento sulla struttura specifica dei repository APT (per esempio sa quando singoli file sono obsoleti oppure no, e perciò regola il tempo per il quale vengono conservati).
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher</emphasis></primary>
			</indexterm>
			 <indexterm>
				<primary><emphasis role="pkg">apt-cacher-ng</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">apt-cacher</emphasis> e <emphasis role="pkg">apt-cacher-ng</emphasis> funzionano come i normali server proxy con cache. Il file <filename>sources.list</filename> di APT resta invariato, ma APT viene configurato in modo da usarli come proxy per le richieste in uscita.
			</para>
			 <indexterm>
				<primary><emphasis role="pkg">approx</emphasis></primary>
			</indexterm>
			 <para>
				<emphasis role="pkg">approx</emphasis>, invece, agisce come un server HTTP che fa da "mirror" per qualsiasi numero di repository remoti nei suoi URL di più alto livello. La mappatura tra queste directory di più alto livello e gli URL remoti dei repository viene memorizzata in <filename>/etc/approx/approx.conf</filename>:
			</para>
			 
<programlisting>
# &lt;name&gt; &lt;repository-base-url&gt;
debian   http://ftp.debian.org/debian
security http://security.debian.org</programlisting>
			 <para>
				<emphasis role="pkg">approx</emphasis> viene eseguito in modo predefinito sulla porta 9999 usando inetd (vedere la <xref linkend="sect.inetd" />) e richiede che gli utenti modifichino i propri file <filename>sources.list</filename> in modo che puntino al server approx:
			</para>
			 
<programlisting># Esempio di sources.list che punta ad un server approx locale
deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free
deb http://apt.falcot.com:9999/debian jessie main contrib non-free
</programlisting>

		</section>

	</section>
	 <section id="sect.apt-get">
		<title>I Comandi <command>aptitude</command>, <command>apt-get</command>, e <command>apt</command></title>
		 <indexterm>
			<primary><command>apt</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-get</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <para>
			APT è un progetto vasto, i cui piani originali includevano un'interfaccia grafica. Si basa su una libreria che contiene l'applicazione principale e <command>apt-get</command> è stato il primo frontend, basato su riga di comando, che è stata sviluppato nell'ambito del progetto. <command>apt</command> è un secondo front end basato su riga di comando fornito da APT che supera alcuni errori di progettazione di <command>apt-get</command>.
		</para>
		 <para>
			Numerose altre interfacce grafiche sono apparse come progetti esterni: <command>synaptic</command>, <command>aptitude</command> (che include sia un'interfaccia in modalità testo che una grafica, anche se non ancora completa), <command>wajig</command>, ecc. L'interfaccia più consigliata, <command>apt</command>, è quella che useremo negli esempi riportati in questa sezione. Si noti comunque che <command>apt-get</command> e <command>aptitude</command> hanno una sintassi della linea di comando molto simile. Quando ci saranno grandi differenze fra <command>apt</command>, <command>apt-get</command> e <command>aptitude</command>, tali differenze verranno spiegate.
		</para>
		 <section>
			<title>Inizializzazione</title>
			 <para>
				Per qualsiasi lavoro con APT, la lista dei pacchetti disponibili deve essere aggiornata; questo può essere fatto semplicemente attraverso <command>apt update</command>. A seconda della velocità della connessione, l'operazione può richiedere un po' di tempo visto che deve scaricare un certo numero di file <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>codice-lingua</replaceable></filename>, che sono gradualmente diventati sempre più grandi mano a mano che Debian si è sviluppata (almeno 10 MB di dati per la sezione <literal>main</literal>). Ovviamente, installare da un insieme di CD-ROM non richiede di scaricare nulla — in questo caso, l'operazione è molto veloce.
			</para>
			 <indexterm>
				<primary><command>apt update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get update</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude update</command></primary>
			</indexterm>

		</section>
		 <section>
			<title>Installazione e rimozione</title>
			 <indexterm>
				<primary>pacchetto</primary>
				<secondary>installazione</secondary>
			</indexterm>
			 <indexterm>
				<primary>pacchetto</primary>
				<secondary>rimozione</secondary>
			</indexterm>
			 <indexterm>
				<primary>installazione</primary>
				<secondary>di pacchetti</secondary>
			</indexterm>
			 <indexterm>
				<primary>rimozione di un pacchetto</primary>
			</indexterm>
			 <para>
				Con APT, i pacchetti possono essere aggiunti o rimossi dal sistema, rispettivamente con <command>apt install <replaceable>pacchetto</replaceable></command> e <command>apt remove <replaceable>pacchetto</replaceable></command>. In entrambi i casi, APT installerà automaticamente le dipendenze necessarie o rimuoverà i pacchetti che dipendono da quello che ci si appresta a rimuovere. Il comando <command>apt purge <replaceable>pacchetto</replaceable></command> implica una completa disinstallazione: anche i file di configurazione vengono eliminati.
			</para>
			 <indexterm>
				<primary><command>apt install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get purge</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude install</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude remove</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude purge</command></primary>
			</indexterm>
			 <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> Installare la stessa selezione di pacchetti diverse volte</title>
			 <para>
				Può risultare utile installare sistematicamente la stessa lista di pacchetti su diversi computer. Ciò può essere fatto abbastanza facilmente.
			</para>
			 <para>
				Prima di tutto, ottenere la lista dei pacchetti installati sul computer che servirà come «modello» da copiare.
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput></screen>
			 <para>
				Il file <filename>pkg-list</filename> contiene quindi la lista dei pacchetti installati. Poi, trasferire il file <filename>pkg-list</filename> sui computer che si desiderano aggiornare e usare i seguenti comandi:
			</para>
			 
<screen>## Aggiornare il database di dpkg dei pacchetti conosciuti
# <userinput>avail=`mktemp`</userinput>
# <userinput>apt-cache dumpavail &gt; "$avail"</userinput>
# <userinput>dpkg --merge-avail "$avail"</userinput>
# <userinput>rm -f "$avail"</userinput>
## Aggiornare le selezioni di dpkg
# <userinput>dpkg --set-selections &lt; pkg-list</userinput>
## Chiedere ad apt-get di installare i pacchetti selezionati
# <userinput>apt-get dselect-upgrade</userinput></screen>
			 <para>
				Il primo comando registra la lista dei pacchetti disponibili nel database di dpkg, poi <command>dpkg --set-selections</command> ripristina la selezione di pacchetti che si desidera installare, e l'invocazione di <command>apt-get</command> esegue le operazioni necessarie! <command>aptitude</command> non ha questo comando.
			</para>
			 </sidebar> <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> Rimozione e installazione nello stesso momento</title>
			 <para>
				È possibile richiedere ad <command>apt</command> (o <command>apt-get</command>, o <command>aptitude</command>) di installare certi pacchetti e rimuoverne altri nella stessa riga di comando aggiungendo un suffisso. Con il comando <command>apt install</command>, aggiungere "<literal>-</literal>" ai nomi dei pacchetti da rimuovere. Con un comando <command>apt remove</command>, aggiungere "<literal>+</literal>" ai nomi dei pacchetti da installare.
			</para>
			 <para>
				Il prossimo esempio mostra due modi differenti di installare il <replaceable>pacchetto1</replaceable> e rimuovere <replaceable>pacchetto2</replaceable>.
			</para>
			 
<screen># <userinput>apt install <replaceable>pacchetto1</replaceable> <replaceable>pacchetto2-</replaceable></userinput>
[...]
# <userinput>apt remove <replaceable>pacchetto1+</replaceable> <replaceable>pacchetto2</replaceable></userinput>
[...]</screen>
			 <para>
				Ciò può essere usato anche per escludere pacchetti che verrebbero altrimenti installati, per esempio a causa di una relazione <literal>Recommends</literal>. In generale il risolutore di dipendenze userà quella informazione come un invito a trovare soluzioni alternative.
			</para>
			 </sidebar> <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> <command>apt --reinstall</command> e <command>aptitude reinstall</command></title>
			 <indexterm>
				<primary>reinstallazione</primary>
			</indexterm>
			 <para>
				Il sistema può a volte danneggiarsi a seguito della rimozione o delle modifiche ai file in un pacchetto. Il modo più facile per recuperare questi file è di reinstallare il pacchetto interessato. Purtroppo, il sistema di pacchettizzazione rileva che quest'ultimo è già installato e si rifiuta cortesemente di reinstallarlo; per evitare questo, usare l'opzione <literal>--reinstall</literal> dei comandi <command>apt</command> <command>apt-get</command>. Il seguente comando reinstalla <emphasis role="pkg">postfix</emphasis> anche se è già presente:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput></screen>
			 <para>
				La riga di comando per <command>aptitude</command> è un po' diversa, ma ottiene lo stesso risultato con <command>aptitude reinstall postfix</command>.
			</para>
			 <para>
				Il problema non si pone con <command>dpkg</command>, ma raramente l'amministratore lo utilizza direttamente.
			</para>
			 <para>
				Fate attenzione! Usando <command>apt-get --reinstall</command> per ripristinare i pacchetti modificati durante un attacco certamente non verrà ripristinato il sistema com'era. La <xref linkend="sect.dealing-with-compromised-machine" /> spiega in dettaglio i passi necessari da adottare in caso di sistema compromesso.
			</para>
			 </sidebar> <para>
				Se il file <filename>sources.list</filename> cita diverse distribuzioni, è possibile specificare la versione del pacchetto da installare. Un numero di versione specifico può essere richiesto con <command>apt install <replaceable>pacchetto</replaceable>=<replaceable>versione</replaceable></command>, ma è in genere preferito indicare la sua distribuzione di origine (<emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis> o <emphasis role="distribution">Unstable</emphasis>): con <command>apt install <replaceable>pacchetto</replaceable>/<replaceable>distribuzione</replaceable></command>. Con questo comando è possibile tornare ad una versione precedente di un pacchetto (se per esempio si sa che funziona bene), a condizione che sia ancora disponibile in una delle sorgenti a cui fa riferimento il file <filename>sources.list</filename>. Altrimenti l'archivio <literal>snapshot.debian.org</literal> può venire in soccorso (vedere il riquadro <xref linkend="sidebar.snapshot.debian.org" />).
			</para>
			 <example>
				<title>Installazione della versione <emphasis role="distribution">unstable</emphasis> di <emphasis role="pkg">spamassassin</emphasis></title>
				 
<screen><computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput></screen>

			</example>
			 <sidebar> <title><emphasis>APPROFONDIMENTO</emphasis> La cache dei file <filename>.deb</filename></title>
			 <para>
				APT conserva una copia di ogni file <filename>.deb</filename> scaricato nella directory <filename>/var/cache/apt/archives/</filename>. In caso di aggiornamenti frequenti, questa cartella può rapidamente occupare molto spazio su disco con diverse versioni per ogni pacchetto; si dovrebbe regolarmente metterli in ordine. Possono essere utilizzati due comandi: <command>apt-get clean</command> svuota completamente la directory; <command>apt-get autoclean</command> rimuove solo i pacchetti che non possono più essere scaricati (perché scomparsi dal mirror Debian) e sono quindi chiaramente inutili (il parametro di configurazione <literal>APT::Clean-Installed</literal> può impedire la rimozione dei file <filename>.deb</filename> che sono attualmente installati). Nota che <command>apt</command> non supporta questi comandi.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt-upgrade">
			<title>Aggiornamento del sistema</title>
			 <indexterm>
				<primary>aggiornamento</primary>
				<secondary>aggiornamento del sistema</secondary>
			</indexterm>
			 <indexterm>
				<primary><command>apt upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude safe-upgrade</command></primary>
			</indexterm>
			 <para>
				Sono raccomandati aggiornamenti regolari, perché includono gli ultimi aggiornamenti di sicurezza. Per aggiornare, usare <command>apt upgrade</command>, <command>apt-get upgrade</command> o <command>aptitude safe-upgrade</command> (ovviamente dopo <command>apt update</command>). Questo comando controlla i pacchetti installati che possono essere aggiornati senza la rimozione di alcun pacchetto. In altre parole, l'obiettivo è quello di garantire l'aggiornamento meno intrusivo possibile. <command>apt-get</command> è un po' più esigente di <command>aptitude</command> o <command>apt</command> perché si rifiuta di installare pacchetti che erano già installati in precedenza.
			</para>
			 <sidebar id="sidebar.apt-pdiff"> <title><emphasis>SUGGERIMENTO</emphasis> Aggiornamento incrementale</title>
			 <para>
				Come spiegato in precedenza, l'obiettivo del comando <command>apt update</command> è quello di scaricare per ogni sorgente del pacchetto il corrispondente file <filename>Packages</filename> (o <filename>Sources</filename>). Tuttavia, anche dopo la compressione con <command>bzip2</command>, questi file possono rimanere piuttosto grandi (il <filename>Packages.bz2</filename> per la sezione <foreignphrase>main</foreignphrase> di <emphasis role="distribution">Jessie</emphasis> occupa più di 6 MB). Se si desidera aggiornare regolarmente, questi scaricamenti possono durare molto tempo.
			</para>
			 <para>
				Per velocizzare il processo, APT può scaricare file «diff» contenenti le modifiche rispetto al precedente aggiornamento, invece che l'intero file. Per raggiungere questo obiettivo, i mirror Debian ufficiali distribuiscono diversi file che elencano le differenze fra una versione del file <filename>Packages</filename> e la versione successiva. Sono generati ad ogni aggiornamento degli archivi e viene mantenuto uno storico di una settimana. Ognuno di questi file «diff» occupa solo poche decine di kilobyte per <emphasis role="distribution">Unstable</emphasis>, in modo che la quantità di dati scaricati con un <command>apt update</command> settimanale sia spesso divisa per 10. Per distribuzioni come <emphasis role="distribution">Stable</emphasis> e <emphasis role="distribution">Testing</emphasis>, che cambiano di meno, il guadagno è ancora più evidente.
			</para>
			 <para>
				Tuttavia, a volte può essere interessante forzare lo scaricamento di tutto il file <filename>Packages</filename>, specialmente quando l'ultimo aggiornamento è molto vecchio e quando il meccanismo di differenze incrementali non servirebbe a molto. Può essere anche interessante quando l'accesso alla rete è molto veloce ma il processore della macchina da aggiornare è piuttosto lento, poiché il risparmio di tempo nello scaricamento è più che perso quando il computer calcola le nuove versioni dei file (partendo dalle versioni più vecchie e applicando le differenze). Per fare questo, è possibile utilizzare il parametro di configurazione <literal>Acquire::Pdiffs</literal> e impostarlo a <literal>false</literal>.
			</para>
			 </sidebar> <para>
				<command>apt</command> in genere seleziona il numero di versione più recente (ad eccezione dei pacchetti <emphasis role="distribution">Experimental</emphasis> e <emphasis role="distribution">stable-backports</emphasis>, che vengono ignorati per impostazione predefinita a prescindere dal loro numero di versione). Se si è specificato <emphasis role="distribution">Testing</emphasis> o <emphasis role="distribution">Unstable</emphasis> nel proprio <filename>sources.list</filename>, <command>apt upgrade</command> porterà la maggior parte di un sistema <emphasis role="distribution">Stable</emphasis> a <emphasis role="distribution">Testing</emphasis> o <emphasis role="distribution">Unstable</emphasis>, e ciò potrebbe non essere quello che si desiderava fare.
			</para>
			 <para>
				Per dire ad <command>apt</command> di usare una specifica distribuzione quando cerca degli aggiornamenti, si deve usare l'opzione <literal>-t</literal> o <literal>--target-release</literal>, seguita dal nome della distribuzione voluta (ad esempio: <command>apt -t stable upgrade</command>). Per evitare di specificare questa opzione ogni volta che si utilizza <command>apt</command>, si può aggiungere la riga <literal>APT::Default-Release "stable";</literal> nel file <filename>/etc/apt/apt.conf.d/local</filename>.
			</para>
			 <indexterm>
				<primary><command>apt full-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-get dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude dist-upgrade</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude full-upgrade</command></primary>
			</indexterm>
			 <para>
				Per gli aggiornamenti più importanti, come il passaggio da una versione principale di Debian a quella successiva, è necessario utilizzare <command>apt full-upgrade</command>. Con questa istruzione, <command>apt</command> completerà l'aggiornamento anche nel caso in cui debba eliminare dei pacchetti obsoleti o installare nuove dipendenze. Questo è anche il comando usato dagli utenti che lavorano quotidianamente con il rilascio <emphasis role="distribution">Unstable</emphasis> di Debian e che seguono la sua evoluzione giorno per giorno. È così semplice che non ha certo bisogno di spiegazione: la reputazione di APT si basa su questa sua grande funzionalità.
			</para>
			 <para>
				A differenza di <command>apt</command> e <command>aptitude</command>, <command>apt-get</command> non usa il comando <command>full-upgrade</command>. Invece, si dobrebbe usare <command>apt-get dist-upgrade</command> (”aggiornamento della distribuzione”), lo storico e ben noto comando che è accettato anche da <command>apt</command> e <command>aptitude</command> per comodità degli utenti che si sono abituati.
			</para>

		</section>
		 <section id="sect.apt-config">
			<title>Opzioni di configurazione</title>
			 <indexterm>
				<primary>APT</primary>
				<secondary>configurazione</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>apt.conf.d/</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/apt.conf.d/</filename></primary>
			</indexterm>
			 <para>
				Oltre agli elementi di configurazione già citati, è possibile configurare certi aspetti di APT aggiungendo direttive in un file della directory <filename>/etc/apt/apt.conf.d/</filename>. Ricordare per esempio che APT può dire a <command>dpkg</command> di ignorare i conflitti fra i file se si specifica <literal>DPkg::options { "--force-overwrite"; }</literal>.
			</para>
			 <para>
				Se si può accedere al Web solo attraverso proxy, bisogna aggiungere una riga come <literal>Acquire::http::proxy "http://<replaceable>proprioproxy</replaceable>:3128"</literal>. Per un proxy FTP, scrivere <literal>Acquire::ftp::proxy "ftp://<replaceable>proprioproxy</replaceable>"</literal>. Per scoprire più opzioni di configurazione, leggere la pagina di manuale <citerefentry><refentrytitle>apt.conf</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry> con il comando <command>man apt.conf</command> (per i dettagli sulle pagine del manuale, vedere la <xref linkend="sect.manual-pages" />).
			</para>
			 <sidebar id="sidebar.directory.d"> <title><emphasis>FONDAMENTALI</emphasis> Directory terminanti in <filename>.d</filename></title>
			 <indexterm>
				<primary><filename>.d</filename></primary>
			</indexterm>
			 <para>
				Le directory con il suffisso <filename>.d</filename> vengono utilizzate sempre più spesso. Ogni directory rappresenta un file di configurazione che viene suddiviso in più file. In questo senso, tutti i file in <filename>/etc/apt/apt.conf.d/</filename> sono istruzioni per la configurazione di APT. APT li include in ordine alfabetico, così che gli ultimi file possono modificare un elemento di configurazione definito in uno dei primi.
			</para>
			 <para>
				Questa struttura offre una certa flessibilità all'amministratore della macchina e ai manutentori dei pacchetti. In effetti, l'amministratore può modificare facilmente la configurazione del software aggiungendo un file già pronto nella directory in questione senza dover modificare un file esistente. I manutentori dei pacchetti utilizzano lo stesso approccio quando hanno bisogno di adattare la configurazione di un altro software per assicurarsi che coesista perfettamente con il loro. La politica di Debian proibisce esplicitamente la modifica dei file di configurazione di altri pacchetti: solo gli utenti sono autorizzati a farlo. Ricordare che durante l'aggiornamento di un pacchetto, l'utente può scegliere la versione del file di configurazione che deve essere mantenuta quando viene rilevata una modifica. Qualsiasi modifica esterna del file innescherebbe questa richiesta, che disturberebbe l'amministratore, il quale è sicuro di non aver cambiato nulla.
			</para>
			 <para>
				Senza una directory <filename>.d</filename>, è impossibile per un programma esterno cambiare le impostazioni di un programma senza modificare il suo file di configurazione. Al contrario deve invitare l'utente a farlo da solo e deve elencare le operazioni da fare nel file <filename>/usr/share/doc/<replaceable>pacchetto</replaceable>/README.Debian</filename>.
			</para>
			 <para>
				A seconda dell'applicazione, la directory <filename>.d</filename> è usata direttamente o gestita da uno script esterno che collega tutti i file per creare il file di configurazione stesso. È importante eseguire lo script dopo ogni cambiamento in quella directory in modo che le più recenti modifiche siano prese in considerazione. Allo stesso modo, è importante non lavorare direttamente sul file di configurazione creato automaticamente, dal momento ogni modifica andrebbe persa alla successiva esecuzione dello script. Il metodo scelto (la directory <filename>.d</filename> usata direttamente o un file generato da quella directory) è solitamente imposto da vincoli di implementazione, ma in entrambi i casi i guadagni in termini di flessibilità di configurazione sono maggiori rispetto alle piccole complicazioni che comportano. Il server di posta Exim 4 è un esempio del metodo del file generato: può essere configurato attraverso diversi file (<filename>/etc/exim4/conf.d/*</filename>) che sono concatenati in <filename>/var/lib/exim4/config.autogenerated</filename> dal comando <command>update-exim4.conf</command>.
			</para>
			 </sidebar>
		</section>
		 <section id="sect.apt.priorities">
			<title>Gestire le priorità dei pacchetti</title>
			 <para>
				Uno degli aspetti più importanti nella configurazione di APT è la gestione delle priorità assegnate ad ogni fonte di pacchetti. Per esempio, si potrebbe volere estendere una distribuzione con uno o due pacchetti più nuovi da <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> o <emphasis role="distribution">Experimental</emphasis>. È possibile assegnare una priorità a ciascun pacchetto disponibile (lo stesso pacchetto può avere diverse priorità a seconda della sua versione o della distribuzione che lo fornisce). Queste priorità influenzeranno il comportamento di APT: per ogni pacchetto, selezionerà sempre la versione con la priorità più alta (tranne se questa è più vecchia di quella installata e se la sua priorità è inferiore a 1000).
			</para>
			 <indexterm>
				<primary>APT</primary>
				<secondary><foreignphrase>pinning</foreignphrase></secondary>
			</indexterm>
			 <indexterm>
				<primary>pin, pin di APT</primary>
			</indexterm>
			 <indexterm>
				<primary>pacchetto</primary>
				<secondary>priorità</secondary>
			</indexterm>
			 <indexterm>
				<primary>priorità</primary>
				<secondary>priorità dei pacchetti</secondary>
			</indexterm>
			 <indexterm>
				<primary>APT</primary>
				<secondary>preferenze</secondary>
			</indexterm>
			 <indexterm>
				<primary><filename>preferences</filename></primary>
			</indexterm>
			 <indexterm>
				<primary><filename>/etc/apt/preferences</filename></primary>
			</indexterm>
			 <para>
				APT definisce diverse priorità predefinite. Ogni versione installata di un pacchetto ha priorità 100. Una versione non installata ha priorità 500 per impostazione predefinita, ma può arrivare a 990 se è parte del rilascio di destinazione prescelto (definito con l'opzione a riga di comando <literal>-t</literal> o con la direttiva di configurazione <literal>APT::Default-Release</literal>).
			</para>
			 <para>
				È possibile modificare le priorità con l'aggiunta di voci nel file <filename>/etc/apt/preferences</filename> con i nomi dei pacchetti interessati, la loro versione, la loro origine e la loro nuova priorità.
			</para>
			 <para>
				APT non installerà mai una versione più vecchia di un pacchetto (cioè un pacchetto il cui numero di versione è più basso di quello del pacchetto attualmente installato) tranne se la sua priorità è superiore a 1000. APT installerà sempre il pacchetto con priorità più alta che soddisfa questa regola. Se due pacchetti hanno la stessa priorità, APT installerà il più recente (quello con numero di versione più alto). Se due pacchetti hanno le stesse versione e priorità ma diverso contenuto, APT installerà la versione non installata (questa regola è stata creata per coprire il caso di un aggiornamento di pacchetto senza incremento del numero di revisione, che normalmente è richiesto).
			</para>
			 <para>
				Più in concreto, non sarà mai installato un pacchetto la cui priorità è minore di 0. Un pacchetto con priorità compresa tra 0 e 100 verrà installato solo se nessun'altra versione del pacchetto è già installata. Con una priorità da 100 a 500, il pacchetto sarà installato solo se non c'è un'altra versione più recente installata o disponibile in un'altra distribuzione. Un pacchetto con priorità fra 501 e 990 verrà installato solo se non ci sono nuove versioni installate o disponibili nella distribuzione di riferimento. Con una priorità da 990 a 1000, il pacchetto verrà installato a meno che la versione installata non è più recente. Una priorità superiore a 1000 porterà sempre all'installazione del pacchetto anche se costringe APT a retrocedere ad una versione precedente.
			</para>
			 <para>
				Quando APT controlla <filename>/etc/apt/preferences</filename>, prende prima in considerazione le voci più specifiche (spesso quelle che specificano il pacchetto interessato), poi quelle più generiche (tra cui per esempio tutti i pacchetti di una distribuzione). Se sono presenti più voci generiche, viene utilizzata la prima. I criteri di selezione disponibili includono il nome del pacchetto e la fonte che lo fornisce. Ogni fonte è identificata dalle informazioni contenute in un file <filename>Release</filename> che APT scarica insieme ai file <filename>Packages</filename>. Esso specifica l'origine (di solito "Debian" per i pacchetti di mirror ufficiali, ma può essere anche un nome di una persona o di un'organizzazione per repository di terze parti). Fornisce anche il nome della distribuzione (solitamente <emphasis role="distribution">Stable</emphasis>, <emphasis role="distribution">Testing</emphasis>, <emphasis role="distribution">Unstable</emphasis> o <emphasis role="distribution">Experimental</emphasis> per le distribuzioni standard fornite da Debian) insieme con la sua versione (per esempio 8 per Debian <emphasis role="distribution">Jessie</emphasis>). Diamo dunque un'occhiata alla sua sintassi attraverso alcuni casi di studio realistici di questo meccanismo.
			</para>
			 <sidebar> <title><emphasis>CASO SPECIFICO</emphasis> Priorità di <emphasis role="distribution">experimental</emphasis></title>
			 <indexterm>
				<primary><emphasis role="distribution">Experimental</emphasis></primary>
			</indexterm>
			 <para>
				Se si è elencato <emphasis role="distribution">Experimental</emphasis> nel proprio file <filename>sources.list</filename>, i pacchetti corrispondenti non saranno quasi mai installati perché la loro priorità predefinita è 1. Questo naturalmente è un caso specifico, progettato per impedire agli utenti di installare pacchetti <emphasis role="distribution">Experimental</emphasis> per errore. I pacchetti possono essere installati solo digitando <command>aptitude install <replaceable>pacchetto</replaceable>/experimental</command>; gli utenti che digitano questo comando non possono che essere consapevoli dei rischi che corrono. È sempre possibile (anche se <emphasis>non</emphasis> consigliato) trattare i pacchetti <emphasis role="distribution">Experimental</emphasis> come quelli di altre distribuzioni dando loro priorità 500. Questo viene fatto con una voce specifica in <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar> <para>
				Supponiamo che si vogliano usare solamente i pacchetti della versione stabile di Debian. Quelli forniti in altre versioni non devono essere installati tranne se esplicitamente richiesto. Si dovrebbero scrivere le seguenti voci nel file <filename>/etc/apt/preferences</filename>:
			</para>
			 <informalexample> 
<programlisting>Package: *
Pin: release a=stable
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: -10</programlisting>
			 </informalexample> <para>
				<literal>a=stable</literal> definisce il nome della distribuzione selezionata. <literal>o=Debian</literal> limita l'impostazione ai pacchetti la cui origine è "Debian".
			</para>
			 <para>
				Si supponga ora di avere un server con diversi programmi locali dipendenti dalla versione 5.14 di Perl e che si voglia garantire che non vengano installati gli aggiornamenti ad un'altra versione. Si potrebbe usare questa riga:
			</para>
			 <informalexample> 
<programlisting>Package: perl
Pin: version 5.14*
Pin-Priority: 1001</programlisting>
			 </informalexample> <para>
				La documentazione di riferimento per questo file di configurazione è disponibile nella pagina di manuale <citerefentry><refentrytitle>apt_preferences</refentrytitle>
				<manvolnum>5</manvolnum></citerefentry>, che è possibile visualizzare con <command>man apt_preferences</command>.
			</para>
			 <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> Commenti in <filename>/etc/apt/preferences</filename></title>
			 <indexterm>
				<primary><literal>Explanation</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Pin</literal></primary>
			</indexterm>
			 <indexterm>
				<primary><literal>Priorità di pin</literal></primary>
			</indexterm>
			 <para>
				Non esiste una sintassi ufficiale per mettere dei commenti nel file <filename>/etc/apt/preferences</filename>, ma possono essere fornite alcune descrizioni testuali mettendo uno o più campi "<literal>Explanation</literal>" all'inizio di ogni voce:
			</para>
			 <informalexample> 
<programlisting>Explanation: Il pacchetto xserver-xorg-video-intel fornito
Explanation: in experimental può essere usato tranquillamente
Package: xserver-xorg-video-intel
Pin: release a=experimental
Pin-Priority: 500</programlisting>
			 </informalexample> </sidebar>
		</section>
		 <section id="sect.apt-mix-distros">
			<title>Lavorare con più distribuzioni</title>
			 <para>
				Dato che <command>apt</command> è uno strumento così meraviglioso, si può essere tentati di prendere pacchetti provenienti da altre distribuzioni. Ad esempio, dopo aver installato un sistema <emphasis role="distribution">Stable</emphasis>, si potrebbe desiderare di provare un pacchetto software disponibile in <emphasis role="distribution">Testing</emphasis> o <emphasis role="distribution">Unstable</emphasis>, senza scostarsi troppo dallo stato iniziale del sistema.
			</para>
			 <para>
				Anche se a volte si incontrano problemi mischiando pacchetti di diverse distribuzioni, <command>apt</command> gestisce tale coesistenza molto bene e limita i rischi in modo molto efficace. Il miglior modo di procedere è quello di elencare tutte le distribuzioni utilizzate in <filename>/etc/apt/sources.list</filename> (alcune persone mettono sempre le tre distribuzioni, ma ricordare che <emphasis role="distribution">Unstable</emphasis> è riservata agli utenti esperti) e di definire la distribuzione di riferimento con il parametro <literal>APT::Default-Release</literal> (vedere la <xref linkend="sect.apt-upgrade" />).
			</para>
			 <para>
				Supponiamo che <emphasis role="distribution">Stable</emphasis> sia la propria distribuzione di riferimento ma che <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis> siano comunque elencate nel proprio file <filename>sources.list</filename>. In questo caso, è possibile usare <command>apt install <replaceable>pacchetto</replaceable>/testing</command> per installare un pacchetto da <emphasis role="distribution">Testing</emphasis>. Se l'installazione non riesce a causa di alcune dipendenze che non possono essere soddisfatte, si può lasciare che risolva queste dipendenze in <emphasis role="distribution">Testing</emphasis> aggiungendo il parametro <literal>-t testing</literal>. Lo stesso vale ovviamente per <emphasis role="distribution">Unstable</emphasis>.
			</para>
			 <para>
				In questa situazione, gli aggiornamenti (<command>upgrade</command> e <command>full-upgrade</command>) vengono fatti all'interno di <emphasis role="distribution">Stable</emphasis> eccetto per i pacchetti già aggiornati ad altre distribuzioni: questi seguiranno gli aggiornamenti disponibili nelle altre distribuzioni. Questo comportamento verrà spiegato più avanti con l'aiuto delle priorità predefinite impostate da APT. Non esitare ad usare <command>apt-cache policy</command> (vedere riquadro <xref linkend="sidebar.apt-cache-policy" />) per verificare le priorità assegnate.
			</para>
			 <para>
				Tutto ruota intorno al fatto che APT considera solo i pacchetti con versione più alta o uguale a quella installata (assumendo che non è stato usato <filename>/etc/apt/preferences</filename> per forzare priorità più alte di 1000 per alcuni pacchetti).
			</para>
			 <sidebar id="sidebar.apt-cache-policy"> <title><emphasis>SUGGERIMENTO</emphasis> <command>apt-cache policy</command></title>
			 <para>
				Per capire meglio il meccanismo delle priorità, si può eseguire senza esitazioni <command>apt-cache policy</command> per visualizzare la priorità predefinita associata ad ogni fonte di pacchetti. È possibile inoltre usare <command>apt-cache policy <replaceable>pacchetto</replaceable></command> per vedere le priorità di tutte le versioni disponibili di un determinato pacchetto.
			</para>
			 </sidebar> <para>
				Supponiamo di avere installato la versione 1 di un primo pacchetto da <emphasis role="distribution">Stable</emphasis> e che le versioni 2 e 3 siano disponibili rispettivamente in <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis>. La versione installata ha una priorità di 100, ma la versione disponibile in <emphasis role="distribution">Stable</emphasis> (la stessa) ha priorità 990 (perché fa parte della versione di riferimento). I pacchetti in <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis> hanno priorità 500 (la priorità predefinita per una versione non installata). Il vincitore è dunque la versione 1 con una priorità di 990. Il pacchetto «rimane in <emphasis role="distribution">Stable</emphasis>».
			</para>
			 <para>
				Prendiamo ora l'esempio di un altro pacchetto la cui versione 2 è stata installata da <emphasis role="distribution">Testing</emphasis>. La versione 1 è disponibile in <emphasis role="distribution">Stable</emphasis> e la versione 3 in <emphasis role="distribution">Unstable</emphasis>. La versione 1 (di priorità 990, quindi minore di 1000) è scartata perché è più bassa della versione installata. Questo lascia in gioco solo le versioni 2 e 3, entrambe con priorità 500. Di fronte a questa alternativa, APT sceglie la versione più recente, quella da <emphasis role="distribution">Unstable</emphasis>. Se non si desidera che un pacchetto installato da <emphasis role="distribution">Testing</emphasis> venga migrato a <emphasis role="distribution">Unstable</emphasis>, è necessario assegnare una priorità minore di 500 (490 ad esempio) ai pacchetti provenienti da <emphasis role="distribution">Unstable</emphasis>. Si può modificare <filename>/etc/apt/preferences</filename> con queste righe:
			</para>
			 
<programlisting>Package: *
Pin: release a=unstable
Pin-Priority: 490</programlisting>

		</section>
		 <section id="sect.automatic-tracking">
			<title>Tenere traccia dei pacchetti installati automaticamente</title>
			 <para>
				Una delle funzionalità essenziali di <command>apt</command> è il tenere traccia dei pacchetti installati solo come dipendenze. Questi pacchetti vengono chiamati «automatici» e spesso comprendono, ad esempio, le librerie.
			</para>
			 <para>
				Con queste informazioni, quando i pacchetti vengono rimossi, i gestori di pacchetti possono elaborare un elenco di pacchetti automatici che non sono più necessari (perché non ci sono pacchetti "installati manualmente" che dipendono da essi). <command>apt-get autoremove</command> eliminerà tali pacchetti. <command>aptitude</command> e <command>apt</command> non hanno questo comando: il primo perché li rimuove automaticamente non appena vengono identificati, e quest'ultimo probabilmente perché l'utente non deve eseguire manualmente tale comando. In ogni caso, gli strumenti visualizzano un messaggio chiaro che elenca i pacchetti interessati.
			</para>
			 <indexterm>
				<primary><command>apt-mark auto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>apt-mark manual</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude markauto</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>aptitude unmarkauto</command></primary>
			</indexterm>
			 <para>
				È buona abitudine marcare come automatico ogni pacchetto di cui non si ha direttamente bisogno, in modo che venga automaticamente rimosso quando non è più necessario. <command>apt-mark auto <replaceable>pacchetto</replaceable></command> marca il pacchetto specificato come automatico, mentre <command>apt-mark manual <replaceable>pacchetto</replaceable></command> fa l'opposto. <command>aptitude markauto</command> e <command>aptitude unmarkauto</command> funzionano nello stesso modo, anche se offrono più funzionalità per marcare molti pacchetti contemporaneamente (vedere la <xref linkend="sect.aptitude" />). L'interfaccia interattiva basata su console di <command>aptitude</command> rende anche facile revisionare il «contrassegno automatico» per molti pacchetti.
			</para>
			 <indexterm>
				<primary><command>aptitude why</command></primary>
			</indexterm>
			 <para>
				Si potrebbe voler sapere perché un pacchetto installato automaticamente è presente nel sistema. Per ottenere queste informazioni dalla riga di comando, è possibile utilizzare <command>aptitude why <replaceable>pacchetto</replaceable></command> (<command>apt</command> e <command>apt-get</command> non hanno una funzionalità simile):
			</para>
			 
<screen><computeroutput>$ </computeroutput><userinput>aptitude why python-debian
</userinput><computeroutput>i   aptitude         Raccomanda apt-xapian-index       
i A apt-xapian-index Dipende    python-debian (&gt;= 0.1.15)
</computeroutput></screen>
			 <sidebar> <title><emphasis>ALTERNATIVA</emphasis> <command>deborphan</command> e <command>debfoster</command></title>
			 <indexterm>
				<primary><command>deborphan</command></primary>
			</indexterm>
			 <indexterm>
				<primary><command>debfoster</command></primary>
			</indexterm>
			 <para>
				In passato quando <command>apt</command>, <command>apt-get</command> e <command>aptitude</command> non erano in grado di tenere traccia dei pacchetti automatici, esistevano due utilità per produrre elenchi dei pacchetti non necessari: <command>deborphan</command> e <command>debfoster</command>.
			</para>
			 <para>
				<command>deborphan</command> è la più rudimentale delle due. Scansiona semplicemente le sezioni <literal>libs</literal> e <literal>oldlibs</literal> (in assenza di istruzioni supplementari) cercando i pacchetti che sono attualmente installati e da cui non dipende nessun altro pacchetto. L'elenco risultante può servire come base per rimuovere i pacchetti non necessari.
			</para>
			 <para>
				<command>debfoster</command> ha un approccio più elaborato, molto simile a quello di APT: mantiene una lista dei pacchetti che sono stati installati esplicitamente, e ricorda quali pacchetti sono veramente necessari da un'esecuzione all'altra. Se nuovi pacchetti compaiono nel sistema e <command>debfoster</command> non li conosce come pacchetti necessari, li visualizzerà sullo schermo insieme alla lista delle loro dipendenze. Il programma spesso offre una scelta: rimuovere il pacchetto (eventualmente insieme a ciò che dipende da esso), marcarlo come esplicitamente richiesto o ignorarlo temporaneamente.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.apt-cache">
		<title>Il comando <command>apt-cache</command></title>
		 <indexterm>
			<primary><command>apt-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>ricerca di pacchetti</secondary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>visualizzazione delle intestazioni</secondary>
		</indexterm>
		 <indexterm>
			<primary>ricerca di pacchetti</primary>
		</indexterm>
		 <indexterm>
			<primary>pacchetto</primary>
			<secondary>ricerca</secondary>
		</indexterm>
		 <para>
			Il comando <command>apt-cache</command> può visualizzare gran parte delle informazioni memorizzate nel database interno di APT. Queste informazioni sono una sorta di cache poiché vengono raccolte dalle differenti fonti elencate nel file <filename>sources.list</filename>. Questo avviene durante l'operazione <command>apt update</command>.
		</para>
		 <sidebar id="sidebar.cache"> <title><emphasis>VOCABOLARIO</emphasis> Cache</title>
		 <para>
			Una cache è un sistema di immagazzinamento temporaneo utilizzato per velocizzare l'accesso frequente ai dati quando il metodo usuale di accesso è dispendioso (in termini di prestazioni). Questo concetto può essere applicato in numerose situazioni e su diversa scala, dai core dei microprocessori fino ai sistemi di memorizzazione di fascia alta.
		</para>
		 <para>
			Nel caso di APT, i riferimenti dei file <filename>Packages</filename> sono quelli che si trovano sui mirror Debian. Detto questo, sarebbe decisamente inefficiente se per ogni ricerca che si desidera fare nel database dei pacchetti disponibili si dovesse passare dalla rete. Ecco perché APT salva una copia di questi file (in <filename>/var/lib/apt/lists/</filename>) e le ricerche sono fatte all'interno di questi file locali. Allo stesso modo, <filename>/var/cache/apt/archives/</filename> contiene una cache dei pacchetti già scaricati per evitare di scaricarli di nuovo se fosse necessario reinstallarli dopo una rimozione.
		</para>
		 </sidebar> <indexterm>
			<primary><command>apt show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache search</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude show</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>aptitude search</command></primary>
		</indexterm>
		 <para>
			Il comando <command>apt-cache</command> può ricercare pacchetti in base a parole chiave con <command>apt-cache search <replaceable>parolachiave</replaceable></command>. Può inoltre visualizzare le intestazioni delle versioni disponibili del pacchetto con <command>apt-cache show <replaceable>pacchetto</replaceable></command>. Questo comando fornisce la descrizione del pacchetto, le sue dipendenze, il nome del suo manutentore, ecc. Si noti che <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> lavorano nello stesso modo.
		</para>
		 <sidebar> <title><emphasis>ALTERNATIVA</emphasis> <command>axi-cache</command></title>
		 <indexterm>
			<primary><command>axi-cache</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">apt-xapian-index</emphasis></primary>
		</indexterm>
		 <para>
			<command>apt-cache search</command> è uno strumento molto rudimentale, che fondamentalmente implementa <command>grep</command> sulle descrizioni dei pacchetti. Spesso restituisce troppi risultati o nessuno, quando si usano troppe parole chiave.
		</para>
		 <para>
			<command>axi-cache search <replaceable>termine</replaceable></command>, invece, fornisce risultati migliori, ordinati per importanza. Usa il motore di ricerca <emphasis>Xapian</emphasis> e fa parte del pacchetto <emphasis role="pkg">apt-xapian-index</emphasis> che indicizza tutte le informazioni sui pacchetti (e altro ancora, come i file <filename>.desktop</filename> di tutti i pacchetti Debian). Capisce il contenuto dei tag (vedere riquadro <xref linkend="sidebar.debtags" />) e restituisce i risultati in un tempo dell'ordine dei millisecondi.
		</para>
		 
<screen>$ <userinput>axi-cache search package use::searching</userinput>
105 results found.
Results 1-20:
100% packagesearch - GUI per ricercare pacchetti e visualizzare informazioni su di essi
98% debtags - Abilita il supporto per i tag dei pacchetti
94% debian-goodies - piccole utilità stile cassetta degli attrezzi per sistemi Debian 
93% dpkg-awk - script gawk per analizzare /var/lib/dpkg/{status,available} e Packages
93% goplay - navigatore di pacchetti di gioco (e altro) che usa DebTags
[...]
87% apt-xapian-index - strumenti di manutenzione e ricerca per l'indice Xapian dei pacchetti Debian
[...]
More terms: search debian searching strigi debtags bsearch libbsearch
More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing
`axi-cache more' will give more results
</screen>
		 </sidebar> <indexterm>
			<primary><command>apt-cache policy</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache dumpavail</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>apt-cache pkgnames</command></primary>
		</indexterm>
		 <para>
			Alcune funzionalità sono usate più raramente. Per esempio, <command>apt-cache policy</command> visualizza le priorità delle fonti dei pacchetti così come quelle dei singoli pacchetti. Un altro esempio è <command>apt-cache dumpavail</command> che visualizza le intestazioni di tutte le versioni disponibili di tutti i pacchetti. <command>apt-cache pkgnames</command> visualizza l'elenco di tutti i pacchetti che appaiono almeno una volta nella cache.
		</para>

	</section>
	 <section id="sect.apt-frontends">
		<title>Frontend: <command>aptitude</command>, <command>synaptic</command></title>
		 <indexterm>
			<primary><command>aptitude</command></primary>
		</indexterm>
		 <indexterm>
			<primary><command>synaptic</command></primary>
		</indexterm>
		 <indexterm>
			<primary>APT</primary>
			<secondary>interfacce</secondary>
		</indexterm>
		 <para>
			APT è un programma C++ il cui codice risiede nella libreria condivisa <command>libapt-pkg</command>. L'uso di una libreria condivisa facilita la creazione di un'interfaccia utente (frontend), poiché il codice contenuto nella libreria può essere facilmente riutilizzato. Storicamente, <command>apt-get</command> è stato concepito solo come un frontend di prova per <command>libapt-pkg</command> ma il suo successo tende ad oscurare questo fatto.
		</para>
		 <section id="sect.aptitude">
			<title><command>aptitude</command></title>
			 <para>
				<command>aptitude</command> è un programma interattivo che può essere usato in modalità semi-grafica dalla console. Si può scorrere la lista dei pacchetti installati e disponibili, cercare tutte le informazioni disponibili, e selezionare i pacchetti da installare o rimuovere. Il programma è stato progettato appositamente per essere usato da amministratori, in modo che i suoi comportamenti predefiniti sono molto più intelligenti di quelli di <command>apt-get</command> e la sua interfaccia è molto più semplice da capire.
			</para>
			 <figure>
				<title>Il gestore di pacchetti <command>aptitude</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/aptitude.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Quando si avvia, <command>aptitude</command> mostra un elenco di pacchetti ordinati per stato (installati, non installati o installati ma non disponibili sui mirror; altre sezioni mostrano i task, i pacchetti virtuali e i nuovi pacchetti che sono apparsi di recente nei mirror). Per facilitare la navigazione tematica, sono presenti altre viste. In tutti i casi, <command>aptitude</command> visualizza sullo schermo un elenco che combina categorie e pacchetti. Le categorie sono organizzate con una struttura ad albero, i cui rami posso essere rispettivamente aperti o chiusi con i tasti <keycombo><keycap>Invio</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> e <keycombo><keycap>]</keycap></keycombo>. <keycombo><keycap>+</keycap></keycombo> viene usato per marcare un pacchetto per l'installazione, <keycombo><keycap>-</keycap></keycombo> per marcarlo per la rimozione e <keycombo><keycap>_</keycap></keycombo> per l'eliminazione (notare che questi tasti possono essere usati anche per le categorie, in questo caso l'azione corrispondente verrà applicata a tutti i pacchetti della categoria). <keycombo><keycap>u</keycap></keycombo> aggiorna l'elenco dei pacchetti disponibili e <keycombo action="simul"><keycap>Maiusc</keycap><keycap>u</keycap></keycombo> prepara un aggiornamento globale del sistema. <keycombo><keycap>g</keycap></keycombo> passa ad una visualizzazione di riepilogo delle modifiche richieste (e digitando <keycombo><keycap>g</keycap></keycombo> ancora si applicano i cambiamenti), e <keycombo><keycap>q</keycap></keycombo> esce dalla vista corrente. Se si è nella vista principale, questo si tradurrà nella chiusura di <command>aptitude</command>.
			</para>
			 <sidebar> <title><emphasis>DOCUMENTAZIONE</emphasis> <command>aptitude</command></title>
			 <para>
				Questa sezione non analizza tutti gli utilizzi di <command>aptitude</command>, ma piuttosto si concentra sul fornire un kit di sopravvivenza per usarlo. <command>aptitude</command> è piuttosto ben documentato e vi consigliamo di usare il manuale completo disponibile nel pacchetto <emphasis role="pkg">aptitude-doc-it</emphasis> (<filename>/usr/share/doc/aptitude/html/it/index.html</filename>).
			</para>
			 </sidebar> <para>
				Per cercare un pacchetto, si può digitare <keycombo><keycap>/</keycap></keycombo> seguito da un modello di ricerca. Questo modello fa corrispondenza con il nome del pacchetto, ma può essere applicato anche alla descrizione (se preceduto da <literal>~d</literal>), alla sezione (con <literal>~s</literal>) o ad altre caratteristiche descritte nella documentazione. Gli stessi modelli possono filtrare l'elenco dei pacchetti visualizzati: digitando il tasto <keycombo><keycap>l</keycap></keycombo> (per <foreignphrase>limita</foreignphrase>) e inserendo il modello.
			</para>
			 <para>
				La gestione del «contrassegno automatico» per i pacchetti Debian (vedere la <xref linkend="sect.automatic-tracking" />) diventa una passeggiata se si usa <command>aptitude</command>. È possibile navigare l'elenco dei pacchetti installati e contrassegnare i pacchetti come automatici con <keycombo action="simul"><keycap>Maiusc</keycap><keycap>m</keycap></keycombo> oppure rimuovere il contrassegno con il tasto <keycombo><keycap>m</keycap></keycombo>. I «pacchetti automatici» vengono visualizzati con una «A» nell'elenco dei pacchetti. Questa funzionalità offre anche un modo semplice per visualizzare i pacchetti usati su una macchina, senza tutte le librerie e dipendenze a cui non si è veramente interessati. Il corrispondente modello che può essere usato con <keycombo><keycap>l</keycap></keycombo> (per attivare la modalità filtro) è <literal>~i!~M</literal>. Specifica che si desiderano vedere solo i pacchetti installati ((<literal>~i</literal>) non contrassegnati come automatici (<literal>!~M</literal>).
			</para>
			 <sidebar> <title><emphasis>STRUMENTO</emphasis> Usare <command>aptitude</command> con interfaccia a riga di comando</title>
			 <para>
				La maggior parte delle funzionalità di <command>aptitude</command> sono disponibili sia tramite l'interfaccia visuale che da quella a riga di comando. Le righe di comando risulteranno familiari a chi usa regolarmente <command>apt-get</command> e <command>apt-cache</command>.
			</para>
			 <para>
				Le funzionalità avanzate di <command>aptitude</command> sono disponibili anche dalla riga di comando. È possibile utilizzare gli stessi modelli di ricerca dei pacchetti della versione interattiva. Per esempio, se si desidera ripulire l'elenco dei pacchetti «installati manualmente» e si sa che nessuno dei programmi installati ha bisogno di particolari librerie o moduli Perl, è possibile contrassegnare i pacchetti corrispondenti come automatici con un solo comando:
			</para>
			 
<screen><computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput></screen>
			 <para>
				Qui, si può chiaramente vedere la potenza del sistema a modello di ricerca di <command>aptitude</command>, che permette la selezione istantanea di tutti i pacchetti nelle sezioni <literal>libs</literal> e <literal>perl</literal>.
			</para>
			 <para>
				Attenzione, se alcuni pacchetti sono marcati come automatici e nessun altro pacchetto dipende da loro, questi saranno rimossi immediatamente (dopo una richiesta di conferma).
			</para>
			 </sidebar> <section>
				<title>Gestire raccomandazioni, suggerimenti e task</title>
				 <para>
					Un'altra caratteristica interessante di <command>aptitude</command> è il fatto che rispetta le raccomandazioni tra i pacchetti, pur dando agli utenti la scelta di non installarle caso per caso. Ad esempio, il pacchetto <emphasis role="pkg">gnome</emphasis> raccomanda <emphasis role="pkg">gdebi</emphasis> (tra gli altri). Quando si seleziona il primo per l'installazione, viene selezionato anche il secondo (e contrassegnato come automatico se non già installato sul sistema). Digitare <keycombo><keycap>g</keycap></keycombo> renderà la cosa evidente: <emphasis role="pkg">gdebi</emphasis> viene visualizzato nella schermata di riepilogo delle operazioni pianificate nell'elenco dei pacchetti installati automaticamente per soddisfare le dipendenze. Tuttavia, è possibile decidere di non installarlo deselezionandolo prima di confermare le operazioni.
				</para>
				 <para>
					Si noti che questa funzione di tracciamento delle raccomandazioni non si applica agli aggiornamenti. Per esempio, se una nuova versione di <emphasis role="pkg">gnome</emphasis> raccomanda un pacchetto che non raccomandava precedentemente, il pacchetto non viene contrassegnato per l'installazione. Tuttavia, esso sarà elencato nella schermata di aggiornamento in modo che l'amministratore possa sempre selezionarlo per l'installazione.
				</para>
				 <para>
					Anche i suggerimenti tra i pacchetti sono presi in considerazione, ma in un modo adatto al loro stato specifico. Per esempio, dal momento che <emphasis role="pkg">gnome</emphasis> suggerisce <emphasis role="pkg">dia-gnome</emphasis>, quest'ultimo sarà visualizzato nella schermata riassuntiva delle azioni in sospeso (nella sezione dei pacchetti suggeriti da altri pacchetti). In questo modo, è visibile e l'amministratore può decidere se prendere in considerazione il suggerimento o meno. Dal momento che sono solo suggerimenti e non dipendenze o raccomandazioni, il pacchetto non verrà selezionato automaticamente: la sua selezione richiede un intervento manuale da parte dell'utente (quindi, il pacchetto non verrà contrassegnato come automatico).
				</para>
				 <para>
					Con lo stesso spirito, si ricordi che <command>aptitude</command> fa un uso intelligente del concetto di task. Dal momento che i task vengono visualizzati come categorie nelle schermate delle liste di pacchetti, è possibile selezionare un'intera attività per l'installazione o rimozione, o sfogliare la lista dei pacchetti inclusi nell'attività per selezionarne un insieme più piccolo.
				</para>

			</section>
			 <section>
				<title>Algoritmi funzionanti meglio</title>
				 <para>
					Per concludere questa sezione, si noti che <command>aptitude</command> ha degli algoritmi più elaborati rispetto ad <command>apt-get</command> quando si tratta di risolvere situazioni difficili. Quando è richiesto un insieme di azioni e quando queste azioni combinate potrebbero portare ad un sistema incoerente, <command>aptitude</command> valuta i diversi scenari possibili e li presenta in ordine decrescente di rilevanza. Tuttavia, questi algoritmi non sono infallibili. Fortunatamente c'è sempre la possibilità di selezionare manualmente le azioni da eseguire. Quando le azioni attualmente scelte portano a contraddizioni, la parte superiore dello schermo indica un numero di pacchetti «difettosi» (e si può navigare direttamente fra questi pacchetti premendo <keycombo><keycap>b</keycap></keycombo>). È dunque possibile costruire manualmente una soluzione al problema riscontrato. In particolare, è possibile ottenere l'accesso alle differenti versioni disponibili semplicemente selezionando il pacchetto con <keycombo><keycap>Invio</keycap></keycombo>. Se la selezione di una di queste versioni risolve il problema, non si dovrebbe esitare a usare quella funzione. Quando il numero di pacchetti difettosi raggiunge lo zero, si può andare senza problemi alla schermata riepilogativa delle azioni in attesa per un ultimo controllo prima di applicare i cambiamenti.
				</para>
				 <sidebar> <title><emphasis>NOTA</emphasis> Il log di <command>aptitude</command></title>
				 <para>
					Come <command>dpkg</command>, <command>aptitude</command> tiene traccia delle azioni eseguite nel suo file di log (<filename>/var/log/aptitude</filename>). Tuttavia, visto che i due comandi lavorano ad un livello totalmente differente, non è possibile trovare le stesse informazioni sui loro rispettivi file di log. Mentre <command>dpkg</command> registra tutte le operazioni eseguite su ogni singolo pacchetto, passo dopo passo, <command>aptitude</command> offre una visione più ampia delle operazioni ad alto livello come un aggiornamento di sistema.
				</para>
				 <para>
					Fare attenzione al fatto che questo file di log contiene solo un riassunto delle operazioni eseguite da <command>aptitude</command>. Se altri front-end (o anche <command>dpkg</command> stesso) sono occasionalmente usati, allora il log di <command>aptitude</command> conterrà solo una visione parziale delle operazioni, quindi non si può fare affidamento su di esso per ricostruire la storia esatta del sistema.
				</para>
				 </sidebar>
			</section>

		</section>
		 <section>
			<title><command>synaptic</command></title>
			 <para>
				<command>synaptic</command> è un gestore di pacchetti grafico per Debian che dispone di un'interfaccia grafica pulita ed efficiente basata su GTK+/GNOME. I suoi molti filtri già pronti da utilizzare consentono di accedere velocemente ai nuovi pacchetti disponibili, pacchetti installati, pacchetti aggiornabili, pacchetti obsoleti e così via. Se si naviga in questi elenchi, è possibile selezionare le opzioni da fare sui pacchetti (installare, aggiornare, rimuovere, eliminare completamente); queste operazioni non vengono eseguite immediatamente, ma messe in un elenco di attività. Un semplice clic su un pulsante convalida le operazioni, ed esse vengono eseguite in un sol colpo.
			</para>
			 <figure>
				<title>Il gestore di pacchetti <command>synaptic</command></title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/synaptic.png" format="PNG" scalefit="1" width="75%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.package-authentication">
		<title>Controllare l'autenticità dei pacchetti</title>
		 <indexterm>
			<primary>pacchetto</primary>
			<secondary>controllo di autenticità</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacchetto</primary>
			<secondary>sigillo</secondary>
		</indexterm>
		 <indexterm>
			<primary>pacchetto</primary>
			<secondary>firma</secondary>
		</indexterm>
		 <indexterm>
			<primary>firma</primary>
			<secondary>firma di un pacchetto</secondary>
		</indexterm>
		 <indexterm>
			<primary>autenticazione</primary>
			<secondary>autenticazione di un pacchetto</secondary>
		</indexterm>
		 <para>
			La sicurezza è molto importante per gli amministratori di Falcot Corp. Di conseguenza, devono garantire che vengano installati solo i pacchetti di cui è garantita la provenienza da Debian senza alcuna manomissione lungo il percorso. Un autore di attacchi informatici potrebbe tentare di aggiungere codice dannoso ad un pacchetto altrimenti legittimo. Tale pacchetto, se installato, potrebbe fare qualsiasi cosa per cui l'autore dell'attacco l'ha progettato, tra cui ad esempio scoprire password o informazioni riservate. Per ovviare a questo rischio, Debian fornisce un sigillo di garanzia a prova di manomissione per garantire, in fase di installazione, che un pacchetto venga veramente dal suo manutentore ufficiale e non sia stato modificato da terzi.
		</para>
		 <para>
			Il sigillo funziona con una catena di hash crittografici e una firma. Il file firmato è il file <filename>Release</filename>, fornito dai mirror Debian. Contiene una lista dei file <filename>Packages</filename> (comprese le loro forme compresse, <filename>Packages.gz</filename> e <filename>Packages.xz</filename>, e la versione incrementale), insieme ai loro hash MD5, SHA1 e SHA256, che assicurano che i file non siano stati manomessi. Questi file <filename>Packages</filename> contengono una lista dei pacchetti Debian disponibili sul mirror, con i loro hash, che assicura a sua volta che il contenuto dei pacchetti non sia stato alterato.
		</para>
		 <indexterm>
			<primary><command>apt-key</command></primary>
		</indexterm>
		 <indexterm>
			<primary><emphasis role="pkg">debian-archive-keyring</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>
		</indexterm>
		 <indexterm>
			<primary><filename>Release.gpg</filename></primary>
		</indexterm>
		 <para>
			Le chiavi fidate sono gestite con il comando <command>apt-key</command> che si trova nel pacchetto <emphasis role="pkg">apt</emphasis>. Questo programma mantiene un portachiavi di chiavi pubbliche GnuPG, che sono usate per verificare le firme nei file <filename>Release.gpg</filename> disponibili nei mirror. Può essere usato per aggiungere manualmente nuove chiavi (quando sono necessari mirror non ufficiali). In generale tuttavia, servono solo le chiavi ufficiali di Debian. Queste chiavi sono automaticamente mantenute aggiornate dal pacchetto <emphasis role="pkg">debian-archive-keyring</emphasis> (che mette i portachiavi corrispondenti in <filename>/etc/apt/trusted.gpg.d</filename>). Tuttavia, la prima installazione di questo particolare pacchetto richiede cautela: anche se il pacchetto è firmato come ogni altro, la firma non può essere verificata esternamente. Gli amministratori prudenti dovrebbero dunque controllare le impronte digitali delle chiavi importate prima di fidarsi di loro per installare nuovi pacchetti:
		</para>
		 
<screen role="scale"># <userinput>apt-key fingerprint</userinput>
/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg
----------------------------------------------------------
pub   4096R/2B90D010 2014-11-21 [expires: 2022-11-19]
      Impronta digitale della chiave = 126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010
uid                  Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg
-------------------------------------------------------------------
pub   4096R/C857C906 2014-11-21 [expires: 2022-11-19]
      Impronta digitale della chiave = D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906
uid                  Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg
-------------------------------------------------------
pub   4096R/518E17E1 2013-08-17 [expires: 2021-08-15]
      Impronta digitale della chiave = 75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1
uid                  Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-automatic.gpg
-----------------------------------------------------------
pub   4096R/473041FA 2010-08-27 [expires: 2018-03-05]
      Impronta digitale della chiave = 9FED 2BCB DCD2 9CDF 7626  78CB AED4 B06F 4730 41FA
uid                  Debian Archive Automatic Signing Key (6.0/squeeze) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-squeeze-stable.gpg
--------------------------------------------------------
pub   4096R/B98321F9 2010-08-07 [expires: 2017-08-05]
      Impronta digitale della chiave = 0E4E DE2C 7F3E 1FC0 D033  800E 6448 1591 B983 21F9
uid                  Squeeze Stable Release Key &lt;debian-release@lists.debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg
----------------------------------------------------------
pub   4096R/46925553 2012-04-27 [expires: 2020-04-25]
      Impronta digitale della chiave = A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553
uid                  Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;

/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg
-------------------------------------------------------
pub   4096R/65FFB764 2012-05-08 [expires: 2019-05-07]
      Impronta digitale della chiave = ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764
uid                  Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;</screen>
		 <sidebar> <title><emphasis>IN PRATICA</emphasis> Aggiungere chiavi fidate</title>
		 <indexterm>
			<primary>chiave fidata</primary>
		</indexterm>
		 <indexterm>
			<primary>chiave</primary>
			<secondary>chiavi di autenticazione di APT</secondary>
		</indexterm>
		 <para>
			Quando si aggiunge una sorgente di pacchetti di terze parti al file <filename>sources.list</filename>, APT ha bisogno di venire istruiti a fidarsi della corrispondente chiave GPG (altrimenti continuerà a ricordare che non può garantire l'autenticità dei pacchetti provenienti da quel repository). Il primo passo è ovviamente ottenere la chiave pubblica. Spesso, la chiave viene fornita come un piccolo file di testo, che verrà chiamato nei prossimi esempi <filename>key.asc</filename>.
		</para>
		 <para>
			Per aggiungere la chiave al portafoglio fidato, l'amministratore può lanciare <command>apt-key add &lt; key.asc</command>. Un altro modo è di usare l'interfaccia grafica <command>synaptic</command>: la sua scheda «Autenticazione» nel menu <menuchoice><guimenu>Impostazioni</guimenu> <guisubmenu>Repository</guisubmenu></menuchoice> dà la possibilità di importare una chiave dal file <filename>key.asc</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gui-apt-key</emphasis></primary>
		</indexterm>
		 <para>
			Per chi vorrebbe un'applicazione dedicata e più dettagli sulle chiavi fidate, è possibile usare <command>gui-apt-key</command> (nel pacchetto omonimo), una piccola interfaccia utente grafica che gestisce il portachiavi fidato.
		</para>
		 </sidebar> <para>
			Una volta che le chiavi appropriate sono nel portafoglio, APT controlla le firme prima di ogni operazione rischiosa, così che le interfacce mostrano a video un messaggio se si richiede di installare un pacchetto la cui autenticità non può essere verificata.
		</para>

	</section>
	 <section id="sect.dist-upgrade">
		<title>Aggiornare da una distribuzione stabile alla successiva</title>
		 <para>
			Una delle caratteristiche più note di Debian è la sua capacità di aggiornare il sistema installato da un rilascio stabile a quello successivo: <foreignphrase>dist-upgrade</foreignphrase>, un termine ben noto, ha in gran parte contribuito alla reputazione del progetto. Con alcune precauzioni, l'aggiornamento di un computer può richiedere da un minimo di pochi, fino a qualche decina, di minuti a seconda della velocità di scaricamento dai repository dei pacchetti.
		</para>
		 <section>
			<title>Procedura raccomandata</title>
			 <para>
				Dal momento che Debian ha un tempo abbastanza lungo per evolvere fra i rilasci stabili, si consiglia di leggere le note di rilascio prima di fare l'aggiornamento.
			</para>
			 <sidebar> <title><emphasis>FONDAMENTALI</emphasis> Note di rilascio</title>
			 <para>
				Le note di rilascio per un sistema operativo (e, più genericamente, per qualsiasi software) sono un documento che fornisce una panoramica sul software, con alcuni dettagli riguardanti le particolarità di una versione. Questi documenti sono in genere più brevi rispetto alla documentazione completa, e di solito elencano le caratteristiche introdotte dalla versione precedente. Forniscono anche dettagli sulle procedure di aggiornamento, avvertenze per gli utenti delle versioni precedenti, e talvolta errata.
			</para>
			 <para>
				Le note di rilascio sono disponibili online: le note di rilascio per il rilascio stabile attuale hanno un URL dedicato, mentre le note di rilascio più vecchie possono essere trovate con i loro nomi in codice: <ulink type="block" url="http://www.debian.org/releases/stable/releasenotes" /> <ulink type="block" url="http://www.debian.org/releases/wheezy/releasenotes" />
			</para>
			 </sidebar> <para>
				In questa sezione, ci soffermeremo sull'aggiornamento di un sistema <emphasis role="distribution">Wheezy</emphasis> a <emphasis role="distribution">Jessie</emphasis>. Si tratta di una grande operazione su un sistema; come tale, non è mai al 100% priva di rischi, e non si dovrebbe tentarla prima di aver fatto il backup dei dati più importanti.
			</para>
			 <para>
				Un'altra buona abitudine che permette un aggiornamento più facile (e veloce) è di riordinare i pacchetti installati e mantenere solo quelli che sono realmente necessari. Strumenti utili per fare questo sono <command>aptitude</command>, <command>deborphan</command> e <command>debfoster</command> (vedere la <xref linkend="sect.automatic-tracking" />). Per esempio, è possibile usare il comando seguente e poi usare la modalità interattiva di <command>aptitude</command> per ricontrollare e aggiustare le rimozioni pianificate:
			</para>
			 
<screen># <userinput>deborphan | xargs aptitude --schedule-only remove</userinput></screen>
			 <para>
				Passiamo ora all'aggiornamento vero e proprio. Prima di tutto, è necessario cambiare il file <filename>/etc/apt/sources.list</filename> per indicare ad APT di ottenere i pacchetti da <emphasis role="distribution">Jessie</emphasis> invece di <emphasis role="distribution">Wheezy</emphasis>. Se il file contiene solo riferimenti a <emphasis role="distribution">Stable</emphasis> piuttosto che nomi in codice espliciti, questo cambiamento non è neppure necessario, poiché <emphasis role="distribution">Stable</emphasis> si riferisce sempre all'ultima versione rilasciata di Debian. In entrambi i casi, il database dei pacchetti disponibili deve essere aggiornato (con il comando <command>apt update</command> o con il pulsante di aggiornamento in <command>synaptic</command>).
			</para>
			 <para>
				Una volta che queste nuove fonti di pacchetti sono registrate, si dovrebbe prima fare un aggiornamento minimale con <command>apt upgrade</command>. Facendo l'aggiornamento in due fasi, si facilita il compito degli strumenti di gestione dei pacchetti e spesso si garantisce la presenza delle loro più recenti versioni che possono aver incorporato risoluzioni di bug e miglioramenti necessari per completare l'aggiornamento completo del sistema.
			</para>
			 <para>
				Una volta fatto questo primo aggiornamento, è il momento di occuparsi dell'aggiornamento stesso, sia con <command>apt full-upgrade</command>, <command>aptitude</command>, o <command>synaptic</command>. Si consiglia di controllare attentamente le azioni suggerite prima di applicarle: si potrebbe desiderare di aggiungere pacchetti suggeriti o deselezionare i pacchetti che sono solo raccomandati e che si sa non saranno utili. In ogni caso, il frontend dovrebbe trovare ciò che serve per avere alla fine un sistema <emphasis role="distribution">Jessie</emphasis> aggiornato e coerente. In seguito, tutto ciò che si deve fare è aspettare che i pacchetti necessari vengano scaricati, rispondere alle domande di Debconf ed eventualmente a quelle sui file di configurazione modificati localmente, e rilassarsi mentre APT fa la sua magia.
			</para>

		</section>
		 <section>
			<title>Gestire i problemi dopo un aggiornamento</title>
			 <para>
				Nonostante i migliori sforzi dei manutentori Debian, un importante aggiornamento di sistema non va sempre liscio come si spera. Le nuove versioni del software possono essere incompatibili con quelle precedenti (per esempio, il loro comportamento predefinito o il loro formato dei dati potrebbe essere cambiato). Inoltre, alcuni bug possono sfuggire, nonostante la fase di sperimentazione, che precede sempre un rilascio di Debian.
			</para>
			 <para>
				Per anticipare alcuni di questi problemi, è possibile installare il pacchetto <emphasis role="pkg">apt-listchanges</emphasis>, che visualizza le informazioni sui possibili problemi all'inizio dell'aggiornamento di un pacchetto. Queste informazioni sono compilate dai manutentori dei pacchetti e inserite nel file <filename>/usr/share/doc/<replaceable>pacchetto</replaceable>/NEWS.Debian</filename> a beneficio degli utenti. Leggere questi file (possibilmente attraverso <emphasis role="pkg">apt-listchanges</emphasis>) dovrebbe aiutare ad evitare brutte sorprese.
			</para>
			 <para>
				A volte è possibile che la nuova versione di un software non funzioni affatto. Questo in genere accade se l'applicazione non è particolarmente popolare e non è stata testata abbastanza; un aggiornamento dell'ultimo minuto può anche introdurre regressioni che vengono scoperte solo dopo il rilascio stabile. In entrambi i casi, la prima cosa da fare è dare uno sguardo al sistema di tracciamento dei bug in <literal>https://bugs.debian.org/<replaceable>pacchetto</replaceable></literal>, e verificare se il problema è già stato segnalato. Se non lo è, si dovrebbe riportarlo con <command>reportbug</command>. Se è già noto, la segnalazione di bug e i messaggi associati sono in genere un'eccellente fonte di informazioni relative al bug:
			</para>
			 <itemizedlist>
				<listitem>
					<para>
						a volte una soluzione esiste già, ed è disponibile nella segnalazione di bug; si può allora ricompilare localmente una versione corretta del pacchetto non funzionante (vedere la <xref linkend="sect.rebuilding-package" />);
					</para>

				</listitem>
				 <listitem>
					<para>
						in altri casi, gli utenti potrebbero aver trovato un modo di superare il problema e condiviso le loro conoscenze al riguardo nelle loro risposte alla segnalazione;
					</para>

				</listitem>
				 <listitem>
					<para>
						in altri casi ancora, un pacchetto corretto potrebbe essere già stato preparato e reso pubblico da parte del manutentore.
					</para>

				</listitem>

			</itemizedlist>
			 <para>
				A seconda della gravità del bug, una nuova versione del pacchetto può essere preparata appositamente per una nuova revisione della versione stabile. Quando succede questo, il pacchetto sistemato è reso disponibile nella sezione <literal>proposed-updates</literal> dei mirror Debian (vedere la <xref linkend="sect.proposed-updates" />). La voce corrispondente può essere temporaneamente aggiunta al file <filename>sources.list</filename>, e i pacchetti aggiornati possono essere installati con <command>apt</command> o <command>aptitude</command>.
			</para>
			 <para>
				A volte il pacchetto corretto non è ancora disponibile in questa sezione perché è in attesa di una validazione da parte degli Stable Release Manager. Si può verificare se questo è il caso sulla loro pagina web. I pacchetti elencati in quella pagina non sono ancora disponibili, ma almeno si sa che il processo di pubblicazione è in corso. <ulink type="block" url="https://release.debian.org/proposed-updates/stable.html" />
			</para>

		</section>

	</section>
	 <section id="sect.regular-upgrades">
		<title>Mantenere un sistema sempre aggiornato</title>
		 <para>
			La distribuzione Debian è dinamica e cambia continuamente. La maggior parte dei cambiamenti sono nelle versioni <emphasis role="distribution">Testing</emphasis> e <emphasis role="distribution">Unstable</emphasis>, ma anche <emphasis role="distribution">Stable</emphasis> viene aggiornata di tanto in tanto, per lo più per correzioni relative alla sicurezza. Qualunque sia la versione scelta di Debian, è generalmente una buona idea tenerla aggiornata, in modo da poter trarre beneficio delle recenti evoluzioni e correzioni di bug.
		</para>
		 <para>
			Sebbene sia ovviamente possibile eseguire periodicamente uno strumento per controllare gli aggiornamenti disponibili ed eseguire gli aggiornamenti, tale compito ripetitivo è noioso, soprattutto quando deve essere eseguito su diverse macchine. Fortunatamente, come molte attività ripetitive, può essere in parte automatizzato, e una serie di strumenti sono già stati sviluppati in tal senso.
		</para>
		 <para>
			Il primo di questi strumenti è <command>apticron</command>, nel pacchetto omonimo. Il suo effetto principale è quello di eseguire quotidianamente uno script (via <command>cron</command>). Gli script aggiornano la lista dei pacchetti disponibili, e, se alcuni pacchetti installati non sono aggiornati all'ultima versione disponibile, invia un'e-mail con un elenco di questi pacchetti con i cambiamenti che sono stati fatti nelle nuove versioni. Ovviamente, questo pacchetto si rivolge principalmente agli utenti di Debian <emphasis role="distribution">Stable</emphasis>, dal momento che i messaggi di posta elettronica giornalieri sarebbero molto lunghi per le versioni più dinamiche di Debian. Quando gli aggiornamenti sono disponibili, <command>apticron</command> li scarica automaticamente. Non li installa: sarà sempre l'amministratore a farlo, ma avere i pacchetti già scaricati e disponibili a livello locale (nella cache di APT), rende il lavoro più veloce.
		</para>
		 <para>
			Gli amministratori responsabili di diversi computer apprezzeranno senza alcun dubbio di essere informati sugli aggiornamenti in sospeso, ma gli aggiornamenti stessi sono sempre fastidiosi, qui è dove viene in aiuto lo script <filename>/etc/cron.daily/apt</filename> (nel pacchetto <emphasis role="pkg">apt</emphasis>). Anche questo script viene eseguito tutti i giorni (e non interattivamente) da <command>cron</command>. Per controllare il suo comportamento, si usano le variabili di configurazione di APT (che vengono quindi memorizzate in un file sotto <filename>/etc/apt/apt.conf.d/</filename>). Le variabili fondamentali sono:
		</para>
		 <variablelist>
			<varlistentry>
				<term><literal>APT::Periodic::Update-Package-Lists</literal></term>
				 <listitem>
					<para>
						Questa opzione permette di specificare la frequenza (in giorni) con la quale verrà aggiornata la lista pacchetti. Gli utenti di <command>apticron</command> possono fare a meno di questa variabile, in quanto <command>apticron</command> si occupa già di questa funzione.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Download-Upgradeable-Packages</literal></term>
				 <listitem>
					<para>
						Ancora una volta, questa opzione indica la frequenza (in giorni), questa volta per lo scaricamento dei pacchetti veri e propri. Anche in questo caso, gli utenti di <command>apticron</command> non ne avranno bisogno.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::AutocleanInterval</literal></term>
				 <listitem>
					<para>
						Questa opzione copre una funzione che <command>apticron</command> non ha. Controlla quanto spesso i pacchetti obsoleti (quelli a cui non fa più riferimento alcuna distribuzione) vengono rimossi dalla cache di APT. Ciò mantiene la cache di APT ad una dimensione ragionevole e significa che non ci si deve più preoccupare di questo lavoro.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><literal>APT::Periodic::Unattended-Upgrade</literal></term>
				 <listitem>
					<indexterm><primary><emphasis role="pkg">unattended-upgrades</emphasis></primary></indexterm> <para>
						Quando questa opzione viene abilitata, lo script giornaliero esegue <command>unattended-upgrade</command> (dal pacchetto <emphasis role="pkg">unattended-upgrades</emphasis>) che, come suggerisce il nome, può automatizzare il processo di aggiornamento per alcuni pacchetti (in modo predefinito si occupa solo degli aggiornamenti di sicurezza, ma questo può essere personalizzato in <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Notare che questa opzione può essere impostata con l'aiuto di debconf, eseguendo <command>dpkg-reconfigure -plow unattended-upgrades</command>.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>
		 <para>
			Altre opzioni possono consentire di controllare con più precisione il comportamento di pulizia della cache. Non sono elencate qui, ma sono descritte nello script <filename>/etc/cron.daily/apt</filename>.
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">gnome-packagekit</emphasis></primary>
		</indexterm>
		 <para>
			Questi strumenti funzionano molto bene per i server, ma gli utenti desktop in genere preferiscono un sistema più interattivo. Ecco perché l' "ambiente desktop Debian" ha il compito di installare <emphasis role="pkg">gnome-packagekit</emphasis> (almeno quando si seleziona GNOME come ambiente desktop). Questo fornisce un'icona nell'area di notifica dell'ambiente desktop quando sono disponibili nuovi aggiornamenti; se si clicca sull'icona viene lanciato <command>gpk-update-viewer</command>, un'interfaccia semplificata per effettuare gli aggiornamenti. È possibile navigare fra gli aggiornamenti disponibili, leggere la descrizione breve dei pacchetti interessati e i corrispondenti <filename>changelog</filename>, e selezionare caso per caso se applicare o meno l'aggiornamento.
		</para>
		 <figure>
			<title>Aggiornare con <command>gpk-update-viewer</command></title>
			 <mediaobject>
				<imageobject>
					<imagedata fileref="images/gnome-packagekit.png" format="PNG" scalefit="1" width="70%" />
				</imageobject>

			</mediaobject>

		</figure>

	</section>
	 <section id="sect.automatic-upgrades">
		<title>Aggiornamenti automatici</title>
		 <indexterm>
			<primary>aggiornamento</primary>
			<secondary>aggiornamento automatico del sistema</secondary>
		</indexterm>
		 <indexterm>
			<primary>automatico, aggiornamento</primary>
		</indexterm>
		 <para>
			Visto che Falcot Corp ha molti computer ma una manodopera limitata, i suoi amministrazioni cercano di rendere gli aggiornamenti il più automatici possibili. I programmi incaricati di tali processi devono perciò essere eseguiti senza intervento umano.
		</para>
		 <section>
			<title>Configurare <command>dpkg</command></title>
			 <para>
				Come è stato già detto (vedere il riquadro <xref linkend="sidebar.questions-conffiles" />), <command>dpkg</command> può essere impostato per non chiedere conferma quando sostituisce un file di configurazione (con le opzioni <literal>--force-confdef --force-confold</literal>). Le interazioni, tuttavia, possono essere richieste da altre tre fonti: alcune vengono da APT stesso, altre sono gestite da <command>debconf</command>, e alcuni avvengono sulla riga di comando a causa di script di configurazione dei pacchetti.
			</para>

		</section>
		 <section>
			<title>Configurare APT</title>
			 <para>
				Nel caso di APT è semplice: l'opzione <literal>-y</literal> (o <literal>--assume-yes</literal>) dice ad APT di considerare la risposta a qualsiasi sua domanda un «sì».
			</para>

		</section>
		 <section>
			<title>Configurare <command>debconf</command></title>
			 <para>
				Il caso di <command>debconf</command> merita ulteriori dettagli. Questo programma è stato, fin dal suo principio, progettato per controllare l'importanza e la quantità di domande mostrate all'utente, così come il modo in cui vengono visualizzate. Ecco perché la sua configurazione richiede una priorità minima per le domande; solo le domande con priorità superiore alla minima vengono visualizzate. <command>debconf</command> imposta la risposta predefinita (impostata dal manutentore del pacchetto) per le domande che si decide di saltare.
			</para>
			 <para>
				Un altro elemento di configurazione rilevante è l'interfaccia usata dal front-end. Se si seleziona <literal>noninteractive</literal> tra le scelte date, tutte le interazioni utente sono disabilitate. Se il pacchetto cerca di visualizzare una nota informativa, essa verrà inviata all'amministratore tramite email.
			</para>
			 <para>
				Per riconfigurare <command>debconf</command>, si usa il programma <command>dpkg-reconfigure</command> nel pacchetto <emphasis role="pkg">debconf</emphasis>; il relativo comando è <command>dpkg-reconfigure debconf</command>. Si noti che i valori configurati possono essere temporaneamente modificati con le variabili di ambiente quando necessario (ad esempio, <varname>DEBIAN_FRONTEND</varname> controlla l'interfaccia, come documentato nella pagina del manuale <citerefentry><refentrytitle>debconf</refentrytitle>
				<manvolnum>7</manvolnum></citerefentry>).
			</para>

		</section>
		 <section>
			<title>Gestire interazioni a riga di comando</title>
			 <para>
				L'ultima sorgente di interazioni, e la più difficile da eliminare, sono gli script di configurazione eseguiti da <command>dpkg</command>. Sfortunatamente non c'è una soluzione standard, e non c'è alcuna risposta nettamente migliore di un'altra.
			</para>
			 <para>
				L'approccio comune è quello di sopprimere lo standard input reindirizzando il contenuto vuoto di <filename>/dev/null</filename> in esso con il comando <command><replaceable>comando</replaceable> &lt;/dev/null</command>, o di alimentarlo con un flusso infinito di nuove righe. Nessuno di questi metodi è affidabile al 100%, ma in genere portano all'uso delle risposte predefinite, dal momento che la maggior parte degli script considera la mancanza di una risposta come un'accettazione dei valori predefiniti.
			</para>

		</section>
		 <section>
			<title>La combinazione miracolosa</title>
			 <para>
				Combinando gli elementi precedenti, è possibile progettare un piccolo ma piuttosto affidabile script che può gestire gli aggiornamenti automatici.
			</para>
			 <example id="example.non-interactive-upgrade">
				<title>Script di aggiornamento non interattivo</title>
				 
<programlisting>export DEBIAN_FRONTEND=noninteractive
yes '' | apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" dist-upgrade</programlisting>

			</example>
			 <sidebar> <title><emphasis>IN PRATICA</emphasis> Il caso della Falcot Corp</title>
			 <para>
				I computer della Falcot sono un sistema eterogeneo, con macchine che hanno funzioni diverse. Gli amministratori sceglieranno la soluzione migliore per ogni computer.
			</para>
			 <para>
				In pratica, i server che eseguono <emphasis role="distribution">Jessie</emphasis> sono configurati con la «combinazione miracolosa» qui sopra, e sono mantenuti aggiornati automaticamente. Solo i server più critici (i firewall, per esempio) sono impostati con <command>apticron</command>, così che gli aggiornamenti avvengono solo sotto la supervisione di un amministratore.
			</para>
			 <para>
				Le postazioni di lavoro negli uffici dei servizi amministrativi usano anch'esse <emphasis role="distribution">Jessie</emphasis>, ma sono equipaggiate con <emphasis role="pkg">gnome-packagekit</emphasis>, in modo che gli utenti attivino autonomamente gli aggiornamenti. La ragione di questa decisione è che se gli aggiornamenti avvenissero senza una specifica azione, il comportamento del computer potrebbe cambiare inaspettatamente, cosa che potrebbe causare confusione fra i principali utenti.
			</para>
			 <para>
				Nei laboratori, i pochi computer che usano <emphasis role="distribution">Testing</emphasis>, per avere i vantaggi delle più recenti versioni del software, non sono neanch'essi aggiornati automaticamente. Gli amministratori configurano APT per preparare gli aggiornamenti ma non eseguirli; quando decidono di aggiornare (manualmente), la parte noiosa dell'aggiornamento della lista pacchetti e di scaricare i pacchetti verrà evitata, e gli amministratori possono concentrarsi sulla parte veramente utile.
			</para>
			 </sidebar>
		</section>

	</section>
	 <section id="sect.searching-packages">
		<title>Ricercare pacchetti</title>
		 <para>
			Con la grande e sempre crescente quantità di software in Debian, emerge un paradosso: Debian solitamente ha uno strumento per la maggior parte delle necessità, ma quel programma può essere veramente difficile da trovare fra la miriade di altri pacchetti. La mancanza di una via appropriata per cercare (e trovare) il giusto programma è stata a lungo un problema. Per fortuna, questo problema è stato risolto quasi del tutto.
		</para>
		 <para>
			La ricerca più banale possibile è la ricerca con il nome esatto di un pacchetto. Se <command>apt show <replaceable>pacchetto</replaceable></command> restituisce un risultato, allora quel pacchetto esiste. Sfortunatamente, questo richiede di conoscere o anche di indovinare il nome del pacchetto, e ciò non è sempre possibile.
		</para>
		 <sidebar> <title><emphasis>SUGGERIMENTO</emphasis> Convenzioni per i nomi dei pacchetti</title>
		 <para>
			Alcune categorie di pacchetti hanno nomi basati su uno schema di denominazione convenzionale, conoscendo il sistema ci si può permettere a volte di indovinare i nomi dei pacchetti esatti. Ad esempio, per i moduli Perl, la convenzione dice che un modulo chiamato <literal>XML::Handler::Composer</literal> dovrebbe essere contenuto in un pacchetto <emphasis role="pkg">libxml-handler-composer-perl</emphasis>. La libreria che consente l'uso del sistema <command>gconf</command> da Python è contenuta in <emphasis role="pkg">python-gconf</emphasis>. Non è possibile definire uno schema generico per tutti i pacchetti, anche se di solito i manutentori dei pacchetti cercano di seguire la scelta degli sviluppatori originali.
		</para>
		 </sidebar> <para>
			Un modello di ricerca che ha un po' più successo è una ricerca di testo con testo semplice fra i nomi dei pacchetti, ma rimane molto limitato. In genere si possono trovare risultati cercando nelle descrizioni dei pacchetti: poiché ogni pacchetto ha una descrizione più o meno dettagliata, oltre al suo nome del pacchetto, una ricerca per parole chiave nelle descrizioni sarà spesso utile. <command>apt-cache</command> e <command>axi-cache</command> sono gli strumenti preferenziali per questo tipo di ricerca; per esempio, <command>apt-cache search video</command> restituirà un elenco di tutti i pacchetti il cui nome o descrizione contiene la parola «video».
		</para>
		 <para>
			Per ricerche più complesse, è necessario uno strumento più potente come <command>aptitude</command>. <command>aptitude</command> permette di cercare usando un'espressione logica basata sui campi dei metadati dei pacchetti. Per esempio, il seguente comando cerca i pacchetti il cui nome contiene <literal>kino</literal>, la cui descrizione contiene <literal>video</literal> e il cui nome del manutentore contiene <literal>paul</literal>:
		</para>
		 
<screen>$ <userinput>aptitude search kino~dvideo~mpaul</userinput>
p   kino  - Non-linear editor for Digital Video data
$ <userinput>aptitude show kino</userinput>
Pacchetto: kino
Stato: non installato
Versione: 1.3.4-2.1+b1
Priorità: extra
Sezione: video
Responsabile: Paul Brossier &lt;piem@debian.org&gt;
Architecture: amd64
Dimensione pacchetto installato: 8,472 k
Dipende: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=
         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=
         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=
         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,
         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=
         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),
         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=
         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),
         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),
         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),
         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,
         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)
Raccomanda: ffmpeg, curl
Consiglia: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora
Va in conflitto: kino-dvtitler, kino-timfx, kinoplus
Sostituisce: kino-dvtitler, kino-timfx, kinoplus
Fornisce: kino-dvtitler, kino-timfx, kinoplus
Descrizione: Editor non lineare per i dati Digital Video
 Kino consente di registrare, creare, modificare e riprodurre video registrati con videocamere
 DV. Questo programma utilizza diversi comandi da tastiera per una navigazione e una modifica dei
 filmati più veloce. 
 
 I plug-in kino-timfx, kino-dvtitler e kinoplus, una volta distribuiti come un pacchetto
 separato, sono ora inclusi in Kino.
Homepage: http://www.kinodv.org/

Etichette: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,
      interface::x11, role::program, scope::application, suite::gnome,
      uitoolkit::gtk, use::editing, use::learning, works-with::video,
      x11::application</screen>
		 <para>
			Il risultato mostra solo un pacchetto, <emphasis role="pkg">kino</emphasis>, che soddisfa tutti e tre i criteri.
		</para>
		 <para>
			Anche queste ricerche con più criteri sono poco maneggevoli, il che spiega il motivo per cui non sono usate quanto potrebbero. È stato perciò sviluppato un nuovo sistema di etichettatura, e fornisce un nuovo approccio alla ricerca. Ai pacchetti sono assegnate delle etichette che forniscono una classificazione tematica su varie aree, nota come «classificazione basata su faccette». Nel caso di <emphasis role="pkg">kino</emphasis> qui sopra, le etichette del pacchetto («tag») indicano che Kino è un software basato su Gnome che funziona sui dati video e il cui scopo principale è la modifica.
		</para>
		 <para>
			Navigare nella classificazione può aiutare a cercare un pacchetto che corrisponde a delle necessità note; anche se restituisce un (moderato) numero di risultati, il resto della ricerca può essere fatto manualmente. Per fare questo, si può usare il modello di ricerca <literal>~G</literal> in <command>aptitude</command>, ma è probabilmente più facile navigare semplicemente il sito dove sono gestite le etichette: <ulink type="block" url="http://debtags.alioth.debian.org/cloud/" />
		</para>
		 <indexterm>
			<primary><emphasis role="pkg">debtags</emphasis></primary>
		</indexterm>
		 <indexterm>
			<primary>etichetta</primary>
		</indexterm>
		 <para>
			Se si selezionano le etichette <literal>works-with::video</literal> e <literal>use::editing</literal>, si ottengono una manciata di pacchetti, inclusi gli editor video <emphasis role="pkg">kino</emphasis> e <emphasis role="pkg">pitivi</emphasis>. Questo sistema di classificazione è destinato ad essere usato sempre di più col passare del tempo, e i gestori dei pacchetti forniranno gradualmente interfacce di ricerca efficienti basate su di esso.
		</para>
		 <para>
			Per riassumere, il migliore strumento per il lavoro dipende dalla complessità della ricerca che si desidera fare:
		</para>
		 <itemizedlist>
			<listitem>
				<para>
					<command>apt-cache</command> permette solo la ricerca nei nomi e nelle descrizioni dei pacchetti, che è molto comodo quando si cerca un particolare pacchetto che corrisponde ad alcune parole chiave;
				</para>

			</listitem>
			 <listitem>
				<para>
					quando i criteri di ricerca includono anche relazioni tra i pacchetti o altri metadati come il nome del manutentore, sarà più utile <command>synaptic</command>;
				</para>

			</listitem>
			 <listitem>
				<para>
					quando è necessaria una ricerca basata su etichette, un buon strumento è <command>packagesearch</command>, un'interfaccia grafica dedicata alla ricerca dei pacchetti disponibili secondo diversi criteri (tra cui i nomi dei file in essi contenuti). Per l'uso dalla riga di comando, <command>axi-cache</command> sarà adatto allo scopo.
				</para>
				 <indexterm>
					<primary><emphasis role="pkg">packagesearch</emphasis></primary>
				</indexterm>
				 <indexterm>
					<primary><command>axi-cache</command></primary>
				</indexterm>

			</listitem>
			 <listitem>
				<para>
					infine, quando le ricerche comportano espressioni complesse con operazioni logiche, lo strumento da scegliere sarà la sintassi per i modelli di ricerca di <command>aptitude</command>, che è piuttosto potente nonostante sia un po' oscura; funziona sia a riga di comando sia in modo interattivo.
				</para>

			</listitem>

		</itemizedlist>

	</section>
</chapter>

