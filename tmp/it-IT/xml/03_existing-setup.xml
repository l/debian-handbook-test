<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="existing-setup" lang="it-IT">
	<chapterinfo>
		 <keywordset>
			<keyword>Impostazioni esistenti</keyword>
			 <keyword>Riuso</keyword>
			 <keyword>Migrazione</keyword>

		</keywordset>

	</chapterinfo>
	 <title>Analisi delle impostazioni esistenti e migrazione</title>
	 <highlights> <para>
		Qualsiasi revisione di un sistema di computer deve tenere in conto il sistema esistente. Ciò permette di riutilizzare il più possibile tutte le risorse disponibili e garantisce l'interoperabilità dei vari elementi che compongono il sistema. Questo studio presenterà uno schema generico da seguire in qualsiasi migrazione di una infrastruttura di calcolo verso Linux.
	</para>
	 </highlights> <section id="sect.heterogeneous-environments">
		<title>Coesistenza in ambienti eterogenei</title>
		 <indexterm>
			<primary>ambiente</primary>
			<secondary>ambiente eterogeneo</secondary>
		</indexterm>
		 <para>
			Debian si integra molto bene in tutti i tipi di ambienti esistenti e si comporta bene con qualsiasi altro sistema operativo. Questa armonia quasi perfetta deriva dalla pressione di mercato che richiede che chi pubblica software sviluppi programmi che seguono gli standard. La conformità con gli standard permette di sostituire i programmi: client o server, liberi o meno.
		</para>
		 <section>
			<title>Integrazione con macchine Windows</title>
			 <para>
				Il supporto a SMB/CIFS di Samba assicura un'eccellente comunicazione all'interno di un contesto Windows. Condivide file e code di stampa con client Windows e include software che permette a una macchina Linux di usare risorse disponibili su dei server Windows.
			</para>
			 <sidebar> <title><emphasis>STRUMENTO</emphasis> Samba</title>
			 <indexterm>
				<primary>Samba</primary>
			</indexterm>
			 <para>
				L'ultima versione di Samba può sostituire la maggior parte delle funzionalità di Windows: da quelle di un semplice server Windows NT (autenticazione, file, code di stampa, scaricamento dei driver per le stampanti, DFS, ecc.) a quello più avanzato (un controller di dominio compatibile con Active directory).
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Integrazione con macchine OS X</title>
			 <indexterm>
				<primary>Zeroconf</primary>
			</indexterm>
			 <indexterm>
				<primary>Bonjour</primary>
			</indexterm>
			 <indexterm>
				<primary>Avahi</primary>
			</indexterm>
			 <para>
				Le macchine OS X forniscono, e possono usare, dei servizi di rete come file server e condivisione di stampanti. Questi servizi sono pubblicati sulla rete locale, il che permette alle altre macchine di scoprirli e usarli senza configurazioni manuali, usando l'implementazione dell'insieme di protocolli Zeroconf Bonjour. Debian include un'altra implementazione, chiamata Avahi, che fornisce le stesse funzionalità.
			</para>
			 <indexterm>
				<primary>AFP</primary>
			</indexterm>
			 <indexterm>
				<primary>AppleShare</primary>
			</indexterm>
			 <para>
				Nella direzione opposta, il demone Netatalk può essere usato per fornire dei file server alle macchine OS X sulla rete. Questo demone implementa il protocollo AFP (AppleShare) e le notifiche necessarie perché i server siano trovati automaticamente dai client OS X.
			</para>
			 <indexterm>
				<primary>AppleTalk</primary>
			</indexterm>
			 <para>
				Le reti Mac OS più vecchie (prima di OS X) usavano un protocollo differente chiamato AppleTalk. Per ambienti che includono macchine che usano questo protocollo, Netatalk fornisce anche il protocollo AppleTalk (infatti, è nato come reimplementazione di questo protocollo). Assicura l'operatività sia del server dei file e delle code di stampa, che del server dell'ora (sincronizzazione degli orologi). La sua funzione di router permette l'interconnessione con reti AppleTalk.
			</para>

		</section>
		 <section>
			<title>Integrazione con altre macchine Linux/Unix</title>
			 <para>
				Infine, NFS e NIS, entrambi inclusi, garantiscono l'interazione con sistemi Unix. NFS assicura la funzionalità di server dei file, mentre NIS crea le directory degli utenti. Il livello di stampa BSD, usato dalla maggior parte di sistemi Unix, permette anche la condivisione delle code di stampa.
			</para>
			 <figure>
				<title>Coesistenza di Debian con sistemi OS X, Windows e Unix</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-1.png" format="PNG" width="25%" />
					</imageobject>

				</mediaobject>

			</figure>

		</section>

	</section>
	 <section id="sect.how-to-migrate">
		<title>Come migrare</title>
		 <indexterm>
			<primary>migrazione</primary>
		</indexterm>
		 <para>
			Al fine di garantire la continuità dei servizi, ogni migrazione di computer deve essere pianificata ed eseguita secondo il piano. Questo principio si applica qualunque sia il sistema operativo usato.
		</para>
		 <section>
			<title>Rilevamento e identificazione dei servizi</title>
			 <para>
				Per quanto sembri semplice, questo passo è essenziale. Un amministratore scrupoloso conosce veramente i ruoli principali di ogni server, ma tali ruoli possono cambiare e talvolta utenti esperti possono aver installato servizi non «autorizzati». Sapere che esistono permette almeno di decidere cosa farne, piuttosto che eliminarli inconsapevolmente.
			</para>
			 <para>
				Per questo scopo, è saggio informare di questo progetto i propri utenti prima di migrare il server. Per coinvolgerli nel progetto, può essere utile installare i programmi liberi più comuni sui loro computer prima della migrazione, quelli che saranno incontrati di nuovo dopo la migrazione a Debian; Libre Office e la suite Mozilla ne sono i migliori esempi.
			</para>
			 <section>
				<title>Rete e processi</title>
				 <indexterm>
					<primary><command>nmap</command></primary>
				</indexterm>
				 <para>
					Lo strumento <command>nmap</command> (nel pacchetto con lo stesso nome) identificherà velocemente i servizi Internet ospitati da una macchina connessa alla rete senza nemmeno aver bisogno di accedervi. Basta semplicemente eseguire il seguente comando su un'altra macchina connessa alla stessa rete:
				</para>
				 
<screen>
<computeroutput>$ </computeroutput><userinput>nmap mirwiz</userinput>
<computeroutput>Starting Nmap 6.47 ( http://nmap.org ) at 2015-03-24 11:34 CET
Nmap scan report for mirwiz (192.168.1.104)
Host is up (0.0037s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE
22/tcp open  ssh

Nmap done: 1 IP address (1 host up) scanned in 0.13 seconds</computeroutput></screen>
				 <sidebar> <title><emphasis>ALTERNATIVA</emphasis> Usare <command>netstat</command> per trovare l'elenco dei servizi disponibili</title>
				 <para>
					Su una macchina Linux, il comando <command>netstat -tupan</command> mostrerà un elenco di sessioni TCP attive o pendenti e di porte UDP sulle quali i programmi in esecuzione sono in ascolto. Ciò facilita l'identificazione dei servizi offerti sulla rete.
				</para>
				 </sidebar> <sidebar> <title><emphasis>PER APPROFONDIRE</emphasis> IPv6</title>
				 <para>
					Alcuni comandi di rete possono funzionare con IPv4 (solitamente è quello predefinito) o con IPv6. Tra questi ci sono i comandi <command>nmap</command> e <command>netstat</command>, ma anche altri, come <command>route</command> o <command>ip</command>. La convenzione è che questo comportamento è abilitato dall'opzione <parameter>-6</parameter> sulla riga di comando.
				</para>
				 </sidebar> <para>
					Se il server è una macchina Unix che offre account di shell agli utenti, è interessante determinare se i processi sono eseguiti sullo sfondo in assenza del loro proprietario. Il comando <command>ps auxw</command> mostra un elenco di tutti i processi con l'identità dei loro utenti. Confrontando queste informazioni con l'output del comando <command>who</command>, che mostra un elenco degli utenti collegati, è possibile identificare server non autorizzati o non dichiarati o programmi in esecuzione sullo sfondo. Guardare i <filename>crontab</filename> (tabelle che elencano le azioni automatiche programmate dagli utenti) fornirà spesso informazioni interessanti sulle funzioni ricoperte dal server (una spiegazione completa di <command>cron</command> è disponibile nella <xref linkend="sect.task-scheduling-cron-atd" />).
				</para>
				 <para>
					In ogni caso è essenziale fare il backup dei propri server: questo permette il recupero di informazioni a posteriori, quando gli utenti segnaleranno problemi specifici dovuti alla migrazione.
				</para>

			</section>

		</section>
		 <section>
			<title>Fare il backup della configurazione</title>
			 <para>
				È saggio conservare la configurazione di ogni servizio identificato al fine di essere in grado di installare quello equivalente sul server aggiornato. Il minimo indispensabile è fare una copia di backup dei file di configurazione.
			</para>
			 <para>
				Per le macchine Unix, i file di configurazione si trovano solitamente in <filename>/etc/</filename>, ma possono trovarsi in una sotto-directory di <filename>/usr/local/</filename>. Questo è il caso quando un programma è stato installato dai sorgenti, piuttosto che da un pacchetto. In alcuni casi si possono trovare sotto <filename>/opt/</filename>.
			</para>
			 <para>
				Per i servizi che gestiscono dati (come i database), è fortemente consigliato di esportare i dati in un formato standard che sarà facilmente importato dal nuovo software. Un tale formato è solitamente in modalità testo e documentato; può essere, per esempio, un dump SQL per un database o un file LDIF per un server LDAP.
			</para>
			 <figure>
				<title>Backup di database</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-2.png" format="PNG" width="50%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Il software di ogni server è differente ed è impossibile descrivere dettagliatamente tutti i casi esistenti. Confrontare la documentazione del software attuale e di quello nuovo per identificare le porzioni esportabili (perciò re-importabili) e quelle che richiedono un intervento manuale. La lettura di questo libro chiarirà la configurazione dei principali programmi per server Linux.
			</para>

		</section>
		 <section>
			<title>Prendere il controllo di un server Debian esistente</title>
			 <indexterm>
				<primary>recupero di una macchina Debian</primary>
			</indexterm>
			 <indexterm>
				<primary>esplorazione di una macchina Debian</primary>
			</indexterm>
			 <indexterm>
				<primary>prendere il controllo di una macchina Debian</primary>
			</indexterm>
			 <para>
				Si può analizzare una macchina che già esegue Debian per prendere efficacemente il controllo della sua manutenzione.
			</para>
			 <para>
				Il primo file da controllare è <filename>/etc/debian_version</filename>, che solitamente contiene il numero di versione per il sistema Debian installato (fa parte del pacchetto <emphasis>base-files</emphasis>). Se indica <literal><replaceable>codename</replaceable>/sid</literal>, significa che il sistema è stato aggiornato con pacchetti provenienti da una delle distribuzioni di sviluppo (testing oppure unstable).
			</para>
			 <para>
				Il comando <command>apt-show-versions</command> (dal pacchetto Debian con lo stesso nome) controlla l'elenco dei pacchetti installati e identifica le versioni disponibili. Anche <command>aptitude</command> può essere usato per questi compiti, anche se in maniera meno sistematica.
			</para>
			 <para>
				Un'occhiata al file <filename>/etc/apt/sources.list</filename> (ed alla directory <filename>/etc/apt/sources.list.d/</filename>) mostrerà da dove probabilmente provengono i pacchetti Debian installati. Se appaiono molte sorgenti sconosciute, l'amministratore può scegliere di reinstallare completamente il sistema del computer per assicurare una compatibilità ottimale con il software fornito da Debian.
			</para>
			 <para>
				Il file <filename>sources.list</filename> è spesso un buon indicatore: la maggior parte degli amministratori mantiene, almeno nei commenti, l'elenco delle fonti APT usate precedentemente. Ma non si dimentichi che le fonti usate in passato potrebbero essere state eliminate e che dei pacchetti qualsiasi scaricati da Internet potrebbero essere stati installati (con il comando <command>dpkg</command>). In questo caso la macchina è fuorviante nella sua apparenza di Debian «standard». Questo è il motivo per cui si dovrebbe fare attenzione a ogni indizio della presenza di pacchetti esterni (presenza di file <filename>deb</filename> in directory non usuali, numeri di versione dei pacchetti con suffissi speciali che indicano che hanno avuto origine all'esterno del progetto Debian, come <literal>ubuntu</literal> o <literal>lmde</literal>, ecc.)
			</para>
			 <para>
				Allo stesso modo, è interessante analizzare il contenuto della directory <filename>/usr/local/</filename>, che ha lo scopo di contenere programmi compilati e installati manualmente. Elencare il software installato in questa maniera è istruttivo dal momento che solleva interrogativi sulle ragioni per cui non è stato usato il pacchetto Debian corrispondente, se un tale pacchetto esiste.
			</para>
			 <sidebar> <title><emphasis>A COLPO D'OCCHIO</emphasis> <emphasis role="pkg">cruft</emphasis></title>
			 <para>
				Il pacchetto <emphasis role="pkg">cruft</emphasis> propone l'elenco dei file disponibili che non sono posseduti da alcun pacchetto. Ha alcuni filtri (più o meno efficaci e più o meno aggiornati) per evitare di riportare file legittimi (file generati da pacchetti Debian o file di configurazione generati non gestiti da <command>dpkg</command>, ecc.).
			</para>
			 <para>
				Si faccia attenzione a non eliminare ciecamente tutto quello che <command>cruft</command> potrebbe elencare!
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Installazione di Debian</title>
			 <para>
				Una volta che tutte le informazioni sul server attuale sono conosciute, possiamo spegnerlo e installarci Debian.
			</para>
			 <indexterm>
				<primary>architettura</primary>
			</indexterm>
			 <para>
				Per scegliere la versione appropriata, si deve conoscere l'architettura del computer. Se è un PC piuttosto recente, molto probabilmente è amd64 (i PC più vecchi erano solitamente i386). In altri casi si possono ridurre le scelte possibili in base al sistema usato precedentemente.
			</para>
			 <para>
				<xref linkend="tab-corresp" xrefstyle="select: label nopage" /> non ha la pretesa di essere completa ma può essere utile. In ogni caso, la documentazione originale del computer è la fonte più affidabile per trovare questa informazione.
			</para>
			 <table colsep="1" id="tab-corresp">
				<title>Sistema operativo e architettura corrispondente</title>
				 <tgroup cols="2">
					<thead>
						<row>
							<entry>Sistema operativo</entry>
							 <entry>Architettura</entry>

						</row>

					</thead>
					 <tbody>
						<row>
							<entry>DEC Unix (OSF/1)</entry>
							 <entry>alpha, mipsel</entry>

						</row>
						 <row>
							<entry>HP Unix</entry>
							 <entry>ia64, hppa</entry>

						</row>
						 <row>
							<entry>IBM AIX</entry>
							 <entry>powerpc</entry>

						</row>
						 <row>
							<entry>Irix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>OS X</entry>
							 <entry>amd64, powerpc, i386</entry>

						</row>
						 <row>
							<entry>z/OS, MVS</entry>
							 <entry>s390x, s390</entry>

						</row>
						 <row>
							<entry>Solaris, SunOS</entry>
							 <entry>sparc, i386, m68k</entry>

						</row>
						 <row>
							<entry>Ultrix</entry>
							 <entry>mips</entry>

						</row>
						 <row>
							<entry>VMS</entry>
							 <entry>alpha</entry>

						</row>
						 <row>
							<entry>Windows 95/98/ME</entry>
							 <entry>i386</entry>

						</row>
						 <row>
							<entry>Windows NT/2000</entry>
							 <entry>i386, alpha, ia64, mipsel</entry>

						</row>
						 <row>
							<entry>Windows XP / Windows Server 2008</entry>
							 <entry>i386, amd64, ia64</entry>

						</row>
						 <row>
							<entry>Windows Vista / Windows 7 / Windows 8</entry>
							 <entry>i386, amd64</entry>

						</row>

					</tbody>

				</tgroup>

			</table>
			 <sidebar> <title><emphasis>HARDWARE</emphasis> PC a 64 bit e PC a 32 bit</title>
			 <indexterm>
				<primary>amd64</primary>
			</indexterm>
			 <indexterm>
				<primary>i386</primary>
			</indexterm>
			 <para>
				La maggior parte dei computer più recenti ha processori a 64 bit, Intel o AMD, compatibili con i più vecchi processori a 32 bit; perciò il software compilato per l'architettura «i386» funziona. D'altra parte, questa modalità compatibile non sfrutta pienamente le capacità di questi nuovi processori. Questo è il motivo per cui Debian fornisce l'architettura «amd64» che funziona sia con i chip AMD recenti sia con i processori Intel «emt64» (compresa la maggior parte delle serie Core), che sono molto simili ai processori AMD64.
			</para>
			 </sidebar>
		</section>
		 <section>
			<title>Installazione e configurazione dei servizi scelti</title>
			 <para>
				Una volta che Debian è installata, è necessario installare e configurare uno ad uno i servizi che questo computer deve ospitare. La nuova configurazione deve tenere in considerazione quella precedente per assicurare una transizione indolore. Tutte le informazioni raccolte nei primi due passi saranno utili per completare con successo questa parte.
			</para>
			 <figure>
				<title>Installazione dei servizi scelti</title>
				 <mediaobject>
					<imageobject>
						<imagedata fileref="images/existing-setup-4.png" format="PNG" width="66%" />
					</imageobject>

				</mediaobject>

			</figure>
			 <para>
				Prima di gettarsi a capofitto, è fortemente consigliato leggere il resto di questo libro. Dopo di che si capirà meglio come configurare i servizi previsti.
			</para>
			 <para>
			</para>

		</section>

	</section>
</chapter>

